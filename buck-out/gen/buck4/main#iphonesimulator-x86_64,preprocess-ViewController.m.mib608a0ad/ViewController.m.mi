# 1 "buck4/ViewController.m"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 341 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "buck4/ViewController.m" 2








# 1 "buck4/ViewController.h" 1








# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKitDefines.h" 1 3







# 1 "APPLE_SDKROOT/usr/include/Availability.h" 1 3 4
# 176 "APPLE_SDKROOT/usr/include/Availability.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/AvailabilityInternal.h" 1 3 4
# 177 "APPLE_SDKROOT/usr/include/Availability.h" 2 3 4
# 9 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKitDefines.h" 2 3
# 9 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccelerometer.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 1 3





# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 3
# 1 "APPLE_SDKROOT/usr/include/sys/types.h" 1 3 4
# 72 "APPLE_SDKROOT/usr/include/sys/types.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/appleapiopts.h" 1 3 4
# 73 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4


# 1 "APPLE_SDKROOT/usr/include/sys/cdefs.h" 1 3 4
# 587 "APPLE_SDKROOT/usr/include/sys/cdefs.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_symbol_aliasing.h" 1 3 4
# 588 "APPLE_SDKROOT/usr/include/sys/cdefs.h" 2 3 4
# 653 "APPLE_SDKROOT/usr/include/sys/cdefs.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_posix_availability.h" 1 3 4
# 654 "APPLE_SDKROOT/usr/include/sys/cdefs.h" 2 3 4
# 76 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4


# 1 "APPLE_SDKROOT/usr/include/machine/types.h" 1 3 4
# 35 "APPLE_SDKROOT/usr/include/machine/types.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/i386/types.h" 1 3 4
# 70 "APPLE_SDKROOT/usr/include/i386/types.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/i386/_types.h" 1 3 4
# 37 "APPLE_SDKROOT/usr/include/i386/_types.h" 3 4
typedef signed char __int8_t;



typedef unsigned char __uint8_t;
typedef short __int16_t;
typedef unsigned short __uint16_t;
typedef int __int32_t;
typedef unsigned int __uint32_t;
typedef long long __int64_t;
typedef unsigned long long __uint64_t;

typedef long __darwin_intptr_t;
typedef unsigned int __darwin_natural_t;
# 70 "APPLE_SDKROOT/usr/include/i386/_types.h" 3 4
typedef int __darwin_ct_rune_t;





typedef union {
 char __mbstate8[128];
 long long _mbstateL;
} __mbstate_t;

typedef __mbstate_t __darwin_mbstate_t;


typedef long int __darwin_ptrdiff_t;







typedef long unsigned int __darwin_size_t;





typedef __builtin_va_list __darwin_va_list;





typedef int __darwin_wchar_t;




typedef __darwin_wchar_t __darwin_rune_t;


typedef int __darwin_wint_t;




typedef unsigned long __darwin_clock_t;
typedef __uint32_t __darwin_socklen_t;
typedef long __darwin_ssize_t;
typedef long __darwin_time_t;
# 71 "APPLE_SDKROOT/usr/include/i386/types.h" 2 3 4





# 1 "APPLE_SDKROOT/usr/include/sys/_types/_int8_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_int8_t.h" 3 4
typedef signed char int8_t;
# 77 "APPLE_SDKROOT/usr/include/i386/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_int16_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_int16_t.h" 3 4
typedef short int16_t;
# 78 "APPLE_SDKROOT/usr/include/i386/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_int32_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_int32_t.h" 3 4
typedef int int32_t;
# 79 "APPLE_SDKROOT/usr/include/i386/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_int64_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_int64_t.h" 3 4
typedef long long int64_t;
# 80 "APPLE_SDKROOT/usr/include/i386/types.h" 2 3 4

# 1 "APPLE_SDKROOT/usr/include/sys/_types/_u_int8_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_u_int8_t.h" 3 4
typedef unsigned char u_int8_t;
# 82 "APPLE_SDKROOT/usr/include/i386/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_u_int16_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_u_int16_t.h" 3 4
typedef unsigned short u_int16_t;
# 83 "APPLE_SDKROOT/usr/include/i386/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_u_int32_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_u_int32_t.h" 3 4
typedef unsigned int u_int32_t;
# 84 "APPLE_SDKROOT/usr/include/i386/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_u_int64_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_u_int64_t.h" 3 4
typedef unsigned long long u_int64_t;
# 85 "APPLE_SDKROOT/usr/include/i386/types.h" 2 3 4


typedef int64_t register_t;





# 1 "APPLE_SDKROOT/usr/include/sys/_types/_intptr_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_intptr_t.h" 3 4
typedef __darwin_intptr_t intptr_t;
# 93 "APPLE_SDKROOT/usr/include/i386/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_uintptr_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_uintptr_t.h" 3 4
typedef unsigned long uintptr_t;
# 94 "APPLE_SDKROOT/usr/include/i386/types.h" 2 3 4



typedef u_int64_t user_addr_t;
typedef u_int64_t user_size_t;
typedef int64_t user_ssize_t;
typedef int64_t user_long_t;
typedef u_int64_t user_ulong_t;
typedef int64_t user_time_t;
typedef int64_t user_off_t;







typedef u_int64_t syscall_arg_t;
# 36 "APPLE_SDKROOT/usr/include/machine/types.h" 2 3 4
# 79 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types.h" 1 3 4
# 33 "APPLE_SDKROOT/usr/include/sys/_types.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/machine/_types.h" 1 3 4
# 34 "APPLE_SDKROOT/usr/include/sys/_types.h" 2 3 4
# 55 "APPLE_SDKROOT/usr/include/sys/_types.h" 3 4
typedef __int64_t __darwin_blkcnt_t;
typedef __int32_t __darwin_blksize_t;
typedef __int32_t __darwin_dev_t;
typedef unsigned int __darwin_fsblkcnt_t;
typedef unsigned int __darwin_fsfilcnt_t;
typedef __uint32_t __darwin_gid_t;
typedef __uint32_t __darwin_id_t;
typedef __uint64_t __darwin_ino64_t;

typedef __darwin_ino64_t __darwin_ino_t;



typedef __darwin_natural_t __darwin_mach_port_name_t;
typedef __darwin_mach_port_name_t __darwin_mach_port_t;
typedef __uint16_t __darwin_mode_t;
typedef __int64_t __darwin_off_t;
typedef __int32_t __darwin_pid_t;
typedef __uint32_t __darwin_sigset_t;
typedef __int32_t __darwin_suseconds_t;
typedef __uint32_t __darwin_uid_t;
typedef __uint32_t __darwin_useconds_t;
typedef unsigned char __darwin_uuid_t[16];
typedef char __darwin_uuid_string_t[37];


# 1 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_types.h" 1 3 4
# 57 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_types.h" 3 4
struct __darwin_pthread_handler_rec {
 void (*__routine)(void *);
 void *__arg;
 struct __darwin_pthread_handler_rec *__next;
};

struct _opaque_pthread_attr_t {
 long __sig;
 char __opaque[56];
};

struct _opaque_pthread_cond_t {
 long __sig;
 char __opaque[40];
};

struct _opaque_pthread_condattr_t {
 long __sig;
 char __opaque[8];
};

struct _opaque_pthread_mutex_t {
 long __sig;
 char __opaque[56];
};

struct _opaque_pthread_mutexattr_t {
 long __sig;
 char __opaque[8];
};

struct _opaque_pthread_once_t {
 long __sig;
 char __opaque[8];
};

struct _opaque_pthread_rwlock_t {
 long __sig;
 char __opaque[192];
};

struct _opaque_pthread_rwlockattr_t {
 long __sig;
 char __opaque[16];
};

struct _opaque_pthread_t {
 long __sig;
 struct __darwin_pthread_handler_rec *__cleanup_stack;
 char __opaque[8176];
};

typedef struct _opaque_pthread_attr_t __darwin_pthread_attr_t;
typedef struct _opaque_pthread_cond_t __darwin_pthread_cond_t;
typedef struct _opaque_pthread_condattr_t __darwin_pthread_condattr_t;
typedef unsigned long __darwin_pthread_key_t;
typedef struct _opaque_pthread_mutex_t __darwin_pthread_mutex_t;
typedef struct _opaque_pthread_mutexattr_t __darwin_pthread_mutexattr_t;
typedef struct _opaque_pthread_once_t __darwin_pthread_once_t;
typedef struct _opaque_pthread_rwlock_t __darwin_pthread_rwlock_t;
typedef struct _opaque_pthread_rwlockattr_t __darwin_pthread_rwlockattr_t;
typedef struct _opaque_pthread_t *__darwin_pthread_t;
# 81 "APPLE_SDKROOT/usr/include/sys/_types.h" 2 3 4
# 80 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4

# 1 "APPLE_SDKROOT/usr/include/machine/endian.h" 1 3 4
# 35 "APPLE_SDKROOT/usr/include/machine/endian.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/i386/endian.h" 1 3 4
# 99 "APPLE_SDKROOT/usr/include/i386/endian.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_endian.h" 1 3 4
# 130 "APPLE_SDKROOT/usr/include/sys/_endian.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/libkern/_OSByteOrder.h" 1 3 4
# 66 "APPLE_SDKROOT/usr/include/libkern/_OSByteOrder.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/libkern/i386/_OSByteOrder.h" 1 3 4
# 44 "APPLE_SDKROOT/usr/include/libkern/i386/_OSByteOrder.h" 3 4
static inline
__uint16_t
_OSSwapInt16(
    __uint16_t _data
)
{
    return ((__uint16_t)((_data << 8) | (_data >> 8)));
}

static inline
__uint32_t
_OSSwapInt32(
    __uint32_t _data
)
{

    return __builtin_bswap32(_data);




}


static inline
__uint64_t
_OSSwapInt64(
    __uint64_t _data
)
{
    return __builtin_bswap64(_data);
}
# 67 "APPLE_SDKROOT/usr/include/libkern/_OSByteOrder.h" 2 3 4
# 131 "APPLE_SDKROOT/usr/include/sys/_endian.h" 2 3 4
# 100 "APPLE_SDKROOT/usr/include/i386/endian.h" 2 3 4
# 36 "APPLE_SDKROOT/usr/include/machine/endian.h" 2 3 4
# 82 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4


typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned int u_int;

typedef unsigned long u_long;


typedef unsigned short ushort;
typedef unsigned int uint;


typedef u_int64_t u_quad_t;
typedef int64_t quad_t;
typedef quad_t * qaddr_t;

typedef char * caddr_t;
typedef int32_t daddr_t;


# 1 "APPLE_SDKROOT/usr/include/sys/_types/_dev_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_dev_t.h" 3 4
typedef __darwin_dev_t dev_t;
# 103 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4

typedef u_int32_t fixpt_t;


# 1 "APPLE_SDKROOT/usr/include/sys/_types/_blkcnt_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_blkcnt_t.h" 3 4
typedef __darwin_blkcnt_t blkcnt_t;
# 107 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_blksize_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_blksize_t.h" 3 4
typedef __darwin_blksize_t blksize_t;
# 108 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_gid_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_gid_t.h" 3 4
typedef __darwin_gid_t gid_t;
# 109 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_in_addr_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_in_addr_t.h" 3 4
typedef __uint32_t in_addr_t;
# 110 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_in_port_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_in_port_t.h" 3 4
typedef __uint16_t in_port_t;
# 111 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_ino_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_ino_t.h" 3 4
typedef __darwin_ino_t ino_t;
# 112 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4


# 1 "APPLE_SDKROOT/usr/include/sys/_types/_ino64_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_ino64_t.h" 3 4
typedef __darwin_ino64_t ino64_t;
# 115 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4


# 1 "APPLE_SDKROOT/usr/include/sys/_types/_key_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_key_t.h" 3 4
typedef __int32_t key_t;
# 118 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_mode_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_mode_t.h" 3 4
typedef __darwin_mode_t mode_t;
# 119 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_nlink_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_nlink_t.h" 3 4
typedef __uint16_t nlink_t;
# 120 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_id_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_id_t.h" 3 4
typedef __darwin_id_t id_t;
# 121 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_pid_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_pid_t.h" 3 4
typedef __darwin_pid_t pid_t;
# 122 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_off_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_off_t.h" 3 4
typedef __darwin_off_t off_t;
# 123 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4

typedef int32_t segsz_t;
typedef int32_t swblk_t;


# 1 "APPLE_SDKROOT/usr/include/sys/_types/_uid_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_uid_t.h" 3 4
typedef __darwin_uid_t uid_t;
# 128 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 161 "APPLE_SDKROOT/usr/include/sys/types.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_clock_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_clock_t.h" 3 4
typedef __darwin_clock_t clock_t;
# 162 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_size_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_size_t.h" 3 4
typedef __darwin_size_t size_t;
# 163 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_ssize_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_ssize_t.h" 3 4
typedef __darwin_ssize_t ssize_t;
# 164 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_time_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_time_t.h" 3 4
typedef __darwin_time_t time_t;
# 165 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4

# 1 "APPLE_SDKROOT/usr/include/sys/_types/_useconds_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_useconds_t.h" 3 4
typedef __darwin_useconds_t useconds_t;
# 167 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_suseconds_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_suseconds_t.h" 3 4
typedef __darwin_suseconds_t suseconds_t;
# 168 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4


# 1 "APPLE_SDKROOT/usr/include/sys/_types/_rsize_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_rsize_t.h" 3 4
typedef __darwin_size_t rsize_t;
# 171 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_errno_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_errno_t.h" 3 4
typedef int errno_t;
# 172 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4








# 1 "APPLE_SDKROOT/usr/include/sys/_types/_fd_def.h" 1 3 4
# 46 "APPLE_SDKROOT/usr/include/sys/_types/_fd_def.h" 3 4
typedef struct fd_set {
 __int32_t fds_bits[((((1024) % ((sizeof(__int32_t) * 8))) == 0) ? ((1024) / ((sizeof(__int32_t) * 8))) : (((1024) / ((sizeof(__int32_t) * 8))) + 1))];
} fd_set;



static __inline int
__darwin_fd_isset(int _n, const struct fd_set *_p)
{
 return (_p->fds_bits[(unsigned long)_n/(sizeof(__int32_t) * 8)] & ((__int32_t)(((unsigned long)1)<<((unsigned long)_n % (sizeof(__int32_t) * 8)))));
}
# 181 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4




typedef __int32_t fd_mask;








# 1 "APPLE_SDKROOT/usr/include/sys/_types/_fd_setsize.h" 1 3 4
# 194 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_fd_set.h" 1 3 4
# 195 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_fd_clr.h" 1 3 4
# 196 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_fd_zero.h" 1 3 4
# 197 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_fd_isset.h" 1 3 4
# 198 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4


# 1 "APPLE_SDKROOT/usr/include/sys/_types/_fd_copy.h" 1 3 4
# 201 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 211 "APPLE_SDKROOT/usr/include/sys/types.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_attr_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_attr_t.h" 3 4
typedef __darwin_pthread_attr_t pthread_attr_t;
# 212 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_cond_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_cond_t.h" 3 4
typedef __darwin_pthread_cond_t pthread_cond_t;
# 213 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_condattr_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_condattr_t.h" 3 4
typedef __darwin_pthread_condattr_t pthread_condattr_t;
# 214 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_mutex_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_mutex_t.h" 3 4
typedef __darwin_pthread_mutex_t pthread_mutex_t;
# 215 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_mutexattr_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_mutexattr_t.h" 3 4
typedef __darwin_pthread_mutexattr_t pthread_mutexattr_t;
# 216 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_once_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_once_t.h" 3 4
typedef __darwin_pthread_once_t pthread_once_t;
# 217 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_rwlock_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_rwlock_t.h" 3 4
typedef __darwin_pthread_rwlock_t pthread_rwlock_t;
# 218 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_rwlockattr_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_rwlockattr_t.h" 3 4
typedef __darwin_pthread_rwlockattr_t pthread_rwlockattr_t;
# 219 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_t.h" 3 4
typedef __darwin_pthread_t pthread_t;
# 220 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4



# 1 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_key_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_pthread/_pthread_key_t.h" 3 4
typedef __darwin_pthread_key_t pthread_key_t;
# 224 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4




# 1 "APPLE_SDKROOT/usr/include/sys/_types/_fsblkcnt_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_fsblkcnt_t.h" 3 4
typedef __darwin_fsblkcnt_t fsblkcnt_t;
# 229 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_fsfilcnt_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_fsfilcnt_t.h" 3 4
typedef __darwin_fsfilcnt_t fsfilcnt_t;
# 230 "APPLE_SDKROOT/usr/include/sys/types.h" 2 3 4
# 17 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stdarg.h" 1 3 4
# 30 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stdarg.h" 3 4
typedef __builtin_va_list va_list;
# 50 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 18 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/usr/include/assert.h" 1 3 4
# 76 "APPLE_SDKROOT/usr/include/assert.h" 3 4
void __assert_rtn(const char *, const char *, int, const char *) __attribute__((noreturn));
# 19 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/usr/include/ctype.h" 1 3 4
# 70 "APPLE_SDKROOT/usr/include/ctype.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/runetype.h" 1 3 4
# 42 "APPLE_SDKROOT/usr/include/runetype.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/_types.h" 1 3 4
# 39 "APPLE_SDKROOT/usr/include/_types.h" 3 4
typedef int __darwin_nl_item;
typedef int __darwin_wctrans_t;

typedef __uint32_t __darwin_wctype_t;
# 43 "APPLE_SDKROOT/usr/include/runetype.h" 2 3 4




# 1 "APPLE_SDKROOT/usr/include/sys/_types/_ct_rune_t.h" 1 3 4
# 31 "APPLE_SDKROOT/usr/include/sys/_types/_ct_rune_t.h" 3 4
typedef __darwin_ct_rune_t ct_rune_t;
# 48 "APPLE_SDKROOT/usr/include/runetype.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_rune_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_rune_t.h" 3 4
typedef __darwin_rune_t rune_t;
# 49 "APPLE_SDKROOT/usr/include/runetype.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_wchar_t.h" 1 3 4
# 33 "APPLE_SDKROOT/usr/include/sys/_types/_wchar_t.h" 3 4
typedef __darwin_wchar_t wchar_t;
# 50 "APPLE_SDKROOT/usr/include/runetype.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_wint_t.h" 1 3 4
# 31 "APPLE_SDKROOT/usr/include/sys/_types/_wint_t.h" 3 4
typedef __darwin_wint_t wint_t;
# 51 "APPLE_SDKROOT/usr/include/runetype.h" 2 3 4
# 60 "APPLE_SDKROOT/usr/include/runetype.h" 3 4
typedef struct {
 __darwin_rune_t __min;
 __darwin_rune_t __max;
 __darwin_rune_t __map;
 __uint32_t *__types;
} _RuneEntry;

typedef struct {
 int __nranges;
 _RuneEntry *__ranges;
} _RuneRange;

typedef struct {
 char __name[14];
 __uint32_t __mask;
} _RuneCharClass;

typedef struct {
 char __magic[8];
 char __encoding[32];

 __darwin_rune_t (*__sgetrune)(const char *, __darwin_size_t, char const **);
 int (*__sputrune)(__darwin_rune_t, char *, __darwin_size_t, char **);
 __darwin_rune_t __invalid_rune;

 __uint32_t __runetype[(1 <<8 )];
 __darwin_rune_t __maplower[(1 <<8 )];
 __darwin_rune_t __mapupper[(1 <<8 )];






 _RuneRange __runetype_ext;
 _RuneRange __maplower_ext;
 _RuneRange __mapupper_ext;

 void *__variable;
 int __variable_len;




 int __ncharclasses;
 _RuneCharClass *__charclasses;
} _RuneLocale;




extern _RuneLocale _DefaultRuneLocale;
extern _RuneLocale *_CurrentRuneLocale;
# 71 "APPLE_SDKROOT/usr/include/ctype.h" 2 3 4
# 129 "APPLE_SDKROOT/usr/include/ctype.h" 3 4
unsigned long ___runetype(__darwin_ct_rune_t);
__darwin_ct_rune_t ___tolower(__darwin_ct_rune_t);
__darwin_ct_rune_t ___toupper(__darwin_ct_rune_t);


inline int
isascii(int _c)
{
 return ((_c & ~0x7F) == 0);
}
# 148 "APPLE_SDKROOT/usr/include/ctype.h" 3 4
int __maskrune(__darwin_ct_rune_t, unsigned long);



inline int
__istype(__darwin_ct_rune_t _c, unsigned long _f)
{



 return (isascii(_c) ? !!(_DefaultRuneLocale.__runetype[_c] & _f)
  : !!__maskrune(_c, _f));

}

inline __darwin_ct_rune_t
__isctype(__darwin_ct_rune_t _c, unsigned long _f)
{



 return (_c < 0 || _c >= (1 <<8 )) ? 0 :
  !!(_DefaultRuneLocale.__runetype[_c] & _f);

}
# 188 "APPLE_SDKROOT/usr/include/ctype.h" 3 4
__darwin_ct_rune_t __toupper(__darwin_ct_rune_t);
__darwin_ct_rune_t __tolower(__darwin_ct_rune_t);



inline int
__wcwidth(__darwin_ct_rune_t _c)
{
 unsigned int _x;

 if (_c == 0)
  return (0);
 _x = (unsigned int)__maskrune(_c, 0xe0000000L|0x00040000L);
 if ((_x & 0xe0000000L) != 0)
  return ((_x & 0xe0000000L) >> 30);
 return ((_x & 0x00040000L) != 0 ? 1 : -1);
}






inline int
isalnum(int _c)
{
 return (__istype(_c, 0x00000100L|0x00000400L));
}

inline int
isalpha(int _c)
{
 return (__istype(_c, 0x00000100L));
}

inline int
isblank(int _c)
{
 return (__istype(_c, 0x00020000L));
}

inline int
iscntrl(int _c)
{
 return (__istype(_c, 0x00000200L));
}


inline int
isdigit(int _c)
{
 return (__isctype(_c, 0x00000400L));
}

inline int
isgraph(int _c)
{
 return (__istype(_c, 0x00000800L));
}

inline int
islower(int _c)
{
 return (__istype(_c, 0x00001000L));
}

inline int
isprint(int _c)
{
 return (__istype(_c, 0x00040000L));
}

inline int
ispunct(int _c)
{
 return (__istype(_c, 0x00002000L));
}

inline int
isspace(int _c)
{
 return (__istype(_c, 0x00004000L));
}

inline int
isupper(int _c)
{
 return (__istype(_c, 0x00008000L));
}


inline int
isxdigit(int _c)
{
 return (__isctype(_c, 0x00010000L));
}

inline int
toascii(int _c)
{
 return (_c & 0x7F);
}

inline int
tolower(int _c)
{
        return (__tolower(_c));
}

inline int
toupper(int _c)
{
        return (__toupper(_c));
}


inline int
digittoint(int _c)
{
 return (__maskrune(_c, 0x0F));
}

inline int
ishexnumber(int _c)
{
 return (__istype(_c, 0x00010000L));
}

inline int
isideogram(int _c)
{
 return (__istype(_c, 0x00080000L));
}

inline int
isnumber(int _c)
{
 return (__istype(_c, 0x00000400L));
}

inline int
isphonogram(int _c)
{
 return (__istype(_c, 0x00200000L));
}

inline int
isrune(int _c)
{
 return (__istype(_c, 0xFFFFFFF0L));
}

inline int
isspecial(int _c)
{
 return (__istype(_c, 0x00100000L));
}
# 20 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/usr/include/errno.h" 1 3 4
# 23 "APPLE_SDKROOT/usr/include/errno.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/errno.h" 1 3 4
# 80 "APPLE_SDKROOT/usr/include/sys/errno.h" 3 4
extern int * __error(void);
# 24 "APPLE_SDKROOT/usr/include/errno.h" 2 3 4
# 21 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/float.h" 1 3 4
# 22 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/limits.h" 1 3 4
# 37 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/limits.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/limits.h" 1 3 4
# 64 "APPLE_SDKROOT/usr/include/limits.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/machine/limits.h" 1 3 4





# 1 "APPLE_SDKROOT/usr/include/i386/limits.h" 1 3 4
# 40 "APPLE_SDKROOT/usr/include/i386/limits.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/i386/_limits.h" 1 3 4
# 41 "APPLE_SDKROOT/usr/include/i386/limits.h" 2 3 4
# 7 "APPLE_SDKROOT/usr/include/machine/limits.h" 2 3 4
# 65 "APPLE_SDKROOT/usr/include/limits.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/syslimits.h" 1 3 4
# 66 "APPLE_SDKROOT/usr/include/limits.h" 2 3 4
# 38 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/limits.h" 2 3 4
# 23 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/usr/include/locale.h" 1 3 4
# 40 "APPLE_SDKROOT/usr/include/locale.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/_locale.h" 1 3 4
# 43 "APPLE_SDKROOT/usr/include/_locale.h" 3 4
struct lconv {
 char *decimal_point;
 char *thousands_sep;
 char *grouping;
 char *int_curr_symbol;
 char *currency_symbol;
 char *mon_decimal_point;
 char *mon_thousands_sep;
 char *mon_grouping;
 char *positive_sign;
 char *negative_sign;
 char int_frac_digits;
 char frac_digits;
 char p_cs_precedes;
 char p_sep_by_space;
 char n_cs_precedes;
 char n_sep_by_space;
 char p_sign_posn;
 char n_sign_posn;
 char int_p_cs_precedes;
 char int_n_cs_precedes;
 char int_p_sep_by_space;
 char int_n_sep_by_space;
 char int_p_sign_posn;
 char int_n_sign_posn;
};


# 1 "APPLE_SDKROOT/usr/include/sys/_types/_null.h" 1 3 4
# 71 "APPLE_SDKROOT/usr/include/_locale.h" 2 3 4


struct lconv *localeconv(void);
# 41 "APPLE_SDKROOT/usr/include/locale.h" 2 3 4
# 53 "APPLE_SDKROOT/usr/include/locale.h" 3 4
char *setlocale(int, const char *);
# 24 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/usr/include/math.h" 1 3 4
# 44 "APPLE_SDKROOT/usr/include/math.h" 3 4
    typedef float float_t;
    typedef double double_t;
# 111 "APPLE_SDKROOT/usr/include/math.h" 3 4
extern int __math_errhandling(void);
# 144 "APPLE_SDKROOT/usr/include/math.h" 3 4
extern int __fpclassifyf(float);
extern int __fpclassifyd(double);
extern int __fpclassifyl(long double);
# 188 "APPLE_SDKROOT/usr/include/math.h" 3 4
inline __attribute__ ((__always_inline__)) int __inline_isfinitef(float);
inline __attribute__ ((__always_inline__)) int __inline_isfinited(double);
inline __attribute__ ((__always_inline__)) int __inline_isfinitel(long double);
inline __attribute__ ((__always_inline__)) int __inline_isinff(float);
inline __attribute__ ((__always_inline__)) int __inline_isinfd(double);
inline __attribute__ ((__always_inline__)) int __inline_isinfl(long double);
inline __attribute__ ((__always_inline__)) int __inline_isnanf(float);
inline __attribute__ ((__always_inline__)) int __inline_isnand(double);
inline __attribute__ ((__always_inline__)) int __inline_isnanl(long double);
inline __attribute__ ((__always_inline__)) int __inline_isnormalf(float);
inline __attribute__ ((__always_inline__)) int __inline_isnormald(double);
inline __attribute__ ((__always_inline__)) int __inline_isnormall(long double);
inline __attribute__ ((__always_inline__)) int __inline_signbitf(float);
inline __attribute__ ((__always_inline__)) int __inline_signbitd(double);
inline __attribute__ ((__always_inline__)) int __inline_signbitl(long double);

inline __attribute__ ((__always_inline__)) int __inline_isfinitef(float __x) {
    return __x == __x && __builtin_fabsf(__x) != __builtin_inff();
}
inline __attribute__ ((__always_inline__)) int __inline_isfinited(double __x) {
    return __x == __x && __builtin_fabs(__x) != __builtin_inf();
}
inline __attribute__ ((__always_inline__)) int __inline_isfinitel(long double __x) {
    return __x == __x && __builtin_fabsl(__x) != __builtin_infl();
}
inline __attribute__ ((__always_inline__)) int __inline_isinff(float __x) {
    return __builtin_fabsf(__x) == __builtin_inff();
}
inline __attribute__ ((__always_inline__)) int __inline_isinfd(double __x) {
    return __builtin_fabs(__x) == __builtin_inf();
}
inline __attribute__ ((__always_inline__)) int __inline_isinfl(long double __x) {
    return __builtin_fabsl(__x) == __builtin_infl();
}
inline __attribute__ ((__always_inline__)) int __inline_isnanf(float __x) {
    return __x != __x;
}
inline __attribute__ ((__always_inline__)) int __inline_isnand(double __x) {
    return __x != __x;
}
inline __attribute__ ((__always_inline__)) int __inline_isnanl(long double __x) {
    return __x != __x;
}
inline __attribute__ ((__always_inline__)) int __inline_signbitf(float __x) {
    union { float __f; unsigned int __u; } __u;
    __u.__f = __x;
    return (int)(__u.__u >> 31);
}
inline __attribute__ ((__always_inline__)) int __inline_signbitd(double __x) {
    union { double __f; unsigned long long __u; } __u;
    __u.__f = __x;
    return (int)(__u.__u >> 63);
}

inline __attribute__ ((__always_inline__)) int __inline_signbitl(long double __x) {
    union {
        long double __ld;
        struct{ unsigned long long __m; unsigned short __sexp; } __p;
    } __u;
    __u.__ld = __x;
    return (int)(__u.__p.__sexp >> 15);
}







inline __attribute__ ((__always_inline__)) int __inline_isnormalf(float __x) {
    return __inline_isfinitef(__x) && __builtin_fabsf(__x) >= 1.17549435e-38F;
}
inline __attribute__ ((__always_inline__)) int __inline_isnormald(double __x) {
    return __inline_isfinited(__x) && __builtin_fabs(__x) >= 2.2250738585072014e-308;
}
inline __attribute__ ((__always_inline__)) int __inline_isnormall(long double __x) {
    return __inline_isfinitel(__x) && __builtin_fabsl(__x) >= 3.36210314311209350626e-4932L;
}
# 322 "APPLE_SDKROOT/usr/include/math.h" 3 4
extern float acosf(float);
extern double acos(double);
extern long double acosl(long double);

extern float asinf(float);
extern double asin(double);
extern long double asinl(long double);

extern float atanf(float);
extern double atan(double);
extern long double atanl(long double);

extern float atan2f(float, float);
extern double atan2(double, double);
extern long double atan2l(long double, long double);

extern float cosf(float);
extern double cos(double);
extern long double cosl(long double);

extern float sinf(float);
extern double sin(double);
extern long double sinl(long double);

extern float tanf(float);
extern double tan(double);
extern long double tanl(long double);

extern float acoshf(float);
extern double acosh(double);
extern long double acoshl(long double);

extern float asinhf(float);
extern double asinh(double);
extern long double asinhl(long double);

extern float atanhf(float);
extern double atanh(double);
extern long double atanhl(long double);

extern float coshf(float);
extern double cosh(double);
extern long double coshl(long double);

extern float sinhf(float);
extern double sinh(double);
extern long double sinhl(long double);

extern float tanhf(float);
extern double tanh(double);
extern long double tanhl(long double);

extern float expf(float);
extern double exp(double);
extern long double expl(long double);

extern float exp2f(float);
extern double exp2(double);
extern long double exp2l(long double);

extern float expm1f(float);
extern double expm1(double);
extern long double expm1l(long double);

extern float logf(float);
extern double log(double);
extern long double logl(long double);

extern float log10f(float);
extern double log10(double);
extern long double log10l(long double);

extern float log2f(float);
extern double log2(double);
extern long double log2l(long double);

extern float log1pf(float);
extern double log1p(double);
extern long double log1pl(long double);

extern float logbf(float);
extern double logb(double);
extern long double logbl(long double);

extern float modff(float, float *);
extern double modf(double, double *);
extern long double modfl(long double, long double *);

extern float ldexpf(float, int);
extern double ldexp(double, int);
extern long double ldexpl(long double, int);

extern float frexpf(float, int *);
extern double frexp(double, int *);
extern long double frexpl(long double, int *);

extern int ilogbf(float);
extern int ilogb(double);
extern int ilogbl(long double);

extern float scalbnf(float, int);
extern double scalbn(double, int);
extern long double scalbnl(long double, int);

extern float scalblnf(float, long int);
extern double scalbln(double, long int);
extern long double scalblnl(long double, long int);

extern float fabsf(float);
extern double fabs(double);
extern long double fabsl(long double);

extern float cbrtf(float);
extern double cbrt(double);
extern long double cbrtl(long double);

extern float hypotf(float, float);
extern double hypot(double, double);
extern long double hypotl(long double, long double);

extern float powf(float, float);
extern double pow(double, double);
extern long double powl(long double, long double);

extern float sqrtf(float);
extern double sqrt(double);
extern long double sqrtl(long double);

extern float erff(float);
extern double erf(double);
extern long double erfl(long double);

extern float erfcf(float);
extern double erfc(double);
extern long double erfcl(long double);




extern float lgammaf(float);
extern double lgamma(double);
extern long double lgammal(long double);

extern float tgammaf(float);
extern double tgamma(double);
extern long double tgammal(long double);

extern float ceilf(float);
extern double ceil(double);
extern long double ceill(long double);

extern float floorf(float);
extern double floor(double);
extern long double floorl(long double);

extern float nearbyintf(float);
extern double nearbyint(double);
extern long double nearbyintl(long double);

extern float rintf(float);
extern double rint(double);
extern long double rintl(long double);

extern long int lrintf(float);
extern long int lrint(double);
extern long int lrintl(long double);

extern float roundf(float);
extern double round(double);
extern long double roundl(long double);

extern long int lroundf(float);
extern long int lround(double);
extern long int lroundl(long double);




extern long long int llrintf(float);
extern long long int llrint(double);
extern long long int llrintl(long double);

extern long long int llroundf(float);
extern long long int llround(double);
extern long long int llroundl(long double);


extern float truncf(float);
extern double trunc(double);
extern long double truncl(long double);

extern float fmodf(float, float);
extern double fmod(double, double);
extern long double fmodl(long double, long double);

extern float remainderf(float, float);
extern double remainder(double, double);
extern long double remainderl(long double, long double);

extern float remquof(float, float, int *);
extern double remquo(double, double, int *);
extern long double remquol(long double, long double, int *);

extern float copysignf(float, float);
extern double copysign(double, double);
extern long double copysignl(long double, long double);

extern float nanf(const char *);
extern double nan(const char *);
extern long double nanl(const char *);

extern float nextafterf(float, float);
extern double nextafter(double, double);
extern long double nextafterl(long double, long double);

extern double nexttoward(double, long double);
extern float nexttowardf(float, long double);
extern long double nexttowardl(long double, long double);

extern float fdimf(float, float);
extern double fdim(double, double);
extern long double fdiml(long double, long double);

extern float fmaxf(float, float);
extern double fmax(double, double);
extern long double fmaxl(long double, long double);

extern float fminf(float, float);
extern double fmin(double, double);
extern long double fminl(long double, long double);

extern float fmaf(float, float, float);
extern double fma(double, double, double);
extern long double fmal(long double, long double, long double);
# 565 "APPLE_SDKROOT/usr/include/math.h" 3 4
extern float __inff(void) __attribute__((availability(ios,unavailable)));
extern double __inf(void) __attribute__((availability(ios,unavailable)));
extern long double __infl(void) __attribute__((availability(ios,unavailable)));

extern float __nan(void) __attribute__((availability(ios,unavailable)));
# 597 "APPLE_SDKROOT/usr/include/math.h" 3 4
extern float __exp10f(float) __attribute__((availability(ios,introduced=7.0)));
extern double __exp10(double) __attribute__((availability(ios,introduced=7.0)));





inline __attribute__ ((__always_inline__)) void __sincosf(float __x, float *__sinp, float *__cosp);
inline __attribute__ ((__always_inline__)) void __sincos(double __x, double *__sinp, double *__cosp);
# 614 "APPLE_SDKROOT/usr/include/math.h" 3 4
extern float __cospif(float) __attribute__((availability(ios,introduced=7.0)));
extern double __cospi(double) __attribute__((availability(ios,introduced=7.0)));
extern float __sinpif(float) __attribute__((availability(ios,introduced=7.0)));
extern double __sinpi(double) __attribute__((availability(ios,introduced=7.0)));
extern float __tanpif(float) __attribute__((availability(ios,introduced=7.0)));
extern double __tanpi(double) __attribute__((availability(ios,introduced=7.0)));
# 645 "APPLE_SDKROOT/usr/include/math.h" 3 4
inline __attribute__ ((__always_inline__)) void __sincospif(float __x, float *__sinp, float *__cosp);
inline __attribute__ ((__always_inline__)) void __sincospi(double __x, double *__sinp, double *__cosp);






struct __float2 { float __sinval; float __cosval; };
struct __double2 { double __sinval; double __cosval; };

extern struct __float2 __sincosf_stret(float);
extern struct __double2 __sincos_stret(double);
extern struct __float2 __sincospif_stret(float);
extern struct __double2 __sincospi_stret(double);

inline __attribute__ ((__always_inline__)) void __sincosf(float __x, float *__sinp, float *__cosp) {
    const struct __float2 __stret = __sincosf_stret(__x);
    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;
}

inline __attribute__ ((__always_inline__)) void __sincos(double __x, double *__sinp, double *__cosp) {
    const struct __double2 __stret = __sincos_stret(__x);
    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;
}

inline __attribute__ ((__always_inline__)) void __sincospif(float __x, float *__sinp, float *__cosp) {
    const struct __float2 __stret = __sincospif_stret(__x);
    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;
}

inline __attribute__ ((__always_inline__)) void __sincospi(double __x, double *__sinp, double *__cosp) {
    const struct __double2 __stret = __sincospi_stret(__x);
    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;
}







extern double j0(double) __attribute__((availability(ios,introduced=3.2)));
extern double j1(double) __attribute__((availability(ios,introduced=3.2)));
extern double jn(int, double) __attribute__((availability(ios,introduced=3.2)));
extern double y0(double) __attribute__((availability(ios,introduced=3.2)));
extern double y1(double) __attribute__((availability(ios,introduced=3.2)));
extern double yn(int, double) __attribute__((availability(ios,introduced=3.2)));
extern double scalb(double, double);
extern int signgam;
# 751 "APPLE_SDKROOT/usr/include/math.h" 3 4
extern long int rinttol(double) __attribute__((availability(ios,unavailable)));

extern long int roundtol(double) __attribute__((availability(ios,unavailable)));

extern double drem(double, double) __attribute__((availability(ios,unavailable)));

extern int finite(double) __attribute__((availability(ios,unavailable)));

extern double gamma(double) __attribute__((availability(ios,unavailable)));

extern double significand(double) __attribute__((availability(ios,unavailable)));


struct exception {
    int type;
    char *name;
    double arg1;
    double arg2;
    double retval;
};

extern int matherr(struct exception *) __attribute__((availability(ios,unavailable)));
# 25 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/usr/include/setjmp.h" 1 3 4
# 37 "APPLE_SDKROOT/usr/include/setjmp.h" 3 4
typedef int jmp_buf[((9 * 2) + 3 + 16)];
typedef int sigjmp_buf[((9 * 2) + 3 + 16) + 1];
# 87 "APPLE_SDKROOT/usr/include/setjmp.h" 3 4
extern int setjmp(jmp_buf);
extern void longjmp(jmp_buf, int) __attribute__((noreturn));


int _setjmp(jmp_buf);
void _longjmp(jmp_buf, int) __attribute__((noreturn));
int sigsetjmp(sigjmp_buf, int);
void siglongjmp(sigjmp_buf, int) __attribute__((noreturn));



void longjmperror(void);
# 26 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/usr/include/signal.h" 1 3 4
# 63 "APPLE_SDKROOT/usr/include/signal.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/signal.h" 1 3 4
# 82 "APPLE_SDKROOT/usr/include/sys/signal.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/machine/signal.h" 1 3 4
# 32 "APPLE_SDKROOT/usr/include/machine/signal.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/i386/signal.h" 1 3 4
# 39 "APPLE_SDKROOT/usr/include/i386/signal.h" 3 4
typedef int sig_atomic_t;
# 33 "APPLE_SDKROOT/usr/include/machine/signal.h" 2 3 4
# 83 "APPLE_SDKROOT/usr/include/sys/signal.h" 2 3 4
# 146 "APPLE_SDKROOT/usr/include/sys/signal.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/machine/_mcontext.h" 1 3 4
# 29 "APPLE_SDKROOT/usr/include/machine/_mcontext.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/i386/_mcontext.h" 1 3 4
# 33 "APPLE_SDKROOT/usr/include/i386/_mcontext.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 1 3 4
# 43 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_i386_thread_state
{
    unsigned int __eax;
    unsigned int __ebx;
    unsigned int __ecx;
    unsigned int __edx;
    unsigned int __edi;
    unsigned int __esi;
    unsigned int __ebp;
    unsigned int __esp;
    unsigned int __ss;
    unsigned int __eflags;
    unsigned int __eip;
    unsigned int __cs;
    unsigned int __ds;
    unsigned int __es;
    unsigned int __fs;
    unsigned int __gs;
};
# 89 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_fp_control
{
    unsigned short __invalid :1,
        __denorm :1,
    __zdiv :1,
    __ovrfl :1,
    __undfl :1,
    __precis :1,
      :2,
    __pc :2,





    __rc :2,






             :1,
      :3;
};
typedef struct __darwin_fp_control __darwin_fp_control_t;
# 147 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_fp_status
{
    unsigned short __invalid :1,
        __denorm :1,
    __zdiv :1,
    __ovrfl :1,
    __undfl :1,
    __precis :1,
    __stkflt :1,
    __errsumm :1,
    __c0 :1,
    __c1 :1,
    __c2 :1,
    __tos :3,
    __c3 :1,
    __busy :1;
};
typedef struct __darwin_fp_status __darwin_fp_status_t;
# 191 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_mmst_reg
{
 char __mmst_reg[10];
 char __mmst_rsrv[6];
};
# 210 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_xmm_reg
{
 char __xmm_reg[16];
};
# 232 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_i386_float_state
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;
 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;
 __uint16_t __fpu_rsrv2;
 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;
 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 char __fpu_rsrv4[14*16];
 int __fpu_reserved1;
};


struct __darwin_i386_avx_state
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;
 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;
 __uint16_t __fpu_rsrv2;
 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;
 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 char __fpu_rsrv4[14*16];
 int __fpu_reserved1;
 char __avx_reserved1[64];
 struct __darwin_xmm_reg __fpu_ymmh0;
 struct __darwin_xmm_reg __fpu_ymmh1;
 struct __darwin_xmm_reg __fpu_ymmh2;
 struct __darwin_xmm_reg __fpu_ymmh3;
 struct __darwin_xmm_reg __fpu_ymmh4;
 struct __darwin_xmm_reg __fpu_ymmh5;
 struct __darwin_xmm_reg __fpu_ymmh6;
 struct __darwin_xmm_reg __fpu_ymmh7;
};
# 402 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_i386_exception_state
{
 __uint16_t __trapno;
 __uint16_t __cpu;
 __uint32_t __err;
 __uint32_t __faultvaddr;
};
# 422 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_x86_debug_state32
{
 unsigned int __dr0;
 unsigned int __dr1;
 unsigned int __dr2;
 unsigned int __dr3;
 unsigned int __dr4;
 unsigned int __dr5;
 unsigned int __dr6;
 unsigned int __dr7;
};
# 454 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_x86_thread_state64
{
 __uint64_t __rax;
 __uint64_t __rbx;
 __uint64_t __rcx;
 __uint64_t __rdx;
 __uint64_t __rdi;
 __uint64_t __rsi;
 __uint64_t __rbp;
 __uint64_t __rsp;
 __uint64_t __r8;
 __uint64_t __r9;
 __uint64_t __r10;
 __uint64_t __r11;
 __uint64_t __r12;
 __uint64_t __r13;
 __uint64_t __r14;
 __uint64_t __r15;
 __uint64_t __rip;
 __uint64_t __rflags;
 __uint64_t __cs;
 __uint64_t __fs;
 __uint64_t __gs;
};
# 509 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_x86_float_state64
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;


 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;

 __uint16_t __fpu_rsrv2;


 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;

 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 struct __darwin_xmm_reg __fpu_xmm8;
 struct __darwin_xmm_reg __fpu_xmm9;
 struct __darwin_xmm_reg __fpu_xmm10;
 struct __darwin_xmm_reg __fpu_xmm11;
 struct __darwin_xmm_reg __fpu_xmm12;
 struct __darwin_xmm_reg __fpu_xmm13;
 struct __darwin_xmm_reg __fpu_xmm14;
 struct __darwin_xmm_reg __fpu_xmm15;
 char __fpu_rsrv4[6*16];
 int __fpu_reserved1;
};


struct __darwin_x86_avx_state64
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;


 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;

 __uint16_t __fpu_rsrv2;


 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;

 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 struct __darwin_xmm_reg __fpu_xmm8;
 struct __darwin_xmm_reg __fpu_xmm9;
 struct __darwin_xmm_reg __fpu_xmm10;
 struct __darwin_xmm_reg __fpu_xmm11;
 struct __darwin_xmm_reg __fpu_xmm12;
 struct __darwin_xmm_reg __fpu_xmm13;
 struct __darwin_xmm_reg __fpu_xmm14;
 struct __darwin_xmm_reg __fpu_xmm15;
 char __fpu_rsrv4[6*16];
 int __fpu_reserved1;
 char __avx_reserved1[64];
 struct __darwin_xmm_reg __fpu_ymmh0;
 struct __darwin_xmm_reg __fpu_ymmh1;
 struct __darwin_xmm_reg __fpu_ymmh2;
 struct __darwin_xmm_reg __fpu_ymmh3;
 struct __darwin_xmm_reg __fpu_ymmh4;
 struct __darwin_xmm_reg __fpu_ymmh5;
 struct __darwin_xmm_reg __fpu_ymmh6;
 struct __darwin_xmm_reg __fpu_ymmh7;
 struct __darwin_xmm_reg __fpu_ymmh8;
 struct __darwin_xmm_reg __fpu_ymmh9;
 struct __darwin_xmm_reg __fpu_ymmh10;
 struct __darwin_xmm_reg __fpu_ymmh11;
 struct __darwin_xmm_reg __fpu_ymmh12;
 struct __darwin_xmm_reg __fpu_ymmh13;
 struct __darwin_xmm_reg __fpu_ymmh14;
 struct __darwin_xmm_reg __fpu_ymmh15;
};
# 751 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_x86_exception_state64
{
    __uint16_t __trapno;
    __uint16_t __cpu;
    __uint32_t __err;
    __uint64_t __faultvaddr;
};
# 771 "APPLE_SDKROOT/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_x86_debug_state64
{
 __uint64_t __dr0;
 __uint64_t __dr1;
 __uint64_t __dr2;
 __uint64_t __dr3;
 __uint64_t __dr4;
 __uint64_t __dr5;
 __uint64_t __dr6;
 __uint64_t __dr7;
};
# 34 "APPLE_SDKROOT/usr/include/i386/_mcontext.h" 2 3 4




struct __darwin_mcontext32
{
 struct __darwin_i386_exception_state __es;
 struct __darwin_i386_thread_state __ss;
 struct __darwin_i386_float_state __fs;
};


struct __darwin_mcontext_avx32
{
 struct __darwin_i386_exception_state __es;
 struct __darwin_i386_thread_state __ss;
 struct __darwin_i386_avx_state __fs;
};
# 76 "APPLE_SDKROOT/usr/include/i386/_mcontext.h" 3 4
struct __darwin_mcontext64
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_state64 __ss;
 struct __darwin_x86_float_state64 __fs;
};


struct __darwin_mcontext_avx64
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_state64 __ss;
 struct __darwin_x86_avx_state64 __fs;
};
# 115 "APPLE_SDKROOT/usr/include/i386/_mcontext.h" 3 4
typedef struct __darwin_mcontext64 *mcontext_t;
# 30 "APPLE_SDKROOT/usr/include/machine/_mcontext.h" 2 3 4
# 147 "APPLE_SDKROOT/usr/include/sys/signal.h" 2 3 4



# 1 "APPLE_SDKROOT/usr/include/sys/_types/_sigaltstack.h" 1 3 4
# 36 "APPLE_SDKROOT/usr/include/sys/_types/_sigaltstack.h" 3 4
struct __darwin_sigaltstack
{
 void *ss_sp;
 __darwin_size_t ss_size;
 int ss_flags;
};
typedef struct __darwin_sigaltstack stack_t;
# 151 "APPLE_SDKROOT/usr/include/sys/signal.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_ucontext.h" 1 3 4
# 34 "APPLE_SDKROOT/usr/include/sys/_types/_ucontext.h" 3 4
struct __darwin_ucontext
{
 int uc_onstack;
 __darwin_sigset_t uc_sigmask;
 struct __darwin_sigaltstack uc_stack;
 struct __darwin_ucontext *uc_link;
 __darwin_size_t uc_mcsize;
 struct __darwin_mcontext64 *uc_mcontext;



};


typedef struct __darwin_ucontext ucontext_t;
# 152 "APPLE_SDKROOT/usr/include/sys/signal.h" 2 3 4


# 1 "APPLE_SDKROOT/usr/include/sys/_types/_sigset_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_sigset_t.h" 3 4
typedef __darwin_sigset_t sigset_t;
# 155 "APPLE_SDKROOT/usr/include/sys/signal.h" 2 3 4



union sigval {

 int sival_int;
 void *sival_ptr;
};





struct sigevent {
 int sigev_notify;
 int sigev_signo;
 union sigval sigev_value;
 void (*sigev_notify_function)(union sigval);
 pthread_attr_t *sigev_notify_attributes;
};


typedef struct __siginfo {
 int si_signo;
 int si_errno;
 int si_code;
 pid_t si_pid;
 uid_t si_uid;
 int si_status;
 void *si_addr;
 union sigval si_value;
 long si_band;
 unsigned long __pad[7];
} siginfo_t;
# 269 "APPLE_SDKROOT/usr/include/sys/signal.h" 3 4
union __sigaction_u {
 void (*__sa_handler)(int);
 void (*__sa_sigaction)(int, struct __siginfo *,
         void *);
};


struct __sigaction {
 union __sigaction_u __sigaction_u;
 void (*sa_tramp)(void *, int, int, siginfo_t *, void *);
 sigset_t sa_mask;
 int sa_flags;
};




struct sigaction {
 union __sigaction_u __sigaction_u;
 sigset_t sa_mask;
 int sa_flags;
};
# 331 "APPLE_SDKROOT/usr/include/sys/signal.h" 3 4
typedef void (*sig_t)(int);
# 348 "APPLE_SDKROOT/usr/include/sys/signal.h" 3 4
struct sigvec {
 void (*sv_handler)(int);
 int sv_mask;
 int sv_flags;
};
# 367 "APPLE_SDKROOT/usr/include/sys/signal.h" 3 4
struct sigstack {
 char *ss_sp;
 int ss_onstack;
};
# 390 "APPLE_SDKROOT/usr/include/sys/signal.h" 3 4
void (*signal(int, void (*)(int)))(int);
# 64 "APPLE_SDKROOT/usr/include/signal.h" 2 3 4





extern const char *const sys_signame[32];
extern const char *const sys_siglist[32];



int raise(int);




void (* _Nullable bsd_signal(int, void (* _Nullable)(int)))(int);
int kill(pid_t, int) __asm("_" "kill" );
int killpg(pid_t, int) __asm("_" "killpg" );
int pthread_kill(pthread_t, int);
int pthread_sigmask(int, const sigset_t *, sigset_t *) __asm("_" "pthread_sigmask" );
int sigaction(int, const struct sigaction * restrict,
     struct sigaction * restrict);
int sigaddset(sigset_t *, int);
int sigaltstack(const stack_t * restrict, stack_t * restrict) __asm("_" "sigaltstack" ) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int sigdelset(sigset_t *, int);
int sigemptyset(sigset_t *);
int sigfillset(sigset_t *);
int sighold(int);
int sigignore(int);
int siginterrupt(int, int);
int sigismember(const sigset_t *, int);
int sigpause(int) __asm("_" "sigpause" );
int sigpending(sigset_t *);
int sigprocmask(int, const sigset_t * restrict, sigset_t * restrict);
int sigrelse(int);
void (* _Nullable sigset(int, void (* _Nullable)(int)))(int);
int sigsuspend(const sigset_t *) __asm("_" "sigsuspend" );
int sigwait(const sigset_t * restrict, int * restrict) __asm("_" "sigwait" );

void psignal(unsigned int, const char *);
int sigblock(int);
int sigsetmask(int);
int sigvec(int, struct sigvec *, struct sigvec *);






inline __attribute__ ((__always_inline__)) int
__sigbits(int __signo)
{
    return __signo > 32 ? 0 : (1 << (__signo - 1));
}
# 27 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stddef.h" 1 3 4
# 51 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 118 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stddef.h" 3 4
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/__stddef_max_align_t.h" 1 3 4
# 32 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/__stddef_max_align_t.h" 3 4
typedef long double max_align_t;
# 119 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stddef.h" 2 3 4
# 28 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/usr/include/stdio.h" 1 3 4
# 71 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_va_list.h" 1 3 4
# 31 "APPLE_SDKROOT/usr/include/sys/_types/_va_list.h" 3 4
typedef __darwin_va_list va_list;
# 72 "APPLE_SDKROOT/usr/include/stdio.h" 2 3 4



# 1 "APPLE_SDKROOT/usr/include/sys/stdio.h" 1 3 4
# 39 "APPLE_SDKROOT/usr/include/sys/stdio.h" 3 4
int renameat(int, const char *, int, const char *) __attribute__((availability(ios,introduced=8.0)));






int renamex_np(const char *, const char *, unsigned int) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int renameatx_np(int, const char *, int, const char *, unsigned int) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 76 "APPLE_SDKROOT/usr/include/stdio.h" 2 3 4

typedef __darwin_off_t fpos_t;
# 88 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
struct __sbuf {
 unsigned char *_base;
 int _size;
};


struct __sFILEX;
# 122 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
typedef struct __sFILE {
 unsigned char *_p;
 int _r;
 int _w;
 short _flags;
 short _file;
 struct __sbuf _bf;
 int _lbfsize;


 void *_cookie;
 int (* _Nullable _close)(void *);
 int (* _Nullable _read) (void *, char *, int);
 fpos_t (* _Nullable _seek) (void *, fpos_t, int);
 int (* _Nullable _write)(void *, const char *, int);


 struct __sbuf _ub;
 struct __sFILEX *_extra;
 int _ur;


 unsigned char _ubuf[3];
 unsigned char _nbuf[1];


 struct __sbuf _lb;


 int _blksize;
 fpos_t _offset;
} FILE;


extern FILE *__stdinp;
extern FILE *__stdoutp;
extern FILE *__stderrp;
# 231 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
void clearerr(FILE *);
int fclose(FILE *);
int feof(FILE *);
int ferror(FILE *);
int fflush(FILE *);
int fgetc(FILE *);
int fgetpos(FILE * restrict, fpos_t *);
char *fgets(char * restrict, int, FILE *);



FILE *fopen(const char * restrict __filename, const char * restrict __mode) __asm("_" "fopen" );

int fprintf(FILE * restrict, const char * restrict, ...) __attribute__((__format__ (__printf__, 2, 3)));
int fputc(int, FILE *);
int fputs(const char * restrict, FILE * restrict) __asm("_" "fputs" );
size_t fread(void * restrict __ptr, size_t __size, size_t __nitems, FILE * restrict __stream);
FILE *freopen(const char * restrict, const char * restrict,
                 FILE * restrict) __asm("_" "freopen" );
int fscanf(FILE * restrict, const char * restrict, ...) __attribute__((__format__ (__scanf__, 2, 3)));
int fseek(FILE *, long, int);
int fsetpos(FILE *, const fpos_t *);
long ftell(FILE *);
size_t fwrite(const void * restrict __ptr, size_t __size, size_t __nitems, FILE * restrict __stream) __asm("_" "fwrite" );
int getc(FILE *);
int getchar(void);
char *gets(char *);
void perror(const char *);
int printf(const char * restrict, ...) __attribute__((__format__ (__printf__, 1, 2)));
int putc(int, FILE *);
int putchar(int);
int puts(const char *);
int remove(const char *);
int rename (const char *__old, const char *__new);
void rewind(FILE *);
int scanf(const char * restrict, ...) __attribute__((__format__ (__scanf__, 1, 2)));
void setbuf(FILE * restrict, char * restrict);
int setvbuf(FILE * restrict, char * restrict, int, size_t);
int sprintf(char * restrict, const char * restrict, ...) __attribute__((__format__ (__printf__, 2, 3))) __attribute__((__availability__(swift, unavailable, message="Use snprintf instead.")));
int sscanf(const char * restrict, const char * restrict, ...) __attribute__((__format__ (__scanf__, 2, 3)));
FILE *tmpfile(void);

__attribute__((__availability__(swift, unavailable, message="Use mkstemp(3) instead.")))

__attribute__((deprecated("This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tmpnam(3), it is highly recommended that you use mkstemp(3) instead.")))

char *tmpnam(char *);
int ungetc(int, FILE *);
int vfprintf(FILE * restrict, const char * restrict, va_list) __attribute__((__format__ (__printf__, 2, 0)));
int vprintf(const char * restrict, va_list) __attribute__((__format__ (__printf__, 1, 0)));
int vsprintf(char * restrict, const char * restrict, va_list) __attribute__((__format__ (__printf__, 2, 0))) __attribute__((__availability__(swift, unavailable, message="Use vsnprintf instead.")));
# 297 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
char *ctermid(char *);





FILE *fdopen(int, const char *) __asm("_" "fdopen" );

int fileno(FILE *);
# 321 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
int pclose(FILE *) __attribute__((__availability__(swift, unavailable, message="Use posix_spawn APIs or NSTask instead.")));



FILE *popen(const char *, const char *) __asm("_" "popen" ) __attribute__((__availability__(swift, unavailable, message="Use posix_spawn APIs or NSTask instead.")));
# 342 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
int __srget(FILE *);
int __svfscanf(FILE *, const char *, va_list) __attribute__((__format__ (__scanf__, 2, 0)));
int __swbuf(int, FILE *);
# 353 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
inline __attribute__ ((__always_inline__)) int __sputc(int _c, FILE *_p) {
 if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
  return (*_p->_p++ = _c);
 else
  return (__swbuf(_c, _p));
}
# 379 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
void flockfile(FILE *);
int ftrylockfile(FILE *);
void funlockfile(FILE *);
int getc_unlocked(FILE *);
int getchar_unlocked(void);
int putc_unlocked(int, FILE *);
int putchar_unlocked(int);



int getw(FILE *);
int putw(int, FILE *);


__attribute__((__availability__(swift, unavailable, message="Use mkstemp(3) instead.")))

__attribute__((deprecated("This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.")))

char *tempnam(const char *__dir, const char *__prefix) __asm("_" "tempnam" );
# 420 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
int fseeko(FILE * __stream, off_t __offset, int __whence);
off_t ftello(FILE * __stream);





int snprintf(char * restrict __str, size_t __size, const char * restrict __format, ...) __attribute__((__format__ (__printf__, 3, 4)));
int vfscanf(FILE * restrict __stream, const char * restrict __format, va_list) __attribute__((__format__ (__scanf__, 2, 0)));
int vscanf(const char * restrict __format, va_list) __attribute__((__format__ (__scanf__, 1, 0)));
int vsnprintf(char * restrict __str, size_t __size, const char * restrict __format, va_list) __attribute__((__format__ (__printf__, 3, 0)));
int vsscanf(const char * restrict __str, const char * restrict __format, va_list) __attribute__((__format__ (__scanf__, 2, 0)));
# 445 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
int dprintf(int, const char * restrict, ...) __attribute__((__format__ (__printf__, 2, 3))) __attribute__((availability(ios,introduced=4.3)));
int vdprintf(int, const char * restrict, va_list) __attribute__((__format__ (__printf__, 2, 0))) __attribute__((availability(ios,introduced=4.3)));
ssize_t getdelim(char ** restrict __linep, size_t * restrict __linecapp, int __delimiter, FILE * restrict __stream) __attribute__((availability(ios,introduced=4.3)));
ssize_t getline(char ** restrict __linep, size_t * restrict __linecapp, FILE * restrict __stream) __attribute__((availability(ios,introduced=4.3)));
# 458 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
extern const int sys_nerr;
extern const char *const sys_errlist[];

int asprintf(char ** restrict, const char * restrict, ...) __attribute__((__format__ (__printf__, 2, 3)));
char *ctermid_r(char *);
char *fgetln(FILE *, size_t *);
const char *fmtcheck(const char *, const char *);
int fpurge(FILE *);
void setbuffer(FILE *, char *, int);
int setlinebuf(FILE *);
int vasprintf(char ** restrict, const char * restrict, va_list) __attribute__((__format__ (__printf__, 2, 0)));
FILE *zopen(const char *, const char *, int);





FILE *funopen(const void *,
                 int (* _Nullable)(void *, char *, int),
                 int (* _Nullable)(void *, const char *, int),
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                 int (* _Nullable)(void *));
# 498 "APPLE_SDKROOT/usr/include/stdio.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/secure/_stdio.h" 1 3 4
# 31 "APPLE_SDKROOT/usr/include/secure/_stdio.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/secure/_common.h" 1 3 4
# 32 "APPLE_SDKROOT/usr/include/secure/_stdio.h" 2 3 4
# 42 "APPLE_SDKROOT/usr/include/secure/_stdio.h" 3 4
extern int __sprintf_chk (char * restrict, int, size_t,
     const char * restrict, ...);
# 52 "APPLE_SDKROOT/usr/include/secure/_stdio.h" 3 4
extern int __snprintf_chk (char * restrict, size_t, int, size_t,
      const char * restrict, ...);







extern int __vsprintf_chk (char * restrict, int, size_t,
      const char * restrict, va_list);







extern int __vsnprintf_chk (char * restrict, size_t, int, size_t,
       const char * restrict, va_list);
# 499 "APPLE_SDKROOT/usr/include/stdio.h" 2 3 4
# 29 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/usr/include/stdlib.h" 1 3 4
# 65 "APPLE_SDKROOT/usr/include/stdlib.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/wait.h" 1 3 4
# 79 "APPLE_SDKROOT/usr/include/sys/wait.h" 3 4
typedef enum {
 P_ALL,
 P_PID,
 P_PGID
} idtype_t;
# 110 "APPLE_SDKROOT/usr/include/sys/wait.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/resource.h" 1 3 4
# 72 "APPLE_SDKROOT/usr/include/sys/resource.h" 3 4
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stdint.h" 1 3 4
# 63 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stdint.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/stdint.h" 1 3 4
# 23 "APPLE_SDKROOT/usr/include/stdint.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/_types/_uint8_t.h" 1 3 4
# 31 "APPLE_SDKROOT/usr/include/_types/_uint8_t.h" 3 4
typedef unsigned char uint8_t;
# 24 "APPLE_SDKROOT/usr/include/stdint.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/_types/_uint16_t.h" 1 3 4
# 31 "APPLE_SDKROOT/usr/include/_types/_uint16_t.h" 3 4
typedef unsigned short uint16_t;
# 25 "APPLE_SDKROOT/usr/include/stdint.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/_types/_uint32_t.h" 1 3 4
# 31 "APPLE_SDKROOT/usr/include/_types/_uint32_t.h" 3 4
typedef unsigned int uint32_t;
# 26 "APPLE_SDKROOT/usr/include/stdint.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/_types/_uint64_t.h" 1 3 4
# 31 "APPLE_SDKROOT/usr/include/_types/_uint64_t.h" 3 4
typedef unsigned long long uint64_t;
# 27 "APPLE_SDKROOT/usr/include/stdint.h" 2 3 4


typedef int8_t int_least8_t;
typedef int16_t int_least16_t;
typedef int32_t int_least32_t;
typedef int64_t int_least64_t;
typedef uint8_t uint_least8_t;
typedef uint16_t uint_least16_t;
typedef uint32_t uint_least32_t;
typedef uint64_t uint_least64_t;



typedef int8_t int_fast8_t;
typedef int16_t int_fast16_t;
typedef int32_t int_fast32_t;
typedef int64_t int_fast64_t;
typedef uint8_t uint_fast8_t;
typedef uint16_t uint_fast16_t;
typedef uint32_t uint_fast32_t;
typedef uint64_t uint_fast64_t;
# 58 "APPLE_SDKROOT/usr/include/stdint.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/_types/_intmax_t.h" 1 3 4
# 32 "APPLE_SDKROOT/usr/include/_types/_intmax_t.h" 3 4
typedef long int intmax_t;
# 59 "APPLE_SDKROOT/usr/include/stdint.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/_types/_uintmax_t.h" 1 3 4
# 32 "APPLE_SDKROOT/usr/include/_types/_uintmax_t.h" 3 4
typedef long unsigned int uintmax_t;
# 60 "APPLE_SDKROOT/usr/include/stdint.h" 2 3 4
# 64 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stdint.h" 2 3 4
# 73 "APPLE_SDKROOT/usr/include/sys/resource.h" 2 3 4







# 1 "APPLE_SDKROOT/usr/include/sys/_types/_timeval.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_timeval.h" 3 4
struct timeval
{
 __darwin_time_t tv_sec;
 __darwin_suseconds_t tv_usec;
};
# 81 "APPLE_SDKROOT/usr/include/sys/resource.h" 2 3 4








typedef __uint64_t rlim_t;
# 152 "APPLE_SDKROOT/usr/include/sys/resource.h" 3 4
struct rusage {
 struct timeval ru_utime;
 struct timeval ru_stime;
# 163 "APPLE_SDKROOT/usr/include/sys/resource.h" 3 4
 long ru_maxrss;

 long ru_ixrss;
 long ru_idrss;
 long ru_isrss;
 long ru_minflt;
 long ru_majflt;
 long ru_nswap;
 long ru_inblock;
 long ru_oublock;
 long ru_msgsnd;
 long ru_msgrcv;
 long ru_nsignals;
 long ru_nvcsw;
 long ru_nivcsw;


};
# 192 "APPLE_SDKROOT/usr/include/sys/resource.h" 3 4
typedef void *rusage_info_t;

struct rusage_info_v0 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
};

struct rusage_info_v1 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
};

struct rusage_info_v2 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
 uint64_t ri_diskio_bytesread;
 uint64_t ri_diskio_byteswritten;
};

struct rusage_info_v3 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
 uint64_t ri_diskio_bytesread;
 uint64_t ri_diskio_byteswritten;
 uint64_t ri_cpu_time_qos_default;
 uint64_t ri_cpu_time_qos_maintenance;
 uint64_t ri_cpu_time_qos_background;
 uint64_t ri_cpu_time_qos_utility;
 uint64_t ri_cpu_time_qos_legacy;
 uint64_t ri_cpu_time_qos_user_initiated;
 uint64_t ri_cpu_time_qos_user_interactive;
 uint64_t ri_billed_system_time;
 uint64_t ri_serviced_system_time;
};

typedef struct rusage_info_v3 rusage_info_current;
# 325 "APPLE_SDKROOT/usr/include/sys/resource.h" 3 4
struct rlimit {
 rlim_t rlim_cur;
 rlim_t rlim_max;
};
# 353 "APPLE_SDKROOT/usr/include/sys/resource.h" 3 4
struct proc_rlimit_control_wakeupmon {
 uint32_t wm_flags;
 int32_t wm_rate;
};
# 385 "APPLE_SDKROOT/usr/include/sys/resource.h" 3 4
int getpriority(int, id_t);

int getiopolicy_np(int, int) __attribute__((availability(ios,introduced=2.0)));

int getrlimit(int, struct rlimit *) __asm("_" "getrlimit" );
int getrusage(int, struct rusage *);
int setpriority(int, id_t, int);

int setiopolicy_np(int, int, int) __attribute__((availability(ios,introduced=2.0)));

int setrlimit(int, const struct rlimit *) __asm("_" "setrlimit" );
# 111 "APPLE_SDKROOT/usr/include/sys/wait.h" 2 3 4
# 194 "APPLE_SDKROOT/usr/include/sys/wait.h" 3 4
union wait {
 int w_status;



 struct {

  unsigned int w_Termsig:7,
    w_Coredump:1,
    w_Retcode:8,
    w_Filler:16;







 } w_T;





 struct {

  unsigned int w_Stopval:8,
    w_Stopsig:8,
    w_Filler:16;






 } w_S;
};
# 248 "APPLE_SDKROOT/usr/include/sys/wait.h" 3 4
pid_t wait(int *) __asm("_" "wait" );
pid_t waitpid(pid_t, int *, int) __asm("_" "waitpid" );

int waitid(idtype_t, id_t, siginfo_t *, int) __asm("_" "waitid" );


pid_t wait3(int *, int, struct rusage *);
pid_t wait4(pid_t, int *, int, struct rusage *);
# 66 "APPLE_SDKROOT/usr/include/stdlib.h" 2 3 4

# 1 "APPLE_SDKROOT/usr/include/alloca.h" 1 3 4
# 32 "APPLE_SDKROOT/usr/include/alloca.h" 3 4
void *alloca(size_t);
# 68 "APPLE_SDKROOT/usr/include/stdlib.h" 2 3 4
# 80 "APPLE_SDKROOT/usr/include/stdlib.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_wchar_t.h" 1 3 4
# 81 "APPLE_SDKROOT/usr/include/stdlib.h" 2 3 4

typedef struct {
 int quot;
 int rem;
} div_t;

typedef struct {
 long quot;
 long rem;
} ldiv_t;


typedef struct {
 long long quot;
 long long rem;
} lldiv_t;
# 117 "APPLE_SDKROOT/usr/include/stdlib.h" 3 4
extern int __mb_cur_max;
# 128 "APPLE_SDKROOT/usr/include/stdlib.h" 3 4
void abort(void) __attribute__((noreturn));
int abs(int) __attribute__((const));
int atexit(void (* _Nonnull)(void));
double atof(const char *);
int atoi(const char *);
long atol(const char *);

long long
  atoll(const char *);

void *bsearch(const void *__key, const void *__base, size_t __nel,
     size_t __width, int (* _Nonnull __compar)(const void *, const void *));
void *calloc(size_t __count, size_t __size) __attribute__((__warn_unused_result__));
div_t div(int, int) __attribute__((const));
void exit(int) __attribute__((noreturn));
void free(void *);
char *getenv(const char *);
long labs(long) __attribute__((const));
ldiv_t ldiv(long, long) __attribute__((const));

long long
  llabs(long long);
lldiv_t lldiv(long long, long long);

void *malloc(size_t __size) __attribute__((__warn_unused_result__));
int mblen(const char *__s, size_t __n);
size_t mbstowcs(wchar_t * restrict , const char * restrict, size_t);
int mbtowc(wchar_t * restrict, const char * restrict, size_t);
int posix_memalign(void **__memptr, size_t __alignment, size_t __size) __attribute__((availability(ios,introduced=3.0)));
void qsort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *));
int rand(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
void *realloc(void *__ptr, size_t __size) __attribute__((__warn_unused_result__));
void srand(unsigned) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
double strtod(const char *, char **) __asm("_" "strtod" );
float strtof(const char *, char **) __asm("_" "strtof" );
long strtol(const char *__str, char **__endptr, int __base);
long double
  strtold(const char *, char **);

long long
  strtoll(const char *__str, char **__endptr, int __base);

unsigned long
  strtoul(const char *__str, char **__endptr, int __base);

unsigned long long
  strtoull(const char *__str, char **__endptr, int __base);
# 184 "APPLE_SDKROOT/usr/include/stdlib.h" 3 4
__attribute__((__availability__(swift, unavailable, message="Use posix_spawn APIs or NSTask instead.")))
__attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use posix_spawn APIs instead.")))
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
int system(const char *) __asm("_" "system" );



size_t wcstombs(char * restrict, const wchar_t * restrict, size_t);
int wctomb(char *, wchar_t);


void _Exit(int) __attribute__((noreturn));
long a64l(const char *);
double drand48(void);
char *ecvt(double, int, int *restrict, int *restrict);
double erand48(unsigned short[3]);
char *fcvt(double, int, int *restrict, int *restrict);
char *gcvt(double, int, char *);
int getsubopt(char **, char * const *, char **);
int grantpt(int);

char *initstate(unsigned, char *, size_t);



long jrand48(unsigned short[3]) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
char *l64a(long);
void lcong48(unsigned short[7]);
long lrand48(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
char *mktemp(char *);
int mkstemp(char *);
long mrand48(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
long nrand48(unsigned short[3]) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
int posix_openpt(int);
char *ptsname(int);
int putenv(char *) __asm("_" "putenv" );
long random(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
int rand_r(unsigned *) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));

char *realpath(const char * restrict, char * restrict) __asm("_" "realpath" "$DARWIN_EXTSN");



unsigned short
 *seed48(unsigned short[3]);
int setenv(const char * __name, const char * __value, int __overwrite) __asm("_" "setenv" );

void setkey(const char *) __asm("_" "setkey" );



char *setstate(const char *);
void srand48(long);

void srandom(unsigned);



int unlockpt(int);

int unsetenv(const char *) __asm("_" "unsetenv" );
# 257 "APPLE_SDKROOT/usr/include/stdlib.h" 3 4
uint32_t arc4random(void);
void arc4random_addrandom(unsigned char * , int )
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(macosx,deprecated=10.12,message="use arc4random_stir")))
    __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(ios,deprecated=10.0,message="use arc4random_stir")))
    __attribute__((availability(tvos,introduced=2.0))) __attribute__((availability(tvos,deprecated=10.0,message="use arc4random_stir")))
    __attribute__((availability(watchos,introduced=1.0))) __attribute__((availability(watchos,deprecated=3.0,message="use arc4random_stir")));
void arc4random_buf(void * __buf, size_t __nbytes) __attribute__((availability(ios,introduced=4.3)));
void arc4random_stir(void);
uint32_t
  arc4random_uniform(uint32_t __upper_bound) __attribute__((availability(ios,introduced=4.3)));

int atexit_b(void (^ _Nonnull)(void)) __attribute__((availability(ios,introduced=3.2)));
void *bsearch_b(const void *__key, const void *__base, size_t __nel,
     size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));



char *cgetcap(char *, const char *, int);
int cgetclose(void);
int cgetent(char **, char **, const char *);
int cgetfirst(char **, char **);
int cgetmatch(const char *, const char *);
int cgetnext(char **, char **);
int cgetnum(char *, const char *, long *);
int cgetset(const char *);
int cgetstr(char *, const char *, char **);
int cgetustr(char *, const char *, char **);

int daemon(int, int) __asm("_" "daemon" ) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use posix_spawn APIs instead."))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
char *devname(dev_t, mode_t);
char *devname_r(dev_t, mode_t, char *buf, int len);
char *getbsize(int *, long *);
int getloadavg(double [], int);
const char
 *getprogname(void);

int heapsort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *));

int heapsort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));

int mergesort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *));

int mergesort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));

void psort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));

void psort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));

void psort_r(void *__base, size_t __nel, size_t __width, void *,
     int (* _Nonnull __compar)(void *, const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));

void qsort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));

void qsort_r(void *__base, size_t __nel, size_t __width, void *,
     int (* _Nonnull __compar)(void *, const void *, const void *));
int radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
     unsigned __endbyte);
void setprogname(const char *);
int sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
     unsigned __endbyte);
void sranddev(void);
void srandomdev(void);
void *reallocf(void *__ptr, size_t __size);

long long
  strtoq(const char *__str, char **__endptr, int __base);
unsigned long long
  strtouq(const char *__str, char **__endptr, int __base);

extern char *suboptarg;
void *valloc(size_t);
# 30 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/usr/include/string.h" 1 3 4
# 70 "APPLE_SDKROOT/usr/include/string.h" 3 4
void *memchr(const void *__s, int __c, size_t __n);
int memcmp(const void *__s1, const void *__s2, size_t __n);
void *memcpy(void *__dst, const void *__src, size_t __n);
void *memmove(void *__dst, const void *__src, size_t __len);
void *memset(void *__b, int __c, size_t __len);
char *strcat(char *__s1, const char *__s2);
char *strchr(const char *__s, int __c);
int strcmp(const char *__s1, const char *__s2);
int strcoll(const char *__s1, const char *__s2);
char *strcpy(char *__dst, const char *__src);
size_t strcspn(const char *__s, const char *__charset);
char *strerror(int __errnum) __asm("_" "strerror" );
size_t strlen(const char *__s);
char *strncat(char *__s1, const char *__s2, size_t __n);
int strncmp(const char *__s1, const char *__s2, size_t __n);
char *strncpy(char *__dst, const char *__src, size_t __n);
char *strpbrk(const char *__s, const char *__charset);
char *strrchr(const char *__s, int __c);
size_t strspn(const char *__s, const char *__charset);
char *strstr(const char *__big, const char *__little);
char *strtok(char *__str, const char *__sep);
size_t strxfrm(char *__s1, const char *__s2, size_t __n);
# 104 "APPLE_SDKROOT/usr/include/string.h" 3 4
char *strtok_r(char *__str, const char *__sep, char **__lasts);
# 116 "APPLE_SDKROOT/usr/include/string.h" 3 4
int strerror_r(int __errnum, char *__strerrbuf, size_t __buflen);
char *strdup(const char *__s1);
void *memccpy(void *__dst, const void *__src, int __c, size_t __n);
# 130 "APPLE_SDKROOT/usr/include/string.h" 3 4
char *stpcpy(char *__dst, const char *__src);
char *stpncpy(char *__dst, const char *__src, size_t __n) __attribute__((availability(ios,introduced=4.3)));
char *strndup(const char *__s1, size_t __n) __attribute__((availability(ios,introduced=4.3)));
size_t strnlen(const char *__s1, size_t __n) __attribute__((availability(ios,introduced=4.3)));
char *strsignal(int __sig);
# 145 "APPLE_SDKROOT/usr/include/string.h" 3 4
errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n) __attribute__((availability(ios,introduced=7.0)));
# 155 "APPLE_SDKROOT/usr/include/string.h" 3 4
void *memmem(const void *__big, size_t __big_len, const void *__little, size_t __little_len) __attribute__((availability(ios,introduced=4.3)));
void memset_pattern4(void *__b, const void *__pattern4, size_t __len) __attribute__((availability(ios,introduced=3.0)));
void memset_pattern8(void *__b, const void *__pattern8, size_t __len) __attribute__((availability(ios,introduced=3.0)));
void memset_pattern16(void *__b, const void *__pattern16, size_t __len) __attribute__((availability(ios,introduced=3.0)));

char *strcasestr(const char *__big, const char *__little);
char *strnstr(const char *__big, const char *__little, size_t __len);
size_t strlcat(char *__dst, const char *__source, size_t __size);
size_t strlcpy(char *__dst, const char *__source, size_t __size);
void strmode(int __mode, char *__bp);
char *strsep(char **__stringp, const char *__delim);


void swab(const void * restrict, void * restrict, ssize_t);








# 1 "APPLE_SDKROOT/usr/include/strings.h" 1 3 4
# 70 "APPLE_SDKROOT/usr/include/strings.h" 3 4
int bcmp(const void *, const void *, size_t) ;
void bcopy(const void *, void *, size_t) ;
void bzero(void *, size_t) ;
char *index(const char *, int) ;
char *rindex(const char *, int) ;


int ffs(int);
int strcasecmp(const char *, const char *);
int strncasecmp(const char *, const char *, size_t);





int ffsl(long) __attribute__((availability(ios,introduced=2.0)));
int ffsll(long long) __attribute__((availability(ios,introduced=7.0)));
int fls(int) __attribute__((availability(ios,introduced=2.0)));
int flsl(long) __attribute__((availability(ios,introduced=2.0)));
int flsll(long long) __attribute__((availability(ios,introduced=7.0)));



# 1 "APPLE_SDKROOT/usr/include/string.h" 1 3 4
# 93 "APPLE_SDKROOT/usr/include/strings.h" 2 3 4
# 177 "APPLE_SDKROOT/usr/include/string.h" 2 3 4
# 186 "APPLE_SDKROOT/usr/include/string.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/secure/_string.h" 1 3 4
# 187 "APPLE_SDKROOT/usr/include/string.h" 2 3 4
# 31 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/usr/include/time.h" 1 3 4
# 72 "APPLE_SDKROOT/usr/include/time.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_timespec.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_timespec.h" 3 4
struct timespec
{
 __darwin_time_t tv_sec;
 long tv_nsec;
};
# 73 "APPLE_SDKROOT/usr/include/time.h" 2 3 4

struct tm {
 int tm_sec;
 int tm_min;
 int tm_hour;
 int tm_mday;
 int tm_mon;
 int tm_year;
 int tm_wday;
 int tm_yday;
 int tm_isdst;
 long tm_gmtoff;
 char *tm_zone;
};
# 97 "APPLE_SDKROOT/usr/include/time.h" 3 4
extern char *tzname[];


extern int getdate_err;

extern long timezone __asm("_" "timezone" );

extern int daylight;


char *asctime(const struct tm *);
clock_t clock(void) __asm("_" "clock" );
char *ctime(const time_t *);
double difftime(time_t, time_t);
struct tm *getdate(const char *);
struct tm *gmtime(const time_t *);
struct tm *localtime(const time_t *);
time_t mktime(struct tm *) __asm("_" "mktime" );
size_t strftime(char * restrict, size_t, const char * restrict, const struct tm * restrict) __asm("_" "strftime" );
char *strptime(const char * restrict, const char * restrict, struct tm * restrict) __asm("_" "strptime" );
time_t time(time_t *);


void tzset(void);



char *asctime_r(const struct tm * restrict, char * restrict);
char *ctime_r(const time_t *, char *);
struct tm *gmtime_r(const time_t * restrict, struct tm * restrict);
struct tm *localtime_r(const time_t * restrict, struct tm * restrict);


time_t posix2time(time_t);



void tzsetwall(void);
time_t time2posix(time_t);
time_t timelocal(struct tm * const);
time_t timegm(struct tm * const);



int nanosleep(const struct timespec *__rqtp, struct timespec *__rmtp) __asm("_" "nanosleep" );
# 152 "APPLE_SDKROOT/usr/include/time.h" 3 4
typedef enum {
_CLOCK_REALTIME __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 0,

_CLOCK_MONOTONIC __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 6,


_CLOCK_MONOTONIC_RAW __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 4,

_CLOCK_MONOTONIC_RAW_APPROX __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 5,

_CLOCK_UPTIME_RAW __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 8,

_CLOCK_UPTIME_RAW_APPROX __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 9,


_CLOCK_PROCESS_CPUTIME_ID __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 12,

_CLOCK_THREAD_CPUTIME_ID __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 16

} clockid_t;

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
int clock_getres(clockid_t __clock_id, struct timespec *__res);

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
int clock_gettime(clockid_t __clock_id, struct timespec *__tp);


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
__uint64_t clock_gettime_nsec_np(clockid_t __clock_id);


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable)))
__attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
int clock_settime(clockid_t __clock_id, const struct timespec *__tp);
# 32 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3



# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/inttypes.h" 1 3 4
# 26 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/inttypes.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/inttypes.h" 1 3 4
# 227 "APPLE_SDKROOT/usr/include/inttypes.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_wchar_t.h" 1 3 4
# 228 "APPLE_SDKROOT/usr/include/inttypes.h" 2 3 4






__attribute__((availability(ios,introduced=2.0)))
extern intmax_t
imaxabs(intmax_t j);


typedef struct {
 intmax_t quot;
 intmax_t rem;
} imaxdiv_t;

__attribute__((availability(ios,introduced=2.0)))
extern imaxdiv_t
imaxdiv(intmax_t __numer, intmax_t __denom);


__attribute__((availability(ios,introduced=2.0)))
extern intmax_t
strtoimax(const char * restrict __nptr,
   char ** restrict __endptr,
   int __base);

__attribute__((availability(ios,introduced=2.0)))
extern uintmax_t
strtoumax(const char * restrict __nptr,
   char ** restrict __endptr,
   int __base);


__attribute__((availability(ios,introduced=2.0)))
extern intmax_t
wcstoimax(const wchar_t * restrict __nptr,
   wchar_t ** restrict __endptr,
   int __base);

__attribute__((availability(ios,introduced=2.0)))
extern uintmax_t
wcstoumax(const wchar_t * restrict __nptr,
   wchar_t ** restrict __endptr,
   int __base);
# 27 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/inttypes.h" 2 3 4
# 36 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stdbool.h" 1 3 4
# 37 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3






# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
# 1 "APPLE_SDKROOT/usr/include/TargetConditionals.h" 1 3 4
# 17 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAvailability.h" 1 3
# 21 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAvailability.h" 3
# 1 "APPLE_SDKROOT/usr/include/os/availability.h" 1 3 4
# 22 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAvailability.h" 2 3


# 1 "APPLE_SDKROOT/usr/include/AvailabilityMacros.h" 1 3 4
# 25 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAvailability.h" 2 3
# 19 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 2 3
# 72 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
# 1 "APPLE_SDKROOT/usr/include/Block.h" 1 3 4
# 31 "APPLE_SDKROOT/usr/include/Block.h" 3 4
extern void *_Block_copy(const void *aBlock)
    __attribute__((availability(ios,introduced=3.2)));


extern void _Block_release(const void *aBlock)
    __attribute__((availability(ios,introduced=3.2)));



extern void _Block_object_assign(void *, const void *, const int)
    __attribute__((availability(ios,introduced=3.2)));


extern void _Block_object_dispose(const void *, const int)
    __attribute__((availability(ios,introduced=3.2)));


extern void * _NSConcreteGlobalBlock[32]
    __attribute__((availability(ios,introduced=3.2)));
extern void * _NSConcreteStackBlock[32]
    __attribute__((availability(ios,introduced=3.2)));
# 73 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 2 3




# 1 "APPLE_SDKROOT/usr/include/MacTypes.h" 1 3 4
# 41 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/ConditionalMacros.h" 1 3 4
# 42 "APPLE_SDKROOT/usr/include/MacTypes.h" 2 3 4
# 58 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
#pragma pack(push, 2)
# 115 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
typedef unsigned char UInt8;
typedef signed char SInt8;
typedef unsigned short UInt16;
typedef signed short SInt16;


typedef unsigned int UInt32;
typedef signed int SInt32;
# 142 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
struct wide {
  UInt32 lo;
  SInt32 hi;
};
typedef struct wide wide;
struct UnsignedWide {
  UInt32 lo;
  UInt32 hi;
};
typedef struct UnsignedWide UnsignedWide;
# 173 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
      typedef signed long long SInt64;
        typedef unsigned long long UInt64;
# 193 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
typedef SInt32 Fixed;
typedef Fixed * FixedPtr;
typedef SInt32 Fract;
typedef Fract * FractPtr;
typedef UInt32 UnsignedFixed;
typedef UnsignedFixed * UnsignedFixedPtr;
typedef short ShortFixed;
typedef ShortFixed * ShortFixedPtr;
# 220 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
typedef float Float32;
typedef double Float64;
struct Float80 {
    SInt16 exp;
    UInt16 man[4];
};
typedef struct Float80 Float80;

struct Float96 {
    SInt16 exp[2];
    UInt16 man[4];
};
typedef struct Float96 Float96;
struct Float32Point {
    Float32 x;
    Float32 y;
};
typedef struct Float32Point Float32Point;
# 248 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
typedef char * Ptr;
typedef Ptr * Handle;
typedef long Size;
# 278 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
typedef SInt16 OSErr;
typedef SInt32 OSStatus;
typedef void * LogicalAddress;
typedef const void * ConstLogicalAddress;
typedef void * PhysicalAddress;
typedef UInt8 * BytePtr;
typedef unsigned long ByteCount;
typedef unsigned long ByteOffset;
typedef SInt32 Duration;
typedef UnsignedWide AbsoluteTime;
typedef UInt32 OptionBits;
typedef unsigned long ItemCount;
typedef UInt32 PBVersion;
typedef SInt16 ScriptCode;
typedef SInt16 LangCode;
typedef SInt16 RegionCode;
typedef UInt32 FourCharCode;
typedef FourCharCode OSType;
typedef FourCharCode ResType;
typedef OSType * OSTypePtr;
typedef ResType * ResTypePtr;
# 309 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
typedef unsigned char Boolean;
# 322 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
typedef long ( * ProcPtr)();
typedef void ( * Register68kProcPtr)();




typedef ProcPtr UniversalProcPtr;


typedef ProcPtr * ProcHandle;
typedef UniversalProcPtr * UniversalProcHandle;
# 347 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
typedef void * PRefCon;

typedef void * URefCon;
typedef void * SRefCon;
# 382 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
enum {
  noErr = 0
};

enum {
  kNilOptions = 0
};


enum {
  kVariableLengthArray


  __attribute__((deprecated))


  = 1
};

enum {
  kUnknownType = 0x3F3F3F3F
};
# 457 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
typedef UInt32 UnicodeScalarValue;
typedef UInt32 UTF32Char;
typedef UInt16 UniChar;
typedef UInt16 UTF16Char;
typedef UInt8 UTF8Char;
typedef UniChar * UniCharPtr;
typedef unsigned long UniCharCount;
typedef UniCharCount * UniCharCountPtr;
typedef unsigned char Str255[256];
typedef unsigned char Str63[64];
typedef unsigned char Str32[33];
typedef unsigned char Str31[32];
typedef unsigned char Str27[28];
typedef unsigned char Str15[16];
# 479 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
typedef unsigned char Str32Field[34];
# 489 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
typedef Str63 StrFileName;
typedef unsigned char * StringPtr;
typedef StringPtr * StringHandle;
typedef const unsigned char * ConstStringPtr;
typedef const unsigned char * ConstStr255Param;
typedef const unsigned char * ConstStr63Param;
typedef const unsigned char * ConstStr32Param;
typedef const unsigned char * ConstStr31Param;
typedef const unsigned char * ConstStr27Param;
typedef const unsigned char * ConstStr15Param;
typedef ConstStr63Param ConstStrFileNameParam;
# 516 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
struct ProcessSerialNumber {
  UInt32 highLongOfPSN;
  UInt32 lowLongOfPSN;
};
typedef struct ProcessSerialNumber ProcessSerialNumber;
typedef ProcessSerialNumber * ProcessSerialNumberPtr;
# 538 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
struct Point {
  short v;
  short h;
};
typedef struct Point Point;
typedef Point * PointPtr;
struct Rect {
  short top;
  short left;
  short bottom;
  short right;
};
typedef struct Rect Rect;
typedef Rect * RectPtr;
struct FixedPoint {
  Fixed x;
  Fixed y;
};
typedef struct FixedPoint FixedPoint;
struct FixedRect {
  Fixed left;
  Fixed top;
  Fixed right;
  Fixed bottom;
};
typedef struct FixedRect FixedRect;

typedef short CharParameter;
enum {
  normal = 0,
  bold = 1,
  italic = 2,
  underline = 4,
  outline = 8,
  shadow = 0x10,
  condense = 0x20,
  extend = 0x40
};

typedef unsigned char Style;
typedef short StyleParameter;
typedef Style StyleField;
# 594 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
typedef SInt32 TimeValue;
typedef SInt32 TimeScale;
typedef wide CompTimeValue;
typedef SInt64 TimeValue64;
typedef struct TimeBaseRecord* TimeBase;
struct TimeRecord {
  CompTimeValue value;
  TimeScale scale;
  TimeBase base;
};
typedef struct TimeRecord TimeRecord;
# 646 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
struct NumVersion {

  UInt8 nonRelRev;
  UInt8 stage;
  UInt8 minorAndBugRev;
  UInt8 majorRev;
};
typedef struct NumVersion NumVersion;


enum {

  developStage = 0x20,
  alphaStage = 0x40,
  betaStage = 0x60,
  finalStage = 0x80
};

union NumVersionVariant {

  NumVersion parts;
  UInt32 whole;
};
typedef union NumVersionVariant NumVersionVariant;
typedef NumVersionVariant * NumVersionVariantPtr;
typedef NumVersionVariantPtr * NumVersionVariantHandle;
struct VersRec {

  NumVersion numericVersion;
  short countryCode;
  Str255 shortVersion;
  Str255 reserved;
};
typedef struct VersRec VersRec;
typedef VersRec * VersRecPtr;
typedef VersRecPtr * VersRecHndl;





typedef UInt8 Byte;
typedef SInt8 SignedByte;
typedef wide * WidePtr;
typedef UnsignedWide * UnsignedWidePtr;
typedef Float80 extended80;
typedef Float96 extended96;
typedef SInt8 VHSelect;
# 707 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
extern void
Debugger(void) __attribute__((availability(ios,unavailable)));
# 719 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
extern void
DebugStr(ConstStr255Param debuggerMsg) __attribute__((availability(ios,unavailable)));
# 766 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
extern void
SysBreak(void) __attribute__((availability(ios,unavailable)));
# 778 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
extern void
SysBreakStr(ConstStr255Param debuggerMsg) __attribute__((availability(ios,unavailable)));
# 790 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
extern void
SysBreakFunc(ConstStr255Param debuggerMsg) __attribute__((availability(ios,unavailable)));
# 801 "APPLE_SDKROOT/usr/include/MacTypes.h" 3 4
#pragma pack(pop)
# 78 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 2 3
# 251 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
@class NSArray;
@class NSAttributedString;
@class NSString;
@class NSNull;
@class NSCharacterSet;
@class NSData;
@class NSDate;
@class NSTimeZone;
@class NSDictionary;
@class NSError;
@class NSLocale;
@class NSNumber;
@class NSSet;
@class NSURL;
# 334 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
extern double kCFCoreFoundationVersionNumber;
# 463 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
typedef unsigned long CFTypeID;
typedef unsigned long CFOptionFlags;
typedef unsigned long CFHashCode;
typedef signed long CFIndex;



typedef const __attribute__((objc_bridge(id))) void * CFTypeRef;

typedef const struct __attribute__((objc_bridge(NSString))) __CFString * CFStringRef;
typedef struct __attribute__((objc_bridge_mutable(NSMutableString))) __CFString * CFMutableStringRef;






typedef __attribute__((objc_bridge(id))) CFTypeRef CFPropertyListRef;


typedef enum CFComparisonResult : CFIndex CFComparisonResult; enum CFComparisonResult : CFIndex {
    kCFCompareLessThan = -1L,
    kCFCompareEqualTo = 0,
    kCFCompareGreaterThan = 1
};


typedef CFComparisonResult (*CFComparatorFunction)(const void *val1, const void *val2, void *context);


static const CFIndex kCFNotFound = -1;



typedef struct {
    CFIndex location;
    CFIndex length;
} CFRange;


static __inline__ __attribute__((always_inline)) CFRange CFRangeMake(CFIndex loc, CFIndex len) {
    CFRange range;
    range.location = loc;
    range.length = len;
    return range;
}





extern
CFRange __CFRangeMake(CFIndex loc, CFIndex len);




typedef const struct __attribute__((objc_bridge(NSNull))) __CFNull * CFNullRef;

extern
CFTypeID CFNullGetTypeID(void);

extern
const CFNullRef kCFNull;
# 536 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
typedef const struct __attribute__((objc_bridge(id))) __CFAllocator * CFAllocatorRef;


extern
const CFAllocatorRef kCFAllocatorDefault;


extern
const CFAllocatorRef kCFAllocatorSystemDefault;







extern
const CFAllocatorRef kCFAllocatorMalloc;





extern
const CFAllocatorRef kCFAllocatorMallocZone;





extern
const CFAllocatorRef kCFAllocatorNull;





extern
const CFAllocatorRef kCFAllocatorUseContext;

typedef const void * (*CFAllocatorRetainCallBack)(const void *info);
typedef void (*CFAllocatorReleaseCallBack)(const void *info);
typedef CFStringRef (*CFAllocatorCopyDescriptionCallBack)(const void *info);
typedef void * (*CFAllocatorAllocateCallBack)(CFIndex allocSize, CFOptionFlags hint, void *info);
typedef void * (*CFAllocatorReallocateCallBack)(void *ptr, CFIndex newsize, CFOptionFlags hint, void *info);
typedef void (*CFAllocatorDeallocateCallBack)(void *ptr, void *info);
typedef CFIndex (*CFAllocatorPreferredSizeCallBack)(CFIndex size, CFOptionFlags hint, void *info);
typedef struct {
    CFIndex version;
    void * info;
    CFAllocatorRetainCallBack retain;
    CFAllocatorReleaseCallBack release;
    CFAllocatorCopyDescriptionCallBack copyDescription;
    CFAllocatorAllocateCallBack allocate;
    CFAllocatorReallocateCallBack reallocate;
    CFAllocatorDeallocateCallBack deallocate;
    CFAllocatorPreferredSizeCallBack preferredSize;
} CFAllocatorContext;

extern
CFTypeID CFAllocatorGetTypeID(void);
# 621 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
extern
void CFAllocatorSetDefault(CFAllocatorRef allocator);

extern
CFAllocatorRef CFAllocatorGetDefault(void);

extern
CFAllocatorRef CFAllocatorCreate(CFAllocatorRef allocator, CFAllocatorContext *context);

extern
void *CFAllocatorAllocate(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint);

extern
void *CFAllocatorReallocate(CFAllocatorRef allocator, void *ptr, CFIndex newsize, CFOptionFlags hint);

extern
void CFAllocatorDeallocate(CFAllocatorRef allocator, void *ptr);

extern
CFIndex CFAllocatorGetPreferredSizeForSize(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint);

extern
void CFAllocatorGetContext(CFAllocatorRef allocator, CFAllocatorContext *context);






extern
CFTypeID CFGetTypeID(CFTypeRef cf);

extern
CFStringRef CFCopyTypeIDDescription(CFTypeID type_id);

extern
CFTypeRef CFRetain(CFTypeRef cf);

extern
void CFRelease(CFTypeRef cf);



extern
CFTypeRef CFAutorelease(CFTypeRef __attribute__((cf_consumed)) arg) __attribute__((availability(ios,introduced=7_0)));

extern
CFIndex CFGetRetainCount(CFTypeRef cf);


extern
Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2);

extern
CFHashCode CFHash(CFTypeRef cf);

extern
CFStringRef CFCopyDescription(CFTypeRef cf);

extern
CFAllocatorRef CFGetAllocator(CFTypeRef cf);




extern
CFTypeRef CFMakeCollectable(CFTypeRef cf) ;
# 44 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 1 3
# 74 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
typedef const void * (*CFArrayRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (*CFArrayReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef CFStringRef (*CFArrayCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFArrayEqualCallBack)(const void *value1, const void *value2);
typedef struct {
    CFIndex version;
    CFArrayRetainCallBack retain;
    CFArrayReleaseCallBack release;
    CFArrayCopyDescriptionCallBack copyDescription;
    CFArrayEqualCallBack equal;
} CFArrayCallBacks;






extern
const CFArrayCallBacks kCFTypeArrayCallBacks;
# 102 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
typedef void (*CFArrayApplierFunction)(const void *value, void *context);





typedef const struct __attribute__((objc_bridge(NSArray))) __CFArray * CFArrayRef;





typedef struct __attribute__((objc_bridge_mutable(NSMutableArray))) __CFArray * CFMutableArrayRef;





extern
CFTypeID CFArrayGetTypeID(void);
# 173 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks);
# 194 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFArrayRef CFArrayCreateCopy(CFAllocatorRef allocator, CFArrayRef theArray);
# 238 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
# 268 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFMutableArrayRef CFArrayCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray);
# 278 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFIndex CFArrayGetCount(CFArrayRef theArray);
# 301 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFIndex CFArrayGetCountOfValue(CFArrayRef theArray, CFRange range, const void *value);
# 324 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
Boolean CFArrayContainsValue(CFArrayRef theArray, CFRange range, const void *value);
# 338 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
const void *CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx);
# 359 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayGetValues(CFArrayRef theArray, CFRange range, const void **values);
# 386 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayApplyFunction(CFArrayRef theArray, CFRange range, CFArrayApplierFunction __attribute__((noescape)) applier, void *context);
# 411 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFIndex CFArrayGetFirstIndexOfValue(CFArrayRef theArray, CFRange range, const void *value);
# 436 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFIndex CFArrayGetLastIndexOfValue(CFArrayRef theArray, CFRange range, const void *value);
# 475 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFIndex CFArrayBSearchValues(CFArrayRef theArray, CFRange range, const void *value, CFComparatorFunction comparator, void *context);
# 491 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value);
# 512 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayInsertValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value);
# 533 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArraySetValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value);
# 547 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayRemoveValueAtIndex(CFMutableArrayRef theArray, CFIndex idx);
# 557 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayRemoveAllValues(CFMutableArrayRef theArray);
# 591 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayReplaceValues(CFMutableArrayRef theArray, CFRange range, const void **newValues, CFIndex newCount);
# 609 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayExchangeValuesAtIndices(CFMutableArrayRef theArray, CFIndex idx1, CFIndex idx2);
# 639 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArraySortValues(CFMutableArrayRef theArray, CFRange range, CFComparatorFunction comparator, void *context);
# 666 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayAppendArray(CFMutableArrayRef theArray, CFArrayRef otherArray, CFRange otherRange);
# 45 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBag.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBag.h" 3
typedef const void * (*CFBagRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (*CFBagReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef CFStringRef (*CFBagCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFBagEqualCallBack)(const void *value1, const void *value2);
typedef CFHashCode (*CFBagHashCallBack)(const void *value);
typedef struct {
    CFIndex version;
    CFBagRetainCallBack retain;
    CFBagReleaseCallBack release;
    CFBagCopyDescriptionCallBack copyDescription;
    CFBagEqualCallBack equal;
    CFBagHashCallBack hash;
} CFBagCallBacks;

extern
const CFBagCallBacks kCFTypeBagCallBacks;
extern
const CFBagCallBacks kCFCopyStringBagCallBacks;

typedef void (*CFBagApplierFunction)(const void *value, void *context);

typedef const struct __attribute__((objc_bridge(id))) __CFBag * CFBagRef;
typedef struct __attribute__((objc_bridge_mutable(id))) __CFBag * CFMutableBagRef;

extern
CFTypeID CFBagGetTypeID(void);

extern
CFBagRef CFBagCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFBagCallBacks *callBacks);

extern
CFBagRef CFBagCreateCopy(CFAllocatorRef allocator, CFBagRef theBag);

extern
CFMutableBagRef CFBagCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFBagCallBacks *callBacks);

extern
CFMutableBagRef CFBagCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFBagRef theBag);

extern
CFIndex CFBagGetCount(CFBagRef theBag);

extern
CFIndex CFBagGetCountOfValue(CFBagRef theBag, const void *value);

extern
Boolean CFBagContainsValue(CFBagRef theBag, const void *value);

extern
const void *CFBagGetValue(CFBagRef theBag, const void *value);

extern
Boolean CFBagGetValueIfPresent(CFBagRef theBag, const void *candidate, const void **value);

extern
void CFBagGetValues(CFBagRef theBag, const void **values);

extern
void CFBagApplyFunction(CFBagRef theBag, CFBagApplierFunction __attribute__((noescape)) applier, void *context);

extern
void CFBagAddValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagReplaceValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagSetValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagRemoveValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagRemoveAllValues(CFMutableBagRef theBag);
# 46 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 1 3
# 19 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFBinaryHeapCompareContext;
# 50 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
typedef struct {
    CFIndex version;
    const void *(*retain)(CFAllocatorRef allocator, const void *ptr);
    void (*release)(CFAllocatorRef allocator, const void *ptr);
    CFStringRef (*copyDescription)(const void *ptr);
    CFComparisonResult (*compare)(const void *ptr1, const void *ptr2, void *context);
} CFBinaryHeapCallBacks;







extern const CFBinaryHeapCallBacks kCFStringBinaryHeapCallBacks;
# 74 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
typedef void (*CFBinaryHeapApplierFunction)(const void *val, void *context);





typedef struct __attribute__((objc_bridge_mutable(id))) __CFBinaryHeap * CFBinaryHeapRef;





extern CFTypeID CFBinaryHeapGetTypeID(void);
# 130 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern CFBinaryHeapRef CFBinaryHeapCreate(CFAllocatorRef allocator, CFIndex capacity, const CFBinaryHeapCallBacks *callBacks, const CFBinaryHeapCompareContext *compareContext);
# 159 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern CFBinaryHeapRef CFBinaryHeapCreateCopy(CFAllocatorRef allocator, CFIndex capacity, CFBinaryHeapRef heap);
# 168 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern CFIndex CFBinaryHeapGetCount(CFBinaryHeapRef heap);
# 183 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern CFIndex CFBinaryHeapGetCountOfValue(CFBinaryHeapRef heap, const void *value);
# 198 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern Boolean CFBinaryHeapContainsValue(CFBinaryHeapRef heap, const void *value);
# 209 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern const void * CFBinaryHeapGetMinimum(CFBinaryHeapRef heap);
# 223 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern Boolean CFBinaryHeapGetMinimumIfPresent(CFBinaryHeapRef heap, const void **value);
# 235 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern void CFBinaryHeapGetValues(CFBinaryHeapRef heap, const void **values);
# 254 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern void CFBinaryHeapApplyFunction(CFBinaryHeapRef heap, CFBinaryHeapApplierFunction __attribute__((noescape)) applier, void *context);
# 266 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern void CFBinaryHeapAddValue(CFBinaryHeapRef heap, const void *value);







extern void CFBinaryHeapRemoveMinimumValue(CFBinaryHeapRef heap);
# 283 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern void CFBinaryHeapRemoveAllValues(CFBinaryHeapRef heap);
# 47 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBitVector.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBitVector.h" 3
typedef UInt32 CFBit;

typedef const struct __attribute__((objc_bridge(id))) __CFBitVector * CFBitVectorRef;
typedef struct __attribute__((objc_bridge_mutable(id))) __CFBitVector * CFMutableBitVectorRef;

extern CFTypeID CFBitVectorGetTypeID(void);

extern CFBitVectorRef CFBitVectorCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex numBits);
extern CFBitVectorRef CFBitVectorCreateCopy(CFAllocatorRef allocator, CFBitVectorRef bv);
extern CFMutableBitVectorRef CFBitVectorCreateMutable(CFAllocatorRef allocator, CFIndex capacity);
extern CFMutableBitVectorRef CFBitVectorCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFBitVectorRef bv);

extern CFIndex CFBitVectorGetCount(CFBitVectorRef bv);
extern CFIndex CFBitVectorGetCountOfBit(CFBitVectorRef bv, CFRange range, CFBit value);
extern Boolean CFBitVectorContainsBit(CFBitVectorRef bv, CFRange range, CFBit value);
extern CFBit CFBitVectorGetBitAtIndex(CFBitVectorRef bv, CFIndex idx);
extern void CFBitVectorGetBits(CFBitVectorRef bv, CFRange range, UInt8 *bytes);
extern CFIndex CFBitVectorGetFirstIndexOfBit(CFBitVectorRef bv, CFRange range, CFBit value);
extern CFIndex CFBitVectorGetLastIndexOfBit(CFBitVectorRef bv, CFRange range, CFBit value);

extern void CFBitVectorSetCount(CFMutableBitVectorRef bv, CFIndex count);
extern void CFBitVectorFlipBitAtIndex(CFMutableBitVectorRef bv, CFIndex idx);
extern void CFBitVectorFlipBits(CFMutableBitVectorRef bv, CFRange range);
extern void CFBitVectorSetBitAtIndex(CFMutableBitVectorRef bv, CFIndex idx, CFBit value);
extern void CFBitVectorSetBits(CFMutableBitVectorRef bv, CFRange range, CFBit value);
extern void CFBitVectorSetAllBits(CFMutableBitVectorRef bv, CFBit value);
# 48 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFByteOrder.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFByteOrder.h" 3
# 1 "APPLE_SDKROOT/usr/include/libkern/OSByteOrder.h" 1 3 4
# 43 "APPLE_SDKROOT/usr/include/libkern/OSByteOrder.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/libkern/i386/OSByteOrder.h" 1 3 4
# 34 "APPLE_SDKROOT/usr/include/libkern/i386/OSByteOrder.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_os_inline.h" 1 3 4
# 35 "APPLE_SDKROOT/usr/include/libkern/i386/OSByteOrder.h" 2 3 4



static inline
uint16_t
OSReadSwapInt16(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    uint16_t result;

    result = *(volatile uint16_t *)((uintptr_t)base + byteOffset);
    return _OSSwapInt16(result);
}

static inline
uint32_t
OSReadSwapInt32(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    uint32_t result;

    result = *(volatile uint32_t *)((uintptr_t)base + byteOffset);
    return _OSSwapInt32(result);
}

static inline
uint64_t
OSReadSwapInt64(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    uint64_t result;

    result = *(volatile uint64_t *)((uintptr_t)base + byteOffset);
    return _OSSwapInt64(result);
}



static inline
void
OSWriteSwapInt16(
    volatile void * base,
    uintptr_t byteOffset,
    uint16_t data
)
{
    *(volatile uint16_t *)((uintptr_t)base + byteOffset) = _OSSwapInt16(data);
}

static inline
void
OSWriteSwapInt32(
    volatile void * base,
    uintptr_t byteOffset,
    uint32_t data
)
{
    *(volatile uint32_t *)((uintptr_t)base + byteOffset) = _OSSwapInt32(data);
}

static inline
void
OSWriteSwapInt64(
    volatile void * base,
    uintptr_t byteOffset,
    uint64_t data
)
{
    *(volatile uint64_t *)((uintptr_t)base + byteOffset) = _OSSwapInt64(data);
}
# 44 "APPLE_SDKROOT/usr/include/libkern/OSByteOrder.h" 2 3 4
# 58 "APPLE_SDKROOT/usr/include/libkern/OSByteOrder.h" 3 4
enum {
    OSUnknownByteOrder,
    OSLittleEndian,
    OSBigEndian
};

static inline
int32_t
OSHostByteOrder(void) {

    return OSLittleEndian;





}
# 87 "APPLE_SDKROOT/usr/include/libkern/OSByteOrder.h" 3 4
static inline
uint16_t
_OSReadInt16(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    return *(volatile uint16_t *)((uintptr_t)base + byteOffset);
}

static inline
uint32_t
_OSReadInt32(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    return *(volatile uint32_t *)((uintptr_t)base + byteOffset);
}

static inline
uint64_t
_OSReadInt64(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    return *(volatile uint64_t *)((uintptr_t)base + byteOffset);
}



static inline
void
_OSWriteInt16(
    volatile void * base,
    uintptr_t byteOffset,
    uint16_t data
)
{
    *(volatile uint16_t *)((uintptr_t)base + byteOffset) = data;
}

static inline
void
_OSWriteInt32(
    volatile void * base,
    uintptr_t byteOffset,
    uint32_t data
)
{
    *(volatile uint32_t *)((uintptr_t)base + byteOffset) = data;
}

static inline
void
_OSWriteInt64(
    volatile void * base,
    uintptr_t byteOffset,
    uint64_t data
)
{
    *(volatile uint64_t *)((uintptr_t)base + byteOffset) = data;
}
# 11 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFByteOrder.h" 2 3





enum __CFByteOrder {
    CFByteOrderUnknown,
    CFByteOrderLittleEndian,
    CFByteOrderBigEndian
};
typedef CFIndex CFByteOrder;

static __inline__ __attribute__((always_inline)) CFByteOrder CFByteOrderGetCurrent(void) {

    int32_t byteOrder = OSHostByteOrder();
    switch (byteOrder) {
    case OSLittleEndian: return CFByteOrderLittleEndian;
    case OSBigEndian: return CFByteOrderBigEndian;
    default: break;
    }
    return CFByteOrderUnknown;
# 41 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFByteOrder.h" 3
}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16(uint16_t arg) {

    return ((__uint16_t)(__builtin_constant_p(arg) ? ((__uint16_t)((((__uint16_t)(arg) & 0xff00) >> 8) | (((__uint16_t)(arg) & 0x00ff) << 8))) : _OSSwapInt16(arg)));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32(uint32_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint32_t)((((__uint32_t)(arg) & 0xff000000) >> 24) | (((__uint32_t)(arg) & 0x00ff0000) >> 8) | (((__uint32_t)(arg) & 0x0000ff00) << 8) | (((__uint32_t)(arg) & 0x000000ff) << 24))) : _OSSwapInt32(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64(uint64_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint64_t)((((__uint64_t)(arg) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(arg) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(arg) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(arg) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(arg) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(arg) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(arg) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(arg) & 0x00000000000000ffULL) << 56))) : _OSSwapInt64(arg));
# 76 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFByteOrder.h" 3
}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16BigToHost(uint16_t arg) {

    return ((__uint16_t)(__builtin_constant_p(arg) ? ((__uint16_t)((((__uint16_t)(arg) & 0xff00) >> 8) | (((__uint16_t)(arg) & 0x00ff) << 8))) : _OSSwapInt16(arg)));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32BigToHost(uint32_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint32_t)((((__uint32_t)(arg) & 0xff000000) >> 24) | (((__uint32_t)(arg) & 0x00ff0000) >> 8) | (((__uint32_t)(arg) & 0x0000ff00) << 8) | (((__uint32_t)(arg) & 0x000000ff) << 24))) : _OSSwapInt32(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64BigToHost(uint64_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint64_t)((((__uint64_t)(arg) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(arg) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(arg) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(arg) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(arg) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(arg) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(arg) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(arg) & 0x00000000000000ffULL) << 56))) : _OSSwapInt64(arg));





}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16HostToBig(uint16_t arg) {

    return ((__uint16_t)(__builtin_constant_p(arg) ? ((__uint16_t)((((__uint16_t)(arg) & 0xff00) >> 8) | (((__uint16_t)(arg) & 0x00ff) << 8))) : _OSSwapInt16(arg)));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32HostToBig(uint32_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint32_t)((((__uint32_t)(arg) & 0xff000000) >> 24) | (((__uint32_t)(arg) & 0x00ff0000) >> 8) | (((__uint32_t)(arg) & 0x0000ff00) << 8) | (((__uint32_t)(arg) & 0x000000ff) << 24))) : _OSSwapInt32(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64HostToBig(uint64_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint64_t)((((__uint64_t)(arg) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(arg) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(arg) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(arg) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(arg) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(arg) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(arg) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(arg) & 0x00000000000000ffULL) << 56))) : _OSSwapInt64(arg));





}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16LittleToHost(uint16_t arg) {

    return ((uint16_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32LittleToHost(uint32_t arg) {

    return ((uint32_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64LittleToHost(uint64_t arg) {

    return ((uint64_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16HostToLittle(uint16_t arg) {

    return ((uint16_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32HostToLittle(uint32_t arg) {

    return ((uint32_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64HostToLittle(uint64_t arg) {

    return ((uint64_t)(arg));





}

typedef struct {uint32_t v;} CFSwappedFloat32;
typedef struct {uint64_t v;} CFSwappedFloat64;

static __inline__ __attribute__((always_inline)) CFSwappedFloat32 CFConvertFloat32HostToSwapped(Float32 arg) {
    union CFSwap {
 Float32 v;
 CFSwappedFloat32 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) Float32 CFConvertFloat32SwappedToHost(CFSwappedFloat32 arg) {
    union CFSwap {
 Float32 v;
 CFSwappedFloat32 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.v;
}

static __inline__ __attribute__((always_inline)) CFSwappedFloat64 CFConvertFloat64HostToSwapped(Float64 arg) {
    union CFSwap {
 Float64 v;
 CFSwappedFloat64 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) Float64 CFConvertFloat64SwappedToHost(CFSwappedFloat64 arg) {
    union CFSwap {
 Float64 v;
 CFSwappedFloat64 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.v;
}

static __inline__ __attribute__((always_inline)) CFSwappedFloat32 CFConvertFloatHostToSwapped(float arg) {
    union CFSwap {
 float v;
 CFSwappedFloat32 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) float CFConvertFloatSwappedToHost(CFSwappedFloat32 arg) {
    union CFSwap {
 float v;
 CFSwappedFloat32 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.v;
}

static __inline__ __attribute__((always_inline)) CFSwappedFloat64 CFConvertDoubleHostToSwapped(double arg) {
    union CFSwap {
 double v;
 CFSwappedFloat64 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) double CFConvertDoubleSwappedToHost(CFSwappedFloat64 arg) {
    union CFSwap {
 double v;
 CFSwappedFloat64 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.v;
}
# 49 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCalendar.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFLocale.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFLocale.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 1 3
# 92 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
typedef const void * (*CFDictionaryRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (*CFDictionaryReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef CFStringRef (*CFDictionaryCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFDictionaryEqualCallBack)(const void *value1, const void *value2);
typedef CFHashCode (*CFDictionaryHashCallBack)(const void *value);
typedef struct {
    CFIndex version;
    CFDictionaryRetainCallBack retain;
    CFDictionaryReleaseCallBack release;
    CFDictionaryCopyDescriptionCallBack copyDescription;
    CFDictionaryEqualCallBack equal;
    CFDictionaryHashCallBack hash;
} CFDictionaryKeyCallBacks;







extern
const CFDictionaryKeyCallBacks kCFTypeDictionaryKeyCallBacks;
# 123 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
const CFDictionaryKeyCallBacks kCFCopyStringDictionaryKeyCallBacks;
# 149 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
typedef struct {
    CFIndex version;
    CFDictionaryRetainCallBack retain;
    CFDictionaryReleaseCallBack release;
    CFDictionaryCopyDescriptionCallBack copyDescription;
    CFDictionaryEqualCallBack equal;
} CFDictionaryValueCallBacks;







extern
const CFDictionaryValueCallBacks kCFTypeDictionaryValueCallBacks;
# 175 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
typedef void (*CFDictionaryApplierFunction)(const void *key, const void *value, void *context);





typedef const struct __attribute__((objc_bridge(NSDictionary))) __CFDictionary * CFDictionaryRef;





typedef struct __attribute__((objc_bridge_mutable(NSMutableDictionary))) __CFDictionary * CFMutableDictionaryRef;





extern
CFTypeID CFDictionaryGetTypeID(void);
# 278 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
# 302 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFDictionaryRef CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict);
# 374 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
# 407 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict);
# 417 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFIndex CFDictionaryGetCount(CFDictionaryRef theDict);
# 436 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFIndex CFDictionaryGetCountOfKey(CFDictionaryRef theDict, const void *key);
# 452 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFIndex CFDictionaryGetCountOfValue(CFDictionaryRef theDict, const void *value);
# 470 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key);
# 486 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
Boolean CFDictionaryContainsValue(CFDictionaryRef theDict, const void *value);
# 508 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
const void *CFDictionaryGetValue(CFDictionaryRef theDict, const void *key);
# 533 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
Boolean CFDictionaryGetValueIfPresent(CFDictionaryRef theDict, const void *key, const void **value);
# 556 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values);
# 576 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionaryApplyFunction(CFDictionaryRef theDict, CFDictionaryApplierFunction __attribute__((noescape)) applier, void *context);
# 596 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
# 619 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
# 638 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionaryReplaceValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
# 652 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key);
# 662 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict);
# 11 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFLocale.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNotificationCenter.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNotificationCenter.h" 3
typedef CFStringRef CFNotificationName __attribute__((swift_wrapper(struct)));

typedef struct __attribute__((objc_bridge_mutable(id))) __CFNotificationCenter * CFNotificationCenterRef;

typedef void (*CFNotificationCallback)(CFNotificationCenterRef center, void *observer, CFNotificationName name, const void *object, CFDictionaryRef userInfo);

typedef enum CFNotificationSuspensionBehavior : CFIndex CFNotificationSuspensionBehavior; enum CFNotificationSuspensionBehavior : CFIndex {
    CFNotificationSuspensionBehaviorDrop = 1,

    CFNotificationSuspensionBehaviorCoalesce = 2,

    CFNotificationSuspensionBehaviorHold = 3,

    CFNotificationSuspensionBehaviorDeliverImmediately = 4

};

extern CFTypeID CFNotificationCenterGetTypeID(void);

extern CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void);





extern CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void);
# 57 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNotificationCenter.h" 3
extern void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior);

extern void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object);
extern void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer);

extern void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately);

enum : CFOptionFlags {
    kCFNotificationDeliverImmediately = (1UL << 0),
    kCFNotificationPostToAllSessions = (1UL << 1)
};

extern void CFNotificationCenterPostNotificationWithOptions(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, CFOptionFlags options);
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFLocale.h" 2 3




typedef CFStringRef CFLocaleIdentifier __attribute__((swift_wrapper(struct)));
typedef CFStringRef CFLocaleKey __attribute__((swift_wrapper(enum)));

typedef const struct __attribute__((objc_bridge(NSLocale))) __CFLocale *CFLocaleRef;

extern
CFTypeID CFLocaleGetTypeID(void);

extern
CFLocaleRef CFLocaleGetSystem(void);


extern
CFLocaleRef CFLocaleCopyCurrent(void);
# 39 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFLocale.h" 3
extern
CFArrayRef CFLocaleCopyAvailableLocaleIdentifiers(void);



extern
CFArrayRef CFLocaleCopyISOLanguageCodes(void);




extern
CFArrayRef CFLocaleCopyISOCountryCodes(void);




extern
CFArrayRef CFLocaleCopyISOCurrencyCodes(void);




extern
CFArrayRef CFLocaleCopyCommonISOCurrencyCodes(void) __attribute__((availability(ios,introduced=2_0)));



extern
CFArrayRef CFLocaleCopyPreferredLanguages(void) __attribute__((availability(ios,introduced=2_0)));


extern
CFLocaleIdentifier CFLocaleCreateCanonicalLanguageIdentifierFromString(CFAllocatorRef allocator, CFStringRef localeIdentifier);



extern
CFLocaleIdentifier CFLocaleCreateCanonicalLocaleIdentifierFromString(CFAllocatorRef allocator, CFStringRef localeIdentifier);



extern
CFLocaleIdentifier CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes(CFAllocatorRef allocator, LangCode lcode, RegionCode rcode);


extern
CFLocaleIdentifier CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode(CFAllocatorRef allocator, uint32_t lcid) __attribute__((availability(ios,introduced=4_0)));


extern
uint32_t CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier(CFLocaleIdentifier localeIdentifier) __attribute__((availability(ios,introduced=4_0)));


typedef enum CFLocaleLanguageDirection : CFIndex CFLocaleLanguageDirection; enum CFLocaleLanguageDirection : CFIndex {
    kCFLocaleLanguageDirectionUnknown = 0,
    kCFLocaleLanguageDirectionLeftToRight = 1,
    kCFLocaleLanguageDirectionRightToLeft = 2,
    kCFLocaleLanguageDirectionTopToBottom = 3,
    kCFLocaleLanguageDirectionBottomToTop = 4
};

extern
CFLocaleLanguageDirection CFLocaleGetLanguageCharacterDirection(CFStringRef isoLangCode) __attribute__((availability(ios,introduced=4_0)));

extern
CFLocaleLanguageDirection CFLocaleGetLanguageLineDirection(CFStringRef isoLangCode) __attribute__((availability(ios,introduced=4_0)));

extern
CFDictionaryRef CFLocaleCreateComponentsFromLocaleIdentifier(CFAllocatorRef allocator, CFLocaleIdentifier localeID);
# 117 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFLocale.h" 3
extern
CFLocaleIdentifier CFLocaleCreateLocaleIdentifierFromComponents(CFAllocatorRef allocator, CFDictionaryRef dictionary);






extern
CFLocaleRef CFLocaleCreate(CFAllocatorRef allocator, CFLocaleIdentifier localeIdentifier);


extern
CFLocaleRef CFLocaleCreateCopy(CFAllocatorRef allocator, CFLocaleRef locale);




extern
CFLocaleIdentifier CFLocaleGetIdentifier(CFLocaleRef locale);



extern
CFTypeRef CFLocaleGetValue(CFLocaleRef locale, CFLocaleKey key);



extern
CFStringRef CFLocaleCopyDisplayNameForPropertyValue(CFLocaleRef displayLocale, CFLocaleKey key, CFStringRef value);





extern const CFNotificationName kCFLocaleCurrentLocaleDidChangeNotification __attribute__((availability(ios,introduced=2_0)));



extern const CFLocaleKey kCFLocaleIdentifier;
extern const CFLocaleKey kCFLocaleLanguageCode;
extern const CFLocaleKey kCFLocaleCountryCode;
extern const CFLocaleKey kCFLocaleScriptCode;
extern const CFLocaleKey kCFLocaleVariantCode;

extern const CFLocaleKey kCFLocaleExemplarCharacterSet;
extern const CFLocaleKey kCFLocaleCalendarIdentifier;
extern const CFLocaleKey kCFLocaleCalendar;
extern const CFLocaleKey kCFLocaleCollationIdentifier;
extern const CFLocaleKey kCFLocaleUsesMetricSystem;
extern const CFLocaleKey kCFLocaleMeasurementSystem;
extern const CFLocaleKey kCFLocaleDecimalSeparator;
extern const CFLocaleKey kCFLocaleGroupingSeparator;
extern const CFLocaleKey kCFLocaleCurrencySymbol;
extern const CFLocaleKey kCFLocaleCurrencyCode;
extern const CFLocaleKey kCFLocaleCollatorIdentifier __attribute__((availability(ios,introduced=4_0)));
extern const CFLocaleKey kCFLocaleQuotationBeginDelimiterKey __attribute__((availability(ios,introduced=4_0)));
extern const CFLocaleKey kCFLocaleQuotationEndDelimiterKey __attribute__((availability(ios,introduced=4_0)));
extern const CFLocaleKey kCFLocaleAlternateQuotationBeginDelimiterKey __attribute__((availability(ios,introduced=4_0)));
extern const CFLocaleKey kCFLocaleAlternateQuotationEndDelimiterKey __attribute__((availability(ios,introduced=4_0)));


typedef CFStringRef CFCalendarIdentifier __attribute__((swift_wrapper(enum)));

extern const CFCalendarIdentifier kCFGregorianCalendar;
extern const CFCalendarIdentifier kCFBuddhistCalendar;
extern const CFCalendarIdentifier kCFChineseCalendar;
extern const CFCalendarIdentifier kCFHebrewCalendar;
extern const CFCalendarIdentifier kCFIslamicCalendar;
extern const CFCalendarIdentifier kCFIslamicCivilCalendar;
extern const CFCalendarIdentifier kCFJapaneseCalendar;
extern const CFCalendarIdentifier kCFRepublicOfChinaCalendar __attribute__((availability(ios,introduced=4_0)));
extern const CFCalendarIdentifier kCFPersianCalendar __attribute__((availability(ios,introduced=4_0)));
extern const CFCalendarIdentifier kCFIndianCalendar __attribute__((availability(ios,introduced=4_0)));
extern const CFCalendarIdentifier kCFISO8601Calendar __attribute__((availability(ios,introduced=4_0)));
extern const CFCalendarIdentifier kCFIslamicTabularCalendar __attribute__((availability(ios,introduced=8_0)));
extern const CFCalendarIdentifier kCFIslamicUmmAlQuraCalendar __attribute__((availability(ios,introduced=8_0)));
# 10 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCalendar.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDate.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDate.h" 3
typedef double CFTimeInterval;
typedef CFTimeInterval CFAbsoluteTime;



extern
CFAbsoluteTime CFAbsoluteTimeGetCurrent(void);

extern
const CFTimeInterval kCFAbsoluteTimeIntervalSince1970;
extern
const CFTimeInterval kCFAbsoluteTimeIntervalSince1904;

typedef const struct __attribute__((objc_bridge(NSDate))) __CFDate * CFDateRef;

extern
CFTypeID CFDateGetTypeID(void);

extern
CFDateRef CFDateCreate(CFAllocatorRef allocator, CFAbsoluteTime at);

extern
CFAbsoluteTime CFDateGetAbsoluteTime(CFDateRef theDate);

extern
CFTimeInterval CFDateGetTimeIntervalSinceDate(CFDateRef theDate, CFDateRef otherDate);

extern
CFComparisonResult CFDateCompare(CFDateRef theDate, CFDateRef otherDate, void *context);



typedef const struct __attribute__((objc_bridge(NSTimeZone))) __CFTimeZone * CFTimeZoneRef;
# 58 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDate.h" 3
typedef struct {
    SInt32 year;
    SInt8 month;
    SInt8 day;
    SInt8 hour;
    SInt8 minute;
    double second;
} CFGregorianDate __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

typedef struct {
    SInt32 years;
    SInt32 months;
    SInt32 days;
    SInt32 hours;
    SInt32 minutes;
    double seconds;
} CFGregorianUnits __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

typedef enum CFGregorianUnitFlags : CFOptionFlags CFGregorianUnitFlags; enum CFGregorianUnitFlags : CFOptionFlags {
    kCFGregorianUnitsYears __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = (1UL << 0),
    kCFGregorianUnitsMonths __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = (1UL << 1),
    kCFGregorianUnitsDays __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = (1UL << 2),
    kCFGregorianUnitsHours __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = (1UL << 3),
    kCFGregorianUnitsMinutes __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = (1UL << 4),
    kCFGregorianUnitsSeconds __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = (1UL << 5),
    kCFGregorianAllUnits __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = 0x00FFFFFF
};

extern
Boolean CFGregorianDateIsValid(CFGregorianDate gdate, CFOptionFlags unitFlags) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
CFAbsoluteTime CFGregorianDateGetAbsoluteTime(CFGregorianDate gdate, CFTimeZoneRef tz) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
CFGregorianDate CFAbsoluteTimeGetGregorianDate(CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
CFAbsoluteTime CFAbsoluteTimeAddGregorianUnits(CFAbsoluteTime at, CFTimeZoneRef tz, CFGregorianUnits units) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
CFGregorianUnits CFAbsoluteTimeGetDifferenceAsGregorianUnits(CFAbsoluteTime at1, CFAbsoluteTime at2, CFTimeZoneRef tz, CFOptionFlags unitFlags) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
SInt32 CFAbsoluteTimeGetDayOfWeek(CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
SInt32 CFAbsoluteTimeGetDayOfYear(CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
SInt32 CFAbsoluteTimeGetWeekOfYear(CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));
# 11 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCalendar.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTimeZone.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTimeZone.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFData.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFData.h" 3
typedef const struct __attribute__((objc_bridge(NSData))) __CFData * CFDataRef;
typedef struct __attribute__((objc_bridge_mutable(NSMutableData))) __CFData * CFMutableDataRef;

extern
CFTypeID CFDataGetTypeID(void);

extern
CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);

extern
CFDataRef CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator);


extern
CFDataRef CFDataCreateCopy(CFAllocatorRef allocator, CFDataRef theData);

extern
CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity);

extern
CFMutableDataRef CFDataCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDataRef theData);

extern
CFIndex CFDataGetLength(CFDataRef theData);

extern
const UInt8 *CFDataGetBytePtr(CFDataRef theData);

extern
UInt8 *CFDataGetMutableBytePtr(CFMutableDataRef theData);

extern
void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer);

extern
void CFDataSetLength(CFMutableDataRef theData, CFIndex length);

extern
void CFDataIncreaseLength(CFMutableDataRef theData, CFIndex extraLength);

extern
void CFDataAppendBytes(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);

extern
void CFDataReplaceBytes(CFMutableDataRef theData, CFRange range, const UInt8 *newBytes, CFIndex newLength);

extern
void CFDataDeleteBytes(CFMutableDataRef theData, CFRange range);

typedef enum CFDataSearchFlags : CFOptionFlags CFDataSearchFlags; enum CFDataSearchFlags : CFOptionFlags {
    kCFDataSearchBackwards = 1UL << 0,
    kCFDataSearchAnchored = 1UL << 1
} __attribute__((availability(ios,introduced=4_0)));

extern
CFRange CFDataFind(CFDataRef theData, CFDataRef dataToFind, CFRange searchRange, CFDataSearchFlags compareOptions) __attribute__((availability(ios,introduced=4_0)));
# 11 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTimeZone.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 1 3
# 44 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
typedef const struct __attribute__((objc_bridge(NSCharacterSet))) __CFCharacterSet * CFCharacterSetRef;





typedef struct __attribute__((objc_bridge_mutable(NSMutableCharacterSet))) __CFCharacterSet * CFMutableCharacterSetRef;






typedef enum CFCharacterSetPredefinedSet : CFIndex CFCharacterSetPredefinedSet; enum CFCharacterSetPredefinedSet : CFIndex {
    kCFCharacterSetControl = 1,
    kCFCharacterSetWhitespace,
    kCFCharacterSetWhitespaceAndNewline,
    kCFCharacterSetDecimalDigit,
    kCFCharacterSetLetter,
    kCFCharacterSetLowercaseLetter,
    kCFCharacterSetUppercaseLetter,
    kCFCharacterSetNonBase,
    kCFCharacterSetDecomposable,
    kCFCharacterSetAlphaNumeric,
    kCFCharacterSetPunctuation,
    kCFCharacterSetCapitalizedLetter = 13,
    kCFCharacterSetSymbol = 14,
    kCFCharacterSetNewline __attribute__((availability(ios,introduced=2_0))) = 15,
    kCFCharacterSetIllegal = 12
};





extern
CFTypeID CFCharacterSetGetTypeID(void);
# 92 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFCharacterSetRef CFCharacterSetGetPredefined(CFCharacterSetPredefinedSet theSetIdentifier);
# 111 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFCharacterSetRef CFCharacterSetCreateWithCharactersInRange(CFAllocatorRef alloc, CFRange theRange);
# 128 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFCharacterSetRef CFCharacterSetCreateWithCharactersInString(CFAllocatorRef alloc, CFStringRef theString);
# 156 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFCharacterSetRef CFCharacterSetCreateWithBitmapRepresentation(CFAllocatorRef alloc, CFDataRef theData);
# 172 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern CFCharacterSetRef CFCharacterSetCreateInvertedSet(CFAllocatorRef alloc, CFCharacterSetRef theSet);
# 182 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern Boolean CFCharacterSetIsSupersetOfSet(CFCharacterSetRef theSet, CFCharacterSetRef theOtherset);
# 193 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern Boolean CFCharacterSetHasMemberInPlane(CFCharacterSetRef theSet, CFIndex thePlane);
# 205 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFMutableCharacterSetRef CFCharacterSetCreateMutable(CFAllocatorRef alloc);
# 221 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFCharacterSetRef CFCharacterSetCreateCopy(CFAllocatorRef alloc, CFCharacterSetRef theSet);
# 237 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFMutableCharacterSetRef CFCharacterSetCreateMutableCopy(CFAllocatorRef alloc, CFCharacterSetRef theSet);
# 251 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
Boolean CFCharacterSetIsCharacterMember(CFCharacterSetRef theSet, UniChar theChar);
# 263 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern Boolean CFCharacterSetIsLongCharacterMember(CFCharacterSetRef theSet, UTF32Char theChar);
# 281 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFDataRef CFCharacterSetCreateBitmapRepresentation(CFAllocatorRef alloc, CFCharacterSetRef theSet);
# 296 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetAddCharactersInRange(CFMutableCharacterSetRef theSet, CFRange theRange);
# 311 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetRemoveCharactersInRange(CFMutableCharacterSetRef theSet, CFRange theRange);
# 324 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetAddCharactersInString(CFMutableCharacterSetRef theSet, CFStringRef theString);
# 337 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetRemoveCharactersInString(CFMutableCharacterSetRef theSet, CFStringRef theString);
# 351 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetUnion(CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet);
# 365 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetIntersect(CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet);
# 375 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetInvert(CFMutableCharacterSetRef theSet);
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 2 3
# 94 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
typedef UInt32 CFStringEncoding;





typedef enum CFStringBuiltInEncodings : CFStringEncoding CFStringBuiltInEncodings; enum CFStringBuiltInEncodings : CFStringEncoding {
    kCFStringEncodingMacRoman = 0,
    kCFStringEncodingWindowsLatin1 = 0x0500,
    kCFStringEncodingISOLatin1 = 0x0201,
    kCFStringEncodingNextStepLatin = 0x0B01,
    kCFStringEncodingASCII = 0x0600,
    kCFStringEncodingUnicode = 0x0100,
    kCFStringEncodingUTF8 = 0x08000100,
    kCFStringEncodingNonLossyASCII = 0x0BFF,

    kCFStringEncodingUTF16 = 0x0100,
    kCFStringEncodingUTF16BE = 0x10000100,
    kCFStringEncodingUTF16LE = 0x14000100,

    kCFStringEncodingUTF32 = 0x0c000100,
    kCFStringEncodingUTF32BE = 0x18000100,
    kCFStringEncodingUTF32LE = 0x1c000100
};



extern
CFTypeID CFStringGetTypeID(void);
# 169 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
CFStringRef CFStringCreateWithPascalString(CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding);

extern
CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);



extern
CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);

extern
CFStringRef CFStringCreateWithCharacters(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars);
# 200 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
CFStringRef CFStringCreateWithPascalStringNoCopy(CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator);

extern
CFStringRef CFStringCreateWithCStringNoCopy(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator);



extern
CFStringRef CFStringCreateWithBytesNoCopy(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation, CFAllocatorRef contentsDeallocator);

extern
CFStringRef CFStringCreateWithCharactersNoCopy(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars, CFAllocatorRef contentsDeallocator);



extern
CFStringRef CFStringCreateWithSubstring(CFAllocatorRef alloc, CFStringRef str, CFRange range);

extern
CFStringRef CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString);



extern
CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...) __attribute__((format(CFString, 3, 4)));

extern
CFStringRef CFStringCreateWithFormatAndArguments(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments) __attribute__((format(CFString, 3, 0)));



extern
CFMutableStringRef CFStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength);

extern
CFMutableStringRef CFStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString);







extern
CFMutableStringRef CFStringCreateMutableWithExternalCharactersNoCopy(CFAllocatorRef alloc, UniChar *chars, CFIndex numChars, CFIndex capacity, CFAllocatorRef externalCharactersAllocator);





extern
CFIndex CFStringGetLength(CFStringRef theString);






extern
UniChar CFStringGetCharacterAtIndex(CFStringRef theString, CFIndex idx);

extern
void CFStringGetCharacters(CFStringRef theString, CFRange range, UniChar *buffer);
# 276 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
Boolean CFStringGetPascalString(CFStringRef theString, StringPtr buffer, CFIndex bufferSize, CFStringEncoding encoding);

extern
Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding);






extern
ConstStringPtr CFStringGetPascalStringPtr(CFStringRef theString, CFStringEncoding encoding);

extern
const char *CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding);

extern
const UniChar *CFStringGetCharactersPtr(CFStringRef theString);
# 312 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
CFIndex CFStringGetBytes(CFStringRef theString, CFRange range, CFStringEncoding encoding, UInt8 lossByte, Boolean isExternalRepresentation, UInt8 *buffer, CFIndex maxBufLen, CFIndex *usedBufLen);







extern
CFStringRef CFStringCreateFromExternalRepresentation(CFAllocatorRef alloc, CFDataRef data, CFStringEncoding encoding);

extern
CFDataRef CFStringCreateExternalRepresentation(CFAllocatorRef alloc, CFStringRef theString, CFStringEncoding encoding, UInt8 lossByte);



extern
CFStringEncoding CFStringGetSmallestEncoding(CFStringRef theString);

extern
CFStringEncoding CFStringGetFastestEncoding(CFStringRef theString);



extern
CFStringEncoding CFStringGetSystemEncoding(void);

extern
CFIndex CFStringGetMaximumSizeForEncoding(CFIndex length, CFStringEncoding encoding);






extern
Boolean CFStringGetFileSystemRepresentation(CFStringRef string, char *buffer, CFIndex maxBufLen);



extern
CFIndex CFStringGetMaximumSizeOfFileSystemRepresentation(CFStringRef string);



extern
CFStringRef CFStringCreateWithFileSystemRepresentation(CFAllocatorRef alloc, const char *buffer);






typedef enum CFStringCompareFlags : CFOptionFlags CFStringCompareFlags; enum CFStringCompareFlags : CFOptionFlags {
    kCFCompareCaseInsensitive = 1,
    kCFCompareBackwards = 4,
    kCFCompareAnchored = 8,
    kCFCompareNonliteral = 16,
    kCFCompareLocalized = 32,
    kCFCompareNumerically = 64,
    kCFCompareDiacriticInsensitive __attribute__((availability(ios,introduced=2_0))) = 128,
    kCFCompareWidthInsensitive __attribute__((availability(ios,introduced=2_0))) = 256,
    kCFCompareForcedOrdering __attribute__((availability(ios,introduced=2_0))) = 512
};







extern
CFComparisonResult CFStringCompareWithOptionsAndLocale(CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions, CFLocaleRef locale) __attribute__((availability(ios,introduced=2_0)));



extern
CFComparisonResult CFStringCompareWithOptions(CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions);





extern
CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);







extern
Boolean CFStringFindWithOptionsAndLocale(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFLocaleRef locale, CFRange *result) __attribute__((availability(ios,introduced=2_0)));



extern
Boolean CFStringFindWithOptions(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result);
# 422 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
CFArrayRef CFStringCreateArrayWithFindResults(CFAllocatorRef alloc, CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags compareOptions);



extern
CFRange CFStringFind(CFStringRef theString, CFStringRef stringToFind, CFStringCompareFlags compareOptions);

extern
Boolean CFStringHasPrefix(CFStringRef theString, CFStringRef prefix);

extern
Boolean CFStringHasSuffix(CFStringRef theString, CFStringRef suffix);
# 449 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern CFRange CFStringGetRangeOfComposedCharactersAtIndex(CFStringRef theString, CFIndex theIndex);
# 480 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern Boolean CFStringFindCharacterFromSet(CFStringRef theString, CFCharacterSetRef theSet, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result);
# 491 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
void CFStringGetLineBounds(CFStringRef theString, CFRange range, CFIndex *lineBeginIndex, CFIndex *lineEndIndex, CFIndex *contentsEndIndex);



extern
void CFStringGetParagraphBounds(CFStringRef string, CFRange range, CFIndex *parBeginIndex, CFIndex *parEndIndex, CFIndex *contentsEndIndex) __attribute__((availability(ios,introduced=2_0)));
# 524 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
CFIndex CFStringGetHyphenationLocationBeforeIndex(CFStringRef string, CFIndex location, CFRange limitRange, CFOptionFlags options, CFLocaleRef locale, UTF32Char *character) __attribute__((availability(ios,introduced=4_2)));

extern
Boolean CFStringIsHyphenationAvailableForLocale(CFLocaleRef locale) __attribute__((availability(ios,introduced=4_3)));



extern
CFStringRef CFStringCreateByCombiningStrings(CFAllocatorRef alloc, CFArrayRef theArray, CFStringRef separatorString);

extern
CFArrayRef CFStringCreateArrayBySeparatingStrings(CFAllocatorRef alloc, CFStringRef theString, CFStringRef separatorString);




extern
SInt32 CFStringGetIntValue(CFStringRef str);

extern
double CFStringGetDoubleValue(CFStringRef str);
# 555 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
void CFStringAppend(CFMutableStringRef theString, CFStringRef appendedString);

extern
void CFStringAppendCharacters(CFMutableStringRef theString, const UniChar *chars, CFIndex numChars);

extern
void CFStringAppendPascalString(CFMutableStringRef theString, ConstStr255Param pStr, CFStringEncoding encoding);

extern
void CFStringAppendCString(CFMutableStringRef theString, const char *cStr, CFStringEncoding encoding);

extern
void CFStringAppendFormat(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, ...) __attribute__((format(CFString, 3, 4)));

extern
void CFStringAppendFormatAndArguments(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments) __attribute__((format(CFString, 3, 0)));

extern
void CFStringInsert(CFMutableStringRef str, CFIndex idx, CFStringRef insertedStr);

extern
void CFStringDelete(CFMutableStringRef theString, CFRange range);

extern
void CFStringReplace(CFMutableStringRef theString, CFRange range, CFStringRef replacement);

extern
void CFStringReplaceAll(CFMutableStringRef theString, CFStringRef replacement);
# 593 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
CFIndex CFStringFindAndReplace(CFMutableStringRef theString, CFStringRef stringToFind, CFStringRef replacementString, CFRange rangeToSearch, CFStringCompareFlags compareOptions);
# 604 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
void CFStringSetExternalCharactersNoCopy(CFMutableStringRef theString, UniChar *chars, CFIndex length, CFIndex capacity);
# 618 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
void CFStringPad(CFMutableStringRef theString, CFStringRef padString, CFIndex length, CFIndex indexIntoPad);

extern
void CFStringTrim(CFMutableStringRef theString, CFStringRef trimString);

extern
void CFStringTrimWhitespace(CFMutableStringRef theString);

extern
void CFStringLowercase(CFMutableStringRef theString, CFLocaleRef locale);

extern
void CFStringUppercase(CFMutableStringRef theString, CFLocaleRef locale);

extern
void CFStringCapitalize(CFMutableStringRef theString, CFLocaleRef locale);







typedef enum CFStringNormalizationForm : CFIndex CFStringNormalizationForm; enum CFStringNormalizationForm : CFIndex {
 kCFStringNormalizationFormD = 0,
 kCFStringNormalizationFormKD,
 kCFStringNormalizationFormC,
 kCFStringNormalizationFormKC
};
# 660 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern void CFStringNormalize(CFMutableStringRef theString, CFStringNormalizationForm theForm);
# 687 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
void CFStringFold(CFMutableStringRef theString, CFStringCompareFlags theFlags, CFLocaleRef theLocale) __attribute__((availability(ios,introduced=2_0)));





extern
Boolean CFStringTransform(CFMutableStringRef string, CFRange *range, CFStringRef transform, Boolean reverse);



extern const CFStringRef kCFStringTransformStripCombiningMarks;
extern const CFStringRef kCFStringTransformToLatin;
extern const CFStringRef kCFStringTransformFullwidthHalfwidth;
extern const CFStringRef kCFStringTransformLatinKatakana;
extern const CFStringRef kCFStringTransformLatinHiragana;
extern const CFStringRef kCFStringTransformHiraganaKatakana;
extern const CFStringRef kCFStringTransformMandarinLatin;
extern const CFStringRef kCFStringTransformLatinHangul;
extern const CFStringRef kCFStringTransformLatinArabic;
extern const CFStringRef kCFStringTransformLatinHebrew;
extern const CFStringRef kCFStringTransformLatinThai;
extern const CFStringRef kCFStringTransformLatinCyrillic;
extern const CFStringRef kCFStringTransformLatinGreek;
extern const CFStringRef kCFStringTransformToXMLHex;
extern const CFStringRef kCFStringTransformToUnicodeName;
extern const CFStringRef kCFStringTransformStripDiacritics __attribute__((availability(ios,introduced=2_0)));






extern
Boolean CFStringIsEncodingAvailable(CFStringEncoding encoding);



extern
const CFStringEncoding *CFStringGetListOfAvailableEncodings(void);



extern
CFStringRef CFStringGetNameOfEncoding(CFStringEncoding encoding);



extern
unsigned long CFStringConvertEncodingToNSStringEncoding(CFStringEncoding encoding);

extern
CFStringEncoding CFStringConvertNSStringEncodingToEncoding(unsigned long encoding);



extern
UInt32 CFStringConvertEncodingToWindowsCodepage(CFStringEncoding encoding);

extern
CFStringEncoding CFStringConvertWindowsCodepageToEncoding(UInt32 codepage);



extern
CFStringEncoding CFStringConvertIANACharSetNameToEncoding(CFStringRef theString);

extern
CFStringRef CFStringConvertEncodingToIANACharSetName(CFStringEncoding encoding);





extern
CFStringEncoding CFStringGetMostCompatibleMacStringEncoding(CFStringEncoding encoding);
# 777 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
typedef struct {
    UniChar buffer[64];
    CFStringRef theString;
    const UniChar *directUniCharBuffer;
    const char *directCStringBuffer;
    CFRange rangeToBuffer;
    CFIndex bufferedRangeStart;
    CFIndex bufferedRangeEnd;
} CFStringInlineBuffer;


static __inline__ __attribute__((always_inline)) void CFStringInitInlineBuffer(CFStringRef str, CFStringInlineBuffer *buf, CFRange range) {
    buf->theString = str;
    buf->rangeToBuffer = range;
    buf->directCStringBuffer = (buf->directUniCharBuffer = CFStringGetCharactersPtr(str)) ? ((void*)0) : CFStringGetCStringPtr(str, kCFStringEncodingASCII);
    buf->bufferedRangeStart = buf->bufferedRangeEnd = 0;
}

static __inline__ __attribute__((always_inline)) UniChar CFStringGetCharacterFromInlineBuffer(CFStringInlineBuffer *buf, CFIndex idx) {
    if (idx < 0 || idx >= buf->rangeToBuffer.length) return 0;
    if (buf->directUniCharBuffer) return buf->directUniCharBuffer[idx + buf->rangeToBuffer.location];
    if (buf->directCStringBuffer) return (UniChar)(buf->directCStringBuffer[idx + buf->rangeToBuffer.location]);
    if (idx >= buf->bufferedRangeEnd || idx < buf->bufferedRangeStart) {
 if ((buf->bufferedRangeStart = idx - 4) < 0) buf->bufferedRangeStart = 0;
 buf->bufferedRangeEnd = buf->bufferedRangeStart + 64;
 if (buf->bufferedRangeEnd > buf->rangeToBuffer.length) buf->bufferedRangeEnd = buf->rangeToBuffer.length;
 CFStringGetCharacters(buf->theString, CFRangeMake(buf->rangeToBuffer.location + buf->bufferedRangeStart, buf->bufferedRangeEnd - buf->bufferedRangeStart), buf->buffer);
    }
    return buf->buffer[idx - buf->bufferedRangeStart];
}
# 823 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
static __inline__ __attribute__((always_inline)) Boolean CFStringIsSurrogateHighCharacter(UniChar character) {
    return ((character >= 0xD800UL) && (character <= 0xDBFFUL) ? 1 : 0);
}

static __inline__ __attribute__((always_inline)) Boolean CFStringIsSurrogateLowCharacter(UniChar character) {
    return ((character >= 0xDC00UL) && (character <= 0xDFFFUL) ? 1 : 0);
}

static __inline__ __attribute__((always_inline)) UTF32Char CFStringGetLongCharacterForSurrogatePair(UniChar surrogateHigh, UniChar surrogateLow) {
    return (UTF32Char)(((surrogateHigh - 0xD800UL) << 10) + (surrogateLow - 0xDC00UL) + 0x0010000UL);
}


static __inline__ __attribute__((always_inline)) Boolean CFStringGetSurrogatePairForLongCharacter(UTF32Char character, UniChar *surrogates) {
    if ((character > 0xFFFFUL) && (character < 0x110000UL)) {
        character -= 0x10000;
        if (((void*)0) != surrogates) {
            surrogates[0] = (UniChar)((character >> 10) + 0xD800UL);
            surrogates[1] = (UniChar)((character & 0x3FF) + 0xDC00UL);
        }
        return 1;
    } else {
        if (((void*)0) != surrogates) *surrogates = (UniChar)character;
        return 0;
    }
}







extern
void CFShow(CFTypeRef obj);

extern
void CFShowStr(CFStringRef str);


extern
CFStringRef __CFStringMakeConstantString(const char *cStr) __attribute__((format_arg(1)));
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTimeZone.h" 2 3






extern
CFTypeID CFTimeZoneGetTypeID(void);

extern
CFTimeZoneRef CFTimeZoneCopySystem(void);

extern
void CFTimeZoneResetSystem(void);

extern
CFTimeZoneRef CFTimeZoneCopyDefault(void);

extern
void CFTimeZoneSetDefault(CFTimeZoneRef tz);

extern
CFArrayRef CFTimeZoneCopyKnownNames(void);

extern
CFDictionaryRef CFTimeZoneCopyAbbreviationDictionary(void);

extern
void CFTimeZoneSetAbbreviationDictionary(CFDictionaryRef dict);

extern
CFTimeZoneRef CFTimeZoneCreate(CFAllocatorRef allocator, CFStringRef name, CFDataRef data);

extern
CFTimeZoneRef CFTimeZoneCreateWithTimeIntervalFromGMT(CFAllocatorRef allocator, CFTimeInterval ti);

extern
CFTimeZoneRef CFTimeZoneCreateWithName(CFAllocatorRef allocator, CFStringRef name, Boolean tryAbbrev);

extern
CFStringRef CFTimeZoneGetName(CFTimeZoneRef tz);

extern
CFDataRef CFTimeZoneGetData(CFTimeZoneRef tz);

extern
CFTimeInterval CFTimeZoneGetSecondsFromGMT(CFTimeZoneRef tz, CFAbsoluteTime at);

extern
CFStringRef CFTimeZoneCopyAbbreviation(CFTimeZoneRef tz, CFAbsoluteTime at);

extern
Boolean CFTimeZoneIsDaylightSavingTime(CFTimeZoneRef tz, CFAbsoluteTime at);

extern
CFTimeInterval CFTimeZoneGetDaylightSavingTimeOffset(CFTimeZoneRef tz, CFAbsoluteTime at) __attribute__((availability(ios,introduced=2_0)));

extern
CFAbsoluteTime CFTimeZoneGetNextDaylightSavingTimeTransition(CFTimeZoneRef tz, CFAbsoluteTime at) __attribute__((availability(ios,introduced=2_0)));

typedef enum CFTimeZoneNameStyle : CFIndex CFTimeZoneNameStyle; enum CFTimeZoneNameStyle : CFIndex {
 kCFTimeZoneNameStyleStandard,
 kCFTimeZoneNameStyleShortStandard,
 kCFTimeZoneNameStyleDaylightSaving,
 kCFTimeZoneNameStyleShortDaylightSaving,
 kCFTimeZoneNameStyleGeneric,
 kCFTimeZoneNameStyleShortGeneric
} __attribute__((availability(ios,introduced=2_0)));

extern
CFStringRef CFTimeZoneCopyLocalizedName(CFTimeZoneRef tz, CFTimeZoneNameStyle style, CFLocaleRef locale) __attribute__((availability(ios,introduced=2_0)));

extern
const CFNotificationName kCFTimeZoneSystemTimeZoneDidChangeNotification __attribute__((availability(ios,introduced=2_0)));
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCalendar.h" 2 3




typedef struct __attribute__((objc_bridge_mutable(NSCalendar))) __CFCalendar * CFCalendarRef;

extern
CFTypeID CFCalendarGetTypeID(void);

extern
CFCalendarRef CFCalendarCopyCurrent(void);

extern
CFCalendarRef CFCalendarCreateWithIdentifier(CFAllocatorRef allocator, CFCalendarIdentifier identifier);



extern
CFCalendarIdentifier CFCalendarGetIdentifier(CFCalendarRef calendar);


extern
CFLocaleRef CFCalendarCopyLocale(CFCalendarRef calendar);

extern
void CFCalendarSetLocale(CFCalendarRef calendar, CFLocaleRef locale);

extern
CFTimeZoneRef CFCalendarCopyTimeZone(CFCalendarRef calendar);

extern
void CFCalendarSetTimeZone(CFCalendarRef calendar, CFTimeZoneRef tz);

extern
CFIndex CFCalendarGetFirstWeekday(CFCalendarRef calendar);

extern
void CFCalendarSetFirstWeekday(CFCalendarRef calendar, CFIndex wkdy);

extern
CFIndex CFCalendarGetMinimumDaysInFirstWeek(CFCalendarRef calendar);

extern
void CFCalendarSetMinimumDaysInFirstWeek(CFCalendarRef calendar, CFIndex mwd);


typedef enum CFCalendarUnit : CFOptionFlags CFCalendarUnit; enum CFCalendarUnit : CFOptionFlags {
 kCFCalendarUnitEra = (1UL << 1),
 kCFCalendarUnitYear = (1UL << 2),
 kCFCalendarUnitMonth = (1UL << 3),
 kCFCalendarUnitDay = (1UL << 4),
 kCFCalendarUnitHour = (1UL << 5),
 kCFCalendarUnitMinute = (1UL << 6),
 kCFCalendarUnitSecond = (1UL << 7),
 kCFCalendarUnitWeek __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" ))) = (1UL << 8),
 kCFCalendarUnitWeekday = (1UL << 9),
 kCFCalendarUnitWeekdayOrdinal = (1UL << 10),
 kCFCalendarUnitQuarter __attribute__((availability(ios,introduced=4_0))) = (1UL << 11),
 kCFCalendarUnitWeekOfMonth __attribute__((availability(ios,introduced=5_0))) = (1UL << 12),
 kCFCalendarUnitWeekOfYear __attribute__((availability(ios,introduced=5_0))) = (1UL << 13),
 kCFCalendarUnitYearForWeekOfYear __attribute__((availability(ios,introduced=5_0))) = (1UL << 14),
};

extern
CFRange CFCalendarGetMinimumRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit unit);

extern
CFRange CFCalendarGetMaximumRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit unit);

extern
CFRange CFCalendarGetRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit smallerUnit, CFCalendarUnit biggerUnit, CFAbsoluteTime at);

extern
CFIndex CFCalendarGetOrdinalityOfUnit(CFCalendarRef calendar, CFCalendarUnit smallerUnit, CFCalendarUnit biggerUnit, CFAbsoluteTime at);

extern
Boolean CFCalendarGetTimeRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit unit, CFAbsoluteTime at, CFAbsoluteTime *startp, CFTimeInterval *tip) __attribute__((availability(ios,introduced=2_0)));

extern
Boolean CFCalendarComposeAbsoluteTime(CFCalendarRef calendar, CFAbsoluteTime *at, const char *componentDesc, ...);

extern
Boolean CFCalendarDecomposeAbsoluteTime(CFCalendarRef calendar, CFAbsoluteTime at, const char *componentDesc, ...);


enum : CFOptionFlags {
    kCFCalendarComponentsWrap = (1UL << 0)
};

extern
Boolean CFCalendarAddComponents(CFCalendarRef calendar, CFAbsoluteTime *at, CFOptionFlags options, const char *componentDesc, ...);

extern
Boolean CFCalendarGetComponentDifference(CFCalendarRef calendar, CFAbsoluteTime startingAT, CFAbsoluteTime resultAT, CFOptionFlags options, const char *componentDesc, ...);
# 50 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDateFormatter.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDateFormatter.h" 3
typedef CFStringRef CFDateFormatterKey __attribute__((swift_wrapper(enum)));

typedef struct __attribute__((objc_bridge_mutable(id))) __CFDateFormatter *CFDateFormatterRef;



extern
CFStringRef CFDateFormatterCreateDateFormatFromTemplate(CFAllocatorRef allocator, CFStringRef tmplate, CFOptionFlags options, CFLocaleRef locale) __attribute__((availability(ios,introduced=4_0)));


extern
CFTypeID CFDateFormatterGetTypeID(void);
# 40 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDateFormatter.h" 3
typedef enum CFDateFormatterStyle : CFIndex CFDateFormatterStyle; enum CFDateFormatterStyle : CFIndex {
    kCFDateFormatterNoStyle = 0,
    kCFDateFormatterShortStyle = 1,
    kCFDateFormatterMediumStyle = 2,
    kCFDateFormatterLongStyle = 3,
    kCFDateFormatterFullStyle = 4
};

typedef enum CFISO8601DateFormatOptions : CFOptionFlags CFISO8601DateFormatOptions; enum CFISO8601DateFormatOptions : CFOptionFlags {




    kCFISO8601DateFormatWithYear __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 0),
    kCFISO8601DateFormatWithMonth __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 1),

    kCFISO8601DateFormatWithWeekOfYear __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 2),






    kCFISO8601DateFormatWithDay __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 4),

    kCFISO8601DateFormatWithTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 5),
    kCFISO8601DateFormatWithTimeZone __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 6),

    kCFISO8601DateFormatWithSpaceBetweenDateAndTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 7),
    kCFISO8601DateFormatWithDashSeparatorInDate __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 8),
    kCFISO8601DateFormatWithColonSeparatorInTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 9),
    kCFISO8601DateFormatWithColonSeparatorInTimeZone __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 10),

    kCFISO8601DateFormatWithFullDate __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithYear | kCFISO8601DateFormatWithMonth | kCFISO8601DateFormatWithDay | kCFISO8601DateFormatWithDashSeparatorInDate,
    kCFISO8601DateFormatWithFullTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithTime | kCFISO8601DateFormatWithColonSeparatorInTime | kCFISO8601DateFormatWithTimeZone | kCFISO8601DateFormatWithColonSeparatorInTimeZone,

    kCFISO8601DateFormatWithInternetDateTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithFullDate | kCFISO8601DateFormatWithFullTime,
};

extern
CFDateFormatterRef CFDateFormatterCreateISO8601Formatter(CFAllocatorRef allocator, CFISO8601DateFormatOptions formatOptions) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

extern
CFDateFormatterRef CFDateFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);



extern
CFLocaleRef CFDateFormatterGetLocale(CFDateFormatterRef formatter);

extern
CFDateFormatterStyle CFDateFormatterGetDateStyle(CFDateFormatterRef formatter);

extern
CFDateFormatterStyle CFDateFormatterGetTimeStyle(CFDateFormatterRef formatter);


extern
CFStringRef CFDateFormatterGetFormat(CFDateFormatterRef formatter);

extern
void CFDateFormatterSetFormat(CFDateFormatterRef formatter, CFStringRef formatString);







extern
CFStringRef CFDateFormatterCreateStringWithDate(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFDateRef date);

extern
CFStringRef CFDateFormatterCreateStringWithAbsoluteTime(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFAbsoluteTime at);




extern
CFDateRef CFDateFormatterCreateDateFromString(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);

extern
Boolean CFDateFormatterGetAbsoluteTimeFromString(CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep, CFAbsoluteTime *atp);
# 132 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDateFormatter.h" 3
extern
void CFDateFormatterSetProperty(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);

extern
CFTypeRef CFDateFormatterCopyProperty(CFDateFormatterRef formatter, CFDateFormatterKey key);



extern const CFDateFormatterKey kCFDateFormatterIsLenient;
extern const CFDateFormatterKey kCFDateFormatterTimeZone;
extern const CFDateFormatterKey kCFDateFormatterCalendarName;
extern const CFDateFormatterKey kCFDateFormatterDefaultFormat;
extern const CFDateFormatterKey kCFDateFormatterTwoDigitStartDate;
extern const CFDateFormatterKey kCFDateFormatterDefaultDate;
extern const CFDateFormatterKey kCFDateFormatterCalendar;
extern const CFDateFormatterKey kCFDateFormatterEraSymbols;
extern const CFDateFormatterKey kCFDateFormatterMonthSymbols;
extern const CFDateFormatterKey kCFDateFormatterShortMonthSymbols;
extern const CFDateFormatterKey kCFDateFormatterWeekdaySymbols;
extern const CFDateFormatterKey kCFDateFormatterShortWeekdaySymbols;
extern const CFDateFormatterKey kCFDateFormatterAMSymbol;
extern const CFDateFormatterKey kCFDateFormatterPMSymbol;
extern const CFDateFormatterKey kCFDateFormatterLongEraSymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterVeryShortMonthSymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterStandaloneMonthSymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterShortStandaloneMonthSymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterVeryShortStandaloneMonthSymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterVeryShortWeekdaySymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterStandaloneWeekdaySymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterShortStandaloneWeekdaySymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterVeryShortStandaloneWeekdaySymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterQuarterSymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterShortQuarterSymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterStandaloneQuarterSymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterShortStandaloneQuarterSymbols __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterGregorianStartDate __attribute__((availability(ios,introduced=2_0)));
extern const CFDateFormatterKey kCFDateFormatterDoesRelativeDateFormattingKey __attribute__((availability(ios,introduced=4_0)));
# 54 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 1 3
# 39 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
typedef CFStringRef CFErrorDomain __attribute__((swift_wrapper(struct)));





typedef struct __attribute__((objc_bridge(NSError))) __CFError * CFErrorRef;





extern
CFTypeID CFErrorGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));



extern const CFErrorDomain kCFErrorDomainPOSIX __attribute__((availability(ios,introduced=2_0)));
extern const CFErrorDomain kCFErrorDomainOSStatus __attribute__((availability(ios,introduced=2_0)));
extern const CFErrorDomain kCFErrorDomainMach __attribute__((availability(ios,introduced=2_0)));
extern const CFErrorDomain kCFErrorDomainCocoa __attribute__((availability(ios,introduced=2_0)));


extern const CFStringRef kCFErrorLocalizedDescriptionKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFErrorLocalizedFailureReasonKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFErrorLocalizedRecoverySuggestionKey __attribute__((availability(ios,introduced=2_0)));


extern const CFStringRef kCFErrorDescriptionKey __attribute__((availability(ios,introduced=2_0)));


extern const CFStringRef kCFErrorUnderlyingErrorKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFErrorURLKey __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFErrorFilePathKey __attribute__((availability(ios,introduced=5_0)));
# 86 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
extern
CFErrorRef CFErrorCreate(CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, CFDictionaryRef userInfo) __attribute__((availability(ios,introduced=2_0)));
# 101 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
extern
CFErrorRef CFErrorCreateWithUserInfoKeysAndValues(CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, const void *const *userInfoKeys, const void *const *userInfoValues, CFIndex numUserInfoValues) __attribute__((availability(ios,introduced=2_0)));







extern
CFErrorDomain CFErrorGetDomain(CFErrorRef err) __attribute__((availability(ios,introduced=2_0)));







extern
CFIndex CFErrorGetCode(CFErrorRef err) __attribute__((availability(ios,introduced=2_0)));
# 129 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
extern
CFDictionaryRef CFErrorCopyUserInfo(CFErrorRef err) __attribute__((availability(ios,introduced=2_0)));
# 143 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
extern
CFStringRef CFErrorCopyDescription(CFErrorRef err) __attribute__((availability(ios,introduced=2_0)));
# 155 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
extern
CFStringRef CFErrorCopyFailureReason(CFErrorRef err) __attribute__((availability(ios,introduced=2_0)));
# 167 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
extern
CFStringRef CFErrorCopyRecoverySuggestion(CFErrorRef err) __attribute__((availability(ios,introduced=2_0)));
# 56 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumber.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumber.h" 3
typedef const struct __attribute__((objc_bridge(NSNumber))) __CFBoolean * CFBooleanRef;

extern
const CFBooleanRef kCFBooleanTrue;
extern
const CFBooleanRef kCFBooleanFalse;

extern
CFTypeID CFBooleanGetTypeID(void);

extern
Boolean CFBooleanGetValue(CFBooleanRef boolean);

typedef enum CFNumberType : CFIndex CFNumberType; enum CFNumberType : CFIndex {

    kCFNumberSInt8Type = 1,
    kCFNumberSInt16Type = 2,
    kCFNumberSInt32Type = 3,
    kCFNumberSInt64Type = 4,
    kCFNumberFloat32Type = 5,
    kCFNumberFloat64Type = 6,

    kCFNumberCharType = 7,
    kCFNumberShortType = 8,
    kCFNumberIntType = 9,
    kCFNumberLongType = 10,
    kCFNumberLongLongType = 11,
    kCFNumberFloatType = 12,
    kCFNumberDoubleType = 13,

    kCFNumberCFIndexType = 14,
    kCFNumberNSIntegerType __attribute__((availability(ios,introduced=2_0))) = 15,
    kCFNumberCGFloatType __attribute__((availability(ios,introduced=2_0))) = 16,
    kCFNumberMaxType = 16
};

typedef const struct __attribute__((objc_bridge(NSNumber))) __CFNumber * CFNumberRef;

extern
const CFNumberRef kCFNumberPositiveInfinity;
extern
const CFNumberRef kCFNumberNegativeInfinity;
extern
const CFNumberRef kCFNumberNaN;

extern
CFTypeID CFNumberGetTypeID(void);
# 68 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumber.h" 3
extern
CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);





extern
CFNumberType CFNumberGetType(CFNumberRef number);




extern
CFIndex CFNumberGetByteSize(CFNumberRef number);





extern
Boolean CFNumberIsFloatType(CFNumberRef number);
# 99 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumber.h" 3
extern
Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr);
# 117 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumber.h" 3
extern
CFComparisonResult CFNumberCompare(CFNumberRef number, CFNumberRef otherNumber, void *context);
# 58 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumberFormatter.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumberFormatter.h" 3
typedef CFStringRef CFNumberFormatterKey __attribute__((swift_wrapper(enum)));

typedef struct __attribute__((objc_bridge_mutable(id))) __CFNumberFormatter *CFNumberFormatterRef;



extern
CFTypeID CFNumberFormatterGetTypeID(void);

typedef enum CFNumberFormatterStyle : CFIndex CFNumberFormatterStyle; enum CFNumberFormatterStyle : CFIndex {
 kCFNumberFormatterNoStyle = 0,
 kCFNumberFormatterDecimalStyle = 1,
 kCFNumberFormatterCurrencyStyle = 2,
 kCFNumberFormatterPercentStyle = 3,
 kCFNumberFormatterScientificStyle = 4,
 kCFNumberFormatterSpellOutStyle = 5,
 kCFNumberFormatterOrdinalStyle __attribute__((availability(ios,introduced=9_0))) = 6,
 kCFNumberFormatterCurrencyISOCodeStyle __attribute__((availability(ios,introduced=9_0))) = 8,
 kCFNumberFormatterCurrencyPluralStyle __attribute__((availability(ios,introduced=9_0))) = 9,
 kCFNumberFormatterCurrencyAccountingStyle __attribute__((availability(ios,introduced=9_0))) = 10,
};


extern
CFNumberFormatterRef CFNumberFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFNumberFormatterStyle style);



extern
CFLocaleRef CFNumberFormatterGetLocale(CFNumberFormatterRef formatter);

extern
CFNumberFormatterStyle CFNumberFormatterGetStyle(CFNumberFormatterRef formatter);


extern
CFStringRef CFNumberFormatterGetFormat(CFNumberFormatterRef formatter);

extern
void CFNumberFormatterSetFormat(CFNumberFormatterRef formatter, CFStringRef formatString);
# 63 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumberFormatter.h" 3
extern
CFStringRef CFNumberFormatterCreateStringWithNumber(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFNumberRef number);

extern
CFStringRef CFNumberFormatterCreateStringWithValue(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFNumberType numberType, const void *valuePtr);




typedef enum CFNumberFormatterOptionFlags : CFOptionFlags CFNumberFormatterOptionFlags; enum CFNumberFormatterOptionFlags : CFOptionFlags {
    kCFNumberFormatterParseIntegersOnly = 1
};

extern
CFNumberRef CFNumberFormatterCreateNumberFromString(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFStringRef string, CFRange *rangep, CFOptionFlags options);

extern
Boolean CFNumberFormatterGetValueFromString(CFNumberFormatterRef formatter, CFStringRef string, CFRange *rangep, CFNumberType numberType, void *valuePtr);
# 92 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumberFormatter.h" 3
extern
void CFNumberFormatterSetProperty(CFNumberFormatterRef formatter, CFNumberFormatterKey key, CFTypeRef value);

extern
CFTypeRef CFNumberFormatterCopyProperty(CFNumberFormatterRef formatter, CFNumberFormatterKey key);



extern const CFNumberFormatterKey kCFNumberFormatterCurrencyCode;
extern const CFNumberFormatterKey kCFNumberFormatterDecimalSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterCurrencyDecimalSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterAlwaysShowDecimalSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterGroupingSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterUseGroupingSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterPercentSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterZeroSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterNaNSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterInfinitySymbol;
extern const CFNumberFormatterKey kCFNumberFormatterMinusSign;
extern const CFNumberFormatterKey kCFNumberFormatterPlusSign;
extern const CFNumberFormatterKey kCFNumberFormatterCurrencySymbol;
extern const CFNumberFormatterKey kCFNumberFormatterExponentSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterMinIntegerDigits;
extern const CFNumberFormatterKey kCFNumberFormatterMaxIntegerDigits;
extern const CFNumberFormatterKey kCFNumberFormatterMinFractionDigits;
extern const CFNumberFormatterKey kCFNumberFormatterMaxFractionDigits;
extern const CFNumberFormatterKey kCFNumberFormatterGroupingSize;
extern const CFNumberFormatterKey kCFNumberFormatterSecondaryGroupingSize;
extern const CFNumberFormatterKey kCFNumberFormatterRoundingMode;
extern const CFNumberFormatterKey kCFNumberFormatterRoundingIncrement;
extern const CFNumberFormatterKey kCFNumberFormatterFormatWidth;
extern const CFNumberFormatterKey kCFNumberFormatterPaddingPosition;
extern const CFNumberFormatterKey kCFNumberFormatterPaddingCharacter;
extern const CFNumberFormatterKey kCFNumberFormatterDefaultFormat;
extern const CFNumberFormatterKey kCFNumberFormatterMultiplier;
extern const CFNumberFormatterKey kCFNumberFormatterPositivePrefix;
extern const CFNumberFormatterKey kCFNumberFormatterPositiveSuffix;
extern const CFNumberFormatterKey kCFNumberFormatterNegativePrefix;
extern const CFNumberFormatterKey kCFNumberFormatterNegativeSuffix;
extern const CFNumberFormatterKey kCFNumberFormatterPerMillSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterInternationalCurrencySymbol;
extern const CFNumberFormatterKey kCFNumberFormatterCurrencyGroupingSeparator __attribute__((availability(ios,introduced=2_0)));
extern const CFNumberFormatterKey kCFNumberFormatterIsLenient __attribute__((availability(ios,introduced=2_0)));
extern const CFNumberFormatterKey kCFNumberFormatterUseSignificantDigits __attribute__((availability(ios,introduced=2_0)));
extern const CFNumberFormatterKey kCFNumberFormatterMinSignificantDigits __attribute__((availability(ios,introduced=2_0)));
extern const CFNumberFormatterKey kCFNumberFormatterMaxSignificantDigits __attribute__((availability(ios,introduced=2_0)));

typedef enum CFNumberFormatterRoundingMode : CFIndex CFNumberFormatterRoundingMode; enum CFNumberFormatterRoundingMode : CFIndex {
    kCFNumberFormatterRoundCeiling = 0,
    kCFNumberFormatterRoundFloor = 1,
    kCFNumberFormatterRoundDown = 2,
    kCFNumberFormatterRoundUp = 3,
    kCFNumberFormatterRoundHalfEven = 4,
    kCFNumberFormatterRoundHalfDown = 5,
    kCFNumberFormatterRoundHalfUp = 6
};

typedef enum CFNumberFormatterPadPosition : CFIndex CFNumberFormatterPadPosition; enum CFNumberFormatterPadPosition : CFIndex {
    kCFNumberFormatterPadBeforePrefix = 0,
    kCFNumberFormatterPadAfterPrefix = 1,
    kCFNumberFormatterPadBeforeSuffix = 2,
    kCFNumberFormatterPadAfterSuffix = 3
};


extern
Boolean CFNumberFormatterGetDecimalInfoForCurrencyCode(CFStringRef currencyCode, int32_t *defaultFractionDigits, double *roundingIncrement);
# 59 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPreferences.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPreferences.h" 3
extern
const CFStringRef kCFPreferencesAnyApplication;
extern
const CFStringRef kCFPreferencesCurrentApplication;
extern
const CFStringRef kCFPreferencesAnyHost;
extern
const CFStringRef kCFPreferencesCurrentHost;
extern
const CFStringRef kCFPreferencesAnyUser;
extern
const CFStringRef kCFPreferencesCurrentUser;
# 43 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPreferences.h" 3
extern
_Nullable CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID);




extern
Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean * _Nullable keyExistsAndHasValidFormat);




extern
CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean * _Nullable keyExistsAndHasValidFormat);




extern
void CFPreferencesSetAppValue(CFStringRef key, _Nullable CFPropertyListRef value, CFStringRef applicationID);





extern
void CFPreferencesAddSuitePreferencesToApp(CFStringRef applicationID, CFStringRef suiteID);

extern
void CFPreferencesRemoveSuitePreferencesFromApp(CFStringRef applicationID, CFStringRef suiteID);



extern
Boolean CFPreferencesAppSynchronize(CFStringRef applicationID);





extern
_Nullable CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);





extern
CFDictionaryRef CFPreferencesCopyMultiple(_Nullable CFArrayRef keysToFetch, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);



extern
void CFPreferencesSetValue(CFStringRef key, _Nullable CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);



extern
void CFPreferencesSetMultiple(_Nullable CFDictionaryRef keysToSet, _Nullable CFArrayRef keysToRemove, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);

extern
Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);





extern
_Nullable CFArrayRef CFPreferencesCopyApplicationList(CFStringRef userName, CFStringRef hostName) __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" )));




extern
_Nullable CFArrayRef CFPreferencesCopyKeyList(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);







extern
Boolean CFPreferencesAppValueIsForced(CFStringRef key, CFStringRef applicationID);
# 60 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
typedef enum CFURLPathStyle : CFIndex CFURLPathStyle; enum CFURLPathStyle : CFIndex {
    kCFURLPOSIXPathStyle = 0,
    kCFURLHFSPathStyle __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" ))),
    kCFURLWindowsPathStyle
};

typedef const struct __attribute__((objc_bridge(NSURL))) __CFURL * CFURLRef;
# 38 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFTypeID CFURLGetTypeID(void);
# 48 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFURLRef CFURLCreateWithBytes(CFAllocatorRef allocator, const UInt8 *URLBytes, CFIndex length, CFStringEncoding encoding, CFURLRef baseURL);





extern
CFDataRef CFURLCreateData(CFAllocatorRef allocator, CFURLRef url, CFStringEncoding encoding, Boolean escapeWhitespace);


extern
CFURLRef CFURLCreateWithString(CFAllocatorRef allocator, CFStringRef URLString, CFURLRef baseURL);
# 78 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFURLRef CFURLCreateAbsoluteURLWithBytes(CFAllocatorRef alloc, const UInt8 *relativeURLBytes, CFIndex length, CFStringEncoding encoding, CFURLRef baseURL, Boolean useCompatibilityMode);







extern
CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory);

extern
CFURLRef CFURLCreateFromFileSystemRepresentation(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);







extern
CFURLRef CFURLCreateWithFileSystemPathRelativeToBase(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);

extern
CFURLRef CFURLCreateFromFileSystemRepresentationRelativeToBase(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory, CFURLRef baseURL);
# 112 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLGetFileSystemRepresentation(CFURLRef url, Boolean resolveAgainstBase, UInt8 *buffer, CFIndex maxBufLen);


extern
CFURLRef CFURLCopyAbsoluteURL(CFURLRef relativeURL);


extern
CFStringRef CFURLGetString(CFURLRef anURL);


extern
CFURLRef CFURLGetBaseURL(CFURLRef anURL);
# 187 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLCanBeDecomposed(CFURLRef anURL);

extern
CFStringRef CFURLCopyScheme(CFURLRef anURL);


extern
CFStringRef CFURLCopyNetLocation(CFURLRef anURL);
# 206 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFStringRef CFURLCopyPath(CFURLRef anURL);


extern
CFStringRef CFURLCopyStrictPath(CFURLRef anURL, Boolean *isAbsolute);




extern
CFStringRef CFURLCopyFileSystemPath(CFURLRef anURL, CFURLPathStyle pathStyle);



extern
Boolean CFURLHasDirectoryPath(CFURLRef anURL);




extern
CFStringRef CFURLCopyResourceSpecifier(CFURLRef anURL);


extern
CFStringRef CFURLCopyHostName(CFURLRef anURL);

extern
SInt32 CFURLGetPortNumber(CFURLRef anURL);


extern
CFStringRef CFURLCopyUserName(CFURLRef anURL);


extern
CFStringRef CFURLCopyPassword(CFURLRef anURL);







extern
CFStringRef CFURLCopyParameterString(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);

extern
CFStringRef CFURLCopyQueryString(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);

extern
CFStringRef CFURLCopyFragment(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);


extern
CFStringRef CFURLCopyLastPathComponent(CFURLRef url);


extern
CFStringRef CFURLCopyPathExtension(CFURLRef url);

extern
CFURLRef CFURLCreateCopyAppendingPathComponent(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);

extern
CFURLRef CFURLCreateCopyDeletingLastPathComponent(CFAllocatorRef allocator, CFURLRef url);

extern
CFURLRef CFURLCreateCopyAppendingPathExtension(CFAllocatorRef allocator, CFURLRef url, CFStringRef extension);

extern
CFURLRef CFURLCreateCopyDeletingPathExtension(CFAllocatorRef allocator, CFURLRef url);







extern
CFIndex CFURLGetBytes(CFURLRef url, UInt8 *buffer, CFIndex bufferLength);

typedef enum CFURLComponentType : CFIndex CFURLComponentType; enum CFURLComponentType : CFIndex {
 kCFURLComponentScheme = 1,
 kCFURLComponentNetLocation = 2,
 kCFURLComponentPath = 3,
 kCFURLComponentResourceSpecifier = 4,

 kCFURLComponentUser = 5,
 kCFURLComponentPassword = 6,
 kCFURLComponentUserInfo = 7,
 kCFURLComponentHost = 8,
 kCFURLComponentPort = 9,
 kCFURLComponentParameterString = 10,
 kCFURLComponentQuery = 11,
 kCFURLComponentFragment = 12
};
# 368 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFRange CFURLGetByteRangeForComponent(CFURLRef url, CFURLComponentType component, CFRange *rangeIncludingSeparators);
# 378 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFStringRef CFURLCreateStringByReplacingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveEscaped);


extern
CFStringRef CFURLCreateStringByReplacingPercentEscapesUsingEncoding(CFAllocatorRef allocator, CFStringRef origString, CFStringRef charsToLeaveEscaped, CFStringEncoding encoding) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding.")));
# 397 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFStringRef CFURLCreateStringByAddingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveUnescaped, CFStringRef legalURLCharactersToBeEscaped, CFStringEncoding encoding) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid).")));
# 413 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLIsFileReferenceURL(CFURLRef url) __attribute__((availability(ios,introduced=7_0)));
# 436 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFURLRef CFURLCreateFileReferenceURL(CFAllocatorRef allocator, CFURLRef url, CFErrorRef *error) __attribute__((availability(ios,introduced=4_0)));
# 460 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFURLRef CFURLCreateFilePathURL(CFAllocatorRef allocator, CFURLRef url, CFErrorRef *error) __attribute__((availability(ios,introduced=4_0)));







struct FSRef;



extern
CFURLRef CFURLCreateFromFSRef(CFAllocatorRef allocator, const struct FSRef *fsRef) __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" )));

extern
Boolean CFURLGetFSRef(CFURLRef url, struct FSRef *fsRef) __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" )));
# 518 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLCopyResourcePropertyForKey(CFURLRef url, CFStringRef key, void *propertyValueTypeRefPtr, CFErrorRef *error) __attribute__((availability(ios,introduced=4_0)));
# 542 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFDictionaryRef CFURLCopyResourcePropertiesForKeys(CFURLRef url, CFArrayRef keys, CFErrorRef *error) __attribute__((availability(ios,introduced=4_0)));
# 568 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLSetResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertyValue, CFErrorRef *error) __attribute__((availability(ios,introduced=4_0)));
# 592 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLSetResourcePropertiesForKeys(CFURLRef url, CFDictionaryRef keyedPropertyValues, CFErrorRef *error) __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLKeysOfUnsetValuesKey __attribute__((availability(ios,introduced=5_0)));
# 616 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
void CFURLClearResourcePropertyCacheForKey(CFURLRef url, CFStringRef key) __attribute__((availability(ios,introduced=4_0)));
# 633 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
void CFURLClearResourcePropertyCache(CFURLRef url) __attribute__((availability(ios,introduced=4_0)));
# 654 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
void CFURLSetTemporaryResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertyValue) __attribute__((availability(ios,introduced=4_0)));
# 676 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLResourceIsReachable(CFURLRef url, CFErrorRef *error) __attribute__((availability(ios,introduced=4_0)));






extern
const CFStringRef kCFURLNameKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLLocalizedNameKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLIsRegularFileKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLIsDirectoryKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLIsSymbolicLinkKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLIsVolumeKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLIsPackageKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLIsApplicationKey __attribute__((availability(ios,introduced=9_0)));


extern
const CFStringRef kCFURLApplicationIsScriptableKey __attribute__((availability(ios,introduced=NA)));


extern
const CFStringRef kCFURLIsSystemImmutableKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLIsUserImmutableKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLIsHiddenKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLHasHiddenExtensionKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLCreationDateKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLContentAccessDateKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLContentModificationDateKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLAttributeModificationDateKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLLinkCountKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLParentDirectoryURLKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeURLKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLTypeIdentifierKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLLocalizedTypeDescriptionKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLLabelNumberKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLLabelColorKey __attribute__((availability(macosx,introduced=10.6,deprecated=10.12,message="Use NSURLLabelColorKey"))) __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use NSURLLabelColorKey"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Use NSURLLabelColorKey"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Use NSURLLabelColorKey")));


extern
const CFStringRef kCFURLLocalizedLabelKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLEffectiveIconKey __attribute__((availability(macosx,introduced=10.6,deprecated=10.12,message="Use NSURLEffectiveIconKey"))) __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use NSURLEffectiveIconKey"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Use NSURLEffectiveIconKey"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Use NSURLEffectiveIconKey")));


extern
const CFStringRef kCFURLCustomIconKey __attribute__((availability(macosx,introduced=10.6,deprecated=10.12,message="Use NSURLCustomIconKey"))) __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use NSURLCustomIconKey"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Use NSURLCustomIconKey"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Use NSURLCustomIconKey")));


extern
const CFStringRef kCFURLFileResourceIdentifierKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeIdentifierKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLPreferredIOBlockSizeKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLIsReadableKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLIsWritableKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLIsExecutableKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLFileSecurityKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLIsExcludedFromBackupKey __attribute__((availability(ios,introduced=5_1)));


extern
const CFStringRef kCFURLTagNamesKey __attribute__((availability(ios,introduced=NA)));


extern
const CFStringRef kCFURLPathKey __attribute__((availability(ios,introduced=6_0)));


extern
const CFStringRef kCFURLCanonicalPathKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLIsMountTriggerKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLGenerationIdentifierKey __attribute__((availability(ios,introduced=8_0)));


extern
const CFStringRef kCFURLDocumentIdentifierKey __attribute__((availability(ios,introduced=8_0)));


extern
const CFStringRef kCFURLAddedToDirectoryDateKey __attribute__((availability(ios,introduced=8_0)));


extern
const CFStringRef kCFURLQuarantinePropertiesKey __attribute__((availability(ios,introduced=NA)));


extern
const CFStringRef kCFURLFileResourceTypeKey __attribute__((availability(ios,introduced=5_0)));



extern
const CFStringRef kCFURLFileResourceTypeNamedPipe __attribute__((availability(ios,introduced=5_0)));
extern
const CFStringRef kCFURLFileResourceTypeCharacterSpecial __attribute__((availability(ios,introduced=5_0)));
extern
const CFStringRef kCFURLFileResourceTypeDirectory __attribute__((availability(ios,introduced=5_0)));
extern
const CFStringRef kCFURLFileResourceTypeBlockSpecial __attribute__((availability(ios,introduced=5_0)));
extern
const CFStringRef kCFURLFileResourceTypeRegular __attribute__((availability(ios,introduced=5_0)));
extern
const CFStringRef kCFURLFileResourceTypeSymbolicLink __attribute__((availability(ios,introduced=5_0)));
extern
const CFStringRef kCFURLFileResourceTypeSocket __attribute__((availability(ios,introduced=5_0)));
extern
const CFStringRef kCFURLFileResourceTypeUnknown __attribute__((availability(ios,introduced=5_0)));



extern
const CFStringRef kCFURLFileSizeKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLFileAllocatedSizeKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLTotalFileSizeKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLTotalFileAllocatedSizeKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLIsAliasFileKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLFileProtectionKey __attribute__((availability(ios,introduced=9_0)));



extern
const CFStringRef kCFURLFileProtectionNone __attribute__((availability(ios,introduced=9_0)));

extern
const CFStringRef kCFURLFileProtectionComplete __attribute__((availability(ios,introduced=9_0)));

extern
const CFStringRef kCFURLFileProtectionCompleteUnlessOpen __attribute__((availability(ios,introduced=9_0)));

extern
const CFStringRef kCFURLFileProtectionCompleteUntilFirstUserAuthentication __attribute__((availability(ios,introduced=9_0)));





extern
const CFStringRef kCFURLVolumeLocalizedFormatDescriptionKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeTotalCapacityKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeAvailableCapacityKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeResourceCountKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeSupportsPersistentIDsKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeSupportsSymbolicLinksKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeSupportsHardLinksKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeSupportsJournalingKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeIsJournalingKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeSupportsSparseFilesKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeSupportsZeroRunsKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeSupportsCaseSensitiveNamesKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeSupportsCasePreservedNamesKey __attribute__((availability(ios,introduced=4_0)));


extern
const CFStringRef kCFURLVolumeSupportsRootDirectoryDatesKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeSupportsVolumeSizesKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeSupportsRenamingKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeSupportsAdvisoryFileLockingKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeSupportsExtendedSecurityKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeIsBrowsableKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeMaximumFileSizeKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeIsEjectableKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeIsRemovableKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeIsInternalKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeIsAutomountedKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeIsLocalKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeIsReadOnlyKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeCreationDateKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeURLForRemountingKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeUUIDStringKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeNameKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeLocalizedNameKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLVolumeIsEncryptedKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeIsRootFileSystemKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsCompressionKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsFileCloningKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsSwapRenamingKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsExclusiveRenamingKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));




extern
const CFStringRef kCFURLIsUbiquitousItemKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLUbiquitousItemHasUnresolvedConflictsKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLUbiquitousItemIsDownloadedKey __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use kCFURLUbiquitousItemDownloadingStatusKey instead")));


extern
const CFStringRef kCFURLUbiquitousItemIsDownloadingKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLUbiquitousItemIsUploadedKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLUbiquitousItemIsUploadingKey __attribute__((availability(ios,introduced=5_0)));


extern
const CFStringRef kCFURLUbiquitousItemPercentDownloadedKey __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" "Use NSMetadataQuery and NSMetadataUbiquitousItemPercentDownloadedKey on NSMetadataItem instead")));


extern
const CFStringRef kCFURLUbiquitousItemPercentUploadedKey __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" "Use NSMetadataQuery and NSMetadataUbiquitousItemPercentUploadedKey on NSMetadataItem instead")));


extern
const CFStringRef kCFURLUbiquitousItemDownloadingStatusKey __attribute__((availability(ios,introduced=7_0)));


extern
const CFStringRef kCFURLUbiquitousItemDownloadingErrorKey __attribute__((availability(ios,introduced=7_0)));


extern
const CFStringRef kCFURLUbiquitousItemUploadingErrorKey __attribute__((availability(ios,introduced=7_0)));




extern
const CFStringRef kCFURLUbiquitousItemDownloadingStatusNotDownloaded __attribute__((availability(ios,introduced=7_0)));


extern
const CFStringRef kCFURLUbiquitousItemDownloadingStatusDownloaded __attribute__((availability(ios,introduced=7_0)));


extern
const CFStringRef kCFURLUbiquitousItemDownloadingStatusCurrent __attribute__((availability(ios,introduced=7_0)));



typedef enum CFURLBookmarkCreationOptions : CFOptionFlags CFURLBookmarkCreationOptions; enum CFURLBookmarkCreationOptions : CFOptionFlags {
    kCFURLBookmarkCreationMinimalBookmarkMask = ( 1UL << 9 ),
    kCFURLBookmarkCreationSuitableForBookmarkFile = ( 1UL << 10 ),
    kCFURLBookmarkCreationWithSecurityScope __attribute__((availability(ios,introduced=NA))) = ( 1UL << 11 ),
    kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess __attribute__((availability(ios,introduced=NA))) = ( 1UL << 12 ),


    kCFURLBookmarkCreationPreferFileIDResolutionMask __attribute__((availability(ios,introduced=4_0,deprecated=7_0,message="" "kCFURLBookmarkCreationPreferFileIDResolutionMask does nothing and has no effect on bookmark resolution"))) = ( 1UL << 8 ),
} __attribute__((availability(ios,introduced=4_0)));

typedef enum CFURLBookmarkResolutionOptions : CFOptionFlags CFURLBookmarkResolutionOptions; enum CFURLBookmarkResolutionOptions : CFOptionFlags {
    kCFURLBookmarkResolutionWithoutUIMask = ( 1UL << 8 ),
    kCFURLBookmarkResolutionWithoutMountingMask = ( 1UL << 9 ),
    kCFURLBookmarkResolutionWithSecurityScope __attribute__((availability(ios,introduced=NA))) = ( 1UL << 10 ),

    kCFBookmarkResolutionWithoutUIMask = kCFURLBookmarkResolutionWithoutUIMask,
    kCFBookmarkResolutionWithoutMountingMask = kCFURLBookmarkResolutionWithoutMountingMask,
} __attribute__((availability(ios,introduced=4_0)));

typedef CFOptionFlags CFURLBookmarkFileCreationOptions;





extern
CFDataRef CFURLCreateBookmarkData ( CFAllocatorRef allocator, CFURLRef url, CFURLBookmarkCreationOptions options, CFArrayRef resourcePropertiesToInclude, CFURLRef relativeToURL, CFErrorRef* error ) __attribute__((availability(ios,introduced=4_0)));



extern
CFURLRef CFURLCreateByResolvingBookmarkData ( CFAllocatorRef allocator, CFDataRef bookmark, CFURLBookmarkResolutionOptions options, CFURLRef relativeToURL, CFArrayRef resourcePropertiesToInclude, Boolean* isStale, CFErrorRef* error ) __attribute__((availability(ios,introduced=4_0)));



extern
CFDictionaryRef CFURLCreateResourcePropertiesForKeysFromBookmarkData ( CFAllocatorRef allocator, CFArrayRef resourcePropertiesToReturn, CFDataRef bookmark ) __attribute__((availability(ios,introduced=4_0)));



extern
CFTypeRef CFURLCreateResourcePropertyForKeyFromBookmarkData( CFAllocatorRef allocator, CFStringRef resourcePropertyKey, CFDataRef bookmark ) __attribute__((availability(ios,introduced=4_0)));



extern
CFDataRef CFURLCreateBookmarkDataFromFile(CFAllocatorRef allocator, CFURLRef fileURL, CFErrorRef *errorRef ) __attribute__((availability(ios,introduced=5_0)));



extern
Boolean CFURLWriteBookmarkDataToFile( CFDataRef bookmarkRef, CFURLRef fileURL, CFURLBookmarkFileCreationOptions options, CFErrorRef *errorRef ) __attribute__((availability(ios,introduced=5_0)));



extern
CFDataRef CFURLCreateBookmarkDataFromAliasRecord ( CFAllocatorRef allocatorRef, CFDataRef aliasRecordDataRef ) __attribute__((availability(ios,unavailable)));





extern
Boolean CFURLStartAccessingSecurityScopedResource(CFURLRef url) __attribute__((availability(ios,introduced=8_0)));



extern
void CFURLStopAccessingSecurityScopedResource(CFURLRef url) __attribute__((availability(ios,introduced=8_0)));
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFRunLoop.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFRunLoop.h" 3
# 1 "APPLE_SDKROOT/usr/include/mach/port.h" 1 3 4
# 91 "APPLE_SDKROOT/usr/include/mach/port.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/boolean.h" 1 3 4
# 73 "APPLE_SDKROOT/usr/include/mach/boolean.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/machine/boolean.h" 1 3 4
# 33 "APPLE_SDKROOT/usr/include/mach/machine/boolean.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/i386/boolean.h" 1 3 4
# 69 "APPLE_SDKROOT/usr/include/mach/i386/boolean.h" 3 4
typedef unsigned int boolean_t;
# 34 "APPLE_SDKROOT/usr/include/mach/machine/boolean.h" 2 3 4
# 74 "APPLE_SDKROOT/usr/include/mach/boolean.h" 2 3 4
# 92 "APPLE_SDKROOT/usr/include/mach/port.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/machine/vm_types.h" 1 3 4
# 33 "APPLE_SDKROOT/usr/include/mach/machine/vm_types.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/i386/vm_types.h" 1 3 4
# 73 "APPLE_SDKROOT/usr/include/mach/i386/vm_types.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/i386/vm_param.h" 1 3 4
# 74 "APPLE_SDKROOT/usr/include/mach/i386/vm_types.h" 2 3 4
# 93 "APPLE_SDKROOT/usr/include/mach/i386/vm_types.h" 3 4
typedef __darwin_natural_t natural_t;
typedef int integer_t;






typedef uintptr_t vm_offset_t;
# 112 "APPLE_SDKROOT/usr/include/mach/i386/vm_types.h" 3 4
typedef uintptr_t vm_size_t;
# 124 "APPLE_SDKROOT/usr/include/mach/i386/vm_types.h" 3 4
typedef uint64_t mach_vm_address_t;
typedef uint64_t mach_vm_offset_t;
typedef uint64_t mach_vm_size_t;

typedef uint64_t vm_map_offset_t;
typedef uint64_t vm_map_address_t;
typedef uint64_t vm_map_size_t;

typedef mach_vm_address_t mach_port_context_t;
# 34 "APPLE_SDKROOT/usr/include/mach/machine/vm_types.h" 2 3 4
# 93 "APPLE_SDKROOT/usr/include/mach/port.h" 2 3 4
# 106 "APPLE_SDKROOT/usr/include/mach/port.h" 3 4
typedef natural_t mach_port_name_t;
typedef mach_port_name_t *mach_port_name_array_t;
# 127 "APPLE_SDKROOT/usr/include/mach/port.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_mach_port_t.h" 1 3 4
# 49 "APPLE_SDKROOT/usr/include/sys/_types/_mach_port_t.h" 3 4
typedef __darwin_mach_port_t mach_port_t;
# 128 "APPLE_SDKROOT/usr/include/mach/port.h" 2 3 4


typedef mach_port_t *mach_port_array_t;
# 188 "APPLE_SDKROOT/usr/include/mach/port.h" 3 4
typedef natural_t mach_port_right_t;
# 198 "APPLE_SDKROOT/usr/include/mach/port.h" 3 4
typedef natural_t mach_port_type_t;
typedef mach_port_type_t *mach_port_type_array_t;
# 233 "APPLE_SDKROOT/usr/include/mach/port.h" 3 4
typedef natural_t mach_port_urefs_t;
typedef integer_t mach_port_delta_t;



typedef natural_t mach_port_seqno_t;
typedef natural_t mach_port_mscount_t;
typedef natural_t mach_port_msgcount_t;
typedef natural_t mach_port_rights_t;






typedef unsigned int mach_port_srights_t;

typedef struct mach_port_status {
 mach_port_rights_t mps_pset;
 mach_port_seqno_t mps_seqno;
 mach_port_mscount_t mps_mscount;
 mach_port_msgcount_t mps_qlimit;
 mach_port_msgcount_t mps_msgcount;
 mach_port_rights_t mps_sorights;
 boolean_t mps_srights;
 boolean_t mps_pdrequest;
 boolean_t mps_nsrequest;
 natural_t mps_flags;
} mach_port_status_t;
# 273 "APPLE_SDKROOT/usr/include/mach/port.h" 3 4
typedef struct mach_port_limits {
 mach_port_msgcount_t mpl_qlimit;
} mach_port_limits_t;
# 285 "APPLE_SDKROOT/usr/include/mach/port.h" 3 4
typedef struct mach_port_info_ext {
 mach_port_status_t mpie_status;
 mach_port_msgcount_t mpie_boost_cnt;
 uint32_t reserved[6];
} mach_port_info_ext_t;

typedef integer_t *mach_port_info_t;


typedef int mach_port_flavor_t;
# 314 "APPLE_SDKROOT/usr/include/mach/port.h" 3 4
typedef struct mach_port_qos {
 unsigned int name:1;
 unsigned int prealloc:1;
 boolean_t pad1:30;
 natural_t len;
} mach_port_qos_t;
# 340 "APPLE_SDKROOT/usr/include/mach/port.h" 3 4
typedef struct mach_port_options {
 uint32_t flags;
 mach_port_limits_t mpl;
 uint64_t reserved[2];
}mach_port_options_t;

typedef mach_port_options_t *mach_port_options_ptr_t;
# 356 "APPLE_SDKROOT/usr/include/mach/port.h" 3 4
enum mach_port_guard_exception_codes {
 kGUARD_EXC_DESTROY = 1u << 0,
 kGUARD_EXC_MOD_REFS = 1u << 1,
 kGUARD_EXC_SET_CONTEXT = 1u << 2,
 kGUARD_EXC_UNGUARDED = 1u << 3,
 kGUARD_EXC_INCORRECT_GUARD = 1u << 4
};
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFRunLoop.h" 2 3





typedef CFStringRef CFRunLoopMode __attribute__((swift_wrapper(struct)));

typedef struct __attribute__((objc_bridge_mutable(id))) __CFRunLoop * CFRunLoopRef;

typedef struct __attribute__((objc_bridge_mutable(id))) __CFRunLoopSource * CFRunLoopSourceRef;

typedef struct __attribute__((objc_bridge_mutable(id))) __CFRunLoopObserver * CFRunLoopObserverRef;

typedef struct __attribute__((objc_bridge_mutable(NSTimer))) __CFRunLoopTimer * CFRunLoopTimerRef;


typedef enum CFRunLoopRunResult : SInt32 CFRunLoopRunResult; enum CFRunLoopRunResult : SInt32 {
    kCFRunLoopRunFinished = 1,
    kCFRunLoopRunStopped = 2,
    kCFRunLoopRunTimedOut = 3,
    kCFRunLoopRunHandledSource = 4
};


typedef enum CFRunLoopActivity : CFOptionFlags CFRunLoopActivity; enum CFRunLoopActivity : CFOptionFlags {
    kCFRunLoopEntry = (1UL << 0),
    kCFRunLoopBeforeTimers = (1UL << 1),
    kCFRunLoopBeforeSources = (1UL << 2),
    kCFRunLoopBeforeWaiting = (1UL << 5),
    kCFRunLoopAfterWaiting = (1UL << 6),
    kCFRunLoopExit = (1UL << 7),
    kCFRunLoopAllActivities = 0x0FFFFFFFU
};

extern const CFRunLoopMode kCFRunLoopDefaultMode;
extern const CFRunLoopMode kCFRunLoopCommonModes;

extern CFTypeID CFRunLoopGetTypeID(void);

extern CFRunLoopRef CFRunLoopGetCurrent(void);
extern CFRunLoopRef CFRunLoopGetMain(void);

extern CFRunLoopMode CFRunLoopCopyCurrentMode(CFRunLoopRef rl);

extern CFArrayRef CFRunLoopCopyAllModes(CFRunLoopRef rl);

extern void CFRunLoopAddCommonMode(CFRunLoopRef rl, CFRunLoopMode mode);

extern CFAbsoluteTime CFRunLoopGetNextTimerFireDate(CFRunLoopRef rl, CFRunLoopMode mode);

extern void CFRunLoopRun(void);
extern CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled);
extern Boolean CFRunLoopIsWaiting(CFRunLoopRef rl);
extern void CFRunLoopWakeUp(CFRunLoopRef rl);
extern void CFRunLoopStop(CFRunLoopRef rl);


extern void CFRunLoopPerformBlock(CFRunLoopRef rl, CFTypeRef mode, void (^block)(void)) __attribute__((availability(ios,introduced=4_0)));


extern Boolean CFRunLoopContainsSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode);
extern void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode);
extern void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode);

extern Boolean CFRunLoopContainsObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode);
extern void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode);
extern void CFRunLoopRemoveObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode);

extern Boolean CFRunLoopContainsTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode);
extern void CFRunLoopAddTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode);
extern void CFRunLoopRemoveTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode);

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
    Boolean (*equal)(const void *info1, const void *info2);
    CFHashCode (*hash)(const void *info);
    void (*schedule)(void *info, CFRunLoopRef rl, CFRunLoopMode mode);
    void (*cancel)(void *info, CFRunLoopRef rl, CFRunLoopMode mode);
    void (*perform)(void *info);
} CFRunLoopSourceContext;

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
    Boolean (*equal)(const void *info1, const void *info2);
    CFHashCode (*hash)(const void *info);

    mach_port_t (*getPort)(void *info);
    void * (*perform)(void *msg, CFIndex size, CFAllocatorRef allocator, void *info);




} CFRunLoopSourceContext1;

extern CFTypeID CFRunLoopSourceGetTypeID(void);

extern CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context);

extern CFIndex CFRunLoopSourceGetOrder(CFRunLoopSourceRef source);
extern void CFRunLoopSourceInvalidate(CFRunLoopSourceRef source);
extern Boolean CFRunLoopSourceIsValid(CFRunLoopSourceRef source);
extern void CFRunLoopSourceGetContext(CFRunLoopSourceRef source, CFRunLoopSourceContext *context);
extern void CFRunLoopSourceSignal(CFRunLoopSourceRef source);

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFRunLoopObserverContext;

typedef void (*CFRunLoopObserverCallBack)(CFRunLoopObserverRef observer, CFRunLoopActivity activity, void *info);

extern CFTypeID CFRunLoopObserverGetTypeID(void);

extern CFRunLoopObserverRef CFRunLoopObserverCreate(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, CFRunLoopObserverCallBack callout, CFRunLoopObserverContext *context);

extern CFRunLoopObserverRef CFRunLoopObserverCreateWithHandler(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, void (^block) (CFRunLoopObserverRef observer, CFRunLoopActivity activity)) __attribute__((availability(ios,introduced=5_0)));


extern CFOptionFlags CFRunLoopObserverGetActivities(CFRunLoopObserverRef observer);
extern Boolean CFRunLoopObserverDoesRepeat(CFRunLoopObserverRef observer);
extern CFIndex CFRunLoopObserverGetOrder(CFRunLoopObserverRef observer);
extern void CFRunLoopObserverInvalidate(CFRunLoopObserverRef observer);
extern Boolean CFRunLoopObserverIsValid(CFRunLoopObserverRef observer);
extern void CFRunLoopObserverGetContext(CFRunLoopObserverRef observer, CFRunLoopObserverContext *context);

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFRunLoopTimerContext;

typedef void (*CFRunLoopTimerCallBack)(CFRunLoopTimerRef timer, void *info);

extern CFTypeID CFRunLoopTimerGetTypeID(void);

extern CFRunLoopTimerRef CFRunLoopTimerCreate(CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, CFRunLoopTimerCallBack callout, CFRunLoopTimerContext *context);

extern CFRunLoopTimerRef CFRunLoopTimerCreateWithHandler(CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, void (^block) (CFRunLoopTimerRef timer)) __attribute__((availability(ios,introduced=5_0)));


extern CFAbsoluteTime CFRunLoopTimerGetNextFireDate(CFRunLoopTimerRef timer);
extern void CFRunLoopTimerSetNextFireDate(CFRunLoopTimerRef timer, CFAbsoluteTime fireDate);
extern CFTimeInterval CFRunLoopTimerGetInterval(CFRunLoopTimerRef timer);
extern Boolean CFRunLoopTimerDoesRepeat(CFRunLoopTimerRef timer);
extern CFIndex CFRunLoopTimerGetOrder(CFRunLoopTimerRef timer);
extern void CFRunLoopTimerInvalidate(CFRunLoopTimerRef timer);
extern Boolean CFRunLoopTimerIsValid(CFRunLoopTimerRef timer);
extern void CFRunLoopTimerGetContext(CFRunLoopTimerRef timer, CFRunLoopTimerContext *context);



extern CFTimeInterval CFRunLoopTimerGetTolerance(CFRunLoopTimerRef timer) __attribute__((availability(ios,introduced=7_0)));
extern void CFRunLoopTimerSetTolerance(CFRunLoopTimerRef timer, CFTimeInterval tolerance) __attribute__((availability(ios,introduced=7_0)));
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSocket.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSocket.h" 3
typedef struct __attribute__((objc_bridge_mutable(id))) __CFSocket * CFSocketRef;
# 94 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSocket.h" 3
typedef enum CFSocketError : CFIndex CFSocketError; enum CFSocketError : CFIndex {
    kCFSocketSuccess = 0,
    kCFSocketError = -1L,
    kCFSocketTimeout = -2L
};

typedef struct {
    SInt32 protocolFamily;
    SInt32 socketType;
    SInt32 protocol;
    CFDataRef address;
} CFSocketSignature;


typedef enum CFSocketCallBackType : CFOptionFlags CFSocketCallBackType; enum CFSocketCallBackType : CFOptionFlags {
    kCFSocketNoCallBack = 0,
    kCFSocketReadCallBack = 1,
    kCFSocketAcceptCallBack = 2,
    kCFSocketDataCallBack = 3,
    kCFSocketConnectCallBack = 4,
    kCFSocketWriteCallBack = 8
};


enum : CFOptionFlags {
    kCFSocketAutomaticallyReenableReadCallBack = 1,
    kCFSocketAutomaticallyReenableAcceptCallBack = 2,
    kCFSocketAutomaticallyReenableDataCallBack = 3,
    kCFSocketAutomaticallyReenableWriteCallBack = 8,
    kCFSocketLeaveErrors __attribute__((availability(ios,introduced=2_0))) = 64,
    kCFSocketCloseOnInvalidate = 128
};

typedef void (*CFSocketCallBack)(CFSocketRef s, CFSocketCallBackType type, CFDataRef address, const void *data, void *info);


typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFSocketContext;




typedef int CFSocketNativeHandle;


extern CFTypeID CFSocketGetTypeID(void);

extern CFSocketRef CFSocketCreate(CFAllocatorRef allocator, SInt32 protocolFamily, SInt32 socketType, SInt32 protocol, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);
extern CFSocketRef CFSocketCreateWithNative(CFAllocatorRef allocator, CFSocketNativeHandle sock, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);
extern CFSocketRef CFSocketCreateWithSocketSignature(CFAllocatorRef allocator, const CFSocketSignature *signature, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);

extern CFSocketRef CFSocketCreateConnectedToSocketSignature(CFAllocatorRef allocator, const CFSocketSignature *signature, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context, CFTimeInterval timeout);


extern CFSocketError CFSocketSetAddress(CFSocketRef s, CFDataRef address);
extern CFSocketError CFSocketConnectToAddress(CFSocketRef s, CFDataRef address, CFTimeInterval timeout);
extern void CFSocketInvalidate(CFSocketRef s);

extern Boolean CFSocketIsValid(CFSocketRef s);
extern CFDataRef CFSocketCopyAddress(CFSocketRef s);
extern CFDataRef CFSocketCopyPeerAddress(CFSocketRef s);
extern void CFSocketGetContext(CFSocketRef s, CFSocketContext *context);
extern CFSocketNativeHandle CFSocketGetNative(CFSocketRef s);

extern CFRunLoopSourceRef CFSocketCreateRunLoopSource(CFAllocatorRef allocator, CFSocketRef s, CFIndex order);

extern CFOptionFlags CFSocketGetSocketFlags(CFSocketRef s);
extern void CFSocketSetSocketFlags(CFSocketRef s, CFOptionFlags flags);
extern void CFSocketDisableCallBacks(CFSocketRef s, CFOptionFlags callBackTypes);
extern void CFSocketEnableCallBacks(CFSocketRef s, CFOptionFlags callBackTypes);



extern CFSocketError CFSocketSendData(CFSocketRef s, CFDataRef address, CFDataRef data, CFTimeInterval timeout);
# 191 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSocket.h" 3
extern CFSocketError CFSocketRegisterValue(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFPropertyListRef value);
extern CFSocketError CFSocketCopyRegisteredValue(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFPropertyListRef *value, CFDataRef *nameServerAddress);

extern CFSocketError CFSocketRegisterSocketSignature(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, const CFSocketSignature *signature);
extern CFSocketError CFSocketCopyRegisteredSocketSignature(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFSocketSignature *signature, CFDataRef *nameServerAddress);

extern CFSocketError CFSocketUnregister(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name);

extern void CFSocketSetDefaultNameRegistryPortNumber(UInt16 port);
extern UInt16 CFSocketGetDefaultNameRegistryPortNumber(void);


extern const CFStringRef kCFSocketCommandKey;
extern const CFStringRef kCFSocketNameKey;
extern const CFStringRef kCFSocketValueKey;
extern const CFStringRef kCFSocketResultKey;
extern const CFStringRef kCFSocketErrorKey;
extern const CFStringRef kCFSocketRegisterCommand;
extern const CFStringRef kCFSocketRetrieveCommand;
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 2 3

# 1 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 1 3 4
# 43 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 3 4
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stddef.h" 1 3 4
# 44 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4



# 1 "APPLE_SDKROOT/usr/include/unistd.h" 1 3 4
# 72 "APPLE_SDKROOT/usr/include/unistd.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/unistd.h" 1 3 4
# 84 "APPLE_SDKROOT/usr/include/sys/unistd.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_posix_vdisable.h" 1 3 4
# 85 "APPLE_SDKROOT/usr/include/sys/unistd.h" 2 3 4
# 122 "APPLE_SDKROOT/usr/include/sys/unistd.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_seek_set.h" 1 3 4
# 123 "APPLE_SDKROOT/usr/include/sys/unistd.h" 2 3 4
# 132 "APPLE_SDKROOT/usr/include/sys/unistd.h" 3 4
struct accessx_descriptor {
 unsigned int ad_name_offset;
 int ad_flags;
 int ad_pad[2];
};
# 185 "APPLE_SDKROOT/usr/include/sys/unistd.h" 3 4
int getattrlistbulk(int, void *, void *, size_t, uint64_t) __attribute__((availability(ios,introduced=8.0)));
# 203 "APPLE_SDKROOT/usr/include/sys/unistd.h" 3 4
int faccessat(int, const char *, int, int) __attribute__((availability(ios,introduced=8.0)));
int fchownat(int, const char *, uid_t, gid_t, int) __attribute__((availability(ios,introduced=8.0)));
int linkat(int, const char *, int, const char *, int) __attribute__((availability(ios,introduced=8.0)));
ssize_t readlinkat(int, const char *, char *, size_t) __attribute__((availability(ios,introduced=8.0)));
int symlinkat(const char *, int, const char *) __attribute__((availability(ios,introduced=8.0)));
int unlinkat(int, const char *, int) __attribute__((availability(ios,introduced=8.0)));
int getattrlistat(int, const char *, void *, void *, size_t, unsigned long) __attribute__((availability(ios,introduced=8.0)));
# 73 "APPLE_SDKROOT/usr/include/unistd.h" 2 3 4
# 429 "APPLE_SDKROOT/usr/include/unistd.h" 3 4
void _exit(int) __attribute__((noreturn));
int access(const char *, int);
unsigned int
  alarm(unsigned int);
int chdir(const char *);
int chown(const char *, uid_t, gid_t);

int close(int) __asm("_" "close" );

int dup(int);
int dup2(int, int);
int execl(const char * __path, const char * __arg0, ...) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execle(const char * __path, const char * __arg0, ...) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execlp(const char * __file, const char * __arg0, ...) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execv(const char * __path, char * const * __argv) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execve(const char * __file, char * const * __argv, char * const * __envp) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execvp(const char * __file, char * const * __argv) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
pid_t fork(void) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
long fpathconf(int, int);
char *getcwd(char *, size_t);
gid_t getegid(void);
uid_t geteuid(void);
gid_t getgid(void);



int getgroups(int, gid_t []);

char *getlogin(void);
pid_t getpgrp(void);
pid_t getpid(void);
pid_t getppid(void);
uid_t getuid(void);
int isatty(int);
int link(const char *, const char *);
off_t lseek(int, off_t, int);
long pathconf(const char *, int);

int pause(void) __asm("_" "pause" );

int pipe(int [2]);

ssize_t read(int, void *, size_t) __asm("_" "read" );

int rmdir(const char *);
int setgid(gid_t);
int setpgid(pid_t, pid_t);
pid_t setsid(void);
int setuid(uid_t);

unsigned int
  sleep(unsigned int) __asm("_" "sleep" );

long sysconf(int);
pid_t tcgetpgrp(int);
int tcsetpgrp(int, pid_t);
char *ttyname(int);


int ttyname_r(int, char *, size_t) __asm("_" "ttyname_r" );




int unlink(const char *);

ssize_t write(int __fd, const void * __buf, size_t __nbyte) __asm("_" "write" );
# 506 "APPLE_SDKROOT/usr/include/unistd.h" 3 4
size_t confstr(int, char *, size_t) __asm("_" "confstr" );

int getopt(int, char * const [], const char *) __asm("_" "getopt" );

extern char *optarg;
extern int optind, opterr, optopt;
# 536 "APPLE_SDKROOT/usr/include/unistd.h" 3 4
__attribute__((deprecated)) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

void *brk(const void *);
int chroot(const char *) ;


char *crypt(const char *, const char *);






void encrypt(char *, int) __asm("_" "encrypt" );



int fchdir(int);
long gethostid(void);
pid_t getpgid(pid_t);
pid_t getsid(pid_t);



int getdtablesize(void) ;
int getpagesize(void) __attribute__((const)) ;
char *getpass(const char *) ;




char *getwd(char *) ;


int lchown(const char *, uid_t, gid_t) __asm("_" "lchown" );

int lockf(int, int, off_t) __asm("_" "lockf" );

int nice(int) __asm("_" "nice" );

ssize_t pread(int __fd, void * __buf, size_t __nbyte, off_t __offset) __asm("_" "pread" );

ssize_t pwrite(int __fd, const void * __buf, size_t __nbyte, off_t __offset) __asm("_" "pwrite" );






__attribute__((deprecated)) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

void *sbrk(int);



pid_t setpgrp(void) __asm("_" "setpgrp" );




int setregid(gid_t, gid_t) __asm("_" "setregid" );

int setreuid(uid_t, uid_t) __asm("_" "setreuid" );

void swab(const void * restrict, void * restrict, ssize_t);
void sync(void);
int truncate(const char *, off_t);
useconds_t ualarm(useconds_t, useconds_t);
int usleep(useconds_t) __asm("_" "usleep" );
pid_t vfork(void) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


int fsync(int) __asm("_" "fsync" );

int ftruncate(int, off_t);
int getlogin_r(char *, size_t);
# 624 "APPLE_SDKROOT/usr/include/unistd.h" 3 4
int fchown(int, uid_t, gid_t);
int gethostname(char *, size_t);
ssize_t readlink(const char * restrict, char * restrict, size_t);
int setegid(gid_t);
int seteuid(uid_t);
int symlink(const char *, const char *);
# 638 "APPLE_SDKROOT/usr/include/unistd.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/select.h" 1 3 4
# 114 "APPLE_SDKROOT/usr/include/sys/select.h" 3 4
int pselect(int, fd_set * restrict, fd_set * restrict,
  fd_set * restrict, const struct timespec * restrict,
  const sigset_t * restrict)




  __asm("_" "pselect" )




  ;



# 1 "APPLE_SDKROOT/usr/include/sys/_select.h" 1 3 4
# 39 "APPLE_SDKROOT/usr/include/sys/_select.h" 3 4
int select(int, fd_set * restrict, fd_set * restrict,
  fd_set * restrict, struct timeval * restrict)




  __asm("_" "select" )




  ;
# 130 "APPLE_SDKROOT/usr/include/sys/select.h" 2 3 4
# 639 "APPLE_SDKROOT/usr/include/unistd.h" 2 3 4



# 1 "APPLE_SDKROOT/usr/include/sys/_types/_uuid_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_uuid_t.h" 3 4
typedef __darwin_uuid_t uuid_t;
# 643 "APPLE_SDKROOT/usr/include/unistd.h" 2 3 4


void _Exit(int) __attribute__((noreturn));
int accessx_np(const struct accessx_descriptor *, size_t, int *, uid_t);
int acct(const char *);
int add_profil(char *, size_t, unsigned long, unsigned int) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
void endusershell(void);
int execvP(const char * __file, const char * __searchpath, char * const * __argv) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
char *fflagstostr(unsigned long);
int getdomainname(char *, int);
int getgrouplist(const char *, int, int *, int *);





# 1 "APPLE_SDKROOT/usr/include/gethostuuid.h" 1 3 4
# 39 "APPLE_SDKROOT/usr/include/gethostuuid.h" 3 4
int gethostuuid(uuid_t, const struct timespec *) __attribute__((availability(ios,unavailable)));
# 659 "APPLE_SDKROOT/usr/include/unistd.h" 2 3 4




mode_t getmode(const void *, mode_t);
int getpeereid(int, uid_t *, gid_t *);
int getsgroups_np(int *, uuid_t);
char *getusershell(void);
int getwgroups_np(int *, uuid_t);
int initgroups(const char *, int);
int issetugid(void);
char *mkdtemp(char *);
int mknod(const char *, mode_t, dev_t);
int mkpath_np(const char *path, mode_t omode) __attribute__((availability(ios,introduced=5.0)));
int mkpathat_np(int dfd, const char *path, mode_t omode)
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int mkstemp(char *);
int mkstemps(char *, int);
char *mktemp(char *);
int mkostemp(char *path, int oflags)
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int mkostemps(char *path, int slen, int oflags)
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

int mkstemp_dprotected_np(char *path, int dpclass, int dpflags)
  __attribute__((availability(macosx,unavailable))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int nfssvc(int, void *);
int profil(char *, size_t, unsigned long, unsigned int);
int pthread_setugid_np(uid_t, gid_t);
int pthread_getugid_np( uid_t *, gid_t *);
int reboot(int);
int revoke(const char *);

__attribute__((deprecated)) int rcmd(char **, int, const char *, const char *, const char *, int *);
__attribute__((deprecated)) int rcmd_af(char **, int, const char *, const char *, const char *, int *,
  int);
__attribute__((deprecated)) int rresvport(int *);
__attribute__((deprecated)) int rresvport_af(int *, int);
__attribute__((deprecated)) int iruserok(unsigned long, int, const char *, const char *);
__attribute__((deprecated)) int iruserok_sa(const void *, int, int, const char *, const char *);
__attribute__((deprecated)) int ruserok(const char *, int, const char *, const char *);

int setdomainname(const char *, int);
int setgroups(int, const gid_t *);
void sethostid(long);
int sethostname(const char *, int);

void setkey(const char *) __asm("_" "setkey" );



int setlogin(const char *);
void *setmode(const char *) __asm("_" "setmode" );
int setrgid(gid_t);
int setruid(uid_t);
int setsgroups_np(int, const uuid_t);
void setusershell(void);
int setwgroups_np(int, const uuid_t);
int strtofflags(char **, unsigned long *, unsigned long *);
int swapon(const char *);
int ttyslot(void);
int undelete(const char *);
int unwhiteout(const char *);
void *valloc(size_t);

__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
__attribute__((availability(ios,deprecated=10.0,message="syscall(2) is unsupported; " "please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost().")))

__attribute__((availability(macosx,deprecated=10.12,message="syscall(2) is unsupported; " "please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost().")))

int syscall(int, ...);

extern char *suboptarg;
int getsubopt(char **, char * const *, char **);



int fgetattrlist(int,void*,void*,size_t,unsigned int) __attribute__((availability(ios,introduced=3.0)));
int fsetattrlist(int,void*,void*,size_t,unsigned int) __attribute__((availability(ios,introduced=3.0)));
int getattrlist(const char*,void*,void*,size_t,unsigned int) __asm("_" "getattrlist" );
int setattrlist(const char*,void*,void*,size_t,unsigned int) __asm("_" "setattrlist" );
int exchangedata(const char*,const char*,unsigned int) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int getdirentriesattr(int,void*,void*,size_t,unsigned int*,unsigned int*,unsigned int*,unsigned int) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
# 757 "APPLE_SDKROOT/usr/include/unistd.h" 3 4
struct fssearchblock;
struct searchstate;

int searchfs(const char *, struct fssearchblock *, unsigned long *, unsigned int, unsigned int, struct searchstate *) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int fsctl(const char *,unsigned long,void*,unsigned int);
int ffsctl(int,unsigned long,void*,unsigned int) __attribute__((availability(ios,introduced=3.0)));




int fsync_volume_np(int, int) __attribute__((availability(ios,introduced=6.0)));
int sync_volume_np(const char *, int) __attribute__((availability(ios,introduced=6.0)));

extern int optreset;
# 48 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/fcntl.h" 1 3 4
# 23 "APPLE_SDKROOT/usr/include/fcntl.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 1 3 4
# 116 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_o_sync.h" 1 3 4
# 117 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 2 3 4
# 157 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_o_dsync.h" 1 3 4
# 158 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 2 3 4
# 307 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_seek_set.h" 1 3 4
# 308 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 2 3 4





# 1 "APPLE_SDKROOT/usr/include/sys/_types/_s_ifmt.h" 1 3 4
# 314 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 2 3 4
# 332 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 3 4
struct flock {
 off_t l_start;
 off_t l_len;
 pid_t l_pid;
 short l_type;
 short l_whence;
};
# 347 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 3 4
struct flocktimeout {
 struct flock fl;
 struct timespec timeout;
};
# 360 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 3 4
struct radvisory {
       off_t ra_offset;
       int ra_count;
};



typedef struct fcodeblobs {
 void *f_cd_hash;
 size_t f_hash_size;
 void *f_cd_buffer;
 size_t f_cd_size;
 unsigned int *f_out_size;
 int f_arch;
 int __padding;
} fcodeblobs_t;
# 384 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 3 4
typedef struct fsignatures {
 off_t fs_file_start;
 void *fs_blob_start;
 size_t fs_blob_size;
} fsignatures_t;
# 400 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 3 4
typedef struct fchecklv {
 off_t lv_file_start;
 size_t lv_error_message_size;
 void *lv_error_message;
} fchecklv_t;
# 416 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 3 4
typedef struct fstore {
 unsigned int fst_flags;
 int fst_posmode;
 off_t fst_offset;
 off_t fst_length;
 off_t fst_bytesalloc;
} fstore_t;



typedef struct fbootstraptransfer {
  off_t fbt_offset;
  size_t fbt_length;
  void *fbt_buffer;
} fbootstraptransfer_t;
# 454 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 3 4
#pragma pack(4)

struct log2phys {
 unsigned int l2p_flags;
 off_t l2p_contigbytes;


 off_t l2p_devoffset;


};

#pragma pack()
# 477 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_filesec_t.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/sys/_types/_filesec_t.h" 3 4
struct _filesec;
typedef struct _filesec *filesec_t;
# 478 "APPLE_SDKROOT/usr/include/sys/fcntl.h" 2 3 4

typedef enum {
 FILESEC_OWNER = 1,
 FILESEC_GROUP = 2,
 FILESEC_UUID = 3,
 FILESEC_MODE = 4,
 FILESEC_ACL = 5,
 FILESEC_GRPUUID = 6,


 FILESEC_ACL_RAW = 100,
 FILESEC_ACL_ALLOCSIZE = 101
} filesec_property_t;






int open(const char *, int, ...) __asm("_" "open" );

int openat(int, const char *, int, ...) __asm("_" "openat" ) __attribute__((availability(ios,introduced=8.0)));

int creat(const char *, mode_t) __asm("_" "creat" );
int fcntl(int, int, ...) __asm("_" "fcntl" );


int openx_np(const char *, int, filesec_t);




int open_dprotected_np ( const char *, int, int, int, ...);
int flock(int, int);
filesec_t filesec_init(void);
filesec_t filesec_dup(filesec_t);
void filesec_free(filesec_t);
int filesec_get_property(filesec_t, filesec_property_t, void *);
int filesec_query_property(filesec_t, filesec_property_t, int *);
int filesec_set_property(filesec_t, filesec_property_t, const void *);
int filesec_unset_property(filesec_t, filesec_property_t) __attribute__((availability(ios,introduced=3.2)));
# 24 "APPLE_SDKROOT/usr/include/fcntl.h" 2 3 4
# 49 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 64 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/os/object.h" 1 3 4
# 29 "APPLE_SDKROOT/usr/include/os/object.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/os/base.h" 1 3 4
# 194 "APPLE_SDKROOT/usr/include/os/base.h" 3 4
typedef void (*os_function_t)(void *_Nullable);
# 237 "APPLE_SDKROOT/usr/include/os/base.h" 3 4
typedef void (^os_block_t)(void);
# 30 "APPLE_SDKROOT/usr/include/os/object.h" 2 3 4
# 99 "APPLE_SDKROOT/usr/include/os/object.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/objc/NSObject.h" 1 3 4
# 10 "APPLE_SDKROOT/usr/include/objc/NSObject.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/objc/objc.h" 1 3 4
# 33 "APPLE_SDKROOT/usr/include/objc/objc.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/objc/objc-api.h" 1 3 4
# 34 "APPLE_SDKROOT/usr/include/objc/objc.h" 2 3 4




typedef struct objc_class *Class;


struct objc_object {
    Class isa __attribute__((deprecated));
};


typedef struct objc_object *id;



typedef struct objc_selector *SEL;





typedef id (*IMP)(id, SEL, ...);







typedef _Bool BOOL;
# 122 "APPLE_SDKROOT/usr/include/objc/objc.h" 3 4
extern __attribute__((visibility("default"))) const char *sel_getName(SEL sel)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
# 137 "APPLE_SDKROOT/usr/include/objc/objc.h" 3 4
extern __attribute__((visibility("default"))) SEL sel_registerName(const char *str)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
# 147 "APPLE_SDKROOT/usr/include/objc/objc.h" 3 4
extern __attribute__((visibility("default"))) const char *object_getClassName(id obj)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
# 166 "APPLE_SDKROOT/usr/include/objc/objc.h" 3 4
extern __attribute__((visibility("default"))) void *object_getIndexedIvars(id obj)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
# 179 "APPLE_SDKROOT/usr/include/objc/objc.h" 3 4
extern __attribute__((visibility("default"))) BOOL sel_isMapped(SEL sel)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
# 194 "APPLE_SDKROOT/usr/include/objc/objc.h" 3 4
extern __attribute__((visibility("default"))) SEL sel_getUid(const char *str)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));

typedef const void* objc_objectptr_t;




extern __attribute__((visibility("default"))) id objc_retainedObject(objc_objectptr_t obj)
    __attribute__((unavailable("use CFBridgingRelease() or a (__bridge_transfer id) cast instead")));
extern __attribute__((visibility("default"))) id objc_unretainedObject(objc_objectptr_t obj)
    __attribute__((unavailable("use a (__bridge id) cast instead")));
extern __attribute__((visibility("default"))) objc_objectptr_t objc_unretainedPointer(id obj)
    __attribute__((unavailable("use a __bridge cast instead")));
# 11 "APPLE_SDKROOT/usr/include/objc/NSObject.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/objc/NSObjCRuntime.h" 1 3 4
# 12 "APPLE_SDKROOT/usr/include/objc/NSObjCRuntime.h" 3 4
typedef long NSInteger;
typedef unsigned long NSUInteger;
# 12 "APPLE_SDKROOT/usr/include/objc/NSObject.h" 2 3 4

@class NSString, NSMethodSignature, NSInvocation;

@protocol NSObject

- (BOOL)isEqual:(id)object;
@property (readonly) NSUInteger hash;

@property (readonly) Class superclass;
- (Class)class __attribute__((availability(swift, unavailable, message="use 'anObject.dynamicType' instead")));
- (instancetype)self;

- (id)performSelector:(SEL)aSelector;
- (id)performSelector:(SEL)aSelector withObject:(id)object;
- (id)performSelector:(SEL)aSelector withObject:(id)object1 withObject:(id)object2;

- (BOOL)isProxy;

- (BOOL)isKindOfClass:(Class)aClass;
- (BOOL)isMemberOfClass:(Class)aClass;
- (BOOL)conformsToProtocol:(Protocol *)aProtocol;

- (BOOL)respondsToSelector:(SEL)aSelector;

- (instancetype)retain ;
- (oneway void)release ;
- (instancetype)autorelease ;
- (NSUInteger)retainCount ;

- (struct _NSZone *)zone ;

@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

@end


__attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)))
__attribute__((objc_root_class))
extern __attribute__((visibility("default")))
@interface NSObject <NSObject> {
    Class isa __attribute__((deprecated));
}

+ (void)load;

+ (void)initialize;
- (instancetype)init

    __attribute__((objc_designated_initializer))

    ;

+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((availability(swift, unavailable, message="use object initializers instead")));
+ (instancetype)alloc __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)dealloc __attribute__((availability(swift, unavailable, message="use 'deinit' to define a de-initializer")));

- (void)finalize __attribute__((deprecated("Objective-C garbage collection is no longer supported")));

- (id)copy;
- (id)mutableCopy;

+ (id)copyWithZone:(struct _NSZone *)zone ;
+ (id)mutableCopyWithZone:(struct _NSZone *)zone ;

+ (BOOL)instancesRespondToSelector:(SEL)aSelector;
+ (BOOL)conformsToProtocol:(Protocol *)protocol;
- (IMP)methodForSelector:(SEL)aSelector;
+ (IMP)instanceMethodForSelector:(SEL)aSelector;
- (void)doesNotRecognizeSelector:(SEL)aSelector;

- (id)forwardingTargetForSelector:(SEL)aSelector __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
- (void)forwardInvocation:(NSInvocation *)anInvocation __attribute__((availability(swift, unavailable, message="")));
- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector __attribute__((availability(swift, unavailable, message="")));

+ (NSMethodSignature *)instanceMethodSignatureForSelector:(SEL)aSelector __attribute__((availability(swift, unavailable, message="")));

- (BOOL)allowsWeakReference __attribute__((unavailable));
- (BOOL)retainWeakReference __attribute__((unavailable));

+ (BOOL)isSubclassOfClass:(Class)aClass;

+ (BOOL)resolveClassMethod:(SEL)sel __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));
+ (BOOL)resolveInstanceMethod:(SEL)sel __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)));

+ (NSUInteger)hash;
+ (Class)superclass;
+ (Class)class __attribute__((availability(swift, unavailable, message="use 'aClass.self' instead")));
+ (NSString *)description;
+ (NSString *)debugDescription;

@end
# 100 "APPLE_SDKROOT/usr/include/os/object.h" 2 3 4
# 235 "APPLE_SDKROOT/usr/include/os/object.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
extern __attribute__((__visibility__("default"))) __attribute__((__availability__(swift, unavailable, message="Can't be used with ARC")))
void*
os_retain(void *object);
# 257 "APPLE_SDKROOT/usr/include/os/object.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
extern __attribute__((__visibility__("default")))
void __attribute__((__availability__(swift, unavailable, message="Can't be used with ARC")))
os_release(void *object);
# 65 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/dispatch/base.h" 1 3 4
# 246 "APPLE_SDKROOT/usr/include/dispatch/base.h" 3 4
typedef void (*dispatch_function_t)(void *_Nullable);
# 66 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/dispatch/time.h" 1 3 4
# 33 "APPLE_SDKROOT/usr/include/dispatch/time.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/clock_types.h" 1 3 4
# 46 "APPLE_SDKROOT/usr/include/mach/clock_types.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/time_value.h" 1 3 4
# 66 "APPLE_SDKROOT/usr/include/mach/time_value.h" 3 4
struct time_value {
 integer_t seconds;
 integer_t microseconds;
};

typedef struct time_value time_value_t;
# 47 "APPLE_SDKROOT/usr/include/mach/clock_types.h" 2 3 4




typedef int alarm_type_t;
typedef int sleep_type_t;
typedef int clock_id_t;
typedef int clock_flavor_t;
typedef int *clock_attr_t;
typedef int clock_res_t;




struct mach_timespec {
 unsigned int tv_sec;
 clock_res_t tv_nsec;
};
typedef struct mach_timespec mach_timespec_t;
# 34 "APPLE_SDKROOT/usr/include/dispatch/time.h" 2 3 4
# 57 "APPLE_SDKROOT/usr/include/dispatch/time.h" 3 4
struct timespec;
# 67 "APPLE_SDKROOT/usr/include/dispatch/time.h" 3 4
typedef uint64_t dispatch_time_t;
# 92 "APPLE_SDKROOT/usr/include/dispatch/time.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_time_t
dispatch_time(dispatch_time_t when, int64_t delta);
# 116 "APPLE_SDKROOT/usr/include/dispatch/time.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_time_t
dispatch_walltime(const struct timespec *_Nullable when, int64_t delta);
# 67 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/dispatch/object.h" 1 3 4
# 51 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
@protocol OS_dispatch_object <NSObject> @end typedef NSObject<OS_dispatch_object> * __attribute__((objc_independent_class)) dispatch_object_t;






static __inline__ __attribute__((__always_inline__)) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
_dispatch_object_validate(dispatch_object_t object) {
 void *isa = *(void* volatile*)( void*)object;
 (void)isa;
}
# 185 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
typedef void (^dispatch_block_t)(void);
# 204 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
__attribute__((__availability__(swift, unavailable, message="Can't be used with ARC")))
void
dispatch_retain(dispatch_object_t object);
# 232 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
__attribute__((__availability__(swift, unavailable, message="Can't be used with ARC")))
void
dispatch_release(dispatch_object_t object);
# 256 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__pure__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
void *_Nullable
dispatch_get_context(dispatch_object_t object);
# 275 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__))
void
dispatch_set_context(dispatch_object_t object, void *_Nullable context);
# 301 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__))
void
dispatch_set_finalizer_f(dispatch_object_t object,
  dispatch_function_t _Nullable finalizer);
# 329 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
__attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_activate(dispatch_object_t object);
# 353 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_suspend(dispatch_object_t object);
# 382 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_resume(dispatch_object_t object);
# 411 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((__unavailable__))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
long
dispatch_wait(void *object, dispatch_time_t timeout);
# 448 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((__unavailable__))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_notify(void *object, dispatch_object_t queue,
  dispatch_block_t notification_block);
# 477 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((__unavailable__))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_cancel(void *object);
# 508 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((__unavailable__))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
long
dispatch_testcancel(void *object);
# 544 "APPLE_SDKROOT/usr/include/dispatch/object.h" 3 4
__attribute__((availability(ios,introduced=4.0,deprecated=6.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nothrow__))
__attribute__((__format__(printf,2,3)))
void
dispatch_debug(dispatch_object_t object, const char *message, ...);

__attribute__((availability(ios,introduced=4.0,deprecated=6.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nothrow__))
__attribute__((__format__(printf,2,0)))
void
dispatch_debugv(dispatch_object_t object, const char *message, va_list ap);
# 68 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 1 3 4
# 30 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/qos.h" 1 3 4
# 128 "APPLE_SDKROOT/usr/include/sys/qos.h" 3 4
typedef enum : unsigned int { QOS_CLASS_USER_INTERACTIVE __attribute__((availability(ios,introduced=8.0))) = 0x21, QOS_CLASS_USER_INITIATED __attribute__((availability(ios,introduced=8.0))) = 0x19, QOS_CLASS_DEFAULT __attribute__((availability(ios,introduced=8.0))) = 0x15, QOS_CLASS_UTILITY __attribute__((availability(ios,introduced=8.0))) = 0x11, QOS_CLASS_BACKGROUND __attribute__((availability(ios,introduced=8.0))) = 0x09, QOS_CLASS_UNSPECIFIED __attribute__((availability(ios,introduced=8.0))) = 0x00, } qos_class_t;
# 168 "APPLE_SDKROOT/usr/include/sys/qos.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
qos_class_t
qos_class_self(void);
# 190 "APPLE_SDKROOT/usr/include/sys/qos.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
qos_class_t
qos_class_main(void);
# 31 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 2 3 4
# 73 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
@protocol OS_dispatch_queue <OS_dispatch_object> @end typedef NSObject<OS_dispatch_queue> * __attribute__((objc_independent_class)) dispatch_queue_t;
# 106 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_async(dispatch_queue_t queue, dispatch_block_t block);
# 136 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_async_f(dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
# 174 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_sync(dispatch_queue_t queue, __attribute__((__noescape__)) dispatch_block_t block);
# 202 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_sync_f(dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
# 235 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_apply(size_t iterations, dispatch_queue_t queue,
  __attribute__((__noescape__)) void (^block)(size_t));
# 268 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(4))) __attribute__((__nothrow__))
void
dispatch_apply_f(size_t iterations, dispatch_queue_t queue,
 void *_Nullable context,
 void (*work)(void *_Nullable, size_t));
# 304 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0,deprecated=6.0)))
extern __attribute__((visibility("default"))) __attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_queue_t
dispatch_get_current_queue(void);

__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) struct dispatch_queue_s _dispatch_main_q;
# 327 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
static __inline__ __attribute__((__always_inline__)) __attribute__((__const__)) __attribute__((__nothrow__))
dispatch_queue_t
dispatch_get_main_queue(void)
{
 return (( dispatch_queue_t)&(_dispatch_main_q));
}
# 367 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
typedef long dispatch_queue_priority_t;






typedef qos_class_t dispatch_qos_class_t;
# 418 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__const__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_queue_t
dispatch_get_global_queue(long identifier, unsigned long flags);







@protocol OS_dispatch_queue_attr <OS_dispatch_object> @end typedef NSObject<OS_dispatch_queue_attr> * __attribute__((objc_independent_class)) dispatch_queue_attr_t;
# 457 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default")))
struct dispatch_queue_attr_s _dispatch_queue_attr_concurrent;
# 501 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
__attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__pure__)) __attribute__((__nothrow__))
dispatch_queue_attr_t
dispatch_queue_attr_make_initially_inactive(
  dispatch_queue_attr_t _Nullable attr);
# 558 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
typedef enum : unsigned long { DISPATCH_AUTORELEASE_FREQUENCY_INHERIT __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 1, DISPATCH_AUTORELEASE_FREQUENCY_NEVER __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 2, } dispatch_autorelease_frequency_t;
# 613 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
__attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__pure__)) __attribute__((__nothrow__))
dispatch_queue_attr_t
dispatch_queue_attr_make_with_autorelease_frequency(
  dispatch_queue_attr_t _Nullable attr,
  dispatch_autorelease_frequency_t frequency);
# 674 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__pure__)) __attribute__((__nothrow__))
dispatch_queue_attr_t
dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t _Nullable attr,
  dispatch_qos_class_t qos_class, int relative_priority);
# 739 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
__attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_queue_t
dispatch_queue_create_with_target(const char *_Nullable label,
 dispatch_queue_attr_t _Nullable attr, dispatch_queue_t _Nullable target)
 __asm__("_" "dispatch_queue_create_with_target" "$V2");
# 791 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_queue_t
dispatch_queue_create(const char *_Nullable label,
  dispatch_queue_attr_t _Nullable attr);
# 821 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
const char *
dispatch_queue_get_label(dispatch_queue_t _Nullable queue);
# 860 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
dispatch_qos_class_t
dispatch_queue_get_qos_class(dispatch_queue_t queue,
  int *_Nullable relative_priority_ptr);
# 925 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__))
void
dispatch_set_target_queue(dispatch_object_t object,
  dispatch_queue_t _Nullable queue);
# 944 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__)) __attribute__((__noreturn__))
void
dispatch_main(void);
# 972 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_after(dispatch_time_t when,
 dispatch_queue_t queue,
 dispatch_block_t block);
# 1005 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(4))) __attribute__((__nothrow__))
void
dispatch_after_f(dispatch_time_t when,
 dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
# 1052 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_barrier_async(dispatch_queue_t queue, dispatch_block_t block);
# 1086 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_barrier_async_f(dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
# 1114 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_barrier_sync(dispatch_queue_t queue,
  __attribute__((__noescape__)) dispatch_block_t block);
# 1146 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_barrier_sync_f(dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
# 1189 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_queue_set_specific(dispatch_queue_t queue, const void *key,
 void *_Nullable context, dispatch_function_t _Nullable destructor);
# 1218 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__pure__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
void *_Nullable
dispatch_queue_get_specific(dispatch_queue_t queue, const void *key);
# 1245 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
void *_Nullable
dispatch_get_specific(const void *key);
# 1299 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
__attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1)))
void
dispatch_assert_queue(dispatch_queue_t queue)
 __asm__("_" "dispatch_assert_queue" "$V2");
# 1326 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
__attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1)))
void
dispatch_assert_queue_barrier(dispatch_queue_t queue);
# 1350 "APPLE_SDKROOT/usr/include/dispatch/queue.h" 3 4
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
__attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1)))
void
dispatch_assert_queue_not(dispatch_queue_t queue)
 __asm__("_" "dispatch_assert_queue_not" "$V2");
# 69 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/dispatch/block.h" 1 3 4
# 102 "APPLE_SDKROOT/usr/include/dispatch/block.h" 3 4
typedef enum : unsigned long { DISPATCH_BLOCK_BARRIER __attribute__((availability(ios,introduced=8.0))) = 0x1, DISPATCH_BLOCK_DETACHED __attribute__((availability(ios,introduced=8.0))) = 0x2, DISPATCH_BLOCK_ASSIGN_CURRENT __attribute__((availability(ios,introduced=8.0))) = 0x4, DISPATCH_BLOCK_NO_QOS_CLASS __attribute__((availability(ios,introduced=8.0))) = 0x8, DISPATCH_BLOCK_INHERIT_QOS_CLASS __attribute__((availability(ios,introduced=8.0))) = 0x10, DISPATCH_BLOCK_ENFORCE_QOS_CLASS __attribute__((availability(ios,introduced=8.0))) = 0x20, } dispatch_block_flags_t;
# 167 "APPLE_SDKROOT/usr/include/dispatch/block.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_block_t
dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block);
# 239 "APPLE_SDKROOT/usr/include/dispatch/block.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(4))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_block_t
dispatch_block_create_with_qos_class(dispatch_block_flags_t flags,
  dispatch_qos_class_t qos_class, int relative_priority,
  dispatch_block_t block);
# 272 "APPLE_SDKROOT/usr/include/dispatch/block.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nothrow__))
void
dispatch_block_perform(dispatch_block_flags_t flags,
  __attribute__((__noescape__)) dispatch_block_t block);
# 323 "APPLE_SDKROOT/usr/include/dispatch/block.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
long
dispatch_block_wait(dispatch_block_t block, dispatch_time_t timeout);
# 364 "APPLE_SDKROOT/usr/include/dispatch/block.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_block_notify(dispatch_block_t block, dispatch_queue_t queue,
  dispatch_block_t notification_block);
# 396 "APPLE_SDKROOT/usr/include/dispatch/block.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_block_cancel(dispatch_block_t block);
# 415 "APPLE_SDKROOT/usr/include/dispatch/block.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
long
dispatch_block_testcancel(dispatch_block_t block);
# 70 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/dispatch/source.h" 1 3 4
# 31 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/message.h" 1 3 4
# 77 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/kern_return.h" 1 3 4
# 70 "APPLE_SDKROOT/usr/include/mach/kern_return.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/machine/kern_return.h" 1 3 4
# 33 "APPLE_SDKROOT/usr/include/mach/machine/kern_return.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/mach/i386/kern_return.h" 1 3 4
# 71 "APPLE_SDKROOT/usr/include/mach/i386/kern_return.h" 3 4
typedef int kern_return_t;
# 34 "APPLE_SDKROOT/usr/include/mach/machine/kern_return.h" 2 3 4
# 71 "APPLE_SDKROOT/usr/include/mach/kern_return.h" 2 3 4
# 78 "APPLE_SDKROOT/usr/include/mach/message.h" 2 3 4
# 91 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
typedef natural_t mach_msg_timeout_t;
# 221 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
typedef unsigned int mach_msg_bits_t;
typedef natural_t mach_msg_size_t;
typedef integer_t mach_msg_id_t;



typedef unsigned int mach_msg_priority_t;



typedef unsigned int mach_msg_type_name_t;
# 244 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
typedef unsigned int mach_msg_copy_options_t;
# 266 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
typedef unsigned int mach_msg_descriptor_type_t;






#pragma pack(4)

typedef struct
{
  natural_t pad1;
  mach_msg_size_t pad2;
  unsigned int pad3 : 24;
  mach_msg_descriptor_type_t type : 8;
} mach_msg_type_descriptor_t;

typedef struct
{
  mach_port_t name;

  mach_msg_size_t pad1;
  unsigned int pad2 : 16;
  mach_msg_type_name_t disposition : 8;
  mach_msg_descriptor_type_t type : 8;
} mach_msg_port_descriptor_t;

typedef struct
{
  uint32_t address;
  mach_msg_size_t size;
  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  unsigned int pad1: 8;
  mach_msg_descriptor_type_t type: 8;
} mach_msg_ool_descriptor32_t;

typedef struct
{
  uint64_t address;
  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  unsigned int pad1: 8;
  mach_msg_descriptor_type_t type: 8;
  mach_msg_size_t size;
} mach_msg_ool_descriptor64_t;

typedef struct
{
  void* address;



  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  unsigned int pad1: 8;
  mach_msg_descriptor_type_t type: 8;

  mach_msg_size_t size;

} mach_msg_ool_descriptor_t;

typedef struct
{
  uint32_t address;
  mach_msg_size_t count;
  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  mach_msg_type_name_t disposition : 8;
  mach_msg_descriptor_type_t type : 8;
} mach_msg_ool_ports_descriptor32_t;

typedef struct
{
  uint64_t address;
  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  mach_msg_type_name_t disposition : 8;
  mach_msg_descriptor_type_t type : 8;
  mach_msg_size_t count;
} mach_msg_ool_ports_descriptor64_t;

typedef struct
{
  void* address;



  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  mach_msg_type_name_t disposition : 8;
  mach_msg_descriptor_type_t type : 8;

  mach_msg_size_t count;

} mach_msg_ool_ports_descriptor_t;






typedef union
{
  mach_msg_port_descriptor_t port;
  mach_msg_ool_descriptor_t out_of_line;
  mach_msg_ool_ports_descriptor_t ool_ports;
  mach_msg_type_descriptor_t type;
} mach_msg_descriptor_t;

typedef struct
{
        mach_msg_size_t msgh_descriptor_count;
} mach_msg_body_t;




typedef struct
{
  mach_msg_bits_t msgh_bits;
  mach_msg_size_t msgh_size;
  mach_port_t msgh_remote_port;
  mach_port_t msgh_local_port;
  mach_port_name_t msgh_voucher_port;
  mach_msg_id_t msgh_id;
} mach_msg_header_t;




typedef struct
{
        mach_msg_header_t header;
        mach_msg_body_t body;
} mach_msg_base_t;

typedef unsigned int mach_msg_trailer_type_t;



typedef unsigned int mach_msg_trailer_size_t;
typedef char *mach_msg_trailer_info_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
} mach_msg_trailer_t;
# 425 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
} mach_msg_seqno_trailer_t;

typedef struct
{
  unsigned int val[2];
} security_token_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
} mach_msg_security_trailer_t;
# 454 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
typedef struct
{
  unsigned int val[8];
} audit_token_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
  audit_token_t msgh_audit;
} mach_msg_audit_trailer_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
  audit_token_t msgh_audit;
  mach_port_context_t msgh_context;
} mach_msg_context_trailer_t;



typedef struct
{
  mach_port_name_t sender;
} msg_labels_t;






typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
  audit_token_t msgh_audit;
  mach_port_context_t msgh_context;
  int msgh_ad;
  msg_labels_t msgh_labels;
} mach_msg_mac_trailer_t;
# 515 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
typedef mach_msg_mac_trailer_t mach_msg_max_trailer_t;
# 525 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
typedef mach_msg_security_trailer_t mach_msg_format_0_trailer_t;







extern security_token_t KERNEL_SECURITY_TOKEN;


extern audit_token_t KERNEL_AUDIT_TOKEN;

typedef integer_t mach_msg_options_t;

typedef struct
{
  mach_msg_header_t header;
} mach_msg_empty_send_t;

typedef struct
{
  mach_msg_header_t header;
  mach_msg_trailer_t trailer;
} mach_msg_empty_rcv_t;

typedef union
{
  mach_msg_empty_send_t send;
  mach_msg_empty_rcv_t rcv;
} mach_msg_empty_t;

#pragma pack()
# 588 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
typedef natural_t mach_msg_type_size_t;
typedef natural_t mach_msg_type_number_t;
# 632 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
typedef integer_t mach_msg_option_t;
# 723 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
typedef kern_return_t mach_msg_return_t;
# 827 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
extern mach_msg_return_t mach_msg_overwrite(
     mach_msg_header_t *msg,
     mach_msg_option_t option,
     mach_msg_size_t send_size,
     mach_msg_size_t rcv_size,
     mach_port_name_t rcv_name,
     mach_msg_timeout_t timeout,
     mach_port_name_t notify,
     mach_msg_header_t *rcv_msg,
     mach_msg_size_t rcv_limit);
# 848 "APPLE_SDKROOT/usr/include/mach/message.h" 3 4
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
extern mach_msg_return_t mach_msg(
     mach_msg_header_t *msg,
     mach_msg_option_t option,
     mach_msg_size_t send_size,
     mach_msg_size_t rcv_size,
     mach_port_name_t rcv_name,
     mach_msg_timeout_t timeout,
     mach_port_name_t notify);







__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
extern kern_return_t mach_voucher_deallocate(
     mach_port_name_t voucher);
# 32 "APPLE_SDKROOT/usr/include/dispatch/source.h" 2 3 4
# 57 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
@protocol OS_dispatch_source <OS_dispatch_object> @end typedef NSObject<OS_dispatch_source> * __attribute__((objc_independent_class)) dispatch_source_t;;
# 72 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
typedef const struct dispatch_source_type_s *dispatch_source_type_t;
# 82 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_data_add;
# 93 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_data_or;
# 104 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_mach_send;
# 114 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_mach_recv;
# 127 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_memorypressure;
# 138 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_proc;
# 149 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_read;
# 159 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_signal;
# 170 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_timer;
# 181 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_vnode;
# 192 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_write;
# 204 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
typedef unsigned long dispatch_source_mach_send_flags_t;
# 234 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
typedef unsigned long dispatch_source_memorypressure_flags_t;
# 258 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
typedef unsigned long dispatch_source_proc_flags_t;
# 298 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
typedef unsigned long dispatch_source_vnode_flags_t;
# 318 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
typedef unsigned long dispatch_source_timer_flags_t;
# 364 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_source_t
dispatch_source_create(dispatch_source_type_t type,
 uintptr_t handle,
 unsigned long mask,
 dispatch_queue_t _Nullable queue);
# 387 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_event_handler(dispatch_source_t source,
 dispatch_block_t _Nullable handler);
# 409 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_event_handler_f(dispatch_source_t source,
 dispatch_function_t _Nullable handler);
# 443 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_cancel_handler(dispatch_source_t source,
 dispatch_block_t _Nullable handler);
# 468 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_cancel_handler_f(dispatch_source_t source,
 dispatch_function_t _Nullable handler);
# 496 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_source_cancel(dispatch_source_t source);
# 514 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
long
dispatch_source_testcancel(dispatch_source_t source);
# 545 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
uintptr_t
dispatch_source_get_handle(dispatch_source_t source);
# 576 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
unsigned long
dispatch_source_get_mask(dispatch_source_t source);
# 614 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
unsigned long
dispatch_source_get_data(dispatch_source_t source);
# 636 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_source_merge_data(dispatch_source_t source, unsigned long value);
# 688 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_source_set_timer(dispatch_source_t source,
 dispatch_time_t start,
 uint64_t interval,
 uint64_t leeway);
# 718 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_registration_handler(dispatch_source_t source,
 dispatch_block_t _Nullable handler);
# 743 "APPLE_SDKROOT/usr/include/dispatch/source.h" 3 4
__attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_registration_handler_f(dispatch_source_t source,
 dispatch_function_t _Nullable handler);
# 71 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/dispatch/group.h" 1 3 4
# 36 "APPLE_SDKROOT/usr/include/dispatch/group.h" 3 4
@protocol OS_dispatch_group <OS_dispatch_object> @end typedef NSObject<OS_dispatch_group> * __attribute__((objc_independent_class)) dispatch_group_t;
# 54 "APPLE_SDKROOT/usr/include/dispatch/group.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_group_t
dispatch_group_create(void);
# 84 "APPLE_SDKROOT/usr/include/dispatch/group.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_group_async(dispatch_group_t group,
 dispatch_queue_t queue,
 dispatch_block_t block);
# 118 "APPLE_SDKROOT/usr/include/dispatch/group.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(4)))
__attribute__((__nothrow__))
void
dispatch_group_async_f(dispatch_group_t group,
 dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
# 161 "APPLE_SDKROOT/usr/include/dispatch/group.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
long
dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout);
# 197 "APPLE_SDKROOT/usr/include/dispatch/group.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_group_notify(dispatch_group_t group,
 dispatch_queue_t queue,
 dispatch_block_t block);
# 227 "APPLE_SDKROOT/usr/include/dispatch/group.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(4)))
__attribute__((__nothrow__))
void
dispatch_group_notify_f(dispatch_group_t group,
 dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
# 251 "APPLE_SDKROOT/usr/include/dispatch/group.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_group_enter(dispatch_group_t group);
# 270 "APPLE_SDKROOT/usr/include/dispatch/group.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_group_leave(dispatch_group_t group);
# 72 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/dispatch/semaphore.h" 1 3 4
# 37 "APPLE_SDKROOT/usr/include/dispatch/semaphore.h" 3 4
@protocol OS_dispatch_semaphore <OS_dispatch_object> @end typedef NSObject<OS_dispatch_semaphore> * __attribute__((objc_independent_class)) dispatch_semaphore_t;
# 60 "APPLE_SDKROOT/usr/include/dispatch/semaphore.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_semaphore_t
dispatch_semaphore_create(long value);
# 86 "APPLE_SDKROOT/usr/include/dispatch/semaphore.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
long
dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout);
# 108 "APPLE_SDKROOT/usr/include/dispatch/semaphore.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
long
dispatch_semaphore_signal(dispatch_semaphore_t dsema);
# 73 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/dispatch/once.h" 1 3 4
# 41 "APPLE_SDKROOT/usr/include/dispatch/once.h" 3 4
typedef long dispatch_once_t;
# 61 "APPLE_SDKROOT/usr/include/dispatch/once.h" 3 4
__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))

void
dispatch_once(dispatch_once_t *predicate,
  __attribute__((__noescape__)) dispatch_block_t block);

static __inline__ __attribute__((__always_inline__)) __attribute__((__nonnull__)) __attribute__((__nothrow__))

void
_dispatch_once(dispatch_once_t *predicate,
  __attribute__((__noescape__)) dispatch_block_t block)
{
 if (__builtin_expect((*predicate), (~0l)) != ~0l) {
  dispatch_once(predicate, block);
 } else {
  __asm__ __volatile__("" ::: "memory");
 }
 __builtin_assume(*predicate == ~0l);
}




__attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))

void
dispatch_once_f(dispatch_once_t *predicate, void *_Nullable context,
  dispatch_function_t function);

static __inline__ __attribute__((__always_inline__)) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3)))
__attribute__((__nothrow__))

void
_dispatch_once_f(dispatch_once_t *predicate, void *_Nullable context,
  dispatch_function_t function)
{
 if (__builtin_expect((*predicate), (~0l)) != ~0l) {
  dispatch_once_f(predicate, context, function);
 } else {
  __asm__ __volatile__("" ::: "memory");
 }
 __builtin_assume(*predicate == ~0l);
}
# 74 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/dispatch/data.h" 1 3 4
# 44 "APPLE_SDKROOT/usr/include/dispatch/data.h" 3 4
@protocol OS_dispatch_data <OS_dispatch_object> @end typedef NSObject<OS_dispatch_data> * __attribute__((objc_independent_class)) dispatch_data_t;
# 53 "APPLE_SDKROOT/usr/include/dispatch/data.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) struct dispatch_data_s _dispatch_data_empty;
# 86 "APPLE_SDKROOT/usr/include/dispatch/data.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) const dispatch_block_t _dispatch_data_destructor_free;







__attribute__((availability(ios,introduced=7.0)))
extern __attribute__((visibility("default"))) const dispatch_block_t _dispatch_data_destructor_munmap;
# 120 "APPLE_SDKROOT/usr/include/dispatch/data.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_create(const void *buffer,
 size_t size,
 dispatch_queue_t _Nullable queue,
 dispatch_block_t _Nullable destructor);
# 137 "APPLE_SDKROOT/usr/include/dispatch/data.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__pure__)) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
size_t
dispatch_data_get_size(dispatch_data_t data);
# 161 "APPLE_SDKROOT/usr/include/dispatch/data.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_create_map(dispatch_data_t data,
 const void *_Nullable *_Nullable buffer_ptr,
 size_t *_Nullable size_ptr);
# 184 "APPLE_SDKROOT/usr/include/dispatch/data.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_create_concat(dispatch_data_t data1, dispatch_data_t data2);
# 205 "APPLE_SDKROOT/usr/include/dispatch/data.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_create_subrange(dispatch_data_t data,
 size_t offset,
 size_t length);
# 225 "APPLE_SDKROOT/usr/include/dispatch/data.h" 3 4
typedef _Bool (^dispatch_data_applier_t)(dispatch_data_t region,
 size_t offset,
 const void *buffer,
 size_t size);
# 250 "APPLE_SDKROOT/usr/include/dispatch/data.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
_Bool
dispatch_data_apply(dispatch_data_t data, dispatch_data_applier_t applier);
# 270 "APPLE_SDKROOT/usr/include/dispatch/data.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_copy_region(dispatch_data_t data,
 size_t location,
 size_t *offset_ptr);
# 75 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "APPLE_SDKROOT/usr/include/dispatch/io.h" 1 3 4
# 53 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
typedef int dispatch_fd_t;
# 105 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(3))) __attribute__((__nonnull__(4))) __attribute__((__nothrow__))
void
dispatch_read(dispatch_fd_t fd,
 size_t length,
 dispatch_queue_t queue,
 void (^handler)(dispatch_data_t data, int error));
# 143 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(3))) __attribute__((__nonnull__(4)))
__attribute__((__nothrow__))
void
dispatch_write(dispatch_fd_t fd,
 dispatch_data_t data,
 dispatch_queue_t queue,
 void (^handler)(dispatch_data_t _Nullable data, int error));
# 163 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
@protocol OS_dispatch_io <OS_dispatch_object> @end typedef NSObject<OS_dispatch_io> * __attribute__((objc_independent_class)) dispatch_io_t;
# 186 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
typedef unsigned long dispatch_io_type_t;
# 214 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_io_t
dispatch_io_create(dispatch_io_type_t type,
 dispatch_fd_t fd,
 dispatch_queue_t queue,
 void (^cleanup_handler)(int error));
# 250 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_io_t
dispatch_io_create_with_path(dispatch_io_type_t type,
 const char *path, int oflag, mode_t mode,
 dispatch_queue_t queue,
 void (^cleanup_handler)(int error));
# 290 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_io_t
dispatch_io_create_with_io(dispatch_io_type_t type,
 dispatch_io_t io,
 dispatch_queue_t queue,
 void (^cleanup_handler)(int error));
# 307 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
typedef void (^dispatch_io_handler_t)(_Bool done, dispatch_data_t _Nullable data,
  int error);
# 352 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(4))) __attribute__((__nonnull__(5)))
__attribute__((__nothrow__))
void
dispatch_io_read(dispatch_io_t channel,
 off_t offset,
 size_t length,
 dispatch_queue_t queue,
 dispatch_io_handler_t io_handler);
# 405 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nonnull__(4)))
__attribute__((__nonnull__(5))) __attribute__((__nothrow__))
void
dispatch_io_write(dispatch_io_t channel,
 off_t offset,
 dispatch_data_t data,
 dispatch_queue_t queue,
 dispatch_io_handler_t io_handler);
# 425 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
typedef unsigned long dispatch_io_close_flags_t;
# 444 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_io_close(dispatch_io_t channel, dispatch_io_close_flags_t flags);
# 471 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_io_barrier(dispatch_io_t channel, dispatch_block_t barrier);
# 491 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_fd_t
dispatch_io_get_descriptor(dispatch_io_t channel);
# 512 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_io_set_high_water(dispatch_io_t channel, size_t high_water);
# 543 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_io_set_low_water(dispatch_io_t channel, size_t low_water);
# 558 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
typedef unsigned long dispatch_io_interval_flags_t;
# 582 "APPLE_SDKROOT/usr/include/dispatch/io.h" 3 4
__attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_io_set_interval(dispatch_io_t channel,
 uint64_t interval,
 dispatch_io_interval_flags_t flags);
# 76 "APPLE_SDKROOT/usr/include/dispatch/dispatch.h" 2 3 4
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 2 3




typedef CFStringRef CFStreamPropertyKey __attribute__((swift_wrapper(struct)));

typedef enum CFStreamStatus : CFIndex CFStreamStatus; enum CFStreamStatus : CFIndex {
    kCFStreamStatusNotOpen = 0,
    kCFStreamStatusOpening,
    kCFStreamStatusOpen,
    kCFStreamStatusReading,
    kCFStreamStatusWriting,
    kCFStreamStatusAtEnd,
    kCFStreamStatusClosed,
    kCFStreamStatusError
};

typedef enum CFStreamEventType : CFOptionFlags CFStreamEventType; enum CFStreamEventType : CFOptionFlags {
    kCFStreamEventNone = 0,
    kCFStreamEventOpenCompleted = 1,
    kCFStreamEventHasBytesAvailable = 2,
    kCFStreamEventCanAcceptBytes = 4,
    kCFStreamEventErrorOccurred = 8,
    kCFStreamEventEndEncountered = 16
};

typedef struct {
    CFIndex version;
    void *info;
    void *(*retain)(void *info);
    void (*release)(void *info);
    CFStringRef (*copyDescription)(void *info);
} CFStreamClientContext;

typedef struct __attribute__((objc_bridge_mutable(NSInputStream))) __CFReadStream * CFReadStreamRef;
typedef struct __attribute__((objc_bridge_mutable(NSOutputStream))) __CFWriteStream * CFWriteStreamRef;

typedef void (*CFReadStreamClientCallBack)(CFReadStreamRef stream, CFStreamEventType type, void *clientCallBackInfo);
typedef void (*CFWriteStreamClientCallBack)(CFWriteStreamRef stream, CFStreamEventType type, void *clientCallBackInfo);

extern
CFTypeID CFReadStreamGetTypeID(void);
extern
CFTypeID CFWriteStreamGetTypeID(void);




extern
const CFStreamPropertyKey kCFStreamPropertyDataWritten;


extern
CFReadStreamRef CFReadStreamCreateWithBytesNoCopy(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator);


extern
CFWriteStreamRef CFWriteStreamCreateWithBuffer(CFAllocatorRef alloc, UInt8 *buffer, CFIndex bufferCapacity);


extern
CFWriteStreamRef CFWriteStreamCreateWithAllocatedBuffers(CFAllocatorRef alloc, CFAllocatorRef bufferAllocator);


extern
CFReadStreamRef CFReadStreamCreateWithFile(CFAllocatorRef alloc, CFURLRef fileURL);
extern
CFWriteStreamRef CFWriteStreamCreateWithFile(CFAllocatorRef alloc, CFURLRef fileURL);

extern
void CFStreamCreateBoundPair(CFAllocatorRef alloc, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream, CFIndex transferBufferSize);



extern
const CFStreamPropertyKey kCFStreamPropertyAppendToFile;

extern
const CFStreamPropertyKey kCFStreamPropertyFileCurrentOffset;





extern
const CFStreamPropertyKey kCFStreamPropertySocketNativeHandle;


extern
const CFStreamPropertyKey kCFStreamPropertySocketRemoteHostName;


extern
const CFStreamPropertyKey kCFStreamPropertySocketRemotePortNumber;



extern
void CFStreamCreatePairWithSocket(CFAllocatorRef alloc, CFSocketNativeHandle sock, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
extern
void CFStreamCreatePairWithSocketToHost(CFAllocatorRef alloc, CFStringRef host, UInt32 port, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
extern
void CFStreamCreatePairWithPeerSocketSignature(CFAllocatorRef alloc, const CFSocketSignature *signature, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);




extern
CFStreamStatus CFReadStreamGetStatus(CFReadStreamRef stream);
extern
CFStreamStatus CFWriteStreamGetStatus(CFWriteStreamRef stream);


extern
CFErrorRef CFReadStreamCopyError(CFReadStreamRef stream) __attribute__((availability(ios,introduced=2_0)));
extern
CFErrorRef CFWriteStreamCopyError(CFWriteStreamRef stream) __attribute__((availability(ios,introduced=2_0)));






extern
Boolean CFReadStreamOpen(CFReadStreamRef stream);
extern
Boolean CFWriteStreamOpen(CFWriteStreamRef stream);




extern
void CFReadStreamClose(CFReadStreamRef stream);
extern
void CFWriteStreamClose(CFWriteStreamRef stream);



extern
Boolean CFReadStreamHasBytesAvailable(CFReadStreamRef stream);
# 164 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 3
extern
CFIndex CFReadStreamRead(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
# 176 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 3
extern
const UInt8 *CFReadStreamGetBuffer(CFReadStreamRef stream, CFIndex maxBytesToRead, CFIndex *numBytesRead);



extern
Boolean CFWriteStreamCanAcceptBytes(CFWriteStreamRef stream);






extern
CFIndex CFWriteStreamWrite(CFWriteStreamRef stream, const UInt8 *buffer, CFIndex bufferLength);
# 200 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 3
extern
CFTypeRef CFReadStreamCopyProperty(CFReadStreamRef stream, CFStreamPropertyKey propertyName);
extern
CFTypeRef CFWriteStreamCopyProperty(CFWriteStreamRef stream, CFStreamPropertyKey propertyName);



extern
Boolean CFReadStreamSetProperty(CFReadStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue);
extern
Boolean CFWriteStreamSetProperty(CFWriteStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue);
# 228 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 3
extern
Boolean CFReadStreamSetClient(CFReadStreamRef stream, CFOptionFlags streamEvents, CFReadStreamClientCallBack clientCB, CFStreamClientContext *clientContext);
extern
Boolean CFWriteStreamSetClient(CFWriteStreamRef stream, CFOptionFlags streamEvents, CFWriteStreamClientCallBack clientCB, CFStreamClientContext *clientContext);

extern
void CFReadStreamScheduleWithRunLoop(CFReadStreamRef stream, CFRunLoopRef runLoop, CFRunLoopMode runLoopMode);
extern
void CFWriteStreamScheduleWithRunLoop(CFWriteStreamRef stream, CFRunLoopRef runLoop, CFRunLoopMode runLoopMode);

extern
void CFReadStreamUnscheduleFromRunLoop(CFReadStreamRef stream, CFRunLoopRef runLoop, CFRunLoopMode runLoopMode);
extern
void CFWriteStreamUnscheduleFromRunLoop(CFWriteStreamRef stream, CFRunLoopRef runLoop, CFRunLoopMode runLoopMode);
# 251 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 3
extern
void CFReadStreamSetDispatchQueue(CFReadStreamRef stream, dispatch_queue_t q) __attribute__((availability(ios,introduced=7_0)));

extern
void CFWriteStreamSetDispatchQueue(CFWriteStreamRef stream, dispatch_queue_t q) __attribute__((availability(ios,introduced=7_0)));






extern
dispatch_queue_t CFReadStreamCopyDispatchQueue(CFReadStreamRef stream) __attribute__((availability(ios,introduced=7_0)));

extern
dispatch_queue_t CFWriteStreamCopyDispatchQueue(CFWriteStreamRef stream) __attribute__((availability(ios,introduced=7_0)));



typedef enum CFStreamErrorDomain : CFIndex CFStreamErrorDomain; enum CFStreamErrorDomain : CFIndex {
    kCFStreamErrorDomainCustom = -1L,
    kCFStreamErrorDomainPOSIX = 1,
    kCFStreamErrorDomainMacOSStatus
};

typedef struct {
    CFIndex domain;
    SInt32 error;
} CFStreamError;
extern
CFStreamError CFReadStreamGetError(CFReadStreamRef stream);
extern
CFStreamError CFWriteStreamGetError(CFWriteStreamRef stream);
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 2 3





typedef enum CFPropertyListMutabilityOptions : CFOptionFlags CFPropertyListMutabilityOptions; enum CFPropertyListMutabilityOptions : CFOptionFlags {
    kCFPropertyListImmutable = 0,
    kCFPropertyListMutableContainers,
    kCFPropertyListMutableContainersAndLeaves
};
# 37 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 3
extern
CFPropertyListRef CFPropertyListCreateFromXMLData(CFAllocatorRef allocator, CFDataRef xmlData, CFOptionFlags mutabilityOption, CFStringRef *errorString) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFPropertyListCreateWithData instead.")));
# 52 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 3
extern
CFDataRef CFPropertyListCreateXMLData(CFAllocatorRef allocator, CFPropertyListRef propertyList) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFPropertyListCreateData instead.")));
# 63 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 3
extern
CFPropertyListRef CFPropertyListCreateDeepCopy(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFOptionFlags mutabilityOption);

typedef enum CFPropertyListFormat : CFIndex CFPropertyListFormat; enum CFPropertyListFormat : CFIndex {
    kCFPropertyListOpenStepFormat = 1,
    kCFPropertyListXMLFormat_v1_0 = 100,
    kCFPropertyListBinaryFormat_v1_0 = 200
};






extern
Boolean CFPropertyListIsValid(CFPropertyListRef plist, CFPropertyListFormat format);
# 93 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 3
extern
CFIndex CFPropertyListWriteToStream(CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFStringRef *errorString) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFPropertyListWrite instead.")));
# 108 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 3
extern
CFPropertyListRef CFPropertyListCreateFromStream(CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags mutabilityOption, CFPropertyListFormat *format, CFStringRef *errorString) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFPropertyListCreateWithStream instead.")));






enum : CFIndex {
    kCFPropertyListReadCorruptError = 3840,
    kCFPropertyListReadUnknownVersionError = 3841,
    kCFPropertyListReadStreamError = 3842,
    kCFPropertyListWriteStreamError = 3851,
} __attribute__((availability(ios,introduced=4_0)));



extern
CFPropertyListRef CFPropertyListCreateWithData(CFAllocatorRef allocator, CFDataRef data, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error) __attribute__((availability(ios,introduced=4_0)));





extern
CFPropertyListRef CFPropertyListCreateWithStream(CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error) __attribute__((availability(ios,introduced=4_0)));



extern
CFIndex CFPropertyListWrite(CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error) __attribute__((availability(ios,introduced=4_0)));





extern
CFDataRef CFPropertyListCreateData(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error) __attribute__((availability(ios,introduced=4_0)));
# 61 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 1 3
# 26 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
typedef const void * (*CFSetRetainCallBack)(CFAllocatorRef allocator, const void *value);







typedef void (*CFSetReleaseCallBack)(CFAllocatorRef allocator, const void *value);







typedef CFStringRef (*CFSetCopyDescriptionCallBack)(const void *value);
# 51 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
typedef Boolean (*CFSetEqualCallBack)(const void *value1, const void *value2);







typedef CFHashCode (*CFSetHashCallBack)(const void *value);
# 85 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
typedef struct {
    CFIndex version;
    CFSetRetainCallBack retain;
    CFSetReleaseCallBack release;
    CFSetCopyDescriptionCallBack copyDescription;
    CFSetEqualCallBack equal;
    CFSetHashCallBack hash;
} CFSetCallBacks;






extern
const CFSetCallBacks kCFTypeSetCallBacks;







extern
const CFSetCallBacks kCFCopyStringSetCallBacks;
# 119 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
typedef void (*CFSetApplierFunction)(const void *value, void *context);





typedef const struct __attribute__((objc_bridge(NSSet))) __CFSet * CFSetRef;





typedef struct __attribute__((objc_bridge_mutable(NSMutableSet))) __CFSet * CFMutableSetRef;





extern
CFTypeID CFSetGetTypeID(void);
# 186 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
CFSetRef CFSetCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFSetCallBacks *callBacks);
# 207 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
CFSetRef CFSetCreateCopy(CFAllocatorRef allocator, CFSetRef theSet);
# 253 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks);
# 283 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
CFMutableSetRef CFSetCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFSetRef theSet);
# 293 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
CFIndex CFSetGetCount(CFSetRef theSet);
# 311 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
CFIndex CFSetGetCountOfValue(CFSetRef theSet, const void *value);
# 327 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
Boolean CFSetContainsValue(CFSetRef theSet, const void *value);
# 342 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
const void *CFSetGetValue(CFSetRef theSet, const void *value);
# 366 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
Boolean CFSetGetValueIfPresent(CFSetRef theSet, const void *candidate, const void **value);
# 380 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetGetValues(CFSetRef theSet, const void **values);
# 400 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetApplyFunction(CFSetRef theSet, CFSetApplierFunction __attribute__((noescape)) applier, void *context);
# 415 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetAddValue(CFMutableSetRef theSet, const void *value);
# 434 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetReplaceValue(CFMutableSetRef theSet, const void *value);
# 454 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetSetValue(CFMutableSetRef theSet, const void *value);
# 469 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetRemoveValue(CFMutableSetRef theSet, const void *value);
# 479 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetRemoveAllValues(CFMutableSetRef theSet);
# 62 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringEncodingExt.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringEncodingExt.h" 3
typedef enum CFStringEncodings : CFIndex CFStringEncodings; enum CFStringEncodings : CFIndex {

    kCFStringEncodingMacJapanese = 1,
    kCFStringEncodingMacChineseTrad = 2,
    kCFStringEncodingMacKorean = 3,
    kCFStringEncodingMacArabic = 4,
    kCFStringEncodingMacHebrew = 5,
    kCFStringEncodingMacGreek = 6,
    kCFStringEncodingMacCyrillic = 7,
    kCFStringEncodingMacDevanagari = 9,
    kCFStringEncodingMacGurmukhi = 10,
    kCFStringEncodingMacGujarati = 11,
    kCFStringEncodingMacOriya = 12,
    kCFStringEncodingMacBengali = 13,
    kCFStringEncodingMacTamil = 14,
    kCFStringEncodingMacTelugu = 15,
    kCFStringEncodingMacKannada = 16,
    kCFStringEncodingMacMalayalam = 17,
    kCFStringEncodingMacSinhalese = 18,
    kCFStringEncodingMacBurmese = 19,
    kCFStringEncodingMacKhmer = 20,
    kCFStringEncodingMacThai = 21,
    kCFStringEncodingMacLaotian = 22,
    kCFStringEncodingMacGeorgian = 23,
    kCFStringEncodingMacArmenian = 24,
    kCFStringEncodingMacChineseSimp = 25,
    kCFStringEncodingMacTibetan = 26,
    kCFStringEncodingMacMongolian = 27,
    kCFStringEncodingMacEthiopic = 28,
    kCFStringEncodingMacCentralEurRoman = 29,
    kCFStringEncodingMacVietnamese = 30,
    kCFStringEncodingMacExtArabic = 31,

    kCFStringEncodingMacSymbol = 33,
    kCFStringEncodingMacDingbats = 34,
    kCFStringEncodingMacTurkish = 35,
    kCFStringEncodingMacCroatian = 36,
    kCFStringEncodingMacIcelandic = 37,
    kCFStringEncodingMacRomanian = 38,
    kCFStringEncodingMacCeltic = 39,
    kCFStringEncodingMacGaelic = 40,

    kCFStringEncodingMacFarsi = 0x8C,

    kCFStringEncodingMacUkrainian = 0x98,

    kCFStringEncodingMacInuit = 0xEC,
    kCFStringEncodingMacVT100 = 0xFC,

    kCFStringEncodingMacHFS = 0xFF,






    kCFStringEncodingISOLatin2 = 0x0202,
    kCFStringEncodingISOLatin3 = 0x0203,
    kCFStringEncodingISOLatin4 = 0x0204,
    kCFStringEncodingISOLatinCyrillic = 0x0205,
    kCFStringEncodingISOLatinArabic = 0x0206,
    kCFStringEncodingISOLatinGreek = 0x0207,
    kCFStringEncodingISOLatinHebrew = 0x0208,
    kCFStringEncodingISOLatin5 = 0x0209,
    kCFStringEncodingISOLatin6 = 0x020A,
    kCFStringEncodingISOLatinThai = 0x020B,
    kCFStringEncodingISOLatin7 = 0x020D,
    kCFStringEncodingISOLatin8 = 0x020E,
    kCFStringEncodingISOLatin9 = 0x020F,
    kCFStringEncodingISOLatin10 = 0x0210,


    kCFStringEncodingDOSLatinUS = 0x0400,
    kCFStringEncodingDOSGreek = 0x0405,
    kCFStringEncodingDOSBalticRim = 0x0406,
    kCFStringEncodingDOSLatin1 = 0x0410,
    kCFStringEncodingDOSGreek1 = 0x0411,
    kCFStringEncodingDOSLatin2 = 0x0412,
    kCFStringEncodingDOSCyrillic = 0x0413,
    kCFStringEncodingDOSTurkish = 0x0414,
    kCFStringEncodingDOSPortuguese = 0x0415,
    kCFStringEncodingDOSIcelandic = 0x0416,
    kCFStringEncodingDOSHebrew = 0x0417,
    kCFStringEncodingDOSCanadianFrench = 0x0418,
    kCFStringEncodingDOSArabic = 0x0419,
    kCFStringEncodingDOSNordic = 0x041A,
    kCFStringEncodingDOSRussian = 0x041B,
    kCFStringEncodingDOSGreek2 = 0x041C,
    kCFStringEncodingDOSThai = 0x041D,
    kCFStringEncodingDOSJapanese = 0x0420,
    kCFStringEncodingDOSChineseSimplif = 0x0421,
    kCFStringEncodingDOSKorean = 0x0422,
    kCFStringEncodingDOSChineseTrad = 0x0423,

    kCFStringEncodingWindowsLatin2 = 0x0501,
    kCFStringEncodingWindowsCyrillic = 0x0502,
    kCFStringEncodingWindowsGreek = 0x0503,
    kCFStringEncodingWindowsLatin5 = 0x0504,
    kCFStringEncodingWindowsHebrew = 0x0505,
    kCFStringEncodingWindowsArabic = 0x0506,
    kCFStringEncodingWindowsBalticRim = 0x0507,
    kCFStringEncodingWindowsVietnamese = 0x0508,
    kCFStringEncodingWindowsKoreanJohab = 0x0510,



    kCFStringEncodingANSEL = 0x0601,
    kCFStringEncodingJIS_X0201_76 = 0x0620,
    kCFStringEncodingJIS_X0208_83 = 0x0621,
    kCFStringEncodingJIS_X0208_90 = 0x0622,
    kCFStringEncodingJIS_X0212_90 = 0x0623,
    kCFStringEncodingJIS_C6226_78 = 0x0624,
    kCFStringEncodingShiftJIS_X0213 __attribute__((availability(ios,introduced=2_0))) = 0x0628,
    kCFStringEncodingShiftJIS_X0213_MenKuTen = 0x0629,
    kCFStringEncodingGB_2312_80 = 0x0630,
    kCFStringEncodingGBK_95 = 0x0631,
    kCFStringEncodingGB_18030_2000 = 0x0632,
    kCFStringEncodingKSC_5601_87 = 0x0640,
    kCFStringEncodingKSC_5601_92_Johab = 0x0641,
    kCFStringEncodingCNS_11643_92_P1 = 0x0651,
    kCFStringEncodingCNS_11643_92_P2 = 0x0652,
    kCFStringEncodingCNS_11643_92_P3 = 0x0653,


    kCFStringEncodingISO_2022_JP = 0x0820,
    kCFStringEncodingISO_2022_JP_2 = 0x0821,
    kCFStringEncodingISO_2022_JP_1 = 0x0822,
    kCFStringEncodingISO_2022_JP_3 = 0x0823,
    kCFStringEncodingISO_2022_CN = 0x0830,
    kCFStringEncodingISO_2022_CN_EXT = 0x0831,
    kCFStringEncodingISO_2022_KR = 0x0840,


    kCFStringEncodingEUC_JP = 0x0920,
    kCFStringEncodingEUC_CN = 0x0930,
    kCFStringEncodingEUC_TW = 0x0931,
    kCFStringEncodingEUC_KR = 0x0940,


    kCFStringEncodingShiftJIS = 0x0A01,
    kCFStringEncodingKOI8_R = 0x0A02,
    kCFStringEncodingBig5 = 0x0A03,
    kCFStringEncodingMacRomanLatin1 = 0x0A04,
    kCFStringEncodingHZ_GB_2312 = 0x0A05,
    kCFStringEncodingBig5_HKSCS_1999 = 0x0A06,
    kCFStringEncodingVISCII = 0x0A07,
    kCFStringEncodingKOI8_U = 0x0A08,
    kCFStringEncodingBig5_E = 0x0A09,



    kCFStringEncodingNextStepJapanese = 0x0B02,


    kCFStringEncodingEBCDIC_US = 0x0C01,
    kCFStringEncodingEBCDIC_CP037 = 0x0C02,

    kCFStringEncodingUTF7 __attribute__((availability(ios,introduced=4_0))) = 0x04000100,
    kCFStringEncodingUTF7_IMAP __attribute__((availability(ios,introduced=4_0))) = 0x0A10,


    kCFStringEncodingShiftJIS_X0213_00 = 0x0628
};
# 64 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 1 3
# 28 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
typedef const void * (*CFTreeRetainCallBack)(const void *info);







typedef void (*CFTreeReleaseCallBack)(const void *info);
# 45 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
typedef CFStringRef (*CFTreeCopyDescriptionCallBack)(const void *info);
# 64 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
typedef struct {
    CFIndex version;
    void * info;
    CFTreeRetainCallBack retain;
    CFTreeReleaseCallBack release;
    CFTreeCopyDescriptionCallBack copyDescription;
} CFTreeContext;
# 80 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
typedef void (*CFTreeApplierFunction)(const void *value, void *context);





typedef struct __attribute__((objc_bridge_mutable(id))) __CFTree * CFTreeRef;





extern
CFTypeID CFTreeGetTypeID(void);
# 112 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFTreeRef CFTreeCreate(CFAllocatorRef allocator, const CFTreeContext *context);
# 122 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFTreeRef CFTreeGetParent(CFTreeRef tree);
# 132 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFTreeRef CFTreeGetNextSibling(CFTreeRef tree);
# 142 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFTreeRef CFTreeGetFirstChild(CFTreeRef tree);
# 156 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeGetContext(CFTreeRef tree, CFTreeContext *context);
# 166 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFIndex CFTreeGetChildCount(CFTreeRef tree);
# 179 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFTreeRef CFTreeGetChildAtIndex(CFTreeRef tree, CFIndex idx);
# 192 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeGetChildren(CFTreeRef tree, CFTreeRef *children);
# 213 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeApplyFunctionToChildren(CFTreeRef tree, CFTreeApplierFunction __attribute__((noescape)) applier, void *context);
# 223 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFTreeRef CFTreeFindRoot(CFTreeRef tree);
# 240 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeSetContext(CFTreeRef tree, const CFTreeContext *context);
# 253 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreePrependChild(CFTreeRef tree, CFTreeRef newChild);
# 266 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeAppendChild(CFTreeRef tree, CFTreeRef newChild);
# 281 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeInsertSibling(CFTreeRef tree, CFTreeRef newSibling);







extern
void CFTreeRemove(CFTreeRef tree);







extern
void CFTreeRemoveAllChildren(CFTreeRef tree);
# 319 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeSortChildren(CFTreeRef tree, CFComparatorFunction comparator, void *context);
# 66 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLAccess.h" 1 3
# 46 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLAccess.h" 3
extern
Boolean CFURLCreateDataAndPropertiesFromResource(CFAllocatorRef alloc, CFURLRef url, CFDataRef *resourceData, CFDictionaryRef *properties, CFArrayRef desiredProperties, SInt32 *errorCode) __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys.")));
# 58 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLAccess.h" 3
extern
Boolean CFURLWriteDataAndPropertiesToResource(CFURLRef url, CFDataRef dataToWrite, CFDictionaryRef propertiesToWrite, SInt32 *errorCode) __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys.")));





extern
Boolean CFURLDestroyResource(CFURLRef url, SInt32 *errorCode) __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use CFURLGetFileSystemRepresentation and removefile(3) instead.")));





extern
CFTypeRef CFURLCreatePropertyFromResource(CFAllocatorRef alloc, CFURLRef url, CFStringRef property, SInt32 *errorCode) __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "For file resource properties, use CFURLCopyResourcePropertyForKey.")));



typedef enum CFURLError : CFIndex CFURLError; enum CFURLError : CFIndex {
    kCFURLUnknownError = -10L,
    kCFURLUnknownSchemeError = -11L,
    kCFURLResourceNotFoundError = -12L,
    kCFURLResourceAccessViolationError = -13L,
    kCFURLRemoteHostUnavailableError = -14L,
    kCFURLImproperArgumentsError = -15L,
    kCFURLUnknownPropertyKeyError = -16L,
    kCFURLPropertyKeyUnavailableError = -17L,
    kCFURLTimeoutError = -18L
} __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" )));



extern
const CFStringRef kCFURLFileExists __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use CFURLResourceIsReachable instead.")));
extern
const CFStringRef kCFURLFileDirectoryContents __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use the CFURLEnumerator API instead.")));
extern
const CFStringRef kCFURLFileLength __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use CFURLCopyResourcePropertyForKey with kCFURLFileSizeKey instead.")));
extern
const CFStringRef kCFURLFileLastModificationTime __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use CFURLCopyResourcePropertyForKey with kCFURLContentModificationDateKey instead.")));
extern
const CFStringRef kCFURLFilePOSIXMode __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead.")));
extern
const CFStringRef kCFURLFileOwnerID __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead.")));
extern
const CFStringRef kCFURLHTTPStatusCode __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use NSHTTPURLResponse methods instead.")));
extern
const CFStringRef kCFURLHTTPStatusLine __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use NSHTTPURLResponse methods instead.")));
# 68 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUUID.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUUID.h" 3
typedef const struct __attribute__((objc_bridge(id))) __CFUUID * CFUUIDRef;

typedef struct {
    UInt8 byte0;
    UInt8 byte1;
    UInt8 byte2;
    UInt8 byte3;
    UInt8 byte4;
    UInt8 byte5;
    UInt8 byte6;
    UInt8 byte7;
    UInt8 byte8;
    UInt8 byte9;
    UInt8 byte10;
    UInt8 byte11;
    UInt8 byte12;
    UInt8 byte13;
    UInt8 byte14;
    UInt8 byte15;
} CFUUIDBytes;






extern
CFTypeID CFUUIDGetTypeID(void);

extern
CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc);


extern
CFUUIDRef CFUUIDCreateWithBytes(CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15);


extern
CFUUIDRef CFUUIDCreateFromString(CFAllocatorRef alloc, CFStringRef uuidStr);


extern
CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid);


extern
CFUUIDRef CFUUIDGetConstantUUIDWithBytes(CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15);


extern
CFUUIDBytes CFUUIDGetUUIDBytes(CFUUIDRef uuid);

extern
CFUUIDRef CFUUIDCreateFromUUIDBytes(CFAllocatorRef alloc, CFUUIDBytes bytes);
# 69 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUtilities.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUtilities.h" 3
extern
CFURLRef CFCopyHomeDirectoryURL(void) __attribute__((availability(ios,introduced=5_0)));
# 70 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 1 3
# 18 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 3
typedef struct __attribute__((objc_bridge(id))) __CFBundle *CFBundleRef;
typedef struct __attribute__((objc_bridge(id))) __CFBundle *CFPlugInRef;


extern
const CFStringRef kCFBundleInfoDictionaryVersionKey;

extern
const CFStringRef kCFBundleExecutableKey;

extern
const CFStringRef kCFBundleIdentifierKey;

extern
const CFStringRef kCFBundleVersionKey;



extern
const CFStringRef kCFBundleDevelopmentRegionKey;

extern
const CFStringRef kCFBundleNameKey;

extern
const CFStringRef kCFBundleLocalizationsKey;




extern
CFBundleRef CFBundleGetMainBundle(void);

extern
CFBundleRef CFBundleGetBundleWithIdentifier(CFStringRef bundleID);







extern
CFArrayRef CFBundleGetAllBundles(void);





extern
CFTypeID CFBundleGetTypeID(void);

extern
CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL);


extern
CFArrayRef CFBundleCreateBundlesFromDirectory(CFAllocatorRef allocator, CFURLRef directoryURL, CFStringRef bundleType);





extern
CFURLRef CFBundleCopyBundleURL(CFBundleRef bundle);

extern
CFTypeRef CFBundleGetValueForInfoDictionaryKey(CFBundleRef bundle, CFStringRef key);



extern
CFDictionaryRef CFBundleGetInfoDictionary(CFBundleRef bundle);



extern
CFDictionaryRef CFBundleGetLocalInfoDictionary(CFBundleRef bundle);


extern
void CFBundleGetPackageInfo(CFBundleRef bundle, UInt32 *packageType, UInt32 *packageCreator);

extern
CFStringRef CFBundleGetIdentifier(CFBundleRef bundle);

extern
UInt32 CFBundleGetVersionNumber(CFBundleRef bundle);

extern
CFStringRef CFBundleGetDevelopmentRegion(CFBundleRef bundle);

extern
CFURLRef CFBundleCopySupportFilesDirectoryURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopyResourcesDirectoryURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopyPrivateFrameworksURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopySharedFrameworksURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopySharedSupportURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopyBuiltInPlugInsURL(CFBundleRef bundle);






extern
CFDictionaryRef CFBundleCopyInfoDictionaryInDirectory(CFURLRef bundleURL);

extern
Boolean CFBundleGetPackageInfoInDirectory(CFURLRef url, UInt32 *packageType, UInt32 *packageCreator);



extern
CFURLRef CFBundleCopyResourceURL(CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName);

extern
CFArrayRef CFBundleCopyResourceURLsOfType(CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName);

extern
CFStringRef CFBundleCopyLocalizedString(CFBundleRef bundle, CFStringRef key, CFStringRef value, CFStringRef tableName) __attribute__((format_arg(2)));
# 165 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 3
extern
CFURLRef CFBundleCopyResourceURLInDirectory(CFURLRef bundleURL, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName);

extern
CFArrayRef CFBundleCopyResourceURLsOfTypeInDirectory(CFURLRef bundleURL, CFStringRef resourceType, CFStringRef subDirName);






extern
CFArrayRef CFBundleCopyBundleLocalizations(CFBundleRef bundle);


extern
CFArrayRef CFBundleCopyPreferredLocalizationsFromArray(CFArrayRef locArray);






extern
CFArrayRef CFBundleCopyLocalizationsForPreferences(CFArrayRef locArray, CFArrayRef prefArray);
# 199 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 3
extern
CFURLRef CFBundleCopyResourceURLForLocalization(CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName, CFStringRef localizationName);

extern
CFArrayRef CFBundleCopyResourceURLsOfTypeForLocalization(CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName, CFStringRef localizationName);
# 213 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 3
extern
CFDictionaryRef CFBundleCopyInfoDictionaryForURL(CFURLRef url);





extern
CFArrayRef CFBundleCopyLocalizationsForURL(CFURLRef url);






extern
CFArrayRef CFBundleCopyExecutableArchitecturesForURL(CFURLRef url) __attribute__((availability(ios,introduced=2_0)));
# 239 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 3
extern
CFURLRef CFBundleCopyExecutableURL(CFBundleRef bundle);

enum {
    kCFBundleExecutableArchitectureI386 = 0x00000007,
    kCFBundleExecutableArchitecturePPC = 0x00000012,
    kCFBundleExecutableArchitectureX86_64 = 0x01000007,
    kCFBundleExecutableArchitecturePPC64 = 0x01000012
} __attribute__((availability(ios,introduced=2_0)));

extern
CFArrayRef CFBundleCopyExecutableArchitectures(CFBundleRef bundle) __attribute__((availability(ios,introduced=2_0)));





extern
Boolean CFBundlePreflightExecutable(CFBundleRef bundle, CFErrorRef *error) __attribute__((availability(ios,introduced=2_0)));






extern
Boolean CFBundleLoadExecutableAndReturnError(CFBundleRef bundle, CFErrorRef *error) __attribute__((availability(ios,introduced=2_0)));





extern
Boolean CFBundleLoadExecutable(CFBundleRef bundle);

extern
Boolean CFBundleIsExecutableLoaded(CFBundleRef bundle);

extern
void CFBundleUnloadExecutable(CFBundleRef bundle);

extern
void *CFBundleGetFunctionPointerForName(CFBundleRef bundle, CFStringRef functionName);

extern
void CFBundleGetFunctionPointersForNames(CFBundleRef bundle, CFArrayRef functionNames, void *ftbl[]);

extern
void *CFBundleGetDataPointerForName(CFBundleRef bundle, CFStringRef symbolName);

extern
void CFBundleGetDataPointersForNames(CFBundleRef bundle, CFArrayRef symbolNames, void *stbl[]);

extern
CFURLRef CFBundleCopyAuxiliaryExecutableURL(CFBundleRef bundle, CFStringRef executableName);
# 304 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 3
extern
CFPlugInRef CFBundleGetPlugIn(CFBundleRef bundle);




typedef int CFBundleRefNum;




extern
CFBundleRefNum CFBundleOpenBundleResourceMap(CFBundleRef bundle);






extern
SInt32 CFBundleOpenBundleResourceFiles(CFBundleRef bundle, CFBundleRefNum *refNum, CFBundleRefNum *localizedRefNum);



extern
void CFBundleCloseBundleResourceMap(CFBundleRef bundle, CFBundleRefNum refNum);
# 71 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFMessagePort.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFMessagePort.h" 3
typedef struct __attribute__((objc_bridge_mutable(NSMessagePort))) __CFMessagePort * CFMessagePortRef;

enum : SInt32 {
    kCFMessagePortSuccess = 0,
    kCFMessagePortSendTimeout = -1,
    kCFMessagePortReceiveTimeout = -2,
    kCFMessagePortIsInvalid = -3,
    kCFMessagePortTransportError = -4,
    kCFMessagePortBecameInvalidError = -5
};

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFMessagePortContext;

typedef CFDataRef (*CFMessagePortCallBack)(CFMessagePortRef local, SInt32 msgid, CFDataRef data, void *info);

typedef void (*CFMessagePortInvalidationCallBack)(CFMessagePortRef ms, void *info);

extern CFTypeID CFMessagePortGetTypeID(void);

extern CFMessagePortRef CFMessagePortCreateLocal(CFAllocatorRef allocator, CFStringRef name, CFMessagePortCallBack callout, CFMessagePortContext *context, Boolean *shouldFreeInfo);
extern CFMessagePortRef CFMessagePortCreateRemote(CFAllocatorRef allocator, CFStringRef name);

extern Boolean CFMessagePortIsRemote(CFMessagePortRef ms);
extern CFStringRef CFMessagePortGetName(CFMessagePortRef ms);
extern Boolean CFMessagePortSetName(CFMessagePortRef ms, CFStringRef newName);
extern void CFMessagePortGetContext(CFMessagePortRef ms, CFMessagePortContext *context);
extern void CFMessagePortInvalidate(CFMessagePortRef ms);
extern Boolean CFMessagePortIsValid(CFMessagePortRef ms);
extern CFMessagePortInvalidationCallBack CFMessagePortGetInvalidationCallBack(CFMessagePortRef ms);
extern void CFMessagePortSetInvalidationCallBack(CFMessagePortRef ms, CFMessagePortInvalidationCallBack callout);


extern SInt32 CFMessagePortSendRequest(CFMessagePortRef remote, SInt32 msgid, CFDataRef data, CFTimeInterval sendTimeout, CFTimeInterval rcvTimeout, CFStringRef replyMode, CFDataRef *returnData);

extern CFRunLoopSourceRef CFMessagePortCreateRunLoopSource(CFAllocatorRef allocator, CFMessagePortRef local, CFIndex order);

extern void CFMessagePortSetDispatchQueue(CFMessagePortRef ms, dispatch_queue_t queue) __attribute__((availability(ios,introduced=4_0)));
# 74 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPlugIn.h" 1 3
# 24 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPlugIn.h" 3
extern const CFStringRef kCFPlugInDynamicRegistrationKey;
extern const CFStringRef kCFPlugInDynamicRegisterFunctionKey;
extern const CFStringRef kCFPlugInUnloadFunctionKey;
extern const CFStringRef kCFPlugInFactoriesKey;
extern const CFStringRef kCFPlugInTypesKey;




typedef void (*CFPlugInDynamicRegisterFunction)(CFPlugInRef plugIn);
typedef void (*CFPlugInUnloadFunction)(CFPlugInRef plugIn);
typedef void *(*CFPlugInFactoryFunction)(CFAllocatorRef allocator, CFUUIDRef typeUUID);



extern CFTypeID CFPlugInGetTypeID(void);

extern CFPlugInRef CFPlugInCreate(CFAllocatorRef allocator, CFURLRef plugInURL);


extern CFBundleRef CFPlugInGetBundle(CFPlugInRef plugIn);







extern void CFPlugInSetLoadOnDemand(CFPlugInRef plugIn, Boolean flag);

extern Boolean CFPlugInIsLoadOnDemand(CFPlugInRef plugIn);






extern CFArrayRef CFPlugInFindFactoriesForPlugInType(CFUUIDRef typeUUID) __attribute__((cf_returns_retained));



extern CFArrayRef CFPlugInFindFactoriesForPlugInTypeInPlugIn(CFUUIDRef typeUUID, CFPlugInRef plugIn) __attribute__((cf_returns_retained));


extern void *CFPlugInInstanceCreate(CFAllocatorRef allocator, CFUUIDRef factoryUUID, CFUUIDRef typeUUID);





extern Boolean CFPlugInRegisterFactoryFunction(CFUUIDRef factoryUUID, CFPlugInFactoryFunction func);

extern Boolean CFPlugInRegisterFactoryFunctionByName(CFUUIDRef factoryUUID, CFPlugInRef plugIn, CFStringRef functionName);

extern Boolean CFPlugInUnregisterFactory(CFUUIDRef factoryUUID);

extern Boolean CFPlugInRegisterPlugInType(CFUUIDRef factoryUUID, CFUUIDRef typeUUID);

extern Boolean CFPlugInUnregisterPlugInType(CFUUIDRef factoryUUID, CFUUIDRef typeUUID);





extern void CFPlugInAddInstanceForFactory(CFUUIDRef factoryID);

extern void CFPlugInRemoveInstanceForFactory(CFUUIDRef factoryID);




typedef struct __attribute__((objc_bridge(id))) __CFPlugInInstance *CFPlugInInstanceRef;

typedef Boolean (*CFPlugInInstanceGetInterfaceFunction)(CFPlugInInstanceRef instance, CFStringRef interfaceName, void **ftbl);
typedef void (*CFPlugInInstanceDeallocateInstanceDataFunction)(void *instanceData);

extern Boolean CFPlugInInstanceGetInterfaceFunctionTable(CFPlugInInstanceRef instance, CFStringRef interfaceName, void **ftbl);


extern CFStringRef CFPlugInInstanceGetFactoryName(CFPlugInInstanceRef instance) __attribute__((cf_returns_retained));

extern void *CFPlugInInstanceGetInstanceData(CFPlugInInstanceRef instance);

extern CFTypeID CFPlugInInstanceGetTypeID(void);

extern CFPlugInInstanceRef CFPlugInInstanceCreateWithInstanceDataSize(CFAllocatorRef allocator, CFIndex instanceDataSize, CFPlugInInstanceDeallocateInstanceDataFunction deallocateInstanceFunction, CFStringRef factoryName, CFPlugInInstanceGetInterfaceFunction getInterfaceFunction);
# 75 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFMachPort.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFMachPort.h" 3
typedef struct __attribute__((objc_bridge_mutable(NSMachPort))) __CFMachPort * CFMachPortRef;

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFMachPortContext;

typedef void (*CFMachPortCallBack)(CFMachPortRef port, void *msg, CFIndex size, void *info);
typedef void (*CFMachPortInvalidationCallBack)(CFMachPortRef port, void *info);

extern CFTypeID CFMachPortGetTypeID(void);

extern CFMachPortRef CFMachPortCreate(CFAllocatorRef allocator, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo);
extern CFMachPortRef CFMachPortCreateWithPort(CFAllocatorRef allocator, mach_port_t portNum, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo);

extern mach_port_t CFMachPortGetPort(CFMachPortRef port);
extern void CFMachPortGetContext(CFMachPortRef port, CFMachPortContext *context);
extern void CFMachPortInvalidate(CFMachPortRef port);
extern Boolean CFMachPortIsValid(CFMachPortRef port);
extern CFMachPortInvalidationCallBack CFMachPortGetInvalidationCallBack(CFMachPortRef port);
extern void CFMachPortSetInvalidationCallBack(CFMachPortRef port, CFMachPortInvalidationCallBack callout);

extern CFRunLoopSourceRef CFMachPortCreateRunLoopSource(CFAllocatorRef allocator, CFMachPortRef port, CFIndex order);
# 79 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAttributedString.h" 1 3
# 26 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAttributedString.h" 3
typedef const struct __attribute__((objc_bridge(NSAttributedString))) __CFAttributedString *CFAttributedStringRef;
typedef struct __attribute__((objc_bridge_mutable(NSMutableAttributedString))) __CFAttributedString *CFMutableAttributedStringRef;




extern CFTypeID CFAttributedStringGetTypeID(void);
# 41 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAttributedString.h" 3
extern CFAttributedStringRef CFAttributedStringCreate(CFAllocatorRef alloc, CFStringRef str, CFDictionaryRef attributes);




extern CFAttributedStringRef CFAttributedStringCreateWithSubstring(CFAllocatorRef alloc, CFAttributedStringRef aStr, CFRange range);




extern CFAttributedStringRef CFAttributedStringCreateCopy(CFAllocatorRef alloc, CFAttributedStringRef aStr);




extern CFStringRef CFAttributedStringGetString(CFAttributedStringRef aStr);




extern CFIndex CFAttributedStringGetLength(CFAttributedStringRef aStr);






extern CFDictionaryRef CFAttributedStringGetAttributes(CFAttributedStringRef aStr, CFIndex loc, CFRange *effectiveRange);




extern CFTypeRef CFAttributedStringGetAttribute(CFAttributedStringRef aStr, CFIndex loc, CFStringRef attrName, CFRange *effectiveRange);




extern CFDictionaryRef CFAttributedStringGetAttributesAndLongestEffectiveRange(CFAttributedStringRef aStr, CFIndex loc, CFRange inRange, CFRange *longestEffectiveRange);




extern CFTypeRef CFAttributedStringGetAttributeAndLongestEffectiveRange(CFAttributedStringRef aStr, CFIndex loc, CFStringRef attrName, CFRange inRange, CFRange *longestEffectiveRange);
# 92 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAttributedString.h" 3
extern CFMutableAttributedStringRef CFAttributedStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFAttributedStringRef aStr);




extern CFMutableAttributedStringRef CFAttributedStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength);






extern void CFAttributedStringReplaceString(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef replacement);






extern CFMutableStringRef CFAttributedStringGetMutableString(CFMutableAttributedStringRef aStr);




extern void CFAttributedStringSetAttributes(CFMutableAttributedStringRef aStr, CFRange range, CFDictionaryRef replacement, Boolean clearOtherAttributes);




extern void CFAttributedStringSetAttribute(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName, CFTypeRef value);




extern void CFAttributedStringRemoveAttribute(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName);




extern void CFAttributedStringReplaceAttributedString(CFMutableAttributedStringRef aStr, CFRange range, CFAttributedStringRef replacement);




extern void CFAttributedStringBeginEditing(CFMutableAttributedStringRef aStr);




extern void CFAttributedStringEndEditing(CFMutableAttributedStringRef aStr);
# 82 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLEnumerator.h" 1 3
# 20 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLEnumerator.h" 3
typedef const struct __attribute__((objc_bridge_mutable(id))) __CFURLEnumerator *CFURLEnumeratorRef;


extern
CFTypeID CFURLEnumeratorGetTypeID( void ) __attribute__((availability(ios,introduced=4_0)));



typedef enum CFURLEnumeratorOptions : CFOptionFlags CFURLEnumeratorOptions; enum CFURLEnumeratorOptions : CFOptionFlags {
    kCFURLEnumeratorDefaultBehavior = 0,
    kCFURLEnumeratorDescendRecursively = 1UL << 0,
    kCFURLEnumeratorSkipInvisibles = 1UL << 1,
    kCFURLEnumeratorGenerateFileReferenceURLs = 1UL << 2,
    kCFURLEnumeratorSkipPackageContents = 1UL << 3,
    kCFURLEnumeratorIncludeDirectoriesPreOrder = 1UL << 4,
    kCFURLEnumeratorIncludeDirectoriesPostOrder = 1UL << 5,

};







extern
CFURLEnumeratorRef CFURLEnumeratorCreateForDirectoryURL( CFAllocatorRef alloc, CFURLRef directoryURL, CFURLEnumeratorOptions option, CFArrayRef propertyKeys ) __attribute__((availability(ios,introduced=4_0)));
# 55 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLEnumerator.h" 3
extern
CFURLEnumeratorRef CFURLEnumeratorCreateForMountedVolumes( CFAllocatorRef alloc, CFURLEnumeratorOptions option, CFArrayRef propertyKeys ) __attribute__((availability(ios,introduced=4_0)));



typedef enum CFURLEnumeratorResult : CFIndex CFURLEnumeratorResult; enum CFURLEnumeratorResult : CFIndex {
    kCFURLEnumeratorSuccess = 1,
    kCFURLEnumeratorEnd = 2,
    kCFURLEnumeratorError = 3,
    kCFURLEnumeratorDirectoryPostOrderSuccess = 4,
};





extern
CFURLEnumeratorResult CFURLEnumeratorGetNextURL( CFURLEnumeratorRef enumerator, CFURLRef *url, CFErrorRef *error ) __attribute__((availability(ios,introduced=4_0)));
# 82 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLEnumerator.h" 3
extern
void CFURLEnumeratorSkipDescendents( CFURLEnumeratorRef enumerator ) __attribute__((availability(ios,introduced=4_0)));




extern
CFIndex CFURLEnumeratorGetDescendentLevel( CFURLEnumeratorRef enumerator ) __attribute__((availability(ios,introduced=4_0)));






extern
Boolean CFURLEnumeratorGetSourceDidChange( CFURLEnumeratorRef enumerator ) __attribute__((availability(ios,introduced=4_0,deprecated=5_0,message="" )));
# 84 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3






# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
# 1 "APPLE_SDKROOT/usr/include/sys/acl.h" 1 3 4
# 27 "APPLE_SDKROOT/usr/include/sys/acl.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/kauth.h" 1 3 4
# 53 "APPLE_SDKROOT/usr/include/sys/kauth.h" 3 4
# 1 "APPLE_SDKROOT/usr/include/sys/_types/_guid_t.h" 1 3 4
# 31 "APPLE_SDKROOT/usr/include/sys/_types/_guid_t.h" 3 4
typedef struct {

 unsigned char g_guid[16];
} guid_t;
# 54 "APPLE_SDKROOT/usr/include/sys/kauth.h" 2 3 4


#pragma pack(1)
typedef struct {
 u_int8_t sid_kind;
 u_int8_t sid_authcount;
 u_int8_t sid_authority[6];

 u_int32_t sid_authorities[16];
} ntsid_t;
#pragma pack()
# 78 "APPLE_SDKROOT/usr/include/sys/kauth.h" 3 4
struct kauth_identity_extlookup {
 u_int32_t el_seqno;
 u_int32_t el_result;





 u_int32_t el_flags;
# 109 "APPLE_SDKROOT/usr/include/sys/kauth.h" 3 4
 __darwin_pid_t el_info_pid;
 u_int64_t el_extend;
 u_int32_t el_info_reserved_1;

 uid_t el_uid;
 guid_t el_uguid;
 u_int32_t el_uguid_valid;
 ntsid_t el_usid;
 u_int32_t el_usid_valid;
 gid_t el_gid;
 guid_t el_gguid;
 u_int32_t el_gguid_valid;
 ntsid_t el_gsid;
 u_int32_t el_gsid_valid;
 u_int32_t el_member_valid;
  u_int32_t el_sup_grp_cnt;
  gid_t el_sup_groups[16];
};

struct kauth_cache_sizes {
 u_int32_t kcs_group_size;
 u_int32_t kcs_id_size;
};
# 148 "APPLE_SDKROOT/usr/include/sys/kauth.h" 3 4
typedef u_int32_t kauth_ace_rights_t;


struct kauth_ace {
 guid_t ace_applicable;
 u_int32_t ace_flags;
# 172 "APPLE_SDKROOT/usr/include/sys/kauth.h" 3 4
 kauth_ace_rights_t ace_rights;






};



typedef struct kauth_ace *kauth_ace_t;




struct kauth_acl {
 u_int32_t acl_entrycount;
 u_int32_t acl_flags;

 struct kauth_ace acl_ace[1];
};
# 233 "APPLE_SDKROOT/usr/include/sys/kauth.h" 3 4
typedef struct kauth_acl *kauth_acl_t;
# 243 "APPLE_SDKROOT/usr/include/sys/kauth.h" 3 4
struct kauth_filesec {
 u_int32_t fsec_magic;

 guid_t fsec_owner;
 guid_t fsec_group;

 struct kauth_acl fsec_acl;
};
# 264 "APPLE_SDKROOT/usr/include/sys/kauth.h" 3 4
typedef struct kauth_filesec *kauth_filesec_t;
# 28 "APPLE_SDKROOT/usr/include/sys/acl.h" 2 3 4
# 68 "APPLE_SDKROOT/usr/include/sys/acl.h" 3 4
typedef enum {
 ACL_READ_DATA = (1<<1),
 ACL_LIST_DIRECTORY = (1<<1),
 ACL_WRITE_DATA = (1<<2),
 ACL_ADD_FILE = (1<<2),
 ACL_EXECUTE = (1<<3),
 ACL_SEARCH = (1<<3),
 ACL_DELETE = (1<<4),
 ACL_APPEND_DATA = (1<<5),
 ACL_ADD_SUBDIRECTORY = (1<<5),
 ACL_DELETE_CHILD = (1<<6),
 ACL_READ_ATTRIBUTES = (1<<7),
 ACL_WRITE_ATTRIBUTES = (1<<8),
 ACL_READ_EXTATTRIBUTES = (1<<9),
 ACL_WRITE_EXTATTRIBUTES = (1<<10),
 ACL_READ_SECURITY = (1<<11),
 ACL_WRITE_SECURITY = (1<<12),
 ACL_CHANGE_OWNER = (1<<13),
 ACL_SYNCHRONIZE = (1<<20),
} acl_perm_t;


typedef enum {
 ACL_UNDEFINED_TAG = 0,
 ACL_EXTENDED_ALLOW = 1,
 ACL_EXTENDED_DENY = 2
} acl_tag_t;


typedef enum {
 ACL_TYPE_EXTENDED = 0x00000100,

 ACL_TYPE_ACCESS = 0x00000000,
 ACL_TYPE_DEFAULT = 0x00000001,

 ACL_TYPE_AFS = 0x00000002,
 ACL_TYPE_CODA = 0x00000003,
 ACL_TYPE_NTFS = 0x00000004,
 ACL_TYPE_NWFS = 0x00000005
} acl_type_t;






typedef enum {
 ACL_FIRST_ENTRY = 0,
 ACL_NEXT_ENTRY = -1,
 ACL_LAST_ENTRY = -2
} acl_entry_id_t;


typedef enum {
 ACL_FLAG_DEFER_INHERIT = (1 << 0),
 ACL_FLAG_NO_INHERIT = (1<<17),
 ACL_ENTRY_INHERITED = (1<<4),
 ACL_ENTRY_FILE_INHERIT = (1<<5),
 ACL_ENTRY_DIRECTORY_INHERIT = (1<<6),
 ACL_ENTRY_LIMIT_INHERIT = (1<<7),
 ACL_ENTRY_ONLY_INHERIT = (1<<8)
} acl_flag_t;



struct _acl;
struct _acl_entry;
struct _acl_permset;
struct _acl_flagset;

typedef struct _acl *acl_t;
typedef struct _acl_entry *acl_entry_t;
typedef struct _acl_permset *acl_permset_t;
typedef struct _acl_flagset *acl_flagset_t;

typedef u_int64_t acl_permset_mask_t;



extern acl_t acl_dup(acl_t acl);
extern int acl_free(void *obj_p);
extern acl_t acl_init(int count);


extern int acl_copy_entry(acl_entry_t dest_d, acl_entry_t src_d);
extern int acl_create_entry(acl_t *acl_p, acl_entry_t *entry_p);
extern int acl_create_entry_np(acl_t *acl_p, acl_entry_t *entry_p, int entry_index);
extern int acl_delete_entry(acl_t acl, acl_entry_t entry_d);
extern int acl_get_entry(acl_t acl, int entry_id, acl_entry_t *entry_p);
extern int acl_valid(acl_t acl);
extern int acl_valid_fd_np(int fd, acl_type_t type, acl_t acl);
extern int acl_valid_file_np(const char *path, acl_type_t type, acl_t acl);
extern int acl_valid_link_np(const char *path, acl_type_t type, acl_t acl);


extern int acl_add_perm(acl_permset_t permset_d, acl_perm_t perm);
extern int acl_calc_mask(acl_t *acl_p);
extern int acl_clear_perms(acl_permset_t permset_d);
extern int acl_delete_perm(acl_permset_t permset_d, acl_perm_t perm);
extern int acl_get_perm_np(acl_permset_t permset_d, acl_perm_t perm);
extern int acl_get_permset(acl_entry_t entry_d, acl_permset_t *permset_p);
extern int acl_set_permset(acl_entry_t entry_d, acl_permset_t permset_d);


extern int acl_maximal_permset_mask_np(acl_permset_mask_t * mask_p) __attribute__((availability(ios,introduced=4.3)));
extern int acl_get_permset_mask_np(acl_entry_t entry_d, acl_permset_mask_t * mask_p) __attribute__((availability(ios,introduced=4.3)));
extern int acl_set_permset_mask_np(acl_entry_t entry_d, acl_permset_mask_t mask) __attribute__((availability(ios,introduced=4.3)));


extern int acl_add_flag_np(acl_flagset_t flagset_d, acl_flag_t flag);
extern int acl_clear_flags_np(acl_flagset_t flagset_d);
extern int acl_delete_flag_np(acl_flagset_t flagset_d, acl_flag_t flag);
extern int acl_get_flag_np(acl_flagset_t flagset_d, acl_flag_t flag);
extern int acl_get_flagset_np(void *obj_p, acl_flagset_t *flagset_p);
extern int acl_set_flagset_np(void *obj_p, acl_flagset_t flagset_d);


extern void *acl_get_qualifier(acl_entry_t entry_d);
extern int acl_get_tag_type(acl_entry_t entry_d, acl_tag_t *tag_type_p);
extern int acl_set_qualifier(acl_entry_t entry_d, const void *tag_qualifier_p);
extern int acl_set_tag_type(acl_entry_t entry_d, acl_tag_t tag_type);


extern int acl_delete_def_file(const char *path_p);
extern acl_t acl_get_fd(int fd);
extern acl_t acl_get_fd_np(int fd, acl_type_t type);
extern acl_t acl_get_file(const char *path_p, acl_type_t type);
extern acl_t acl_get_link_np(const char *path_p, acl_type_t type);
extern int acl_set_fd(int fd, acl_t acl);
extern int acl_set_fd_np(int fd, acl_t acl, acl_type_t acl_type);
extern int acl_set_file(const char *path_p, acl_type_t type, acl_t acl);
extern int acl_set_link_np(const char *path_p, acl_type_t type, acl_t acl);


extern ssize_t acl_copy_ext(void *buf_p, acl_t acl, ssize_t size);
extern ssize_t acl_copy_ext_native(void *buf_p, acl_t acl, ssize_t size);
extern acl_t acl_copy_int(const void *buf_p);
extern acl_t acl_copy_int_native(const void *buf_p);
extern acl_t acl_from_text(const char *buf_p);
extern ssize_t acl_size(acl_t acl);
extern char *acl_to_text(acl_t acl, ssize_t *len_p);
# 15 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 2 3
# 25 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
typedef struct __attribute__((objc_bridge_mutable(NSFileSecurity))) __CFFileSecurity* CFFileSecurityRef;







extern
CFTypeID CFFileSecurityGetTypeID(void) __attribute__((availability(ios,introduced=5_0)));
# 48 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
CFFileSecurityRef CFFileSecurityCreate(CFAllocatorRef allocator) __attribute__((availability(ios,introduced=5_0)));
# 65 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
CFFileSecurityRef CFFileSecurityCreateCopy(CFAllocatorRef allocator, CFFileSecurityRef fileSec) __attribute__((availability(ios,introduced=5_0)));
# 81 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecurityCopyOwnerUUID(CFFileSecurityRef fileSec, CFUUIDRef *ownerUUID) __attribute__((availability(ios,introduced=5_0)));
# 95 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecuritySetOwnerUUID(CFFileSecurityRef fileSec, CFUUIDRef ownerUUID) __attribute__((availability(ios,introduced=5_0)));
# 110 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecurityCopyGroupUUID(CFFileSecurityRef fileSec, CFUUIDRef *groupUUID) __attribute__((availability(ios,introduced=5_0)));
# 125 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecuritySetGroupUUID(CFFileSecurityRef fileSec, CFUUIDRef groupUUID) __attribute__((availability(ios,introduced=5_0)));
# 145 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecurityCopyAccessControlList(CFFileSecurityRef fileSec, acl_t *accessControlList) __attribute__((availability(ios,introduced=5_0)));
# 167 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecuritySetAccessControlList(CFFileSecurityRef fileSec, acl_t accessControlList) __attribute__((availability(ios,introduced=5_0)));
# 183 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecurityGetOwner(CFFileSecurityRef fileSec, uid_t *owner) __attribute__((availability(ios,introduced=5_0)));
# 198 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecuritySetOwner(CFFileSecurityRef fileSec, uid_t owner) __attribute__((availability(ios,introduced=5_0)));
# 214 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecurityGetGroup(CFFileSecurityRef fileSec, gid_t *group) __attribute__((availability(ios,introduced=5_0)));
# 229 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecuritySetGroup(CFFileSecurityRef fileSec, gid_t group) __attribute__((availability(ios,introduced=5_0)));
# 245 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecurityGetMode(CFFileSecurityRef fileSec, mode_t *mode) __attribute__((availability(ios,introduced=5_0)));
# 260 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecuritySetMode(CFFileSecurityRef fileSec, mode_t mode) __attribute__((availability(ios,introduced=5_0)));



typedef enum CFFileSecurityClearOptions : CFOptionFlags CFFileSecurityClearOptions; enum CFFileSecurityClearOptions : CFOptionFlags {
    kCFFileSecurityClearOwner = 1UL << 0,
    kCFFileSecurityClearGroup = 1UL << 1,
    kCFFileSecurityClearMode = 1UL << 2,
    kCFFileSecurityClearOwnerUUID = 1UL << 3,
    kCFFileSecurityClearGroupUUID = 1UL << 4,
    kCFFileSecurityClearAccessControlList = 1UL << 5
} __attribute__((availability(ios,introduced=6_0)));
# 283 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h" 3
extern
Boolean CFFileSecurityClearProperties(CFFileSecurityRef fileSec, CFFileSecurityClearOptions clearPropertyMask) __attribute__((availability(ios,introduced=6_0)));
# 91 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 1 3
# 52 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFStringRef CFStringTokenizerCopyBestStringLanguage(CFStringRef string, CFRange range) __attribute__((availability(ios,introduced=3_0)));







typedef struct __attribute__((objc_bridge_mutable(id))) __CFStringTokenizer * CFStringTokenizerRef;




enum : CFOptionFlags {






    kCFStringTokenizerUnitWord = 0,
    kCFStringTokenizerUnitSentence = 1,
    kCFStringTokenizerUnitParagraph = 2,
    kCFStringTokenizerUnitLineBreak = 3,




    kCFStringTokenizerUnitWordBoundary = 4,
# 92 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
    kCFStringTokenizerAttributeLatinTranscription = 1UL << 16,


    kCFStringTokenizerAttributeLanguage = 1UL << 17,
};






typedef enum CFStringTokenizerTokenType : CFOptionFlags CFStringTokenizerTokenType; enum CFStringTokenizerTokenType : CFOptionFlags {

    kCFStringTokenizerTokenNone = 0,


    kCFStringTokenizerTokenNormal = 1UL << 0,





    kCFStringTokenizerTokenHasSubTokensMask = 1UL << 1,






    kCFStringTokenizerTokenHasDerivedSubTokensMask = 1UL << 2,

    kCFStringTokenizerTokenHasHasNumbersMask = 1UL << 3,
    kCFStringTokenizerTokenHasNonLettersMask = 1UL << 4,
    kCFStringTokenizerTokenIsCJWordMask = 1UL << 5
};






extern
CFTypeID CFStringTokenizerGetTypeID(void) __attribute__((availability(ios,introduced=3_0)));
# 153 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFStringTokenizerRef CFStringTokenizerCreate(CFAllocatorRef alloc, CFStringRef string, CFRange range, CFOptionFlags options, CFLocaleRef locale) __attribute__((availability(ios,introduced=3_0)));
# 165 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
void CFStringTokenizerSetString(CFStringTokenizerRef tokenizer, CFStringRef string, CFRange range) __attribute__((availability(ios,introduced=3_0)));
# 183 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFStringTokenizerTokenType CFStringTokenizerGoToTokenAtIndex(CFStringTokenizerRef tokenizer, CFIndex index) __attribute__((availability(ios,introduced=3_0)));
# 207 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFStringTokenizerTokenType CFStringTokenizerAdvanceToNextToken(CFStringTokenizerRef tokenizer) __attribute__((availability(ios,introduced=3_0)));
# 217 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFRange CFStringTokenizerGetCurrentTokenRange(CFStringTokenizerRef tokenizer) __attribute__((availability(ios,introduced=3_0)));
# 231 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFTypeRef CFStringTokenizerCopyCurrentTokenAttribute(CFStringTokenizerRef tokenizer, CFOptionFlags attribute) __attribute__((availability(ios,introduced=3_0)));
# 258 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFIndex CFStringTokenizerGetCurrentSubTokens(CFStringTokenizerRef tokenizer, CFRange *ranges, CFIndex maxRangeLength, CFMutableArrayRef derivedSubTokens) __attribute__((availability(ios,introduced=3_0)));
# 92 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileDescriptor.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileDescriptor.h" 3
typedef int CFFileDescriptorNativeDescriptor;

typedef struct __attribute__((objc_bridge_mutable(id))) __CFFileDescriptor * CFFileDescriptorRef;


enum : CFOptionFlags {
    kCFFileDescriptorReadCallBack = 1UL << 0,
    kCFFileDescriptorWriteCallBack = 1UL << 1
};

typedef void (*CFFileDescriptorCallBack)(CFFileDescriptorRef f, CFOptionFlags callBackTypes, void *info);

typedef struct {
    CFIndex version;
    void * info;
    void * (*retain)(void *info);
    void (*release)(void *info);
    CFStringRef (*copyDescription)(void *info);
} CFFileDescriptorContext;

extern CFTypeID CFFileDescriptorGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));

extern CFFileDescriptorRef CFFileDescriptorCreate(CFAllocatorRef allocator, CFFileDescriptorNativeDescriptor fd, Boolean closeOnInvalidate, CFFileDescriptorCallBack callout, const CFFileDescriptorContext *context) __attribute__((availability(ios,introduced=2_0)));

extern CFFileDescriptorNativeDescriptor CFFileDescriptorGetNativeDescriptor(CFFileDescriptorRef f) __attribute__((availability(ios,introduced=2_0)));

extern void CFFileDescriptorGetContext(CFFileDescriptorRef f, CFFileDescriptorContext *context) __attribute__((availability(ios,introduced=2_0)));

extern void CFFileDescriptorEnableCallBacks(CFFileDescriptorRef f, CFOptionFlags callBackTypes) __attribute__((availability(ios,introduced=2_0)));
extern void CFFileDescriptorDisableCallBacks(CFFileDescriptorRef f, CFOptionFlags callBackTypes) __attribute__((availability(ios,introduced=2_0)));

extern void CFFileDescriptorInvalidate(CFFileDescriptorRef f) __attribute__((availability(ios,introduced=2_0)));
extern Boolean CFFileDescriptorIsValid(CFFileDescriptorRef f) __attribute__((availability(ios,introduced=2_0)));

extern CFRunLoopSourceRef CFFileDescriptorCreateRunLoopSource(CFAllocatorRef allocator, CFFileDescriptorRef f, CFIndex order) __attribute__((availability(ios,introduced=2_0)));
# 93 "APPLE_SDKROOT/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 7 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSObjCRuntime.h" 1 3
# 363 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSObjCRuntime.h" 3
extern double NSFoundationVersionNumber;
# 492 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSObjCRuntime.h" 3
@class NSString, Protocol;

typedef NSString * NSExceptionName __attribute__((swift_wrapper(struct)));
typedef NSString * NSRunLoopMode __attribute__((swift_wrapper(struct)));

extern NSString *NSStringFromSelector(SEL aSelector);
extern SEL NSSelectorFromString(NSString *aSelectorName);

extern NSString *NSStringFromClass(Class aClass);
extern Class _Nullable NSClassFromString(NSString *aClassName);

extern NSString *NSStringFromProtocol(Protocol *proto) __attribute__((availability(ios,introduced=2_0)));
extern Protocol * _Nullable NSProtocolFromString(NSString *namestr) __attribute__((availability(ios,introduced=2_0)));

extern const char *NSGetSizeAndAlignment(const char *typePtr, NSUInteger * _Nullable sizep, NSUInteger * _Nullable alignp);

extern void NSLog(NSString *format, ...) __attribute__((format(__NSString__, 1, 2))) __attribute__((not_tail_called));
extern void NSLogv(NSString *format, va_list args) __attribute__((format(__NSString__, 1, 0))) __attribute__((not_tail_called));

typedef enum NSComparisonResult : NSInteger NSComparisonResult; enum NSComparisonResult : NSInteger {NSOrderedAscending = -1L, NSOrderedSame, NSOrderedDescending};


typedef NSComparisonResult (^NSComparator)(id obj1, id obj2);


typedef enum NSEnumerationOptions : NSUInteger NSEnumerationOptions; enum NSEnumerationOptions : NSUInteger {
    NSEnumerationConcurrent = (1UL << 0),
    NSEnumerationReverse = (1UL << 1),
};

typedef enum NSSortOptions : NSUInteger NSSortOptions; enum NSSortOptions : NSUInteger {
    NSSortConcurrent = (1UL << 0),
    NSSortStable = (1UL << 4),
};


typedef enum NSQualityOfService : NSInteger NSQualityOfService; enum NSQualityOfService : NSInteger {

    NSQualityOfServiceUserInteractive = 0x21,


    NSQualityOfServiceUserInitiated = 0x19,


    NSQualityOfServiceUtility = 0x11,


    NSQualityOfServiceBackground = 0x09,


    NSQualityOfServiceDefault = -1
} __attribute__((availability(ios,introduced=8_0)));

static const NSInteger NSNotFound = 9223372036854775807L;
# 9 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSArray.h" 1 3




# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSObject.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSZone.h" 1 3







@class NSString;



typedef struct _NSZone NSZone;

extern NSZone *NSDefaultMallocZone(void) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern NSZone *NSCreateZone(NSUInteger startSize, NSUInteger granularity, BOOL canFree) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern void NSRecycleZone(NSZone *zone)__attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));

extern void NSSetZoneName(NSZone * _Nullable zone, NSString *name)__attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern NSString *NSZoneName(NSZone * _Nullable zone) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern NSZone * _Nullable NSZoneFromPointer(void *ptr) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));

extern void *NSZoneMalloc(NSZone * _Nullable zone, NSUInteger size) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern void *NSZoneCalloc(NSZone * _Nullable zone, NSUInteger numElems, NSUInteger byteSize) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern void *NSZoneRealloc(NSZone * _Nullable zone, void * _Nullable ptr, NSUInteger size) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern void NSZoneFree(NSZone * _Nullable zone, void *ptr) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
# 54 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSZone.h" 3
static __inline__ __attribute__((always_inline)) __attribute__((ns_returns_retained)) id _Nullable NSMakeCollectable(CFTypeRef _Nullable __attribute__((cf_consumed)) cf) __attribute__((availability(swift, unavailable, message="Garbage Collection is not supported")));
static __inline__ __attribute__((always_inline)) __attribute__((ns_returns_retained)) id _Nullable NSMakeCollectable(CFTypeRef _Nullable __attribute__((cf_consumed)) cf) {



    return (id)cf;

}

extern NSUInteger NSPageSize(void);
extern NSUInteger NSLogPageSize(void);
extern NSUInteger NSRoundUpToMultipleOfPageSize(NSUInteger bytes);
extern NSUInteger NSRoundDownToMultipleOfPageSize(NSUInteger bytes);
extern void *NSAllocateMemoryPages(NSUInteger bytes);
extern void NSDeallocateMemoryPages(void *ptr, NSUInteger bytes);
extern void NSCopyMemoryPages(const void *source, void *dest, NSUInteger bytes);
extern NSUInteger NSRealMemoryAvailable(void) __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" )));
# 9 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSObject.h" 2 3

@class NSInvocation, NSMethodSignature, NSCoder, NSString, NSEnumerator;
@class Protocol;





@protocol NSCopying

- (id)copyWithZone:(nullable NSZone *)zone;

@end

@protocol NSMutableCopying

- (id)mutableCopyWithZone:(nullable NSZone *)zone;

@end

@protocol NSCoding

- (void)encodeWithCoder:(NSCoder *)aCoder;
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder;

@end




@protocol NSSecureCoding <NSCoding>
@required



@property (class, readonly) BOOL supportsSecureCoding;



@end



@interface NSObject (NSCoderMethods)

+ (NSInteger)version;
+ (void)setVersion:(NSInteger)aVersion;
@property (readonly) Class classForCoder;
- (nullable id)replacementObjectForCoder:(NSCoder *)aCoder;
- (nullable id)awakeAfterUsingCoder:(NSCoder *)aDecoder __attribute__((ns_consumes_self)) __attribute__((ns_returns_retained));

@end
# 77 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSObject.h" 3
@protocol NSDiscardableContent
@required
- (BOOL)beginContentAccess;
- (void)endContentAccess;
- (void)discardContentIfPossible;
- (BOOL)isContentDiscarded;
@end

@interface NSObject (NSDiscardableContentProxy)
@property (readonly, retain) id autoContentAccessingProxy __attribute__((availability(ios,introduced=4_0)));
@end



extern id NSAllocateObject(Class aClass, NSUInteger extraBytes, NSZone * _Nullable zone) ;

extern void NSDeallocateObject(id object) ;

extern id NSCopyObject(id object, NSUInteger extraBytes, NSZone * _Nullable zone) __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" )));

extern BOOL NSShouldRetainWithZone(id anObject, NSZone * _Nullable requestedZone) ;

extern void NSIncrementExtraRefCount(id object) ;

extern BOOL NSDecrementExtraRefCountWasZero(id object) ;

extern NSUInteger NSExtraRefCount(id object) ;
# 119 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSObject.h" 3
static __inline__ __attribute__((always_inline)) __attribute__((cf_returns_retained)) CFTypeRef _Nullable CFBridgingRetain(id _Nullable X) {
    return X ? CFRetain((CFTypeRef)X) : ((void*)0);
}


static __inline__ __attribute__((always_inline)) id _Nullable CFBridgingRelease(CFTypeRef __attribute__((cf_consumed)) _Nullable X) {
    return [(id)CFMakeCollectable(X) autorelease];
}
# 6 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSArray.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSEnumerator.h" 1 3






@class NSArray<ObjectType>;
# 21 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSEnumerator.h" 3
typedef struct {
    unsigned long state;
    id __attribute__((objc_ownership(none))) _Nullable * _Nullable itemsPtr;
    unsigned long * _Nullable mutationsPtr;
    unsigned long extra[5];
} NSFastEnumerationState;

@protocol NSFastEnumeration

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id __attribute__((objc_ownership(none))) _Nullable [_Nonnull])buffer count:(NSUInteger)len;

@end

@interface NSEnumerator<ObjectType> : NSObject <NSFastEnumeration>

- (nullable ObjectType)nextObject;

@end

@interface NSEnumerator<ObjectType> (NSExtendedEnumerator)

@property (readonly, copy) NSArray<ObjectType> *allObjects;

@end
# 7 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSArray.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSRange.h" 1 3




# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSValue.h" 1 3






@class NSString, NSDictionary;



@interface NSValue : NSObject <NSCopying, NSSecureCoding>

- (void)getValue:(void *)value;
@property (readonly) const char *objCType __attribute__((objc_returns_inner_pointer));

- (instancetype)initWithBytes:(const void *)value objCType:(const char *)type __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end

@interface NSValue (NSValueCreation)

+ (NSValue *)valueWithBytes:(const void *)value objCType:(const char *)type;
+ (NSValue *)value:(const void *)value withObjCType:(const char *)type;

@end

@interface NSValue (NSValueExtensionMethods)

+ (NSValue *)valueWithNonretainedObject:(nullable id)anObject;
@property (nullable, readonly) id nonretainedObjectValue;

+ (NSValue *)valueWithPointer:(nullable const void *)pointer;
@property (nullable, readonly) void *pointerValue;

- (BOOL)isEqualToValue:(NSValue *)value;

@end

@interface NSNumber : NSValue

- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
- (NSNumber *)initWithChar:(char)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithUnsignedChar:(unsigned char)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithShort:(short)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithUnsignedShort:(unsigned short)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithInt:(int)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithUnsignedInt:(unsigned int)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithLong:(long)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithUnsignedLong:(unsigned long)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithLongLong:(long long)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithUnsignedLongLong:(unsigned long long)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithFloat:(float)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithDouble:(double)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithBool:(BOOL)value __attribute__((objc_designated_initializer));
- (NSNumber *)initWithInteger:(NSInteger)value __attribute__((availability(ios,introduced=2_0))) __attribute__((objc_designated_initializer));
- (NSNumber *)initWithUnsignedInteger:(NSUInteger)value __attribute__((availability(ios,introduced=2_0))) __attribute__((objc_designated_initializer));

@property (readonly) char charValue;
@property (readonly) unsigned char unsignedCharValue;
@property (readonly) short shortValue;
@property (readonly) unsigned short unsignedShortValue;
@property (readonly) int intValue;
@property (readonly) unsigned int unsignedIntValue;
@property (readonly) long longValue;
@property (readonly) unsigned long unsignedLongValue;
@property (readonly) long long longLongValue;
@property (readonly) unsigned long long unsignedLongLongValue;
@property (readonly) float floatValue;
@property (readonly) double doubleValue;
@property (readonly) BOOL boolValue;
@property (readonly) NSInteger integerValue __attribute__((availability(ios,introduced=2_0)));
@property (readonly) NSUInteger unsignedIntegerValue __attribute__((availability(ios,introduced=2_0)));

@property (readonly, copy) NSString *stringValue;

- (NSComparisonResult)compare:(NSNumber *)otherNumber;

- (BOOL)isEqualToNumber:(NSNumber *)number;

- (NSString *)descriptionWithLocale:(nullable id)locale;

@end

@interface NSNumber (NSNumberCreation)

+ (NSNumber *)numberWithChar:(char)value;
+ (NSNumber *)numberWithUnsignedChar:(unsigned char)value;
+ (NSNumber *)numberWithShort:(short)value;
+ (NSNumber *)numberWithUnsignedShort:(unsigned short)value;
+ (NSNumber *)numberWithInt:(int)value;
+ (NSNumber *)numberWithUnsignedInt:(unsigned int)value;
+ (NSNumber *)numberWithLong:(long)value;
+ (NSNumber *)numberWithUnsignedLong:(unsigned long)value;
+ (NSNumber *)numberWithLongLong:(long long)value;
+ (NSNumber *)numberWithUnsignedLongLong:(unsigned long long)value;
+ (NSNumber *)numberWithFloat:(float)value;
+ (NSNumber *)numberWithDouble:(double)value;
+ (NSNumber *)numberWithBool:(BOOL)value;
+ (NSNumber *)numberWithInteger:(NSInteger)value __attribute__((availability(ios,introduced=2_0)));
+ (NSNumber *)numberWithUnsignedInteger:(NSUInteger)value __attribute__((availability(ios,introduced=2_0)));

@end
# 6 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSRange.h" 2 3


@class NSString;



typedef struct _NSRange {
    NSUInteger location;
    NSUInteger length;
} NSRange;

typedef NSRange *NSRangePointer;

static __inline__ __attribute__((always_inline)) NSRange NSMakeRange(NSUInteger loc, NSUInteger len) {
    NSRange r;
    r.location = loc;
    r.length = len;
    return r;
}

static __inline__ __attribute__((always_inline)) NSUInteger NSMaxRange(NSRange range) {
    return (range.location + range.length);
}

static __inline__ __attribute__((always_inline)) BOOL NSLocationInRange(NSUInteger loc, NSRange range) {
    return (!(loc < range.location) && (loc - range.location) < range.length) ? __objc_yes : __objc_no;
}

static __inline__ __attribute__((always_inline)) BOOL NSEqualRanges(NSRange range1, NSRange range2) {
    return (range1.location == range2.location && range1.length == range2.length);
}

extern NSRange NSUnionRange(NSRange range1, NSRange range2);
extern NSRange NSIntersectionRange(NSRange range1, NSRange range2);
extern NSString *NSStringFromRange(NSRange range);
extern NSRange NSRangeFromString(NSString *aString);

@interface NSValue (NSValueRangeExtensions)

+ (NSValue *)valueWithRange:(NSRange)range;
@property (readonly) NSRange rangeValue;

@end
# 8 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSArray.h" 2 3


@class NSData, NSIndexSet, NSString, NSURL;





@interface NSArray<__covariant ObjectType> : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>

@property (readonly) NSUInteger count;
- (ObjectType)objectAtIndex:(NSUInteger)index;
- (instancetype)init __attribute__((objc_designated_initializer));
- (instancetype)initWithObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)cnt __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end

@interface NSArray<ObjectType> (NSExtendedArray)

- (NSArray<ObjectType> *)arrayByAddingObject:(ObjectType)anObject;
- (NSArray<ObjectType> *)arrayByAddingObjectsFromArray:(NSArray<ObjectType> *)otherArray;
- (NSString *)componentsJoinedByString:(NSString *)separator;
- (BOOL)containsObject:(ObjectType)anObject;
@property (readonly, copy) NSString *description;
- (NSString *)descriptionWithLocale:(nullable id)locale;
- (NSString *)descriptionWithLocale:(nullable id)locale indent:(NSUInteger)level;
- (nullable ObjectType)firstObjectCommonWithArray:(NSArray<ObjectType> *)otherArray;
- (void)getObjects:(ObjectType __attribute__((objc_ownership(none))) [])objects range:(NSRange)range __attribute__((availability(swift, unavailable, message="Use 'subarrayWithRange()' instead")));
- (NSUInteger)indexOfObject:(ObjectType)anObject;
- (NSUInteger)indexOfObject:(ObjectType)anObject inRange:(NSRange)range;
- (NSUInteger)indexOfObjectIdenticalTo:(ObjectType)anObject;
- (NSUInteger)indexOfObjectIdenticalTo:(ObjectType)anObject inRange:(NSRange)range;
- (BOOL)isEqualToArray:(NSArray<ObjectType> *)otherArray;
@property (nullable, nonatomic, readonly) ObjectType firstObject __attribute__((availability(ios,introduced=4_0)));
@property (nullable, nonatomic, readonly) ObjectType lastObject;
- (NSEnumerator<ObjectType> *)objectEnumerator;
- (NSEnumerator<ObjectType> *)reverseObjectEnumerator;
@property (readonly, copy) NSData *sortedArrayHint;
- (NSArray<ObjectType> *)sortedArrayUsingFunction:(NSInteger (__attribute__((noescape)) *)(ObjectType, ObjectType, void * _Nullable))comparator context:(nullable void *)context;
- (NSArray<ObjectType> *)sortedArrayUsingFunction:(NSInteger (__attribute__((noescape)) *)(ObjectType, ObjectType, void * _Nullable))comparator context:(nullable void *)context hint:(nullable NSData *)hint;
- (NSArray<ObjectType> *)sortedArrayUsingSelector:(SEL)comparator;
- (NSArray<ObjectType> *)subarrayWithRange:(NSRange)range;
- (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile;
- (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically;

- (void)makeObjectsPerformSelector:(SEL)aSelector __attribute__((availability(swift, unavailable, message="Use enumerateObjectsUsingBlock: or a for loop instead")));
- (void)makeObjectsPerformSelector:(SEL)aSelector withObject:(nullable id)argument __attribute__((availability(swift, unavailable, message="Use enumerateObjectsUsingBlock: or a for loop instead")));

- (NSArray<ObjectType> *)objectsAtIndexes:(NSIndexSet *)indexes;

- (ObjectType)objectAtIndexedSubscript:(NSUInteger)idx __attribute__((availability(ios,introduced=6_0)));

- (void)enumerateObjectsUsingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));
- (void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));
- (void)enumerateObjectsAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));

- (NSUInteger)indexOfObjectPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));
- (NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));
- (NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape))^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));

- (NSIndexSet *)indexesOfObjectsPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));
- (NSIndexSet *)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));
- (NSIndexSet *)indexesOfObjectsAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));

- (NSArray<ObjectType> *)sortedArrayUsingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(ios,introduced=4_0)));
- (NSArray<ObjectType> *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(ios,introduced=4_0)));

typedef enum NSBinarySearchingOptions : NSUInteger NSBinarySearchingOptions; enum NSBinarySearchingOptions : NSUInteger {
 NSBinarySearchingFirstEqual = (1UL << 8),
 NSBinarySearchingLastEqual = (1UL << 9),
 NSBinarySearchingInsertionIndex = (1UL << 10),
};

- (NSUInteger)indexOfObject:(ObjectType)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmp __attribute__((availability(ios,introduced=4_0)));

@end

@interface NSArray<ObjectType> (NSArrayCreation)

+ (instancetype)array;
+ (instancetype)arrayWithObject:(ObjectType)anObject;
+ (instancetype)arrayWithObjects:(const ObjectType [])objects count:(NSUInteger)cnt;
+ (instancetype)arrayWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
+ (instancetype)arrayWithArray:(NSArray<ObjectType> *)array;

- (instancetype)initWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
- (instancetype)initWithArray:(NSArray<ObjectType> *)array;
- (instancetype)initWithArray:(NSArray<ObjectType> *)array copyItems:(BOOL)flag;

+ (nullable NSArray<ObjectType> *)arrayWithContentsOfFile:(NSString *)path;
+ (nullable NSArray<ObjectType> *)arrayWithContentsOfURL:(NSURL *)url;
- (nullable NSArray<ObjectType> *)initWithContentsOfFile:(NSString *)path;
- (nullable NSArray<ObjectType> *)initWithContentsOfURL:(NSURL *)url;

@end

@interface NSArray<ObjectType> (NSDeprecated)



- (void)getObjects:(ObjectType __attribute__((objc_ownership(none))) [])objects __attribute__((availability(swift, unavailable, message="Use 'as [AnyObject]' instead")));

@end



@interface NSMutableArray<ObjectType> : NSArray<ObjectType>

- (void)addObject:(ObjectType)anObject;
- (void)insertObject:(ObjectType)anObject atIndex:(NSUInteger)index;
- (void)removeLastObject;
- (void)removeObjectAtIndex:(NSUInteger)index;
- (void)replaceObjectAtIndex:(NSUInteger)index withObject:(ObjectType)anObject;
- (instancetype)init __attribute__((objc_designated_initializer));
- (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end

@interface NSMutableArray<ObjectType> (NSExtendedMutableArray)

- (void)addObjectsFromArray:(NSArray<ObjectType> *)otherArray;
- (void)exchangeObjectAtIndex:(NSUInteger)idx1 withObjectAtIndex:(NSUInteger)idx2;
- (void)removeAllObjects;
- (void)removeObject:(ObjectType)anObject inRange:(NSRange)range;
- (void)removeObject:(ObjectType)anObject;
- (void)removeObjectIdenticalTo:(ObjectType)anObject inRange:(NSRange)range;
- (void)removeObjectIdenticalTo:(ObjectType)anObject;
- (void)removeObjectsFromIndices:(NSUInteger *)indices numIndices:(NSUInteger)cnt __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
- (void)removeObjectsInArray:(NSArray<ObjectType> *)otherArray;
- (void)removeObjectsInRange:(NSRange)range;
- (void)replaceObjectsInRange:(NSRange)range withObjectsFromArray:(NSArray<ObjectType> *)otherArray range:(NSRange)otherRange;
- (void)replaceObjectsInRange:(NSRange)range withObjectsFromArray:(NSArray<ObjectType> *)otherArray;
- (void)setArray:(NSArray<ObjectType> *)otherArray;
- (void)sortUsingFunction:(NSInteger (__attribute__((noescape)) *)(ObjectType, ObjectType, void * _Nullable))compare context:(nullable void *)context;
- (void)sortUsingSelector:(SEL)comparator;

- (void)insertObjects:(NSArray<ObjectType> *)objects atIndexes:(NSIndexSet *)indexes;
- (void)removeObjectsAtIndexes:(NSIndexSet *)indexes;
- (void)replaceObjectsAtIndexes:(NSIndexSet *)indexes withObjects:(NSArray<ObjectType> *)objects;

- (void)setObject:(ObjectType)obj atIndexedSubscript:(NSUInteger)idx __attribute__((availability(ios,introduced=6_0)));

- (void)sortUsingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(ios,introduced=4_0)));
- (void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(ios,introduced=4_0)));

@end

@interface NSMutableArray<ObjectType> (NSMutableArrayCreation)

+ (instancetype)arrayWithCapacity:(NSUInteger)numItems;

+ (nullable NSMutableArray<ObjectType> *)arrayWithContentsOfFile:(NSString *)path;
+ (nullable NSMutableArray<ObjectType> *)arrayWithContentsOfURL:(NSURL *)url;
- (nullable NSMutableArray<ObjectType> *)initWithContentsOfFile:(NSString *)path;
- (nullable NSMutableArray<ObjectType> *)initWithContentsOfURL:(NSURL *)url;

@end
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSAutoreleasePool.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSAutoreleasePool.h" 3
@interface NSAutoreleasePool : NSObject {
@private
    void *_token;
    void *_reserved3;
    void *_reserved2;
    void *_reserved;
}

+ (void)addObject:(id)anObject;

- (void)addObject:(id)anObject;

- (void)drain;

@end
# 12 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSBundle.h" 1 3





# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSString.h" 1 3




typedef unsigned short unichar;






@class NSData, NSArray<ObjectType>, NSDictionary<KeyType, ObjectType>, NSCharacterSet, NSURL, NSError, NSLocale;





typedef enum NSStringCompareOptions : NSUInteger NSStringCompareOptions; enum NSStringCompareOptions : NSUInteger {
    NSCaseInsensitiveSearch = 1,
    NSLiteralSearch = 2,
    NSBackwardsSearch = 4,
    NSAnchoredSearch = 8,
    NSNumericSearch = 64,
    NSDiacriticInsensitiveSearch __attribute__((availability(ios,introduced=2_0))) = 128,
    NSWidthInsensitiveSearch __attribute__((availability(ios,introduced=2_0))) = 256,
    NSForcedOrderingSearch __attribute__((availability(ios,introduced=2_0))) = 512,
    NSRegularExpressionSearch __attribute__((availability(ios,introduced=3_2))) = 1024
};





typedef NSUInteger NSStringEncoding;
enum : NSStringEncoding {
    NSASCIIStringEncoding = 1,
    NSNEXTSTEPStringEncoding = 2,
    NSJapaneseEUCStringEncoding = 3,
    NSUTF8StringEncoding = 4,
    NSISOLatin1StringEncoding = 5,
    NSSymbolStringEncoding = 6,
    NSNonLossyASCIIStringEncoding = 7,
    NSShiftJISStringEncoding = 8,
    NSISOLatin2StringEncoding = 9,
    NSUnicodeStringEncoding = 10,
    NSWindowsCP1251StringEncoding = 11,
    NSWindowsCP1252StringEncoding = 12,
    NSWindowsCP1253StringEncoding = 13,
    NSWindowsCP1254StringEncoding = 14,
    NSWindowsCP1250StringEncoding = 15,
    NSISO2022JPStringEncoding = 21,
    NSMacOSRomanStringEncoding = 30,

    NSUTF16StringEncoding = NSUnicodeStringEncoding,

    NSUTF16BigEndianStringEncoding = 0x90000100,
    NSUTF16LittleEndianStringEncoding = 0x94000100,

    NSUTF32StringEncoding = 0x8c000100,
    NSUTF32BigEndianStringEncoding = 0x98000100,
    NSUTF32LittleEndianStringEncoding = 0x9c000100
};

typedef enum NSStringEncodingConversionOptions : NSUInteger NSStringEncodingConversionOptions; enum NSStringEncodingConversionOptions : NSUInteger {
    NSStringEncodingConversionAllowLossy = 1,
    NSStringEncodingConversionExternalRepresentation = 2
};


@interface NSString : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>





@property (readonly) NSUInteger length;
- (unichar)characterAtIndex:(NSUInteger)index;



- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end

@interface NSString (NSStringExtensionMethods)
# 95 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSString.h" 3
- (NSString *)substringFromIndex:(NSUInteger)from;
- (NSString *)substringToIndex:(NSUInteger)to;
- (NSString *)substringWithRange:(NSRange)range;

- (void)getCharacters:(unichar *)buffer range:(NSRange)range;






- (NSComparisonResult)compare:(NSString *)string;
- (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask;
- (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToCompare;
- (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToCompare locale:(nullable id)locale;
- (NSComparisonResult)caseInsensitiveCompare:(NSString *)string;
- (NSComparisonResult)localizedCompare:(NSString *)string;
- (NSComparisonResult)localizedCaseInsensitiveCompare:(NSString *)string;



- (NSComparisonResult)localizedStandardCompare:(NSString *)string __attribute__((availability(ios,introduced=4_0)));

- (BOOL)isEqualToString:(NSString *)aString;






- (BOOL)hasPrefix:(NSString *)str;
- (BOOL)hasSuffix:(NSString *)str;

- (NSString *)commonPrefixWithString:(NSString *)str options:(NSStringCompareOptions)mask;



- (BOOL)containsString:(NSString *)str __attribute__((availability(ios,introduced=8_0)));
- (BOOL)localizedCaseInsensitiveContainsString:(NSString *)str __attribute__((availability(ios,introduced=8_0)));



- (BOOL)localizedStandardContainsString:(NSString *)str __attribute__((availability(ios,introduced=9_0)));
- (NSRange)localizedStandardRangeOfString:(NSString *)str __attribute__((availability(ios,introduced=9_0)));







- (NSRange)rangeOfString:(NSString *)searchString;
- (NSRange)rangeOfString:(NSString *)searchString options:(NSStringCompareOptions)mask;
- (NSRange)rangeOfString:(NSString *)searchString options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToSearch;
- (NSRange)rangeOfString:(NSString *)searchString options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToSearch locale:(nullable NSLocale *)locale __attribute__((availability(ios,introduced=2_0)));





- (NSRange)rangeOfCharacterFromSet:(NSCharacterSet *)searchSet;
- (NSRange)rangeOfCharacterFromSet:(NSCharacterSet *)searchSet options:(NSStringCompareOptions)mask;
- (NSRange)rangeOfCharacterFromSet:(NSCharacterSet *)searchSet options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToSearch;

- (NSRange)rangeOfComposedCharacterSequenceAtIndex:(NSUInteger)index;
- (NSRange)rangeOfComposedCharacterSequencesForRange:(NSRange)range __attribute__((availability(ios,introduced=2_0)));

- (NSString *)stringByAppendingString:(NSString *)aString;
- (NSString *)stringByAppendingFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));






@property (readonly) double doubleValue;
@property (readonly) float floatValue;
@property (readonly) int intValue;
@property (readonly) NSInteger integerValue __attribute__((availability(ios,introduced=2_0)));
@property (readonly) long long longLongValue __attribute__((availability(ios,introduced=2_0)));
@property (readonly) BOOL boolValue __attribute__((availability(ios,introduced=2_0)));






@property (readonly, copy) NSString *uppercaseString;
@property (readonly, copy) NSString *lowercaseString;
@property (readonly, copy) NSString *capitalizedString;



@property (readonly, copy) NSString *localizedUppercaseString __attribute__((availability(ios,introduced=9_0)));
@property (readonly, copy) NSString *localizedLowercaseString __attribute__((availability(ios,introduced=9_0)));
@property (readonly, copy) NSString *localizedCapitalizedString __attribute__((availability(ios,introduced=9_0)));



- (NSString *)uppercaseStringWithLocale:(nullable NSLocale *)locale __attribute__((availability(ios,introduced=6_0)));
- (NSString *)lowercaseStringWithLocale:(nullable NSLocale *)locale __attribute__((availability(ios,introduced=6_0)));
- (NSString *)capitalizedStringWithLocale:(nullable NSLocale *)locale __attribute__((availability(ios,introduced=6_0)));




- (void)getLineStart:(nullable NSUInteger *)startPtr end:(nullable NSUInteger *)lineEndPtr contentsEnd:(nullable NSUInteger *)contentsEndPtr forRange:(NSRange)range;
- (NSRange)lineRangeForRange:(NSRange)range;

- (void)getParagraphStart:(nullable NSUInteger *)startPtr end:(nullable NSUInteger *)parEndPtr contentsEnd:(nullable NSUInteger *)contentsEndPtr forRange:(NSRange)range;
- (NSRange)paragraphRangeForRange:(NSRange)range;

typedef enum NSStringEnumerationOptions : NSUInteger NSStringEnumerationOptions; enum NSStringEnumerationOptions : NSUInteger {

    NSStringEnumerationByLines = 0,
    NSStringEnumerationByParagraphs = 1,
    NSStringEnumerationByComposedCharacterSequences = 2,
    NSStringEnumerationByWords = 3,
    NSStringEnumerationBySentences = 4,

    NSStringEnumerationReverse = 1UL << 8,
    NSStringEnumerationSubstringNotRequired = 1UL << 9,
    NSStringEnumerationLocalized = 1UL << 10
};



- (void)enumerateSubstringsInRange:(NSRange)range options:(NSStringEnumerationOptions)opts usingBlock:(void (^)(NSString * _Nullable substring, NSRange substringRange, NSRange enclosingRange, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));
- (void)enumerateLinesUsingBlock:(void (^)(NSString *line, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));




@property (nullable, readonly) const char *UTF8String __attribute__((objc_returns_inner_pointer));

@property (readonly) NSStringEncoding fastestEncoding;
@property (readonly) NSStringEncoding smallestEncoding;

- (nullable NSData *)dataUsingEncoding:(NSStringEncoding)encoding allowLossyConversion:(BOOL)lossy;
- (nullable NSData *)dataUsingEncoding:(NSStringEncoding)encoding;

- (BOOL)canBeConvertedToEncoding:(NSStringEncoding)encoding;



- (nullable const char *)cStringUsingEncoding:(NSStringEncoding)encoding __attribute__((objc_returns_inner_pointer));
- (BOOL)getCString:(char *)buffer maxLength:(NSUInteger)maxBufferCount encoding:(NSStringEncoding)encoding;
# 254 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSString.h" 3
- (BOOL)getBytes:(nullable void *)buffer maxLength:(NSUInteger)maxBufferCount usedLength:(nullable NSUInteger *)usedBufferCount encoding:(NSStringEncoding)encoding options:(NSStringEncodingConversionOptions)options range:(NSRange)range remainingRange:(nullable NSRangePointer)leftover;



- (NSUInteger)maximumLengthOfBytesUsingEncoding:(NSStringEncoding)enc;
- (NSUInteger)lengthOfBytesUsingEncoding:(NSStringEncoding)enc;


@property (class, readonly) const NSStringEncoding *availableStringEncodings;

+ (NSString *)localizedNameOfStringEncoding:(NSStringEncoding)encoding;




@property (class, readonly) NSStringEncoding defaultCStringEncoding;





@property (readonly, copy) NSString *decomposedStringWithCanonicalMapping;
@property (readonly, copy) NSString *precomposedStringWithCanonicalMapping;
@property (readonly, copy) NSString *decomposedStringWithCompatibilityMapping;
@property (readonly, copy) NSString *precomposedStringWithCompatibilityMapping;

- (NSArray<NSString *> *)componentsSeparatedByString:(NSString *)separator;
- (NSArray<NSString *> *)componentsSeparatedByCharactersInSet:(NSCharacterSet *)separator __attribute__((availability(ios,introduced=2_0)));

- (NSString *)stringByTrimmingCharactersInSet:(NSCharacterSet *)set;
- (NSString *)stringByPaddingToLength:(NSUInteger)newLength withString:(NSString *)padString startingAtIndex:(NSUInteger)padIndex;



- (NSString *)stringByFoldingWithOptions:(NSStringCompareOptions)options locale:(nullable NSLocale *)locale __attribute__((availability(ios,introduced=2_0)));



- (NSString *)stringByReplacingOccurrencesOfString:(NSString *)target withString:(NSString *)replacement options:(NSStringCompareOptions)options range:(NSRange)searchRange __attribute__((availability(ios,introduced=2_0)));



- (NSString *)stringByReplacingOccurrencesOfString:(NSString *)target withString:(NSString *)replacement __attribute__((availability(ios,introduced=2_0)));



- (NSString *)stringByReplacingCharactersInRange:(NSRange)range withString:(NSString *)replacement __attribute__((availability(ios,introduced=2_0)));

typedef NSString *NSStringTransform __attribute__((swift_wrapper(struct)));



- (nullable NSString *)stringByApplyingTransform:(NSStringTransform)transform reverse:(BOOL)reverse __attribute__((availability(ios,introduced=9_0)));

extern NSStringTransform const NSStringTransformLatinToKatakana __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformLatinToHiragana __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformLatinToHangul __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformLatinToArabic __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformLatinToHebrew __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformLatinToThai __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformLatinToCyrillic __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformLatinToGreek __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformToLatin __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformMandarinToLatin __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformHiraganaToKatakana __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformFullwidthToHalfwidth __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformToXMLHex __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformToUnicodeName __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformStripCombiningMarks __attribute__((availability(ios,introduced=9_0)));
extern NSStringTransform const NSStringTransformStripDiacritics __attribute__((availability(ios,introduced=9_0)));




- (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)useAuxiliaryFile encoding:(NSStringEncoding)enc error:(NSError **)error;
- (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile encoding:(NSStringEncoding)enc error:(NSError **)error;

@property (readonly, copy) NSString *description;

@property (readonly) NSUInteger hash;






- (instancetype)initWithCharactersNoCopy:(unichar *)characters length:(NSUInteger)length freeWhenDone:(BOOL)freeBuffer;
- (instancetype)initWithCharacters:(const unichar *)characters length:(NSUInteger)length;
- (nullable instancetype)initWithUTF8String:(const char *)nullTerminatedCString;
- (instancetype)initWithString:(NSString *)aString;
- (instancetype)initWithFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));
- (instancetype)initWithFormat:(NSString *)format arguments:(va_list)argList __attribute__((format(__NSString__, 1, 0)));
- (instancetype)initWithFormat:(NSString *)format locale:(nullable id)locale, ... __attribute__((format(__NSString__, 1, 3)));
- (instancetype)initWithFormat:(NSString *)format locale:(nullable id)locale arguments:(va_list)argList __attribute__((format(__NSString__, 1, 0)));
- (nullable instancetype)initWithData:(NSData *)data encoding:(NSStringEncoding)encoding;
- (nullable instancetype)initWithBytes:(const void *)bytes length:(NSUInteger)len encoding:(NSStringEncoding)encoding;
- (nullable instancetype)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)len encoding:(NSStringEncoding)encoding freeWhenDone:(BOOL)freeBuffer;

+ (instancetype)string;
+ (instancetype)stringWithString:(NSString *)string;
+ (instancetype)stringWithCharacters:(const unichar *)characters length:(NSUInteger)length;
+ (nullable instancetype)stringWithUTF8String:(const char *)nullTerminatedCString;
+ (instancetype)stringWithFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));
+ (instancetype)localizedStringWithFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));

- (nullable instancetype)initWithCString:(const char *)nullTerminatedCString encoding:(NSStringEncoding)encoding;
+ (nullable instancetype)stringWithCString:(const char *)cString encoding:(NSStringEncoding)enc;



- (nullable instancetype)initWithContentsOfURL:(NSURL *)url encoding:(NSStringEncoding)enc error:(NSError **)error;
- (nullable instancetype)initWithContentsOfFile:(NSString *)path encoding:(NSStringEncoding)enc error:(NSError **)error;
+ (nullable instancetype)stringWithContentsOfURL:(NSURL *)url encoding:(NSStringEncoding)enc error:(NSError **)error;
+ (nullable instancetype)stringWithContentsOfFile:(NSString *)path encoding:(NSStringEncoding)enc error:(NSError **)error;



- (nullable instancetype)initWithContentsOfURL:(NSURL *)url usedEncoding:(nullable NSStringEncoding *)enc error:(NSError **)error;
- (nullable instancetype)initWithContentsOfFile:(NSString *)path usedEncoding:(nullable NSStringEncoding *)enc error:(NSError **)error;
+ (nullable instancetype)stringWithContentsOfURL:(NSURL *)url usedEncoding:(nullable NSStringEncoding *)enc error:(NSError **)error;
+ (nullable instancetype)stringWithContentsOfFile:(NSString *)path usedEncoding:(nullable NSStringEncoding *)enc error:(NSError **)error;

@end

typedef NSString * NSStringEncodingDetectionOptionsKey __attribute__((swift_wrapper(enum)));

@interface NSString (NSStringEncodingDetection)
# 398 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSString.h" 3
+ (NSStringEncoding)stringEncodingForData:(NSData *)data
                          encodingOptions:(nullable NSDictionary<NSStringEncodingDetectionOptionsKey, id> *)opts
                          convertedString:(NSString * _Nullable * _Nullable)string
                      usedLossyConversion:(nullable BOOL *)usedLossyConversion __attribute__((availability(ios,introduced=8_0)));



extern NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionSuggestedEncodingsKey __attribute__((availability(ios,introduced=8_0)));
extern NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionDisallowedEncodingsKey __attribute__((availability(ios,introduced=8_0)));
extern NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionUseOnlySuggestedEncodingsKey __attribute__((availability(ios,introduced=8_0)));
extern NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionAllowLossyKey __attribute__((availability(ios,introduced=8_0)));
extern NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionFromWindowsKey __attribute__((availability(ios,introduced=8_0)));
extern NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionLossySubstitutionKey __attribute__((availability(ios,introduced=8_0)));
extern NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionLikelyLanguageKey __attribute__((availability(ios,introduced=8_0)));

@end



@interface NSMutableString : NSString





- (void)replaceCharactersInRange:(NSRange)range withString:(NSString *)aString;

@end

@interface NSMutableString (NSMutableStringExtensionMethods)



- (void)insertString:(NSString *)aString atIndex:(NSUInteger)loc;
- (void)deleteCharactersInRange:(NSRange)range;
- (void)appendString:(NSString *)aString;
- (void)appendFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));
- (void)setString:(NSString *)aString;



- (NSUInteger)replaceOccurrencesOfString:(NSString *)target withString:(NSString *)replacement options:(NSStringCompareOptions)options range:(NSRange)searchRange;



- (BOOL)applyTransform:(NSString *)transform reverse:(BOOL)reverse range:(NSRange)range updatedRange:(nullable NSRangePointer)resultingRange __attribute__((availability(ios,introduced=9_0)));



- (NSMutableString *)initWithCapacity:(NSUInteger)capacity;
+ (NSMutableString *)stringWithCapacity:(NSUInteger)capacity;

@end



extern NSExceptionName const NSCharacterConversionException;
extern NSExceptionName const NSParseErrorException;




@interface NSString (NSExtendedStringPropertyListParsing)



- (id)propertyList;
- (nullable NSDictionary *)propertyListFromStringsFileFormat;

@end

@interface NSString (NSStringDeprecated)



- (nullable const char *)cString __attribute__((objc_returns_inner_pointer)) __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (nullable const char *)lossyCString __attribute__((objc_returns_inner_pointer)) __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (NSUInteger)cStringLength __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (void)getCString:(char *)bytes __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (void)getCString:(char *)bytes maxLength:(NSUInteger)maxLength __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (void)getCString:(char *)bytes maxLength:(NSUInteger)maxLength range:(NSRange)aRange remainingRange:(nullable NSRangePointer)leftoverRange __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));

- (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));

- (nullable id)initWithContentsOfFile:(NSString *)path __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (nullable id)initWithContentsOfURL:(NSURL *)url __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
+ (nullable id)stringWithContentsOfFile:(NSString *)path __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
+ (nullable id)stringWithContentsOfURL:(NSURL *)url __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));

- (nullable id)initWithCStringNoCopy:(char *)bytes length:(NSUInteger)length freeWhenDone:(BOOL)freeBuffer __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (nullable id)initWithCString:(const char *)bytes length:(NSUInteger)length __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (nullable id)initWithCString:(const char *)bytes __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
+ (nullable id)stringWithCString:(const char *)bytes length:(NSUInteger)length __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
+ (nullable id)stringWithCString:(const char *)bytes __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));



- (void)getCharacters:(unichar *)buffer;

@end

enum : NSStringEncoding {
    NSProprietaryStringEncoding = 65536
};
# 511 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSString.h" 3
@interface NSSimpleCString : NSString {
@package
    char *bytes;
    int numBytes;

    int _unused;

}
@end

@interface NSConstantString : NSSimpleCString
@end
# 7 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSBundle.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDictionary.h" 1 3







@class NSArray<ObjectType>, NSSet<ObjectType>, NSString, NSURL;





@interface NSDictionary<__covariant KeyType, __covariant ObjectType> : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>

@property (readonly) NSUInteger count;
- (nullable ObjectType)objectForKey:(KeyType)aKey;
- (NSEnumerator<KeyType> *)keyEnumerator;
- (instancetype)init __attribute__((objc_designated_initializer));



- (instancetype)initWithObjects:(const ObjectType _Nonnull [_Nullable])objects forKeys:(const KeyType <NSCopying> _Nonnull [_Nullable])keys count:(NSUInteger)cnt __attribute__((objc_designated_initializer));

- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end

@interface NSDictionary<KeyType, ObjectType> (NSExtendedDictionary)

@property (readonly, copy) NSArray<KeyType> *allKeys;
- (NSArray<KeyType> *)allKeysForObject:(ObjectType)anObject;
@property (readonly, copy) NSArray<ObjectType> *allValues;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *descriptionInStringsFileFormat;
- (NSString *)descriptionWithLocale:(nullable id)locale;
- (NSString *)descriptionWithLocale:(nullable id)locale indent:(NSUInteger)level;
- (BOOL)isEqualToDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary;
- (NSEnumerator<ObjectType> *)objectEnumerator;
- (NSArray<ObjectType> *)objectsForKeys:(NSArray<KeyType> *)keys notFoundMarker:(ObjectType)marker;
- (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile;
- (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically;

- (NSArray<KeyType> *)keysSortedByValueUsingSelector:(SEL)comparator;

- (void)getObjects:(ObjectType __attribute__((objc_ownership(none))) [])objects andKeys:(KeyType __attribute__((objc_ownership(none))) [])keys count:(NSUInteger)count __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(swift, unavailable, message="Use 'allKeys' and/or 'allValues' instead")));

- (nullable ObjectType)objectForKeyedSubscript:(KeyType)key __attribute__((availability(ios,introduced=6_0)));

- (void)enumerateKeysAndObjectsUsingBlock:(void (__attribute__((noescape)) ^)(KeyType key, ObjectType obj, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));
- (void)enumerateKeysAndObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(KeyType key, ObjectType obj, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));

- (NSArray<KeyType> *)keysSortedByValueUsingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(ios,introduced=4_0)));
- (NSArray<KeyType> *)keysSortedByValueWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(ios,introduced=4_0)));

- (NSSet<KeyType> *)keysOfEntriesPassingTest:(BOOL (__attribute__((noescape)) ^)(KeyType key, ObjectType obj, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));
- (NSSet<KeyType> *)keysOfEntriesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(KeyType key, ObjectType obj, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));

@end

@interface NSDictionary<KeyType, ObjectType> (NSDeprecated)

- (void)getObjects:(ObjectType __attribute__((objc_ownership(none))) [])objects andKeys:(KeyType __attribute__((objc_ownership(none))) [])keys __attribute__((availability(swift, unavailable, message="Use 'allKeys' and/or 'allValues' instead")));
@end

@interface NSDictionary<KeyType, ObjectType> (NSDictionaryCreation)

+ (instancetype)dictionary;
+ (instancetype)dictionaryWithObject:(ObjectType)object forKey:(KeyType <NSCopying>)key;



+ (instancetype)dictionaryWithObjects:(const ObjectType [])objects forKeys:(const KeyType <NSCopying> [])keys count:(NSUInteger)cnt;


+ (instancetype)dictionaryWithObjectsAndKeys:(id)firstObject, ... __attribute__((sentinel(0,1))) __attribute__((availability(swift, unavailable, message="Use dictionary literals instead")));

+ (instancetype)dictionaryWithDictionary:(NSDictionary<KeyType, ObjectType> *)dict;
+ (instancetype)dictionaryWithObjects:(NSArray<ObjectType> *)objects forKeys:(NSArray<KeyType <NSCopying>> *)keys;

- (instancetype)initWithObjectsAndKeys:(id)firstObject, ... __attribute__((sentinel(0,1)));
- (instancetype)initWithDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary;
- (instancetype)initWithDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary copyItems:(BOOL)flag;
- (instancetype)initWithObjects:(NSArray<ObjectType> *)objects forKeys:(NSArray<KeyType <NSCopying>> *)keys;

+ (nullable NSDictionary<KeyType, ObjectType> *)dictionaryWithContentsOfFile:(NSString *)path;
+ (nullable NSDictionary<KeyType, ObjectType> *)dictionaryWithContentsOfURL:(NSURL *)url;
- (nullable NSDictionary<KeyType, ObjectType> *)initWithContentsOfFile:(NSString *)path;
- (nullable NSDictionary<KeyType, ObjectType> *)initWithContentsOfURL:(NSURL *)url;

@end



@interface NSMutableDictionary<KeyType, ObjectType> : NSDictionary<KeyType, ObjectType>

- (void)removeObjectForKey:(KeyType)aKey;
- (void)setObject:(ObjectType)anObject forKey:(KeyType <NSCopying>)aKey;
- (instancetype)init __attribute__((objc_designated_initializer));
- (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end

@interface NSMutableDictionary<KeyType, ObjectType> (NSExtendedMutableDictionary)

- (void)addEntriesFromDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary;
- (void)removeAllObjects;
- (void)removeObjectsForKeys:(NSArray<KeyType> *)keyArray;
- (void)setDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary;
- (void)setObject:(nullable ObjectType)obj forKeyedSubscript:(KeyType <NSCopying>)key __attribute__((availability(ios,introduced=6_0)));

@end

@interface NSMutableDictionary<KeyType, ObjectType> (NSMutableDictionaryCreation)

+ (instancetype)dictionaryWithCapacity:(NSUInteger)numItems;

+ (nullable NSMutableDictionary<KeyType, ObjectType> *)dictionaryWithContentsOfFile:(NSString *)path;
+ (nullable NSMutableDictionary<KeyType, ObjectType> *)dictionaryWithContentsOfURL:(NSURL *)url;
- (nullable NSMutableDictionary<KeyType, ObjectType> *)initWithContentsOfFile:(NSString *)path;
- (nullable NSMutableDictionary<KeyType, ObjectType> *)initWithContentsOfURL:(NSURL *)url;

@end

@interface NSDictionary<KeyType, ObjectType> (NSSharedKeySetDictionary)
# 136 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDictionary.h" 3
+ (id)sharedKeySetForKeys:(NSArray<KeyType <NSCopying>> *)keys __attribute__((availability(ios,introduced=6_0)));

@end

@interface NSMutableDictionary<KeyType, ObjectType> (NSSharedKeySetDictionary)







+ (NSMutableDictionary<KeyType, ObjectType> *)dictionaryWithSharedKeySet:(id)keyset __attribute__((availability(ios,introduced=6_0)));

@end
# 9 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSBundle.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSSet.h" 1 3







@class NSArray, NSDictionary, NSString;





@interface NSSet<__covariant ObjectType> : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>

@property (readonly) NSUInteger count;
- (nullable ObjectType)member:(ObjectType)object;
- (NSEnumerator<ObjectType> *)objectEnumerator;
- (instancetype)init __attribute__((objc_designated_initializer));
- (instancetype)initWithObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)cnt __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end

@interface NSSet<ObjectType> (NSExtendedSet)

@property (readonly, copy) NSArray<ObjectType> *allObjects;
- (nullable ObjectType)anyObject;
- (BOOL)containsObject:(ObjectType)anObject;
@property (readonly, copy) NSString *description;
- (NSString *)descriptionWithLocale:(nullable id)locale;
- (BOOL)intersectsSet:(NSSet<ObjectType> *)otherSet;
- (BOOL)isEqualToSet:(NSSet<ObjectType> *)otherSet;
- (BOOL)isSubsetOfSet:(NSSet<ObjectType> *)otherSet;

- (void)makeObjectsPerformSelector:(SEL)aSelector __attribute__((availability(swift, unavailable, message="Use enumerateObjectsUsingBlock: or a for loop instead")));
- (void)makeObjectsPerformSelector:(SEL)aSelector withObject:(nullable id)argument __attribute__((availability(swift, unavailable, message="Use enumerateObjectsUsingBlock: or a for loop instead")));

- (NSSet<ObjectType> *)setByAddingObject:(ObjectType)anObject __attribute__((availability(ios,introduced=2_0)));
- (NSSet<ObjectType> *)setByAddingObjectsFromSet:(NSSet<ObjectType> *)other __attribute__((availability(ios,introduced=2_0)));
- (NSSet<ObjectType> *)setByAddingObjectsFromArray:(NSArray<ObjectType> *)other __attribute__((availability(ios,introduced=2_0)));

- (void)enumerateObjectsUsingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));
- (void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));

- (NSSet<ObjectType> *)objectsPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));
- (NSSet<ObjectType> *)objectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));

@end

@interface NSSet<ObjectType> (NSSetCreation)

+ (instancetype)set;
+ (instancetype)setWithObject:(ObjectType)object;
+ (instancetype)setWithObjects:(const ObjectType [])objects count:(NSUInteger)cnt;
+ (instancetype)setWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
+ (instancetype)setWithSet:(NSSet<ObjectType> *)set;
+ (instancetype)setWithArray:(NSArray<ObjectType> *)array;

- (instancetype)initWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
- (instancetype)initWithSet:(NSSet<ObjectType> *)set;
- (instancetype)initWithSet:(NSSet<ObjectType> *)set copyItems:(BOOL)flag;
- (instancetype)initWithArray:(NSArray<ObjectType> *)array;

@end



@interface NSMutableSet<ObjectType> : NSSet<ObjectType>

- (void)addObject:(ObjectType)object;
- (void)removeObject:(ObjectType)object;
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((objc_designated_initializer));
- (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));

@end

@interface NSMutableSet<ObjectType> (NSExtendedMutableSet)

- (void)addObjectsFromArray:(NSArray<ObjectType> *)array;
- (void)intersectSet:(NSSet<ObjectType> *)otherSet;
- (void)minusSet:(NSSet<ObjectType> *)otherSet;
- (void)removeAllObjects;
- (void)unionSet:(NSSet<ObjectType> *)otherSet;

- (void)setSet:(NSSet<ObjectType> *)otherSet;

@end

@interface NSMutableSet<ObjectType> (NSMutableSetCreation)

+ (instancetype)setWithCapacity:(NSUInteger)numItems;

@end



@interface NSCountedSet<ObjectType> : NSMutableSet<ObjectType> {
    @private
    id _table;
    void *_reserved;
}

- (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));

- (instancetype)initWithArray:(NSArray<ObjectType> *)array;
- (instancetype)initWithSet:(NSSet<ObjectType> *)set;

- (NSUInteger)countForObject:(ObjectType)object;

- (NSEnumerator<ObjectType> *)objectEnumerator;
- (void)addObject:(ObjectType)object;
- (void)removeObject:(ObjectType)object;

@end
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSBundle.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProgress.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProgress.h" 3
@class NSDictionary, NSMutableDictionary, NSMutableSet, NSURL, NSUUID, NSXPCConnection, NSLock;

typedef NSString * NSProgressKind __attribute__((swift_wrapper(struct)));

typedef NSString * NSProgressUserInfoKey __attribute__((swift_wrapper(struct)));



typedef NSString * NSProgressFileOperationKind __attribute__((swift_wrapper(struct)));
# 40 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProgress.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))
@interface NSProgress : NSObject {
@private
    NSProgress *_parent;
    int64_t _reserved4;
    id _values;
    void (^ _resumingHandler)(void);
    void (^ _cancellationHandler)(void);
    void (^ _pausingHandler)(void);
    void (^ _prioritizationHandler)(void);
    uint64_t _flags;
    id _userInfoProxy;
    NSString *_publisherID;
    id _reserved5;
    NSInteger _reserved6;
    NSInteger _reserved7;
    NSInteger _reserved8;
    NSMutableDictionary *_acknowledgementHandlersByLowercaseBundleID;
    NSMutableDictionary *_lastNotificationTimesByKey;
    NSMutableDictionary *_userInfoLastNotificationTimesByKey;
    NSLock *_lock;
    NSMutableSet *_children;
}



+ (nullable NSProgress *)currentProgress;





+ (NSProgress *)progressWithTotalUnitCount:(int64_t)unitCount;



+ (NSProgress *)discreteProgressWithTotalUnitCount:(int64_t)unitCount __attribute__((availability(ios,introduced=9_0)));



+ (NSProgress *)progressWithTotalUnitCount:(int64_t)unitCount parent:(NSProgress *)parent pendingUnitCount:(int64_t)portionOfParentTotalUnitCount __attribute__((availability(ios,introduced=9_0)));



- (instancetype)initWithParent:(nullable NSProgress *)parentProgressOrNil userInfo:(nullable NSDictionary *)userInfoOrNil __attribute__((objc_designated_initializer));





- (void)becomeCurrentWithPendingUnitCount:(int64_t)unitCount;



- (void)resignCurrent;



- (void)addChild:(NSProgress *)child withPendingUnitCount:(int64_t)inUnitCount __attribute__((availability(ios,introduced=9_0)));







@property int64_t totalUnitCount;
@property int64_t completedUnitCount;
# 116 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProgress.h" 3
@property (null_resettable, copy) NSString *localizedDescription;
# 128 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProgress.h" 3
@property (null_resettable, copy) NSString *localizedAdditionalDescription;



@property (getter=isCancellable) BOOL cancellable;
@property (getter=isPausable) BOOL pausable;



@property (readonly, getter=isCancelled) BOOL cancelled;
@property (readonly, getter=isPaused) BOOL paused;



@property (nullable, copy) void (^cancellationHandler)(void);



@property (nullable, copy) void (^pausingHandler)(void);



@property (nullable, copy) void (^resumingHandler)(void) __attribute__((availability(ios,introduced=9_0)));




- (void)setUserInfoObject:(nullable id)objectOrNil forKey:(NSProgressUserInfoKey)key;
# 164 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProgress.h" 3
@property (readonly, getter=isIndeterminate) BOOL indeterminate;



@property (readonly) double fractionCompleted;



- (void)cancel;



- (void)pause;



- (void)resume __attribute__((availability(ios,introduced=9_0)));




@property (readonly, copy) NSDictionary<NSProgressUserInfoKey, id> *userInfo;






@property (nullable, copy) NSProgressKind kind;
# 202 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProgress.h" 3
- (void)publish __attribute__((availability(ios,introduced=NA)));



- (void)unpublish __attribute__((availability(ios,introduced=NA)));



typedef void (^NSProgressUnpublishingHandler)(void);
typedef _Nullable NSProgressUnpublishingHandler (^NSProgressPublishingHandler)(NSProgress *progress);



+ (id)addSubscriberForFileURL:(NSURL *)url withPublishingHandler:(NSProgressPublishingHandler)publishingHandler __attribute__((availability(ios,introduced=NA)));



+ (void)removeSubscriber:(id)subscriber __attribute__((availability(ios,introduced=NA)));





@property (readonly, getter=isOld) BOOL old __attribute__((availability(ios,introduced=NA)));

@end



@protocol NSProgressReporting <NSObject>
@property (readonly) NSProgress *progress;
@end






extern NSProgressUserInfoKey const NSProgressEstimatedTimeRemainingKey __attribute__((availability(ios,introduced=7_0)));







extern NSProgressUserInfoKey const NSProgressThroughputKey __attribute__((availability(ios,introduced=7_0)));
# 257 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProgress.h" 3
extern NSProgressKind const NSProgressKindFile __attribute__((availability(ios,introduced=7_0)));




extern NSProgressUserInfoKey const NSProgressFileOperationKindKey __attribute__((availability(ios,introduced=7_0)));






extern NSProgressFileOperationKind const NSProgressFileOperationKindDownloading __attribute__((availability(ios,introduced=7_0)));
extern NSProgressFileOperationKind const NSProgressFileOperationKindDecompressingAfterDownloading __attribute__((availability(ios,introduced=7_0)));
extern NSProgressFileOperationKind const NSProgressFileOperationKindReceiving __attribute__((availability(ios,introduced=7_0)));
extern NSProgressFileOperationKind const NSProgressFileOperationKindCopying __attribute__((availability(ios,introduced=7_0)));




extern NSProgressUserInfoKey const NSProgressFileURLKey __attribute__((availability(ios,introduced=7_0)));







extern NSProgressUserInfoKey const NSProgressFileTotalCountKey __attribute__((availability(ios,introduced=7_0)));
extern NSProgressUserInfoKey const NSProgressFileCompletedCountKey __attribute__((availability(ios,introduced=7_0)));
# 295 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProgress.h" 3
extern NSProgressUserInfoKey const NSProgressFileAnimationImageKey __attribute__((availability(ios,introduced=NA)));
extern NSProgressUserInfoKey const NSProgressFileAnimationImageOriginalRectKey __attribute__((availability(ios,introduced=NA)));







extern NSProgressUserInfoKey const NSProgressFileIconKey __attribute__((availability(ios,introduced=NA)));
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSBundle.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSNotification.h" 1 3






typedef NSString *NSNotificationName __attribute__((swift_wrapper(struct)));

@class NSString, NSDictionary, NSOperationQueue;





@interface NSNotification : NSObject <NSCopying, NSCoding>

@property (readonly, copy) NSNotificationName name;
@property (nullable, readonly, retain) id object;
@property (nullable, readonly, copy) NSDictionary *userInfo;

- (instancetype)initWithName:(NSNotificationName)name object:(nullable id)object userInfo:(nullable NSDictionary *)userInfo __attribute__((availability(ios,introduced=4_0))) __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end

@interface NSNotification (NSNotificationCreation)

+ (instancetype)notificationWithName:(NSNotificationName)aName object:(nullable id)anObject;
+ (instancetype)notificationWithName:(NSNotificationName)aName object:(nullable id)anObject userInfo:(nullable NSDictionary *)aUserInfo;

- (instancetype)init ;

@end



@interface NSNotificationCenter : NSObject {
    @package
    void *_impl;
    void *_callback;
    void *_pad[11];
}


@property (class, readonly, strong) NSNotificationCenter *defaultCenter;

- (void)addObserver:(id)observer selector:(SEL)aSelector name:(nullable NSNotificationName)aName object:(nullable id)anObject;


- (void)postNotification:(NSNotification *)notification;
- (void)postNotificationName:(NSNotificationName)aName object:(nullable id)anObject;
- (void)postNotificationName:(NSNotificationName)aName object:(nullable id)anObject userInfo:(nullable NSDictionary *)aUserInfo;

- (void)removeObserver:(id)observer;
- (void)removeObserver:(id)observer name:(nullable NSNotificationName)aName object:(nullable id)anObject;

- (id <NSObject>)addObserverForName:(nullable NSNotificationName)name object:(nullable id)obj queue:(nullable NSOperationQueue *)queue usingBlock:(void (^)(NSNotification *note))block __attribute__((availability(ios,introduced=4_0)));



@end
# 12 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSBundle.h" 2 3

@class NSString, NSURL, NSError, NSUUID, NSLock, NSNumber;





@interface NSBundle : NSObject {
@private
    NSUInteger _flags;
    id _cfBundle;
    NSUInteger _reserved2;
    Class _principalClass;
    id _initialPath;
    id _resolvedPath;
    id _reserved3;
    id _lock;
}



@property (class, readonly, strong) NSBundle *mainBundle;


+ (nullable instancetype)bundleWithPath:(NSString *)path;
- (nullable instancetype)initWithPath:(NSString *)path __attribute__((objc_designated_initializer));

+ (nullable instancetype)bundleWithURL:(NSURL *)url __attribute__((availability(ios,introduced=4_0)));
- (nullable instancetype)initWithURL:(NSURL *)url __attribute__((availability(ios,introduced=4_0)));

+ (NSBundle *)bundleForClass:(Class)aClass;
+ (nullable NSBundle *)bundleWithIdentifier:(NSString *)identifier;


@property (class, readonly, copy) NSArray<NSBundle *> *allBundles;
@property (class, readonly, copy) NSArray<NSBundle *> *allFrameworks;



- (BOOL)load;
@property (readonly, getter=isLoaded) BOOL loaded;
- (BOOL)unload;

- (BOOL)preflightAndReturnError:(NSError **)error __attribute__((availability(ios,introduced=2_0)));
- (BOOL)loadAndReturnError:(NSError **)error __attribute__((availability(ios,introduced=2_0)));


@property (readonly, copy) NSURL *bundleURL __attribute__((availability(ios,introduced=4_0)));
@property (nullable, readonly, copy) NSURL *resourceURL __attribute__((availability(ios,introduced=4_0)));
@property (nullable, readonly, copy) NSURL *executableURL __attribute__((availability(ios,introduced=4_0)));
- (nullable NSURL *)URLForAuxiliaryExecutable:(NSString *)executableName __attribute__((availability(ios,introduced=4_0)));

@property (nullable, readonly, copy) NSURL *privateFrameworksURL __attribute__((availability(ios,introduced=4_0)));
@property (nullable, readonly, copy) NSURL *sharedFrameworksURL __attribute__((availability(ios,introduced=4_0)));
@property (nullable, readonly, copy) NSURL *sharedSupportURL __attribute__((availability(ios,introduced=4_0)));
@property (nullable, readonly, copy) NSURL *builtInPlugInsURL __attribute__((availability(ios,introduced=4_0)));

@property (nullable, readonly, copy) NSURL *appStoreReceiptURL __attribute__((availability(ios,introduced=7_0)));

@property (readonly, copy) NSString *bundlePath;
@property (nullable, readonly, copy) NSString *resourcePath;
@property (nullable, readonly, copy) NSString *executablePath;
- (nullable NSString *)pathForAuxiliaryExecutable:(NSString *)executableName;

@property (nullable, readonly, copy) NSString *privateFrameworksPath;
@property (nullable, readonly, copy) NSString *sharedFrameworksPath;
@property (nullable, readonly, copy) NSString *sharedSupportPath;
@property (nullable, readonly, copy) NSString *builtInPlugInsPath;



+ (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath inBundleWithURL:(NSURL *)bundleURL __attribute__((availability(ios,introduced=4_0)));
+ (nullable NSArray<NSURL *> *)URLsForResourcesWithExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath inBundleWithURL:(NSURL *)bundleURL __attribute__((availability(ios,introduced=4_0)));

- (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext __attribute__((availability(ios,introduced=4_0)));
- (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath __attribute__((availability(ios,introduced=4_0)));
- (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath localization:(nullable NSString *)localizationName __attribute__((availability(ios,introduced=4_0)));

- (nullable NSArray<NSURL *> *)URLsForResourcesWithExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath __attribute__((availability(ios,introduced=4_0)));
- (nullable NSArray<NSURL *> *)URLsForResourcesWithExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath localization:(nullable NSString *)localizationName __attribute__((availability(ios,introduced=4_0)));

+ (nullable NSString *)pathForResource:(nullable NSString *)name ofType:(nullable NSString *)ext inDirectory:(NSString *)bundlePath;
+ (NSArray<NSString *> *)pathsForResourcesOfType:(nullable NSString *)ext inDirectory:(NSString *)bundlePath;

- (nullable NSString *)pathForResource:(nullable NSString *)name ofType:(nullable NSString *)ext;
- (nullable NSString *)pathForResource:(nullable NSString *)name ofType:(nullable NSString *)ext inDirectory:(nullable NSString *)subpath;
- (nullable NSString *)pathForResource:(nullable NSString *)name ofType:(nullable NSString *)ext inDirectory:(nullable NSString *)subpath forLocalization:(nullable NSString *)localizationName;

- (NSArray<NSString *> *)pathsForResourcesOfType:(nullable NSString *)ext inDirectory:(nullable NSString *)subpath;
- (NSArray<NSString *> *)pathsForResourcesOfType:(nullable NSString *)ext inDirectory:(nullable NSString *)subpath forLocalization:(nullable NSString *)localizationName;


- (NSString *)localizedStringForKey:(NSString *)key value:(nullable NSString *)value table:(nullable NSString *)tableName __attribute__ ((format_arg(1)));


@property (nullable, readonly, copy) NSString *bundleIdentifier;
@property (nullable, readonly, copy) NSDictionary<NSString *, id> *infoDictionary;
@property (nullable, readonly, copy) NSDictionary<NSString *, id> *localizedInfoDictionary;
- (nullable id)objectForInfoDictionaryKey:(NSString *)key;
- (nullable Class)classNamed:(NSString *)className;
@property (nullable, readonly) Class principalClass;


@property (readonly, copy) NSArray<NSString *> *preferredLocalizations;

@property (readonly, copy) NSArray<NSString *> *localizations;
@property (nullable, readonly, copy) NSString *developmentLocalization;

+ (NSArray<NSString *> *)preferredLocalizationsFromArray:(NSArray<NSString *> *)localizationsArray;
+ (NSArray<NSString *> *)preferredLocalizationsFromArray:(NSArray<NSString *> *)localizationsArray forPreferences:(nullable NSArray<NSString *> *)preferencesArray;


enum {
    NSBundleExecutableArchitectureI386 = 0x00000007,
    NSBundleExecutableArchitecturePPC = 0x00000012,
    NSBundleExecutableArchitectureX86_64 = 0x01000007,
    NSBundleExecutableArchitecturePPC64 = 0x01000012
};

@property (nullable, readonly, copy) NSArray<NSNumber *> *executableArchitectures __attribute__((availability(ios,introduced=2_0)));

@end
# 144 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSBundle.h" 3
@interface NSString (NSBundleExtensionMethods)



- (NSString *)variantFittingPresentationWidth:(NSInteger)width __attribute__((availability(ios,introduced=9_0)));

@end

extern NSNotificationName const NSBundleDidLoadNotification;
extern NSString * const NSLoadedClasses;
# 165 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSBundle.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface NSBundleResourceRequest : NSObject <NSProgressReporting>

- (instancetype)init __attribute__((unavailable));




- (instancetype)initWithTags:(NSSet<NSString *> *)tags;
- (instancetype)initWithTags:(NSSet<NSString *> *)tags bundle:(NSBundle *)bundle __attribute__((objc_designated_initializer));






@property double loadingPriority;




@property (readonly, copy) NSSet<NSString *> *tags;




@property (readonly, strong) NSBundle *bundle;
# 208 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSBundle.h" 3
- (void)beginAccessingResourcesWithCompletionHandler:(void (^)(NSError * _Nullable error))completionHandler;






- (void)conditionallyBeginAccessingResourcesWithCompletionHandler:(void (^)(BOOL resourcesAvailable))completionHandler;




- (void)endAccessingResources;




@property (readonly, strong) NSProgress *progress;

@end

@interface NSBundle (NSBundleResourceRequestAdditions)







- (void)setPreservationPriority:(double)priority forTags:(NSSet<NSString *> *)tags __attribute__((availability(ios,introduced=9_0)));
- (double)preservationPriorityForTag:(NSString *)tag __attribute__((availability(ios,introduced=9_0)));

@end
# 249 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSBundle.h" 3
extern NSNotificationName const NSBundleResourceRequestLowDiskSpaceNotification __attribute__((availability(ios,introduced=9_0)));



extern double const NSBundleResourceRequestLoadingPriorityUrgent __attribute__((availability(ios,introduced=9_0)));
# 13 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSByteOrder.h" 1 3







enum {
    NS_UnknownByteOrder = CFByteOrderUnknown,
    NS_LittleEndian = CFByteOrderLittleEndian,
    NS_BigEndian = CFByteOrderBigEndian
};

static __inline__ __attribute__((always_inline)) long NSHostByteOrder(void) {
    return CFByteOrderGetCurrent();
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapShort(unsigned short inv) {
    return CFSwapInt16(inv);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapInt(unsigned int inv) {
    return CFSwapInt32(inv);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapLong(unsigned long inv) {

    return CFSwapInt64(inv);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapLongLong(unsigned long long inv) {
    return CFSwapInt64(inv);
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapBigShortToHost(unsigned short x) {
    return CFSwapInt16BigToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapBigIntToHost(unsigned int x) {
    return CFSwapInt32BigToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapBigLongToHost(unsigned long x) {

    return CFSwapInt64BigToHost(x);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapBigLongLongToHost(unsigned long long x) {
    return CFSwapInt64BigToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapHostShortToBig(unsigned short x) {
    return CFSwapInt16HostToBig(x);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapHostIntToBig(unsigned int x) {
    return CFSwapInt32HostToBig(x);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapHostLongToBig(unsigned long x) {

    return CFSwapInt64HostToBig(x);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapHostLongLongToBig(unsigned long long x) {
    return CFSwapInt64HostToBig(x);
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapLittleShortToHost(unsigned short x) {
    return CFSwapInt16LittleToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapLittleIntToHost(unsigned int x) {
    return CFSwapInt32LittleToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapLittleLongToHost(unsigned long x) {

    return CFSwapInt64LittleToHost(x);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapLittleLongLongToHost(unsigned long long x) {
    return CFSwapInt64LittleToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapHostShortToLittle(unsigned short x) {
    return CFSwapInt16HostToLittle(x);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapHostIntToLittle(unsigned int x) {
    return CFSwapInt32HostToLittle(x);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapHostLongToLittle(unsigned long x) {

    return CFSwapInt64HostToLittle(x);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapHostLongLongToLittle(unsigned long long x) {
    return CFSwapInt64HostToLittle(x);
}


typedef struct {unsigned int v;} NSSwappedFloat;
typedef struct {unsigned long long v;} NSSwappedDouble;

static __inline__ __attribute__((always_inline)) NSSwappedFloat NSConvertHostFloatToSwapped(float x) {
    union fconv {
 float number;
 NSSwappedFloat sf;
    };
    return ((union fconv *)&x)->sf;
}

static __inline__ __attribute__((always_inline)) float NSConvertSwappedFloatToHost(NSSwappedFloat x) {
    union fconv {
 float number;
 NSSwappedFloat sf;
    };
    return ((union fconv *)&x)->number;
}

static __inline__ __attribute__((always_inline)) NSSwappedDouble NSConvertHostDoubleToSwapped(double x) {
    union dconv {
 double number;
 NSSwappedDouble sd;
    };
    return ((union dconv *)&x)->sd;
}

static __inline__ __attribute__((always_inline)) double NSConvertSwappedDoubleToHost(NSSwappedDouble x) {
    union dconv {
 double number;
 NSSwappedDouble sd;
    };
    return ((union dconv *)&x)->number;
}

static __inline__ __attribute__((always_inline)) NSSwappedFloat NSSwapFloat(NSSwappedFloat x) {
    x.v = NSSwapInt(x.v);
    return x;
}

static __inline__ __attribute__((always_inline)) NSSwappedDouble NSSwapDouble(NSSwappedDouble x) {
    x.v = NSSwapLongLong(x.v);
    return x;
}
# 200 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSByteOrder.h" 3
static __inline__ __attribute__((always_inline)) double NSSwapBigDoubleToHost(NSSwappedDouble x) {
    return NSConvertSwappedDoubleToHost(NSSwapDouble(x));
}

static __inline__ __attribute__((always_inline)) float NSSwapBigFloatToHost(NSSwappedFloat x) {
    return NSConvertSwappedFloatToHost(NSSwapFloat(x));
}

static __inline__ __attribute__((always_inline)) NSSwappedDouble NSSwapHostDoubleToBig(double x) {
    return NSSwapDouble(NSConvertHostDoubleToSwapped(x));
}

static __inline__ __attribute__((always_inline)) NSSwappedFloat NSSwapHostFloatToBig(float x) {
    return NSSwapFloat(NSConvertHostFloatToSwapped(x));
}

static __inline__ __attribute__((always_inline)) double NSSwapLittleDoubleToHost(NSSwappedDouble x) {
    return NSConvertSwappedDoubleToHost(x);
}

static __inline__ __attribute__((always_inline)) float NSSwapLittleFloatToHost(NSSwappedFloat x) {
    return NSConvertSwappedFloatToHost(x);
}

static __inline__ __attribute__((always_inline)) NSSwappedDouble NSSwapHostDoubleToLittle(double x) {
    return NSConvertHostDoubleToSwapped(x);
}

static __inline__ __attribute__((always_inline)) NSSwappedFloat NSSwapHostFloatToLittle(float x) {
    return NSConvertHostFloatToSwapped(x);
}
# 14 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCalendar.h" 1 3






# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDate.h" 1 3







@class NSString;



extern NSNotificationName const NSSystemClockDidChangeNotification __attribute__((availability(ios,introduced=4_0)));

typedef double NSTimeInterval;



@interface NSDate : NSObject <NSCopying, NSSecureCoding>

@property (readonly) NSTimeInterval timeIntervalSinceReferenceDate;

- (instancetype)init __attribute__((objc_designated_initializer));
- (instancetype)initWithTimeIntervalSinceReferenceDate:(NSTimeInterval)ti __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end

@interface NSDate (NSExtendedDate)

- (NSTimeInterval)timeIntervalSinceDate:(NSDate *)anotherDate;
@property (readonly) NSTimeInterval timeIntervalSinceNow;
@property (readonly) NSTimeInterval timeIntervalSince1970;

- (id)addTimeInterval:(NSTimeInterval)seconds __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
- (instancetype)dateByAddingTimeInterval:(NSTimeInterval)ti __attribute__((availability(ios,introduced=2_0)));

- (NSDate *)earlierDate:(NSDate *)anotherDate;
- (NSDate *)laterDate:(NSDate *)anotherDate;
- (NSComparisonResult)compare:(NSDate *)other;
- (BOOL)isEqualToDate:(NSDate *)otherDate;

@property (readonly, copy) NSString *description;
- (NSString *)descriptionWithLocale:(nullable id)locale;


@property (class, readonly) NSTimeInterval timeIntervalSinceReferenceDate;


@end

@interface NSDate (NSDateCreation)

+ (instancetype)date;
+ (instancetype)dateWithTimeIntervalSinceNow:(NSTimeInterval)secs;
+ (instancetype)dateWithTimeIntervalSinceReferenceDate:(NSTimeInterval)ti;
+ (instancetype)dateWithTimeIntervalSince1970:(NSTimeInterval)secs;
+ (instancetype)dateWithTimeInterval:(NSTimeInterval)secsToBeAdded sinceDate:(NSDate *)date;


@property (class, readonly, copy) NSDate *distantFuture;
@property (class, readonly, copy) NSDate *distantPast;


- (instancetype)initWithTimeIntervalSinceNow:(NSTimeInterval)secs;
- (instancetype)initWithTimeIntervalSince1970:(NSTimeInterval)secs;
- (instancetype)initWithTimeInterval:(NSTimeInterval)secsToBeAdded sinceDate:(NSDate *)date;

@end
# 8 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCalendar.h" 2 3



@class NSDateComponents, NSLocale, NSTimeZone, NSString, NSArray<ObjectType>;
# 27 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCalendar.h" 3
typedef NSString * NSCalendarIdentifier __attribute__((swift_wrapper(struct)));

extern NSCalendarIdentifier const NSCalendarIdentifierGregorian __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierBuddhist __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierChinese __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierCoptic __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierEthiopicAmeteMihret __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierEthiopicAmeteAlem __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierHebrew __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierISO8601 __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierIndian __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierIslamic __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierIslamicCivil __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierJapanese __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierPersian __attribute__((availability(ios,introduced=4_0)));
extern NSCalendarIdentifier const NSCalendarIdentifierRepublicOfChina __attribute__((availability(ios,introduced=4_0)));

extern NSCalendarIdentifier const NSCalendarIdentifierIslamicTabular __attribute__((availability(ios,introduced=8_0)));

extern NSCalendarIdentifier const NSCalendarIdentifierIslamicUmmAlQura __attribute__((availability(ios,introduced=8_0)));


typedef enum NSCalendarUnit : NSUInteger NSCalendarUnit; enum NSCalendarUnit : NSUInteger {
        NSCalendarUnitEra = kCFCalendarUnitEra,
        NSCalendarUnitYear = kCFCalendarUnitYear,
        NSCalendarUnitMonth = kCFCalendarUnitMonth,
        NSCalendarUnitDay = kCFCalendarUnitDay,
        NSCalendarUnitHour = kCFCalendarUnitHour,
        NSCalendarUnitMinute = kCFCalendarUnitMinute,
        NSCalendarUnitSecond = kCFCalendarUnitSecond,
        NSCalendarUnitWeekday = kCFCalendarUnitWeekday,
        NSCalendarUnitWeekdayOrdinal = kCFCalendarUnitWeekdayOrdinal,
        NSCalendarUnitQuarter __attribute__((availability(ios,introduced=4_0))) = kCFCalendarUnitQuarter,
        NSCalendarUnitWeekOfMonth __attribute__((availability(ios,introduced=5_0))) = kCFCalendarUnitWeekOfMonth,
        NSCalendarUnitWeekOfYear __attribute__((availability(ios,introduced=5_0))) = kCFCalendarUnitWeekOfYear,
        NSCalendarUnitYearForWeekOfYear __attribute__((availability(ios,introduced=5_0))) = kCFCalendarUnitYearForWeekOfYear,
        NSCalendarUnitNanosecond __attribute__((availability(ios,introduced=5_0))) = (1 << 15),
        NSCalendarUnitCalendar __attribute__((availability(ios,introduced=4_0))) = (1 << 20),
        NSCalendarUnitTimeZone __attribute__((availability(ios,introduced=4_0))) = (1 << 21),

 NSEraCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitEra instead"))) = NSCalendarUnitEra,
 NSYearCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitYear instead"))) = NSCalendarUnitYear,
 NSMonthCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitMonth instead"))) = NSCalendarUnitMonth,
 NSDayCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitDay instead"))) = NSCalendarUnitDay,
 NSHourCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitHour instead"))) = NSCalendarUnitHour,
 NSMinuteCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitMinute instead"))) = NSCalendarUnitMinute,
 NSSecondCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitSecond instead"))) = NSCalendarUnitSecond,
 NSWeekCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitWeekOfMonth or NSCalendarUnitWeekOfYear, depending on which you mean"))) = kCFCalendarUnitWeek,
 NSWeekdayCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitWeekday instead"))) = NSCalendarUnitWeekday,
 NSWeekdayOrdinalCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitWeekdayOrdinal instead"))) = NSCalendarUnitWeekdayOrdinal,
 NSQuarterCalendarUnit __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarUnitQuarter instead"))) = NSCalendarUnitQuarter,
 NSWeekOfMonthCalendarUnit __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use NSCalendarUnitWeekOfMonth instead"))) = NSCalendarUnitWeekOfMonth,
 NSWeekOfYearCalendarUnit __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use NSCalendarUnitWeekOfYear instead"))) = NSCalendarUnitWeekOfYear,
 NSYearForWeekOfYearCalendarUnit __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use NSCalendarUnitYearForWeekOfYear instead"))) = NSCalendarUnitYearForWeekOfYear,
 NSCalendarCalendarUnit __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarUnitCalendar instead"))) = NSCalendarUnitCalendar,
 NSTimeZoneCalendarUnit __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarUnitTimeZone instead"))) = NSCalendarUnitTimeZone,
};

typedef enum NSCalendarOptions : NSUInteger NSCalendarOptions; enum NSCalendarOptions : NSUInteger {
 NSCalendarWrapComponents = (1UL << 0),

 NSCalendarMatchStrictly __attribute__((availability(ios,introduced=7_0))) = (1ULL << 1),
 NSCalendarSearchBackwards __attribute__((availability(ios,introduced=7_0))) = (1ULL << 2),

 NSCalendarMatchPreviousTimePreservingSmallerUnits __attribute__((availability(ios,introduced=7_0))) = (1ULL << 8),
 NSCalendarMatchNextTimePreservingSmallerUnits __attribute__((availability(ios,introduced=7_0))) = (1ULL << 9),
 NSCalendarMatchNextTime __attribute__((availability(ios,introduced=7_0))) = (1ULL << 10),

 NSCalendarMatchFirst __attribute__((availability(ios,introduced=7_0))) = (1ULL << 12),
 NSCalendarMatchLast __attribute__((availability(ios,introduced=7_0))) = (1ULL << 13)
};

enum {
 NSWrapCalendarComponents __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarWrapComponents instead"))) = NSCalendarWrapComponents,
};


@interface NSCalendar : NSObject <NSCopying, NSSecureCoding>



@property (class, readonly, copy) NSCalendar *currentCalendar;
@property (class, readonly, strong) NSCalendar *autoupdatingCurrentCalendar __attribute__((availability(ios,introduced=2_0)));






+ (nullable NSCalendar *)calendarWithIdentifier:(NSCalendarIdentifier)calendarIdentifierConstant __attribute__((availability(ios,introduced=8_0)));

- (instancetype)init __attribute__((unavailable));

- (nullable id)initWithCalendarIdentifier:(NSCalendarIdentifier)ident __attribute__((objc_designated_initializer));

@property (readonly, copy) NSCalendarIdentifier calendarIdentifier;
@property (nullable, copy) NSLocale *locale;
@property (copy) NSTimeZone *timeZone;
@property NSUInteger firstWeekday;
@property NSUInteger minimumDaysInFirstWeek;



@property (readonly, copy) NSArray<NSString *> *eraSymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *longEraSymbols __attribute__((availability(ios,introduced=5_0)));

@property (readonly, copy) NSArray<NSString *> *monthSymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *shortMonthSymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *veryShortMonthSymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *standaloneMonthSymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *shortStandaloneMonthSymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *veryShortStandaloneMonthSymbols __attribute__((availability(ios,introduced=5_0)));

@property (readonly, copy) NSArray<NSString *> *weekdaySymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *shortWeekdaySymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *veryShortWeekdaySymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *standaloneWeekdaySymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *shortStandaloneWeekdaySymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *veryShortStandaloneWeekdaySymbols __attribute__((availability(ios,introduced=5_0)));

@property (readonly, copy) NSArray<NSString *> *quarterSymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *shortQuarterSymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *standaloneQuarterSymbols __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSArray<NSString *> *shortStandaloneQuarterSymbols __attribute__((availability(ios,introduced=5_0)));

@property (readonly, copy) NSString *AMSymbol __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSString *PMSymbol __attribute__((availability(ios,introduced=5_0)));




- (NSRange)minimumRangeOfUnit:(NSCalendarUnit)unit;
- (NSRange)maximumRangeOfUnit:(NSCalendarUnit)unit;

- (NSRange)rangeOfUnit:(NSCalendarUnit)smaller inUnit:(NSCalendarUnit)larger forDate:(NSDate *)date;
- (NSUInteger)ordinalityOfUnit:(NSCalendarUnit)smaller inUnit:(NSCalendarUnit)larger forDate:(NSDate *)date;

- (BOOL)rangeOfUnit:(NSCalendarUnit)unit startDate:(NSDate * _Nullable * _Nullable)datep interval:(nullable NSTimeInterval *)tip forDate:(NSDate *)date __attribute__((availability(ios,introduced=2_0)));

- (nullable NSDate *)dateFromComponents:(NSDateComponents *)comps;
- (NSDateComponents *)components:(NSCalendarUnit)unitFlags fromDate:(NSDate *)date;

- (nullable NSDate *)dateByAddingComponents:(NSDateComponents *)comps toDate:(NSDate *)date options:(NSCalendarOptions)opts;

- (NSDateComponents *)components:(NSCalendarUnit)unitFlags fromDate:(NSDate *)startingDate toDate:(NSDate *)resultDate options:(NSCalendarOptions)opts;






- (void)getEra:(out nullable NSInteger *)eraValuePointer year:(out nullable NSInteger *)yearValuePointer month:(out nullable NSInteger *)monthValuePointer day:(out nullable NSInteger *)dayValuePointer fromDate:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));






- (void)getEra:(out nullable NSInteger *)eraValuePointer yearForWeekOfYear:(out nullable NSInteger *)yearValuePointer weekOfYear:(out nullable NSInteger *)weekValuePointer weekday:(out nullable NSInteger *)weekdayValuePointer fromDate:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));






- (void)getHour:(out nullable NSInteger *)hourValuePointer minute:(out nullable NSInteger *)minuteValuePointer second:(out nullable NSInteger *)secondValuePointer nanosecond:(out nullable NSInteger *)nanosecondValuePointer fromDate:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));





- (NSInteger)component:(NSCalendarUnit)unit fromDate:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));






- (nullable NSDate *)dateWithEra:(NSInteger)eraValue year:(NSInteger)yearValue month:(NSInteger)monthValue day:(NSInteger)dayValue hour:(NSInteger)hourValue minute:(NSInteger)minuteValue second:(NSInteger)secondValue nanosecond:(NSInteger)nanosecondValue __attribute__((availability(ios,introduced=8_0)));






- (nullable NSDate *)dateWithEra:(NSInteger)eraValue yearForWeekOfYear:(NSInteger)yearValue weekOfYear:(NSInteger)weekValue weekday:(NSInteger)weekdayValue hour:(NSInteger)hourValue minute:(NSInteger)minuteValue second:(NSInteger)secondValue nanosecond:(NSInteger)nanosecondValue __attribute__((availability(ios,introduced=8_0)));







- (NSDate *)startOfDayForDate:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));







- (NSDateComponents *)componentsInTimeZone:(NSTimeZone *)timezone fromDate:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));





- (NSComparisonResult)compareDate:(NSDate *)date1 toDate:(NSDate *)date2 toUnitGranularity:(NSCalendarUnit)unit __attribute__((availability(ios,introduced=8_0)));





- (BOOL)isDate:(NSDate *)date1 equalToDate:(NSDate *)date2 toUnitGranularity:(NSCalendarUnit)unit __attribute__((availability(ios,introduced=8_0)));





- (BOOL)isDate:(NSDate *)date1 inSameDayAsDate:(NSDate *)date2 __attribute__((availability(ios,introduced=8_0)));





- (BOOL)isDateInToday:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));





- (BOOL)isDateInYesterday:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));





- (BOOL)isDateInTomorrow:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));





- (BOOL)isDateInWeekend:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));







- (BOOL)rangeOfWeekendStartDate:(out NSDate * _Nullable * _Nullable)datep interval:(out nullable NSTimeInterval *)tip containingDate:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));
# 287 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCalendar.h" 3
- (BOOL)nextWeekendStartDate:(out NSDate * _Nullable * _Nullable)datep interval:(out nullable NSTimeInterval *)tip options:(NSCalendarOptions)options afterDate:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));
# 297 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCalendar.h" 3
- (NSDateComponents *)components:(NSCalendarUnit)unitFlags fromDateComponents:(NSDateComponents *)startingDateComp toDateComponents:(NSDateComponents *)resultDateComp options:(NSCalendarOptions)options __attribute__((availability(ios,introduced=8_0)));






- (nullable NSDate *)dateByAddingUnit:(NSCalendarUnit)unit value:(NSInteger)value toDate:(NSDate *)date options:(NSCalendarOptions)options __attribute__((availability(ios,introduced=8_0)));
# 329 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCalendar.h" 3
- (void)enumerateDatesStartingAfterDate:(NSDate *)start matchingComponents:(NSDateComponents *)comps options:(NSCalendarOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSDate * _Nullable date, BOOL exactMatch, BOOL *stop))block __attribute__((availability(ios,introduced=8_0)));






- (nullable NSDate *)nextDateAfterDate:(NSDate *)date matchingComponents:(NSDateComponents *)comps options:(NSCalendarOptions)options __attribute__((availability(ios,introduced=8_0)));







- (nullable NSDate *)nextDateAfterDate:(NSDate *)date matchingUnit:(NSCalendarUnit)unit value:(NSInteger)value options:(NSCalendarOptions)options __attribute__((availability(ios,introduced=8_0)));







- (nullable NSDate *)nextDateAfterDate:(NSDate *)date matchingHour:(NSInteger)hourValue minute:(NSInteger)minuteValue second:(NSInteger)secondValue options:(NSCalendarOptions)options __attribute__((availability(ios,introduced=8_0)));
# 361 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCalendar.h" 3
- (nullable NSDate *)dateBySettingUnit:(NSCalendarUnit)unit value:(NSInteger)v ofDate:(NSDate *)date options:(NSCalendarOptions)opts __attribute__((availability(ios,introduced=8_0)));







- (nullable NSDate *)dateBySettingHour:(NSInteger)h minute:(NSInteger)m second:(NSInteger)s ofDate:(NSDate *)date options:(NSCalendarOptions)opts __attribute__((availability(ios,introduced=8_0)));






- (BOOL)date:(NSDate *)date matchesComponents:(NSDateComponents *)components __attribute__((availability(ios,introduced=8_0)));

@end
# 391 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCalendar.h" 3
extern NSNotificationName const NSCalendarDayChangedNotification __attribute__((availability(ios,introduced=8_0)));
# 413 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCalendar.h" 3
enum : NSInteger {
 NSDateComponentUndefined = 9223372036854775807L,

 NSUndefinedDateComponent __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSDateComponentUndefined instead"))) = NSDateComponentUndefined
};


@interface NSDateComponents : NSObject <NSCopying, NSSecureCoding>

@property (nullable, copy) NSCalendar *calendar __attribute__((availability(ios,introduced=4_0)));
@property (nullable, copy) NSTimeZone *timeZone __attribute__((availability(ios,introduced=4_0)));
@property NSInteger era;
@property NSInteger year;
@property NSInteger month;
@property NSInteger day;
@property NSInteger hour;
@property NSInteger minute;
@property NSInteger second;
@property NSInteger nanosecond __attribute__((availability(ios,introduced=5_0)));
@property NSInteger weekday;
@property NSInteger weekdayOrdinal;
@property NSInteger quarter __attribute__((availability(ios,introduced=4_0)));
@property NSInteger weekOfMonth __attribute__((availability(ios,introduced=5_0)));
@property NSInteger weekOfYear __attribute__((availability(ios,introduced=5_0)));
@property NSInteger yearForWeekOfYear __attribute__((availability(ios,introduced=5_0)));
@property (getter=isLeapMonth) BOOL leapMonth __attribute__((availability(ios,introduced=6_0)));
@property (nullable, readonly, copy) NSDate *date __attribute__((availability(ios,introduced=4_0)));

- (NSInteger)week __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use weekOfMonth or weekOfYear, depending on which you mean")));
- (void)setWeek:(NSInteger)v __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use setWeekOfMonth: or setWeekOfYear:, depending on which you mean")));





- (void)setValue:(NSInteger)value forComponent:(NSCalendarUnit)unit __attribute__((availability(ios,introduced=8_0)));






- (NSInteger)valueForComponent:(NSCalendarUnit)unit __attribute__((availability(ios,introduced=8_0)));
# 465 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCalendar.h" 3
@property (getter=isValidDate, readonly) BOOL validDate __attribute__((availability(ios,introduced=8_0)));
# 474 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCalendar.h" 3
- (BOOL)isValidDateInCalendar:(NSCalendar *)calendar __attribute__((availability(ios,introduced=8_0)));


@end
# 15 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCharacterSet.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCharacterSet.h" 3
@class NSData;



enum {
    NSOpenStepUnicodeReservedBase = 0xF400
};

@interface NSCharacterSet : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>


@property (readonly, class, copy) NSCharacterSet *controlCharacterSet;
@property (readonly, class, copy) NSCharacterSet *whitespaceCharacterSet;
@property (readonly, class, copy) NSCharacterSet *whitespaceAndNewlineCharacterSet;
@property (readonly, class, copy) NSCharacterSet *decimalDigitCharacterSet;
@property (readonly, class, copy) NSCharacterSet *letterCharacterSet;
@property (readonly, class, copy) NSCharacterSet *lowercaseLetterCharacterSet;
@property (readonly, class, copy) NSCharacterSet *uppercaseLetterCharacterSet;
@property (readonly, class, copy) NSCharacterSet *nonBaseCharacterSet;
@property (readonly, class, copy) NSCharacterSet *alphanumericCharacterSet;
@property (readonly, class, copy) NSCharacterSet *decomposableCharacterSet;
@property (readonly, class, copy) NSCharacterSet *illegalCharacterSet;
@property (readonly, class, copy) NSCharacterSet *punctuationCharacterSet;
@property (readonly, class, copy) NSCharacterSet *capitalizedLetterCharacterSet;
@property (readonly, class, copy) NSCharacterSet *symbolCharacterSet;
@property (readonly, class, copy) NSCharacterSet *newlineCharacterSet __attribute__((availability(ios,introduced=2_0)));


+ (NSCharacterSet *)characterSetWithRange:(NSRange)aRange;
+ (NSCharacterSet *)characterSetWithCharactersInString:(NSString *)aString;
+ (NSCharacterSet *)characterSetWithBitmapRepresentation:(NSData *)data;
+ (nullable NSCharacterSet *)characterSetWithContentsOfFile:(NSString *)fName;

- (instancetype) initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

- (BOOL)characterIsMember:(unichar)aCharacter;
@property (readonly, copy) NSData *bitmapRepresentation;
@property (readonly, copy) NSCharacterSet *invertedSet;


- (BOOL)longCharacterIsMember:(UTF32Char)theLongChar;

- (BOOL)isSupersetOfSet:(NSCharacterSet *)theOtherSet;
- (BOOL)hasMemberInPlane:(uint8_t)thePlane;
@end

@interface NSMutableCharacterSet : NSCharacterSet <NSCopying, NSMutableCopying, NSSecureCoding>

- (void)addCharactersInRange:(NSRange)aRange;
- (void)removeCharactersInRange:(NSRange)aRange;
- (void)addCharactersInString:(NSString *)aString;
- (void)removeCharactersInString:(NSString *)aString;
- (void)formUnionWithCharacterSet:(NSCharacterSet *)otherSet;
- (void)formIntersectionWithCharacterSet:(NSCharacterSet *)otherSet;
- (void)invert;

+ (NSMutableCharacterSet *)controlCharacterSet;
+ (NSMutableCharacterSet *)whitespaceCharacterSet;
+ (NSMutableCharacterSet *)whitespaceAndNewlineCharacterSet;
+ (NSMutableCharacterSet *)decimalDigitCharacterSet;
+ (NSMutableCharacterSet *)letterCharacterSet;
+ (NSMutableCharacterSet *)lowercaseLetterCharacterSet;
+ (NSMutableCharacterSet *)uppercaseLetterCharacterSet;
+ (NSMutableCharacterSet *)nonBaseCharacterSet;
+ (NSMutableCharacterSet *)alphanumericCharacterSet;
+ (NSMutableCharacterSet *)decomposableCharacterSet;
+ (NSMutableCharacterSet *)illegalCharacterSet;
+ (NSMutableCharacterSet *)punctuationCharacterSet;
+ (NSMutableCharacterSet *)capitalizedLetterCharacterSet;
+ (NSMutableCharacterSet *)symbolCharacterSet;
+ (NSMutableCharacterSet *)newlineCharacterSet __attribute__((availability(ios,introduced=2_0)));

+ (NSMutableCharacterSet *)characterSetWithRange:(NSRange)aRange;
+ (NSMutableCharacterSet *)characterSetWithCharactersInString:(NSString *)aString;
+ (NSMutableCharacterSet *)characterSetWithBitmapRepresentation:(NSData *)data;
+ (nullable NSMutableCharacterSet *)characterSetWithContentsOfFile:(NSString *)fName;

@end
# 16 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCoder.h" 1 3






@class NSString, NSData, NSSet<ObjectType>;






typedef enum NSDecodingFailurePolicy : NSInteger NSDecodingFailurePolicy; enum NSDecodingFailurePolicy : NSInteger {

    NSDecodingFailurePolicyRaiseException,


    NSDecodingFailurePolicySetErrorAndReturn,
} __attribute__((availability(ios,introduced=9_0)));

@interface NSCoder : NSObject

- (void)encodeValueOfObjCType:(const char *)type at:(const void *)addr;
- (void)encodeDataObject:(NSData *)data;
- (void)decodeValueOfObjCType:(const char *)type at:(void *)data;
- (nullable NSData *)decodeDataObject;
- (NSInteger)versionForClassName:(NSString *)className;

@end

@interface NSCoder (NSExtendedCoder)

- (void)encodeObject:(nullable id)object;
- (void)encodeRootObject:(id)rootObject;
- (void)encodeBycopyObject:(nullable id)anObject;
- (void)encodeByrefObject:(nullable id)anObject;
- (void)encodeConditionalObject:(nullable id)object;
- (void)encodeValuesOfObjCTypes:(const char *)types, ...;
- (void)encodeArrayOfObjCType:(const char *)type count:(NSUInteger)count at:(const void *)array;
- (void)encodeBytes:(nullable const void *)byteaddr length:(NSUInteger)length;

- (nullable id)decodeObject;
- (nullable id)decodeTopLevelObjectAndReturnError:(NSError **)error __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(swift, unavailable, message="Use 'decodeTopLevelObject() throws' instead")));
- (void)decodeValuesOfObjCTypes:(const char *)types, ...;
- (void)decodeArrayOfObjCType:(const char *)itemType count:(NSUInteger)count at:(void *)array;
- (nullable void *)decodeBytesWithReturnedLength:(NSUInteger *)lengthp __attribute__((objc_returns_inner_pointer));






- (void)setObjectZone:(nullable NSZone *)zone ;
- (nullable NSZone *)objectZone ;

@property (readonly) unsigned int systemVersion;

@property (readonly) BOOL allowsKeyedCoding;

- (void)encodeObject:(nullable id)objv forKey:(NSString *)key;
- (void)encodeConditionalObject:(nullable id)objv forKey:(NSString *)key;
- (void)encodeBool:(BOOL)boolv forKey:(NSString *)key;
- (void)encodeInt:(int)intv forKey:(NSString *)key;
- (void)encodeInt32:(int32_t)intv forKey:(NSString *)key;
- (void)encodeInt64:(int64_t)intv forKey:(NSString *)key;
- (void)encodeFloat:(float)realv forKey:(NSString *)key;
- (void)encodeDouble:(double)realv forKey:(NSString *)key;
- (void)encodeBytes:(nullable const uint8_t *)bytesp length:(NSUInteger)lenv forKey:(NSString *)key;

- (BOOL)containsValueForKey:(NSString *)key;
- (nullable id)decodeObjectForKey:(NSString *)key;
- (nullable id)decodeTopLevelObjectForKey:(NSString *)key error:(NSError **)error __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(swift, unavailable, message="Use 'decodeObjectForKey(_:) throws' instead")));
- (BOOL)decodeBoolForKey:(NSString *)key;
- (int)decodeIntForKey:(NSString *)key;
- (int32_t)decodeInt32ForKey:(NSString *)key;
- (int64_t)decodeInt64ForKey:(NSString *)key;
- (float)decodeFloatForKey:(NSString *)key;
- (double)decodeDoubleForKey:(NSString *)key;
- (nullable const uint8_t *)decodeBytesForKey:(NSString *)key returnedLength:(nullable NSUInteger *)lengthp __attribute__((objc_returns_inner_pointer));

- (void)encodeInteger:(NSInteger)intv forKey:(NSString *)key __attribute__((availability(ios,introduced=2_0)));
- (NSInteger)decodeIntegerForKey:(NSString *)key __attribute__((availability(ios,introduced=2_0)));


@property (readonly) BOOL requiresSecureCoding __attribute__((availability(ios,introduced=6_0)));


- (nullable id)decodeObjectOfClass:(Class)aClass forKey:(NSString *)key __attribute__((availability(ios,introduced=6_0)));
- (nullable id)decodeTopLevelObjectOfClass:(Class)aClass forKey:(NSString *)key error:(NSError **)error __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(swift, unavailable, message="Use 'decodeTopLevelObjectOfClass(_:,forKey:) throws instead")));


- (nullable id)decodeObjectOfClasses:(nullable NSSet<Class> *)classes forKey:(NSString *)key __attribute__((availability(ios,introduced=6_0))) __attribute__((swift_private));
- (nullable id)decodeTopLevelObjectOfClasses:(nullable NSSet<Class> *)classes forKey:(NSString *)key error:(NSError **)error __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(swift, unavailable, message="Use 'decodeObjectOfClasses(_:,forKey:) throws' instead")));


- (nullable id)decodePropertyListForKey:(NSString *)key __attribute__((availability(ios,introduced=6_0)));


@property (nullable, readonly, copy) NSSet<Class> *allowedClasses __attribute__((availability(ios,introduced=6_0)));
# 133 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCoder.h" 3
- (void)failWithError:(NSError *)error __attribute__((availability(ios,introduced=9_0)));






@property (readonly) NSDecodingFailurePolicy decodingFailurePolicy __attribute__((availability(ios,introduced=9_0)));
# 153 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCoder.h" 3
@property (nullable, readonly, copy) NSError *error __attribute__((availability(ios,introduced=9_0)));

@end
# 17 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSData.h" 1 3







@class NSString, NSURL, NSError;





typedef enum NSDataReadingOptions : NSUInteger NSDataReadingOptions; enum NSDataReadingOptions : NSUInteger {
    NSDataReadingMappedIfSafe = 1UL << 0,
    NSDataReadingUncached = 1UL << 1,
    NSDataReadingMappedAlways __attribute__((availability(ios,introduced=5_0))) = 1UL << 3,


    NSDataReadingMapped = NSDataReadingMappedIfSafe,
    NSMappedRead = NSDataReadingMapped,
    NSUncachedRead = NSDataReadingUncached
};

typedef enum NSDataWritingOptions : NSUInteger NSDataWritingOptions; enum NSDataWritingOptions : NSUInteger {
    NSDataWritingAtomic = 1UL << 0,
    NSDataWritingWithoutOverwriting __attribute__((availability(ios,introduced=6_0))) = 1UL << 1,

    NSDataWritingFileProtectionNone __attribute__((availability(ios,introduced=4_0))) = 0x10000000,
    NSDataWritingFileProtectionComplete __attribute__((availability(ios,introduced=4_0))) = 0x20000000,
    NSDataWritingFileProtectionCompleteUnlessOpen __attribute__((availability(ios,introduced=5_0))) = 0x30000000,
    NSDataWritingFileProtectionCompleteUntilFirstUserAuthentication __attribute__((availability(ios,introduced=5_0))) = 0x40000000,
    NSDataWritingFileProtectionMask __attribute__((availability(ios,introduced=4_0))) = 0xf0000000,


    NSAtomicWrite = NSDataWritingAtomic
};




typedef enum NSDataSearchOptions : NSUInteger NSDataSearchOptions; enum NSDataSearchOptions : NSUInteger {
    NSDataSearchBackwards = 1UL << 0,
    NSDataSearchAnchored = 1UL << 1
} __attribute__((availability(ios,introduced=4_0)));




typedef enum NSDataBase64EncodingOptions : NSUInteger NSDataBase64EncodingOptions; enum NSDataBase64EncodingOptions : NSUInteger {

    NSDataBase64Encoding64CharacterLineLength = 1UL << 0,
    NSDataBase64Encoding76CharacterLineLength = 1UL << 1,


    NSDataBase64EncodingEndLineWithCarriageReturn = 1UL << 4,
    NSDataBase64EncodingEndLineWithLineFeed = 1UL << 5,

} __attribute__((availability(ios,introduced=7_0)));


typedef enum NSDataBase64DecodingOptions : NSUInteger NSDataBase64DecodingOptions; enum NSDataBase64DecodingOptions : NSUInteger {

    NSDataBase64DecodingIgnoreUnknownCharacters = 1UL << 0
} __attribute__((availability(ios,introduced=7_0)));




@interface NSData : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>

@property (readonly) NSUInteger length;





@property (readonly) const void *bytes __attribute__((objc_returns_inner_pointer));

@end

@interface NSData (NSExtendedData)

@property (readonly, copy) NSString *description;
- (void)getBytes:(void *)buffer length:(NSUInteger)length;
- (void)getBytes:(void *)buffer range:(NSRange)range;
- (BOOL)isEqualToData:(NSData *)other;
- (NSData *)subdataWithRange:(NSRange)range;
- (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile;
- (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically;
- (BOOL)writeToFile:(NSString *)path options:(NSDataWritingOptions)writeOptionsMask error:(NSError **)errorPtr;
- (BOOL)writeToURL:(NSURL *)url options:(NSDataWritingOptions)writeOptionsMask error:(NSError **)errorPtr;
- (NSRange)rangeOfData:(NSData *)dataToFind options:(NSDataSearchOptions)mask range:(NSRange)searchRange __attribute__((availability(ios,introduced=4_0)));




- (void) enumerateByteRangesUsingBlock:(void (__attribute__((noescape)) ^)(const void *bytes, NSRange byteRange, BOOL *stop))block __attribute__((availability(ios,introduced=7_0)));

@end

@interface NSData (NSDataCreation)

+ (instancetype)data;
+ (instancetype)dataWithBytes:(nullable const void *)bytes length:(NSUInteger)length;
+ (instancetype)dataWithBytesNoCopy:(void *)bytes length:(NSUInteger)length;
+ (instancetype)dataWithBytesNoCopy:(void *)bytes length:(NSUInteger)length freeWhenDone:(BOOL)b;
+ (nullable instancetype)dataWithContentsOfFile:(NSString *)path options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr;
+ (nullable instancetype)dataWithContentsOfURL:(NSURL *)url options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr;
+ (nullable instancetype)dataWithContentsOfFile:(NSString *)path;
+ (nullable instancetype)dataWithContentsOfURL:(NSURL *)url;
- (instancetype)initWithBytes:(nullable const void *)bytes length:(NSUInteger)length;
- (instancetype)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)length;
- (instancetype)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)length freeWhenDone:(BOOL)b;
- (instancetype)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)length deallocator:(nullable void (^)(void *bytes, NSUInteger length))deallocator __attribute__((availability(ios,introduced=7_0)));
- (nullable instancetype)initWithContentsOfFile:(NSString *)path options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr;
- (nullable instancetype)initWithContentsOfURL:(NSURL *)url options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr;
- (nullable instancetype)initWithContentsOfFile:(NSString *)path;
- (nullable instancetype)initWithContentsOfURL:(NSURL *)url;
- (instancetype)initWithData:(NSData *)data;
+ (instancetype)dataWithData:(NSData *)data;

@end

@interface NSData (NSDataBase64Encoding)



- (nullable instancetype)initWithBase64EncodedString:(NSString *)base64String options:(NSDataBase64DecodingOptions)options __attribute__((availability(ios,introduced=7_0)));



- (NSString *)base64EncodedStringWithOptions:(NSDataBase64EncodingOptions)options __attribute__((availability(ios,introduced=7_0)));



- (nullable instancetype)initWithBase64EncodedData:(NSData *)base64Data options:(NSDataBase64DecodingOptions)options __attribute__((availability(ios,introduced=7_0)));



- (NSData *)base64EncodedDataWithOptions:(NSDataBase64EncodingOptions)options __attribute__((availability(ios,introduced=7_0)));

@end


@interface NSData (NSDeprecated)

- (void)getBytes:(void *)buffer __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "This method is unsafe because it could potentially cause buffer overruns. Use -getBytes:length: instead.")));
+ (nullable id)dataWithContentsOfMappedFile:(NSString *)path __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use +dataWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead.")));
- (nullable id)initWithContentsOfMappedFile:(NSString *)path __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use -initWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead.")));



- (nullable id)initWithBase64Encoding:(NSString *)base64String __attribute__((availability(ios,introduced=4_0,deprecated=7_0,message="" )));
- (NSString *)base64Encoding __attribute__((availability(ios,introduced=4_0,deprecated=7_0,message="" )));

@end



@interface NSMutableData : NSData

@property (readonly) void *mutableBytes __attribute__((objc_returns_inner_pointer));
@property NSUInteger length;

@end

@interface NSMutableData (NSExtendedMutableData)

- (void)appendBytes:(const void *)bytes length:(NSUInteger)length;
- (void)appendData:(NSData *)other;
- (void)increaseLengthBy:(NSUInteger)extraLength;
- (void)replaceBytesInRange:(NSRange)range withBytes:(const void *)bytes;
- (void)resetBytesInRange:(NSRange)range;
- (void)setData:(NSData *)data;
- (void)replaceBytesInRange:(NSRange)range withBytes:(nullable const void *)replacementBytes length:(NSUInteger)replacementLength;

@end

@interface NSMutableData (NSMutableDataCreation)

+ (nullable instancetype)dataWithCapacity:(NSUInteger)aNumItems;
+ (nullable instancetype)dataWithLength:(NSUInteger)length;
- (nullable instancetype)initWithCapacity:(NSUInteger)capacity;
- (nullable instancetype)initWithLength:(NSUInteger)length;

@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))
@interface NSPurgeableData : NSMutableData <NSDiscardableContent> {
@private
    NSUInteger _length;
    int32_t _accessCount;
    uint8_t _private[32];
    void *_reserved;
}

@end
# 18 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateInterval.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateInterval.h" 3
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSDateInterval : NSObject <NSCopying, NSSecureCoding>





@property (readonly, copy) NSDate *startDate;
@property (readonly, copy) NSDate *endDate;
@property (readonly) NSTimeInterval duration;


- (instancetype)init;

- (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


- (instancetype)initWithStartDate:(NSDate *)startDate duration:(NSTimeInterval)duration __attribute__((objc_designated_initializer));


- (instancetype)initWithStartDate:(NSDate *)startDate endDate:(NSDate *)endDate;
# 50 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateInterval.h" 3
- (NSComparisonResult)compare:(NSDateInterval *)dateInterval;

- (BOOL)isEqualToDateInterval:(NSDateInterval *)dateInterval;
- (BOOL)intersectsDateInterval:(NSDateInterval *)dateInterval;




- (nullable NSDateInterval *)intersectionWithDateInterval:(NSDateInterval *)dateInterval;

- (BOOL)containsDate:(NSDate *)date;

@end
# 20 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateFormatter.h" 1 3




# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFormatter.h" 1 3







@class NSString;
@class NSAttributedString;
@class NSDictionary<KeyType, ObjectType>;



typedef enum NSFormattingContext : NSInteger NSFormattingContext; enum NSFormattingContext : NSInteger {


    NSFormattingContextUnknown = 0,


    NSFormattingContextDynamic = 1,


    NSFormattingContextStandalone = 2,


    NSFormattingContextListItem = 3,


    NSFormattingContextBeginningOfSentence = 4,


    NSFormattingContextMiddleOfSentence = 5,

} __attribute__((availability(ios,introduced=8_0)));






typedef enum NSFormattingUnitStyle : NSInteger NSFormattingUnitStyle; enum NSFormattingUnitStyle : NSInteger {
    NSFormattingUnitStyleShort = 1,
    NSFormattingUnitStyleMedium,
    NSFormattingUnitStyleLong,
} __attribute__((availability(ios,introduced=8_0)));

@interface NSFormatter : NSObject <NSCopying, NSCoding>

- (nullable NSString *)stringForObjectValue:(nullable id)obj;

- (nullable NSAttributedString *)attributedStringForObjectValue:(id)obj withDefaultAttributes:(nullable NSDictionary<NSString *, id> *)attrs;

- (nullable NSString *)editingStringForObjectValue:(id)obj;

- (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;

- (BOOL)isPartialStringValid:(NSString *)partialString newEditingString:(NSString * _Nullable * _Nullable)newString errorDescription:(NSString * _Nullable * _Nullable)error;


- (BOOL)isPartialStringValid:(NSString * _Nonnull * _Nonnull)partialStringPtr proposedSelectedRange:(nullable NSRangePointer)proposedSelRangePtr originalString:(NSString *)origString originalSelectedRange:(NSRange)origSelRange errorDescription:(NSString * _Nullable * _Nullable)error;

@end
# 6 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateFormatter.h" 2 3


@class NSLocale, NSDate, NSCalendar, NSTimeZone, NSError, NSArray<ObjectType>, NSMutableDictionary, NSString;
# 25 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateFormatter.h" 3
@interface NSDateFormatter : NSFormatter {
@private
    NSMutableDictionary *_attributes;
    CFDateFormatterRef _formatter;
    NSUInteger _counter;
}

@property NSFormattingContext formattingContext __attribute__((availability(ios,introduced=8_0)));





- (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string range:(inout nullable NSRange *)rangep error:(out NSError **)error;




- (NSString *)stringFromDate:(NSDate *)date;
- (nullable NSDate *)dateFromString:(NSString *)string;

typedef enum NSDateFormatterStyle : NSUInteger NSDateFormatterStyle; enum NSDateFormatterStyle : NSUInteger {
    NSDateFormatterNoStyle = kCFDateFormatterNoStyle,
    NSDateFormatterShortStyle = kCFDateFormatterShortStyle,
    NSDateFormatterMediumStyle = kCFDateFormatterMediumStyle,
    NSDateFormatterLongStyle = kCFDateFormatterLongStyle,
    NSDateFormatterFullStyle = kCFDateFormatterFullStyle
};

typedef enum NSDateFormatterBehavior : NSUInteger NSDateFormatterBehavior; enum NSDateFormatterBehavior : NSUInteger {
    NSDateFormatterBehaviorDefault = 0,



    NSDateFormatterBehavior10_4 = 1040,
};


+ (NSString *)localizedStringFromDate:(NSDate *)date dateStyle:(NSDateFormatterStyle)dstyle timeStyle:(NSDateFormatterStyle)tstyle __attribute__((availability(ios,introduced=4_0)));

+ (nullable NSString *)dateFormatFromTemplate:(NSString *)tmplate options:(NSUInteger)opts locale:(nullable NSLocale *)locale __attribute__((availability(ios,introduced=4_0)));




@property (class) NSDateFormatterBehavior defaultFormatterBehavior;
# 82 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateFormatter.h" 3
- (void) setLocalizedDateFormatFromTemplate:(NSString *)dateFormatTemplate __attribute__((availability(ios,introduced=8_0)));

@property (null_resettable, copy) NSString *dateFormat;
@property NSDateFormatterStyle dateStyle;
@property NSDateFormatterStyle timeStyle;
@property (null_resettable, copy) NSLocale *locale;
@property BOOL generatesCalendarDates;
@property NSDateFormatterBehavior formatterBehavior;
@property (null_resettable, copy) NSTimeZone *timeZone;
@property (null_resettable, copy) NSCalendar *calendar;
@property (getter=isLenient) BOOL lenient;
@property (nullable, copy) NSDate *twoDigitStartDate;
@property (nullable, copy) NSDate *defaultDate;
@property (null_resettable, copy) NSArray<NSString *> *eraSymbols;
@property (null_resettable, copy) NSArray<NSString *> *monthSymbols;
@property (null_resettable, copy) NSArray<NSString *> *shortMonthSymbols;
@property (null_resettable, copy) NSArray<NSString *> *weekdaySymbols;
@property (null_resettable, copy) NSArray<NSString *> *shortWeekdaySymbols;
@property (null_resettable, copy) NSString *AMSymbol;
@property (null_resettable, copy) NSString *PMSymbol;
@property (null_resettable, copy) NSArray<NSString *> *longEraSymbols __attribute__((availability(ios,introduced=2_0)));
@property (null_resettable, copy) NSArray<NSString *> *veryShortMonthSymbols __attribute__((availability(ios,introduced=2_0)));
@property (null_resettable, copy) NSArray<NSString *> *standaloneMonthSymbols __attribute__((availability(ios,introduced=2_0)));
@property (null_resettable, copy) NSArray<NSString *> *shortStandaloneMonthSymbols __attribute__((availability(ios,introduced=2_0)));
@property (null_resettable, copy) NSArray<NSString *> *veryShortStandaloneMonthSymbols __attribute__((availability(ios,introduced=2_0)));
@property (null_resettable, copy) NSArray<NSString *> *veryShortWeekdaySymbols __attribute__((availability(ios,introduced=2_0)));
@property (null_resettable, copy) NSArray<NSString *> *standaloneWeekdaySymbols __attribute__((availability(ios,introduced=2_0)));
@property (null_resettable, copy) NSArray<NSString *> *shortStandaloneWeekdaySymbols __attribute__((availability(ios,introduced=2_0)));
@property (null_resettable, copy) NSArray<NSString *> *veryShortStandaloneWeekdaySymbols __attribute__((availability(ios,introduced=2_0)));
@property (null_resettable, copy) NSArray<NSString *> *quarterSymbols __attribute__((availability(ios,introduced=2_0)));
@property (null_resettable, copy) NSArray<NSString *> *shortQuarterSymbols __attribute__((availability(ios,introduced=2_0)));
@property (null_resettable, copy) NSArray<NSString *> *standaloneQuarterSymbols __attribute__((availability(ios,introduced=2_0)));
@property (null_resettable, copy) NSArray<NSString *> *shortStandaloneQuarterSymbols __attribute__((availability(ios,introduced=2_0)));
@property (nullable, copy) NSDate *gregorianStartDate __attribute__((availability(ios,introduced=2_0)));
@property BOOL doesRelativeDateFormatting __attribute__((availability(ios,introduced=4_0)));

@end
# 21 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateIntervalFormatter.h" 1 3







@class NSLocale, NSCalendar, NSTimeZone, NSDate;



typedef enum NSDateIntervalFormatterStyle : NSUInteger NSDateIntervalFormatterStyle; enum NSDateIntervalFormatterStyle : NSUInteger {
    NSDateIntervalFormatterNoStyle = 0,
    NSDateIntervalFormatterShortStyle = 1,
    NSDateIntervalFormatterMediumStyle = 2,
    NSDateIntervalFormatterLongStyle = 3,
    NSDateIntervalFormatterFullStyle = 4
} __attribute__((availability(ios,introduced=8_0)));




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface NSDateIntervalFormatter : NSFormatter
{
@private
    NSLocale *_locale;
    NSCalendar *_calendar;
    NSTimeZone *_timeZone;
    NSString *_dateTemplate;
    NSString *_dateTemplateFromStyles;
    void *_formatter;
    NSDateIntervalFormatterStyle _dateStyle;
    NSDateIntervalFormatterStyle _timeStyle;
    BOOL _modified;
    BOOL _useTemplate;
    dispatch_semaphore_t _lock;
    void *_reserved[4];
}

@property (null_resettable, copy) NSLocale *locale;
@property (null_resettable, copy) NSCalendar *calendar;
@property (null_resettable, copy) NSTimeZone *timeZone;
@property (null_resettable, copy) NSString *dateTemplate;
@property NSDateIntervalFormatterStyle dateStyle;
@property NSDateIntervalFormatterStyle timeStyle;
# 66 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateIntervalFormatter.h" 3
- (NSString *)stringFromDate:(NSDate *)fromDate toDate:(NSDate *)toDate;

- (nullable NSString *)stringFromDateInterval:(NSDateInterval *)dateInterval __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@end
# 22 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSISO8601DateFormatter.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSISO8601DateFormatter.h" 3
@class NSString, NSDate, NSTimeZone;

typedef enum NSISO8601DateFormatOptions : NSUInteger NSISO8601DateFormatOptions; enum NSISO8601DateFormatOptions : NSUInteger {




    NSISO8601DateFormatWithYear __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithYear,
    NSISO8601DateFormatWithMonth __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithMonth,

    NSISO8601DateFormatWithWeekOfYear __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithWeekOfYear,






    NSISO8601DateFormatWithDay __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithDay,

    NSISO8601DateFormatWithTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithTime,
    NSISO8601DateFormatWithTimeZone __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithTimeZone,

    NSISO8601DateFormatWithSpaceBetweenDateAndTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithSpaceBetweenDateAndTime,
    NSISO8601DateFormatWithDashSeparatorInDate __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithDashSeparatorInDate,
    NSISO8601DateFormatWithColonSeparatorInTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithColonSeparatorInTime,
    NSISO8601DateFormatWithColonSeparatorInTimeZone __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithColonSeparatorInTimeZone,

    NSISO8601DateFormatWithFullDate __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithFullDate,
    NSISO8601DateFormatWithFullTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithFullTime,

    NSISO8601DateFormatWithInternetDateTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithInternetDateTime,
};

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSISO8601DateFormatter : NSFormatter <NSSecureCoding> {
@private
    CFDateFormatterRef _formatter;
    NSTimeZone *_timeZone;
    NSISO8601DateFormatOptions _formatOptions;
}


@property (null_resettable, copy) NSTimeZone *timeZone;

@property NSISO8601DateFormatOptions formatOptions;




- (instancetype)init __attribute__((objc_designated_initializer));

- (NSString *)stringFromDate:(NSDate *)date;
- (nullable NSDate *)dateFromString:(NSString *)string;

+ (NSString *)stringFromDate:(NSDate *)date timeZone:(NSTimeZone *)timeZone formatOptions:(NSISO8601DateFormatOptions)formatOptions;

@end
# 23 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMassFormatter.h" 1 3






@class NSNumberFormatter;



typedef enum NSMassFormatterUnit : NSInteger NSMassFormatterUnit; enum NSMassFormatterUnit : NSInteger {
    NSMassFormatterUnitGram = 11,
    NSMassFormatterUnitKilogram = 14,
    NSMassFormatterUnitOunce = (6 << 8) + 1,
    NSMassFormatterUnitPound = (6 << 8) + 2,
    NSMassFormatterUnitStone = (6 << 8) + 3,
} __attribute__((availability(ios,introduced=8_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface NSMassFormatter : NSFormatter {
@private
    void *_formatter;
    BOOL _isForPersonMassUse;
    void *_reserved[2];
}

@property (null_resettable, copy) NSNumberFormatter *numberFormatter;
@property NSFormattingUnitStyle unitStyle;
@property (getter = isForPersonMassUse) BOOL forPersonMassUse;


- (NSString *)stringFromValue:(double)value unit:(NSMassFormatterUnit)unit;


- (NSString *)stringFromKilograms:(double)numberInKilograms;


- (NSString *)unitStringFromValue:(double)value unit:(NSMassFormatterUnit)unit;


- (NSString *)unitStringFromKilograms:(double)numberInKilograms usedUnit:(nullable NSMassFormatterUnit *)unitp;


- (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;
@end
# 24 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSLengthFormatter.h" 1 3








typedef enum NSLengthFormatterUnit : NSInteger NSLengthFormatterUnit; enum NSLengthFormatterUnit : NSInteger {
    NSLengthFormatterUnitMillimeter = 8,
    NSLengthFormatterUnitCentimeter = 9,
    NSLengthFormatterUnitMeter = 11,
    NSLengthFormatterUnitKilometer = 14,
    NSLengthFormatterUnitInch = (5 << 8) + 1,
    NSLengthFormatterUnitFoot = (5 << 8) + 2,
    NSLengthFormatterUnitYard = (5 << 8) + 3,
    NSLengthFormatterUnitMile = (5 << 8) + 4,
} __attribute__((availability(ios,introduced=8_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface NSLengthFormatter : NSFormatter {
@private
    void *_formatter;
    BOOL _isForPersonHeight;
    void *_reserved[2];
}
@property (null_resettable, copy) NSNumberFormatter *numberFormatter;
@property NSFormattingUnitStyle unitStyle;

@property (getter = isForPersonHeightUse) BOOL forPersonHeightUse;


- (NSString *)stringFromValue:(double)value unit:(NSLengthFormatterUnit)unit;


- (NSString *)stringFromMeters:(double)numberInMeters;


- (NSString *)unitStringFromValue:(double)value unit:(NSLengthFormatterUnit)unit;


- (NSString *)unitStringFromMeters:(double)numberInMeters usedUnit:(nullable NSLengthFormatterUnit *)unitp;


- (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;
@end
# 25 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSEnergyFormatter.h" 1 3








typedef enum NSEnergyFormatterUnit : NSInteger NSEnergyFormatterUnit; enum NSEnergyFormatterUnit : NSInteger {
    NSEnergyFormatterUnitJoule = 11,
    NSEnergyFormatterUnitKilojoule = 14,
    NSEnergyFormatterUnitCalorie = (7 << 8) + 1,
    NSEnergyFormatterUnitKilocalorie = (7 << 8) + 2,
} __attribute__((availability(ios,introduced=8_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface NSEnergyFormatter : NSFormatter {
@private
    void *_formatter;
    BOOL _isForFoodEnergyUse;
    void *_reserved[2];
}
@property (null_resettable, copy) NSNumberFormatter *numberFormatter;
@property NSFormattingUnitStyle unitStyle;
@property (getter = isForFoodEnergyUse) BOOL forFoodEnergyUse;


- (NSString *)stringFromValue:(double)value unit:(NSEnergyFormatterUnit)unit;


- (NSString *)stringFromJoules:(double)numberInJoules;


- (NSString *)unitStringFromValue:(double)value unit:(NSEnergyFormatterUnit)unit;


- (NSString *)unitStringFromJoules:(double)numberInJoules usedUnit:(nullable NSEnergyFormatterUnit *)unitp;


- (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;
@end
# 26 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMeasurement.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUnit.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUnit.h" 3
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitConverter : NSObject
# 33 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUnit.h" 3
- (double)baseUnitValueFromValue:(double)value;






- (double)valueFromBaseUnitValue:(double)baseUnitValue;

@end


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitConverterLinear : NSUnitConverter <NSSecureCoding> {
@private
    double _coefficient;
    double _constant;
}
# 74 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUnit.h" 3
@property (readonly) double coefficient;
@property (readonly) double constant;

- (instancetype)initWithCoefficient:(double)coefficient;

- (instancetype)initWithCoefficient:(double)coefficient constant:(double)constant __attribute__((objc_designated_initializer));

@end






__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnit : NSObject <NSCopying, NSSecureCoding> {
@private
    NSString *_symbol;
}

@property (readonly, copy) NSString *symbol;

- (instancetype)initWithSymbol:(NSString *)symbol;

@end




__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSDimension : NSUnit <NSSecureCoding> {
@private
    NSUInteger _reserved;
@protected
    NSUnitConverter *_converter;
}

@property (readonly, copy) NSUnitConverter *converter;

- (instancetype)initWithSymbol:(NSString *)symbol converter:(NSUnitConverter *)converter __attribute__((objc_designated_initializer));






+ (instancetype)baseUnit;

@end




__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitAcceleration : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitAcceleration *metersPerSecondSquared;
@property (class, readonly, copy) NSUnitAcceleration *gravity;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitAngle : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitAngle *degrees;
@property (class, readonly, copy) NSUnitAngle *arcMinutes;
@property (class, readonly, copy) NSUnitAngle *arcSeconds;
@property (class, readonly, copy) NSUnitAngle *radians;
@property (class, readonly, copy) NSUnitAngle *gradians;
@property (class, readonly, copy) NSUnitAngle *revolutions;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitArea : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitArea *squareMegameters;
@property (class, readonly, copy) NSUnitArea *squareKilometers;
@property (class, readonly, copy) NSUnitArea *squareMeters;
@property (class, readonly, copy) NSUnitArea *squareCentimeters;
@property (class, readonly, copy) NSUnitArea *squareMillimeters;
@property (class, readonly, copy) NSUnitArea *squareMicrometers;
@property (class, readonly, copy) NSUnitArea *squareNanometers;
@property (class, readonly, copy) NSUnitArea *squareInches;
@property (class, readonly, copy) NSUnitArea *squareFeet;
@property (class, readonly, copy) NSUnitArea *squareYards;
@property (class, readonly, copy) NSUnitArea *squareMiles;
@property (class, readonly, copy) NSUnitArea *acres;
@property (class, readonly, copy) NSUnitArea *ares;
@property (class, readonly, copy) NSUnitArea *hectares;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitConcentrationMass : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitConcentrationMass *gramsPerLiter;
@property (class, readonly, copy) NSUnitConcentrationMass *milligramsPerDeciliter;

+ (NSUnitConcentrationMass *)millimolesPerLiterWithGramsPerMole:(double)gramsPerMole;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitDispersion : NSDimension <NSSecureCoding>



@property (class, readonly, copy) NSUnitDispersion *partsPerMillion;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitDuration : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitDuration *seconds;
@property (class, readonly, copy) NSUnitDuration *minutes;
@property (class, readonly, copy) NSUnitDuration *hours;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitElectricCharge : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitElectricCharge *coulombs;
@property (class, readonly, copy) NSUnitElectricCharge *megaampereHours;
@property (class, readonly, copy) NSUnitElectricCharge *kiloampereHours;
@property (class, readonly, copy) NSUnitElectricCharge *ampereHours;
@property (class, readonly, copy) NSUnitElectricCharge *milliampereHours;
@property (class, readonly, copy) NSUnitElectricCharge *microampereHours;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitElectricCurrent : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitElectricCurrent *megaamperes;
@property (class, readonly, copy) NSUnitElectricCurrent *kiloamperes;
@property (class, readonly, copy) NSUnitElectricCurrent *amperes;
@property (class, readonly, copy) NSUnitElectricCurrent *milliamperes;
@property (class, readonly, copy) NSUnitElectricCurrent *microamperes;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitElectricPotentialDifference : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitElectricPotentialDifference *megavolts;
@property (class, readonly, copy) NSUnitElectricPotentialDifference *kilovolts;
@property (class, readonly, copy) NSUnitElectricPotentialDifference *volts;
@property (class, readonly, copy) NSUnitElectricPotentialDifference *millivolts;
@property (class, readonly, copy) NSUnitElectricPotentialDifference *microvolts;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitElectricResistance : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitElectricResistance *megaohms;
@property (class, readonly, copy) NSUnitElectricResistance *kiloohms;
@property (class, readonly, copy) NSUnitElectricResistance *ohms;
@property (class, readonly, copy) NSUnitElectricResistance *milliohms;
@property (class, readonly, copy) NSUnitElectricResistance *microohms;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitEnergy : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitEnergy *kilojoules;
@property (class, readonly, copy) NSUnitEnergy *joules;
@property (class, readonly, copy) NSUnitEnergy *kilocalories;
@property (class, readonly, copy) NSUnitEnergy *calories;
@property (class, readonly, copy) NSUnitEnergy *kilowattHours;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitFrequency : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitFrequency *terahertz;
@property (class, readonly, copy) NSUnitFrequency *gigahertz;
@property (class, readonly, copy) NSUnitFrequency *megahertz;
@property (class, readonly, copy) NSUnitFrequency *kilohertz;
@property (class, readonly, copy) NSUnitFrequency *hertz;
@property (class, readonly, copy) NSUnitFrequency *millihertz;
@property (class, readonly, copy) NSUnitFrequency *microhertz;
@property (class, readonly, copy) NSUnitFrequency *nanohertz;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitFuelEfficiency : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitFuelEfficiency *litersPer100Kilometers;
@property (class, readonly, copy) NSUnitFuelEfficiency *milesPerImperialGallon;
@property (class, readonly, copy) NSUnitFuelEfficiency *milesPerGallon;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitLength : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitLength *megameters;
@property (class, readonly, copy) NSUnitLength *kilometers;
@property (class, readonly, copy) NSUnitLength *hectometers;
@property (class, readonly, copy) NSUnitLength *decameters;
@property (class, readonly, copy) NSUnitLength *meters;
@property (class, readonly, copy) NSUnitLength *decimeters;
@property (class, readonly, copy) NSUnitLength *centimeters;
@property (class, readonly, copy) NSUnitLength *millimeters;
@property (class, readonly, copy) NSUnitLength *micrometers;
@property (class, readonly, copy) NSUnitLength *nanometers;
@property (class, readonly, copy) NSUnitLength *picometers;
@property (class, readonly, copy) NSUnitLength *inches;
@property (class, readonly, copy) NSUnitLength *feet;
@property (class, readonly, copy) NSUnitLength *yards;
@property (class, readonly, copy) NSUnitLength *miles;
@property (class, readonly, copy) NSUnitLength *scandinavianMiles;
@property (class, readonly, copy) NSUnitLength *lightyears;
@property (class, readonly, copy) NSUnitLength *nauticalMiles;
@property (class, readonly, copy) NSUnitLength *fathoms;
@property (class, readonly, copy) NSUnitLength *furlongs;
@property (class, readonly, copy) NSUnitLength *astronomicalUnits;
@property (class, readonly, copy) NSUnitLength *parsecs;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitIlluminance : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitIlluminance *lux;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitMass : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitMass *kilograms;
@property (class, readonly, copy) NSUnitMass *grams;
@property (class, readonly, copy) NSUnitMass *decigrams;
@property (class, readonly, copy) NSUnitMass *centigrams;
@property (class, readonly, copy) NSUnitMass *milligrams;
@property (class, readonly, copy) NSUnitMass *micrograms;
@property (class, readonly, copy) NSUnitMass *nanograms;
@property (class, readonly, copy) NSUnitMass *picograms;
@property (class, readonly, copy) NSUnitMass *ounces;
@property (class, readonly, copy) NSUnitMass *poundsMass;
@property (class, readonly, copy) NSUnitMass *stones;
@property (class, readonly, copy) NSUnitMass *metricTons;
@property (class, readonly, copy) NSUnitMass *shortTons;
@property (class, readonly, copy) NSUnitMass *carats;
@property (class, readonly, copy) NSUnitMass *ouncesTroy;
@property (class, readonly, copy) NSUnitMass *slugs;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitPower : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitPower *terawatts;
@property (class, readonly, copy) NSUnitPower *gigawatts;
@property (class, readonly, copy) NSUnitPower *megawatts;
@property (class, readonly, copy) NSUnitPower *kilowatts;
@property (class, readonly, copy) NSUnitPower *watts;
@property (class, readonly, copy) NSUnitPower *milliwatts;
@property (class, readonly, copy) NSUnitPower *microwatts;
@property (class, readonly, copy) NSUnitPower *nanowatts;
@property (class, readonly, copy) NSUnitPower *picowatts;
@property (class, readonly, copy) NSUnitPower *femtowatts;
@property (class, readonly, copy) NSUnitPower *horsepower;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitPressure : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitPressure *newtonsPerMetersSquared;
@property (class, readonly, copy) NSUnitPressure *gigapascals;
@property (class, readonly, copy) NSUnitPressure *megapascals;
@property (class, readonly, copy) NSUnitPressure *kilopascals;
@property (class, readonly, copy) NSUnitPressure *hectopascals;
@property (class, readonly, copy) NSUnitPressure *inchesOfMercury;
@property (class, readonly, copy) NSUnitPressure *bars;
@property (class, readonly, copy) NSUnitPressure *millibars;
@property (class, readonly, copy) NSUnitPressure *millimetersOfMercury;
@property (class, readonly, copy) NSUnitPressure *poundsForcePerSquareInch;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitSpeed : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitSpeed *metersPerSecond;
@property (class, readonly, copy) NSUnitSpeed *kilometersPerHour;
@property (class, readonly, copy) NSUnitSpeed *milesPerHour;
@property (class, readonly, copy) NSUnitSpeed *knots;

@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitTemperature : NSDimension <NSSecureCoding>



@property (class, readonly, copy) NSUnitTemperature *kelvin;
@property (class, readonly, copy) NSUnitTemperature *celsius;
@property (class, readonly, copy) NSUnitTemperature *fahrenheit;


@end

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSUnitVolume : NSDimension <NSSecureCoding>




@property (class, readonly, copy) NSUnitVolume *megaliters;
@property (class, readonly, copy) NSUnitVolume *kiloliters;
@property (class, readonly, copy) NSUnitVolume *liters;
@property (class, readonly, copy) NSUnitVolume *deciliters;
@property (class, readonly, copy) NSUnitVolume *centiliters;
@property (class, readonly, copy) NSUnitVolume *milliliters;
@property (class, readonly, copy) NSUnitVolume *cubicKilometers;
@property (class, readonly, copy) NSUnitVolume *cubicMeters;
@property (class, readonly, copy) NSUnitVolume *cubicDecimeters;
@property (class, readonly, copy) NSUnitVolume *cubicCentimeters;
@property (class, readonly, copy) NSUnitVolume *cubicMillimeters;
@property (class, readonly, copy) NSUnitVolume *cubicInches;
@property (class, readonly, copy) NSUnitVolume *cubicFeet;
@property (class, readonly, copy) NSUnitVolume *cubicYards;
@property (class, readonly, copy) NSUnitVolume *cubicMiles;
@property (class, readonly, copy) NSUnitVolume *acreFeet;
@property (class, readonly, copy) NSUnitVolume *bushels;
@property (class, readonly, copy) NSUnitVolume *teaspoons;
@property (class, readonly, copy) NSUnitVolume *tablespoons;
@property (class, readonly, copy) NSUnitVolume *fluidOunces;
@property (class, readonly, copy) NSUnitVolume *cups;
@property (class, readonly, copy) NSUnitVolume *pints;
@property (class, readonly, copy) NSUnitVolume *quarts;
@property (class, readonly, copy) NSUnitVolume *gallons;
@property (class, readonly, copy) NSUnitVolume *imperialTeaspoons;
@property (class, readonly, copy) NSUnitVolume *imperialTablespoons;
@property (class, readonly, copy) NSUnitVolume *imperialFluidOunces;
@property (class, readonly, copy) NSUnitVolume *imperialPints;
@property (class, readonly, copy) NSUnitVolume *imperialQuarts;
@property (class, readonly, copy) NSUnitVolume *imperialGallons;
@property (class, readonly, copy) NSUnitVolume *metricCups;

@end
# 9 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMeasurement.h" 2 3



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))
@interface NSMeasurement<UnitType: NSUnit *> : NSObject<NSCopying, NSSecureCoding> {
@private
    UnitType _unit;
    double _doubleValue;
}

@property (readonly, copy) UnitType unit;
@property (readonly) double doubleValue;

- (instancetype)init __attribute__((unavailable));
- (instancetype)initWithDoubleValue:(double)doubleValue unit:(UnitType)unit __attribute__((objc_designated_initializer));





- (BOOL)canBeConvertedToUnit:(NSUnit *)unit;






- (NSMeasurement *)measurementByConvertingToUnit:(NSUnit *)unit;






- (NSMeasurement<UnitType> *)measurementByAddingMeasurement:(NSMeasurement<UnitType> *)measurement;
- (NSMeasurement<UnitType> *)measurementBySubtractingMeasurement:(NSMeasurement<UnitType> *)measurement;

@end
# 27 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMeasurementFormatter.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSNumberFormatter.h" 1 3







@class NSLocale, NSError, NSMutableDictionary, NSRecursiveLock, NSString, NSCache;



typedef enum NSNumberFormatterBehavior : NSUInteger NSNumberFormatterBehavior; enum NSNumberFormatterBehavior : NSUInteger {
    NSNumberFormatterBehaviorDefault = 0,



    NSNumberFormatterBehavior10_4 = 1040,
};

@interface NSNumberFormatter : NSFormatter {
@private
    NSMutableDictionary *_attributes;
    CFNumberFormatterRef _formatter;
    NSUInteger _counter;
    NSNumberFormatterBehavior _behavior;
    NSRecursiveLock *_lock;
    unsigned long _stateBitMask;
    NSInteger _cacheGeneration;
    void *_reserved[8];
}

@property NSFormattingContext formattingContext __attribute__((availability(ios,introduced=8_0)));





- (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string range:(inout nullable NSRange *)rangep error:(out NSError **)error;




- (nullable NSString *)stringFromNumber:(NSNumber *)number;
- (nullable NSNumber *)numberFromString:(NSString *)string;

typedef enum NSNumberFormatterStyle : NSUInteger NSNumberFormatterStyle; enum NSNumberFormatterStyle : NSUInteger {
    NSNumberFormatterNoStyle = kCFNumberFormatterNoStyle,
    NSNumberFormatterDecimalStyle = kCFNumberFormatterDecimalStyle,
    NSNumberFormatterCurrencyStyle = kCFNumberFormatterCurrencyStyle,
    NSNumberFormatterPercentStyle = kCFNumberFormatterPercentStyle,
    NSNumberFormatterScientificStyle = kCFNumberFormatterScientificStyle,
    NSNumberFormatterSpellOutStyle = kCFNumberFormatterSpellOutStyle,
    NSNumberFormatterOrdinalStyle __attribute__((availability(ios,introduced=9_0))) = kCFNumberFormatterOrdinalStyle,
    NSNumberFormatterCurrencyISOCodeStyle __attribute__((availability(ios,introduced=9_0))) = kCFNumberFormatterCurrencyISOCodeStyle,
    NSNumberFormatterCurrencyPluralStyle __attribute__((availability(ios,introduced=9_0))) = kCFNumberFormatterCurrencyPluralStyle,
    NSNumberFormatterCurrencyAccountingStyle __attribute__((availability(ios,introduced=9_0))) = kCFNumberFormatterCurrencyAccountingStyle,
};

+ (NSString *)localizedStringFromNumber:(NSNumber *)num numberStyle:(NSNumberFormatterStyle)nstyle __attribute__((availability(ios,introduced=4_0)));



+ (NSNumberFormatterBehavior)defaultFormatterBehavior;
+ (void)setDefaultFormatterBehavior:(NSNumberFormatterBehavior)behavior;

@property NSNumberFormatterStyle numberStyle;
@property (null_resettable, copy) NSLocale *locale;
@property BOOL generatesDecimalNumbers;
@property NSNumberFormatterBehavior formatterBehavior;

@property (null_resettable, copy) NSString *negativeFormat;
@property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForNegativeValues;
@property (null_resettable, copy) NSString *positiveFormat;
@property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForPositiveValues;
@property BOOL allowsFloats;
@property (null_resettable, copy) NSString *decimalSeparator;
@property BOOL alwaysShowsDecimalSeparator;
@property (null_resettable, copy) NSString *currencyDecimalSeparator;
@property BOOL usesGroupingSeparator;
@property (null_resettable, copy) NSString *groupingSeparator;

@property (nullable, copy) NSString *zeroSymbol;
@property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForZero;
@property (copy) NSString *nilSymbol;
@property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForNil;
@property (null_resettable, copy) NSString *notANumberSymbol;
@property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForNotANumber;
@property (copy) NSString *positiveInfinitySymbol;
@property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForPositiveInfinity;
@property (copy) NSString *negativeInfinitySymbol;
@property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForNegativeInfinity;

@property (null_resettable, copy) NSString *positivePrefix;
@property (null_resettable, copy) NSString *positiveSuffix;
@property (null_resettable, copy) NSString *negativePrefix;
@property (null_resettable, copy) NSString *negativeSuffix;
@property (null_resettable, copy) NSString *currencyCode;
@property (null_resettable, copy) NSString *currencySymbol;
@property (null_resettable, copy) NSString *internationalCurrencySymbol;
@property (null_resettable, copy) NSString *percentSymbol;
@property (null_resettable, copy) NSString *perMillSymbol;
@property (null_resettable, copy) NSString *minusSign;
@property (null_resettable, copy) NSString *plusSign;
@property (null_resettable, copy) NSString *exponentSymbol;

@property NSUInteger groupingSize;
@property NSUInteger secondaryGroupingSize;
@property (nullable, copy) NSNumber *multiplier;
@property NSUInteger formatWidth;
@property (null_resettable, copy) NSString *paddingCharacter;


typedef enum NSNumberFormatterPadPosition : NSUInteger NSNumberFormatterPadPosition; enum NSNumberFormatterPadPosition : NSUInteger {
    NSNumberFormatterPadBeforePrefix = kCFNumberFormatterPadBeforePrefix,
    NSNumberFormatterPadAfterPrefix = kCFNumberFormatterPadAfterPrefix,
    NSNumberFormatterPadBeforeSuffix = kCFNumberFormatterPadBeforeSuffix,
    NSNumberFormatterPadAfterSuffix = kCFNumberFormatterPadAfterSuffix
};

typedef enum NSNumberFormatterRoundingMode : NSUInteger NSNumberFormatterRoundingMode; enum NSNumberFormatterRoundingMode : NSUInteger {
    NSNumberFormatterRoundCeiling = kCFNumberFormatterRoundCeiling,
    NSNumberFormatterRoundFloor = kCFNumberFormatterRoundFloor,
    NSNumberFormatterRoundDown = kCFNumberFormatterRoundDown,
    NSNumberFormatterRoundUp = kCFNumberFormatterRoundUp,
    NSNumberFormatterRoundHalfEven = kCFNumberFormatterRoundHalfEven,
    NSNumberFormatterRoundHalfDown = kCFNumberFormatterRoundHalfDown,
    NSNumberFormatterRoundHalfUp = kCFNumberFormatterRoundHalfUp
};

@property NSNumberFormatterPadPosition paddingPosition;
@property NSNumberFormatterRoundingMode roundingMode;
@property (null_resettable, copy) NSNumber *roundingIncrement;
@property NSUInteger minimumIntegerDigits;
@property NSUInteger maximumIntegerDigits;
@property NSUInteger minimumFractionDigits;
@property NSUInteger maximumFractionDigits;
@property (nullable, copy) NSNumber *minimum;
@property (nullable, copy) NSNumber *maximum;
@property (null_resettable, copy) NSString *currencyGroupingSeparator __attribute__((availability(ios,introduced=2_0)));
@property (getter=isLenient) BOOL lenient __attribute__((availability(ios,introduced=2_0)));
@property BOOL usesSignificantDigits __attribute__((availability(ios,introduced=2_0)));
@property NSUInteger minimumSignificantDigits __attribute__((availability(ios,introduced=2_0)));
@property NSUInteger maximumSignificantDigits __attribute__((availability(ios,introduced=2_0)));
@property (getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled __attribute__((availability(ios,introduced=2_0)));

@end

@class NSDecimalNumberHandler;
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMeasurementFormatter.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSLocale.h" 1 3








@class NSCalendar;

typedef NSString * NSLocaleKey __attribute__((swift_wrapper(enum)));

@class NSArray<ObjectType>, NSDictionary<KeyType, ObjectType>, NSString;





@interface NSLocale : NSObject <NSCopying, NSSecureCoding>

- (nullable id)objectForKey:(NSLocaleKey)key;

- (nullable NSString *)displayNameForKey:(NSLocaleKey)key value:(id)value;

- (instancetype)initWithLocaleIdentifier:(NSString *)string __attribute__((objc_designated_initializer));

- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end

@interface NSLocale (NSExtendedLocale)

@property (readonly, copy) NSString *localeIdentifier;
- (NSString *)localizedStringForLocaleIdentifier:(NSString *)localeIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly, copy) NSString *languageCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
- (nullable NSString *)localizedStringForLanguageCode:(NSString *)languageCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (nullable, readonly, copy) NSString *countryCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
- (nullable NSString *)localizedStringForCountryCode:(NSString *)countryCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (nullable, readonly, copy) NSString *scriptCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
- (nullable NSString *)localizedStringForScriptCode:(NSString *)scriptCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (nullable, readonly, copy) NSString *variantCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
- (nullable NSString *)localizedStringForVariantCode:(NSString *)variantCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly, copy) NSCharacterSet *exemplarCharacterSet __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly, copy) NSString *calendarIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
- (nullable NSString *)localizedStringForCalendarIdentifier:(NSString *)calendarIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (nullable, readonly, copy) NSString *collationIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
- (nullable NSString *)localizedStringForCollationIdentifier:(NSString *)collationIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly) BOOL usesMetricSystem __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly, copy) NSString *decimalSeparator __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly, copy) NSString *groupingSeparator __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly, copy) NSString *currencySymbol __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (nullable, readonly, copy) NSString *currencyCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
- (nullable NSString *)localizedStringForCurrencyCode:(NSString *)currencyCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly, copy) NSString *collatorIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
- (nullable NSString *)localizedStringForCollatorIdentifier:(NSString *)collatorIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly, copy) NSString *quotationBeginDelimiter __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly, copy) NSString *quotationEndDelimiter __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly, copy) NSString *alternateQuotationBeginDelimiter __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly, copy) NSString *alternateQuotationEndDelimiter __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@end

@interface NSLocale (NSLocaleCreation)


@property (class, readonly, strong) NSLocale *autoupdatingCurrentLocale __attribute__((availability(ios,introduced=2_0)));

@property (class, readonly, copy) NSLocale *currentLocale;
@property (class, readonly, copy) NSLocale *systemLocale;


+ (instancetype)localeWithLocaleIdentifier:(NSString *)ident __attribute__((availability(ios,introduced=4_0)));

- (instancetype)init __attribute__((unavailable));

@end

@interface NSLocale (NSLocaleGeneralInfo)


@property (class, readonly, copy) NSArray<NSString *> *availableLocaleIdentifiers;
@property (class, readonly, copy) NSArray<NSString *> *ISOLanguageCodes;
@property (class, readonly, copy) NSArray<NSString *> *ISOCountryCodes;
@property (class, readonly, copy) NSArray<NSString *> *ISOCurrencyCodes;
@property (class, readonly, copy) NSArray<NSString *> *commonISOCurrencyCodes __attribute__((availability(ios,introduced=2_0)));

@property (class, readonly, copy) NSArray<NSString *> *preferredLanguages __attribute__((availability(ios,introduced=2_0)));


+ (NSDictionary<NSString *, NSString *> *)componentsFromLocaleIdentifier:(NSString *)string;
+ (NSString *)localeIdentifierFromComponents:(NSDictionary<NSString *, NSString *> *)dict;

+ (NSString *)canonicalLocaleIdentifierFromString:(NSString *)string;
+ (NSString *)canonicalLanguageIdentifierFromString:(NSString *)string;

+ (nullable NSString *)localeIdentifierFromWindowsLocaleCode:(uint32_t)lcid __attribute__((availability(ios,introduced=4_0)));
+ (uint32_t)windowsLocaleCodeFromLocaleIdentifier:(NSString *)localeIdentifier __attribute__((availability(ios,introduced=4_0)));

typedef enum NSLocaleLanguageDirection : NSUInteger NSLocaleLanguageDirection; enum NSLocaleLanguageDirection : NSUInteger {
    NSLocaleLanguageDirectionUnknown = kCFLocaleLanguageDirectionUnknown,
    NSLocaleLanguageDirectionLeftToRight = kCFLocaleLanguageDirectionLeftToRight,
    NSLocaleLanguageDirectionRightToLeft = kCFLocaleLanguageDirectionRightToLeft,
    NSLocaleLanguageDirectionTopToBottom = kCFLocaleLanguageDirectionTopToBottom,
    NSLocaleLanguageDirectionBottomToTop = kCFLocaleLanguageDirectionBottomToTop
};

+ (NSLocaleLanguageDirection)characterDirectionForLanguage:(NSString *)isoLangCode __attribute__((availability(ios,introduced=4_0)));
+ (NSLocaleLanguageDirection)lineDirectionForLanguage:(NSString *)isoLangCode __attribute__((availability(ios,introduced=4_0)));

@end


extern NSNotificationName const NSCurrentLocaleDidChangeNotification __attribute__((availability(ios,introduced=2_0)));


extern NSLocaleKey const NSLocaleIdentifier;
extern NSLocaleKey const NSLocaleLanguageCode;
extern NSLocaleKey const NSLocaleCountryCode;
extern NSLocaleKey const NSLocaleScriptCode;
extern NSLocaleKey const NSLocaleVariantCode;
extern NSLocaleKey const NSLocaleExemplarCharacterSet;
extern NSLocaleKey const NSLocaleCalendar;
extern NSLocaleKey const NSLocaleCollationIdentifier;
extern NSLocaleKey const NSLocaleUsesMetricSystem;
extern NSLocaleKey const NSLocaleMeasurementSystem;
extern NSLocaleKey const NSLocaleDecimalSeparator;
extern NSLocaleKey const NSLocaleGroupingSeparator;
extern NSLocaleKey const NSLocaleCurrencySymbol;
extern NSLocaleKey const NSLocaleCurrencyCode;
extern NSLocaleKey const NSLocaleCollatorIdentifier __attribute__((availability(ios,introduced=4_0)));
extern NSLocaleKey const NSLocaleQuotationBeginDelimiterKey __attribute__((availability(ios,introduced=4_0)));
extern NSLocaleKey const NSLocaleQuotationEndDelimiterKey __attribute__((availability(ios,introduced=4_0)));
extern NSLocaleKey const NSLocaleAlternateQuotationBeginDelimiterKey __attribute__((availability(ios,introduced=4_0)));
extern NSLocaleKey const NSLocaleAlternateQuotationEndDelimiterKey __attribute__((availability(ios,introduced=4_0)));
# 167 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSLocale.h" 3
extern NSString * const NSGregorianCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierGregorian instead")));
extern NSString * const NSBuddhistCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierBuddhist instead")));
extern NSString * const NSChineseCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierChinese instead")));
extern NSString * const NSHebrewCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierHebrew instead")));
extern NSString * const NSIslamicCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierIslamic instead")));
extern NSString * const NSIslamicCivilCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierIslamicCivil instead")));
extern NSString * const NSJapaneseCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierJapanese instead")));
extern NSString * const NSRepublicOfChinaCalendar __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarIdentifierRepublicOfChina instead")));
extern NSString * const NSPersianCalendar __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarIdentifierPersian instead")));
extern NSString * const NSIndianCalendar __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarIdentifierIndian instead")));
extern NSString * const NSISO8601Calendar __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarIdentifierISO8601 instead")));
# 12 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMeasurementFormatter.h" 2 3



typedef enum NSMeasurementFormatterUnitOptions : NSUInteger NSMeasurementFormatterUnitOptions; enum NSMeasurementFormatterUnitOptions : NSUInteger {
    NSMeasurementFormatterUnitOptionsProvidedUnit = (1UL << 0),
    NSMeasurementFormatterUnitOptionsNaturalScale = (1UL << 1),
    NSMeasurementFormatterUnitOptionsTemperatureWithoutUnit = (1UL << 2),
} __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSMeasurementFormatter : NSFormatter <NSSecureCoding> {
@private
    void *_formatter;
}
# 43 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMeasurementFormatter.h" 3
@property NSMeasurementFormatterUnitOptions unitOptions;




@property NSFormattingUnitStyle unitStyle;




@property (null_resettable, copy) NSLocale *locale;




@property (null_resettable, copy) NSNumberFormatter *numberFormatter;

- (NSString *)stringFromMeasurement:(NSMeasurement *)measurement;





- (NSString *)stringFromUnit:(NSUnit *)unit;

@end
# 28 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPersonNameComponents.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPersonNameComponents.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface NSPersonNameComponents : NSObject <NSCopying, NSSecureCoding>{
@private
    id _private;
}




@property (copy, nullable) NSString *namePrefix;


@property (copy, nullable) NSString *givenName;


@property (copy, nullable) NSString *middleName;


@property (copy, nullable) NSString *familyName;


@property (copy, nullable) NSString *nameSuffix;


@property (copy, nullable) NSString *nickname;




@property (copy, nullable) NSPersonNameComponents *phoneticRepresentation;

@end
# 29 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPersonNameComponentsFormatter.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPersonNameComponentsFormatter.h" 3
typedef enum NSPersonNameComponentsFormatterStyle : NSInteger NSPersonNameComponentsFormatterStyle; enum NSPersonNameComponentsFormatterStyle : NSInteger {
    NSPersonNameComponentsFormatterStyleDefault = 0,



    NSPersonNameComponentsFormatterStyleShort,


    NSPersonNameComponentsFormatterStyleMedium,


    NSPersonNameComponentsFormatterStyleLong,


    NSPersonNameComponentsFormatterStyleAbbreviated
} __attribute__((availability(ios,introduced=9_0)));

typedef enum NSPersonNameComponentsFormatterOptions : NSUInteger NSPersonNameComponentsFormatterOptions; enum NSPersonNameComponentsFormatterOptions : NSUInteger {




    NSPersonNameComponentsFormatterPhonetic = (1UL << 1)
} __attribute__((availability(ios,introduced=9_0)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface NSPersonNameComponentsFormatter : NSFormatter {
@private
    id _private;
}



@property NSPersonNameComponentsFormatterStyle style;



@property (getter=isPhonetic) BOOL phonetic;




+ (NSString *)localizedStringFromPersonNameComponents:(NSPersonNameComponents *)components
                                                style:(NSPersonNameComponentsFormatterStyle)nameFormatStyle
                                              options:(NSPersonNameComponentsFormatterOptions)nameOptions;



- (NSString *)stringFromPersonNameComponents:(NSPersonNameComponents *)components;




- (NSAttributedString *)annotatedStringFromPersonNameComponents:(NSPersonNameComponents *)components;




- (nullable NSPersonNameComponents *)personNameComponentsFromString:(nonnull NSString *)string __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

- (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;

@end


extern NSString * const NSPersonNameComponentKey __attribute__((availability(ios,introduced=9_0)));


extern NSString * const NSPersonNameComponentGivenName __attribute__((availability(ios,introduced=9_0)));
extern NSString * const NSPersonNameComponentFamilyName __attribute__((availability(ios,introduced=9_0)));
extern NSString * const NSPersonNameComponentMiddleName __attribute__((availability(ios,introduced=9_0)));
extern NSString * const NSPersonNameComponentPrefix __attribute__((availability(ios,introduced=9_0)));
extern NSString * const NSPersonNameComponentSuffix __attribute__((availability(ios,introduced=9_0)));
extern NSString * const NSPersonNameComponentNickname __attribute__((availability(ios,introduced=9_0)));




extern NSString * const NSPersonNameComponentDelimiter __attribute__((availability(ios,introduced=9_0)));
# 30 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDecimal.h" 1 3







@class NSDictionary;
# 22 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDecimal.h" 3
typedef enum NSRoundingMode : NSUInteger NSRoundingMode; enum NSRoundingMode : NSUInteger {
    NSRoundPlain,
    NSRoundDown,
    NSRoundUp,
    NSRoundBankers
};

typedef enum NSCalculationError : NSUInteger NSCalculationError; enum NSCalculationError : NSUInteger {
    NSCalculationNoError = 0,
    NSCalculationLossOfPrecision,
    NSCalculationUnderflow,
    NSCalculationOverflow,
    NSCalculationDivideByZero
};






typedef struct {
    signed int _exponent:8;
    unsigned int _length:4;
    unsigned int _isNegative:1;
    unsigned int _isCompact:1;
    unsigned int _reserved:18;
    unsigned short _mantissa[(8)];
} NSDecimal;

static __inline__ __attribute__((always_inline)) BOOL NSDecimalIsNotANumber(const NSDecimal *dcm)
  { return ((dcm->_length == 0) && dcm->_isNegative); }



extern void NSDecimalCopy(NSDecimal *destination, const NSDecimal *source);

extern void NSDecimalCompact(NSDecimal *number);

extern NSComparisonResult NSDecimalCompare(const NSDecimal *leftOperand, const NSDecimal *rightOperand);


extern void NSDecimalRound(NSDecimal *result, const NSDecimal *number, NSInteger scale, NSRoundingMode roundingMode);




extern NSCalculationError NSDecimalNormalize(NSDecimal *number1, NSDecimal *number2, NSRoundingMode roundingMode);

extern NSCalculationError NSDecimalAdd(NSDecimal *result, const NSDecimal *leftOperand, const NSDecimal *rightOperand, NSRoundingMode roundingMode);


extern NSCalculationError NSDecimalSubtract(NSDecimal *result, const NSDecimal *leftOperand, const NSDecimal *rightOperand, NSRoundingMode roundingMode);


extern NSCalculationError NSDecimalMultiply(NSDecimal *result, const NSDecimal *leftOperand, const NSDecimal *rightOperand, NSRoundingMode roundingMode);


extern NSCalculationError NSDecimalDivide(NSDecimal *result, const NSDecimal *leftOperand, const NSDecimal *rightOperand, NSRoundingMode roundingMode);



extern NSCalculationError NSDecimalPower(NSDecimal *result, const NSDecimal *number, NSUInteger power, NSRoundingMode roundingMode);

extern NSCalculationError NSDecimalMultiplyByPowerOf10(NSDecimal *result, const NSDecimal *number, short power, NSRoundingMode roundingMode);

extern NSString *NSDecimalString(const NSDecimal *dcm, id _Nullable locale);
# 31 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDecimalNumber.h" 1 3





# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSScanner.h" 1 3






@class NSString, NSCharacterSet, NSDictionary;



@interface NSScanner : NSObject <NSCopying>

@property (readonly, copy) NSString *string;
@property NSUInteger scanLocation;
@property (nullable, copy) NSCharacterSet *charactersToBeSkipped;
@property BOOL caseSensitive;
@property (nullable, retain) id locale;

- (instancetype)initWithString:(NSString *)string __attribute__((objc_designated_initializer));

@end

@interface NSScanner (NSExtendedScanner)


- (BOOL)scanInt:(nullable int *)result;
- (BOOL)scanInteger:(nullable NSInteger *)result __attribute__((availability(ios,introduced=2_0)));
- (BOOL)scanLongLong:(nullable long long *)result;
- (BOOL)scanUnsignedLongLong:(nullable unsigned long long *)result __attribute__((availability(ios,introduced=7_0)));
- (BOOL)scanFloat:(nullable float *)result;
- (BOOL)scanDouble:(nullable double *)result;
- (BOOL)scanHexInt:(nullable unsigned *)result;
- (BOOL)scanHexLongLong:(nullable unsigned long long *)result __attribute__((availability(ios,introduced=2_0)));
- (BOOL)scanHexFloat:(nullable float *)result __attribute__((availability(ios,introduced=2_0)));
- (BOOL)scanHexDouble:(nullable double *)result __attribute__((availability(ios,introduced=2_0)));

- (BOOL)scanString:(NSString *)string intoString:(NSString * _Nullable * _Nullable)result;
- (BOOL)scanCharactersFromSet:(NSCharacterSet *)set intoString:(NSString * _Nullable * _Nullable)result;

- (BOOL)scanUpToString:(NSString *)string intoString:(NSString * _Nullable * _Nullable)result;
- (BOOL)scanUpToCharactersFromSet:(NSCharacterSet *)set intoString:(NSString * _Nullable * _Nullable)result;

@property (getter=isAtEnd, readonly) BOOL atEnd;

+ (instancetype)scannerWithString:(NSString *)string;
+ (id)localizedScannerWithString:(NSString *)string;

@end
# 7 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDecimalNumber.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSException.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSException.h" 3
@class NSString, NSDictionary, NSArray<ObjectType>, NSNumber;





extern NSExceptionName const NSGenericException;
extern NSExceptionName const NSRangeException;
extern NSExceptionName const NSInvalidArgumentException;
extern NSExceptionName const NSInternalInconsistencyException;

extern NSExceptionName const NSMallocException;

extern NSExceptionName const NSObjectInaccessibleException;
extern NSExceptionName const NSObjectNotAvailableException;
extern NSExceptionName const NSDestinationInvalidException;

extern NSExceptionName const NSPortTimeoutException;
extern NSExceptionName const NSInvalidSendPortException;
extern NSExceptionName const NSInvalidReceivePortException;
extern NSExceptionName const NSPortSendException;
extern NSExceptionName const NSPortReceiveException;

extern NSExceptionName const NSOldStyleException;




__attribute__((__objc_exception__))

@interface NSException : NSObject <NSCopying, NSCoding> {
    @private
    NSString *name;
    NSString *reason;
    NSDictionary *userInfo;
    id reserved;
}

+ (NSException *)exceptionWithName:(NSExceptionName)name reason:(nullable NSString *)reason userInfo:(nullable NSDictionary *)userInfo;
- (instancetype)initWithName:(NSExceptionName)aName reason:(nullable NSString *)aReason userInfo:(nullable NSDictionary *)aUserInfo __attribute__((objc_designated_initializer));

@property (readonly, copy) NSExceptionName name;
@property (nullable, readonly, copy) NSString *reason;
@property (nullable, readonly, copy) NSDictionary *userInfo;

@property (readonly, copy) NSArray<NSNumber *> *callStackReturnAddresses __attribute__((availability(ios,introduced=2_0)));
@property (readonly, copy) NSArray<NSString *> *callStackSymbols __attribute__((availability(ios,introduced=4_0)));

- (void)raise;

@end

@interface NSException (NSExceptionRaisingConveniences)

+ (void)raise:(NSExceptionName)name format:(NSString *)format, ... __attribute__((format(__NSString__, 2, 3)));
+ (void)raise:(NSExceptionName)name format:(NSString *)format arguments:(va_list)argList __attribute__((format(__NSString__, 2, 0)));

@end
# 77 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSException.h" 3
typedef void NSUncaughtExceptionHandler(NSException *exception);

extern NSUncaughtExceptionHandler * _Nullable NSGetUncaughtExceptionHandler(void);
extern void NSSetUncaughtExceptionHandler(NSUncaughtExceptionHandler * _Nullable);
# 94 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSException.h" 3
@class NSAssertionHandler;
# 289 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSException.h" 3
extern NSString * const NSAssertionHandlerKey __attribute__((availability(ios,introduced=4_0)));

@interface NSAssertionHandler : NSObject {
    @private
    void *_reserved;
}


@property (class, readonly, strong) NSAssertionHandler *currentHandler;


- (void)handleFailureInMethod:(SEL)selector object:(id)object file:(NSString *)fileName lineNumber:(NSInteger)line description:(nullable NSString *)format,... __attribute__((format(__NSString__, 5, 6)));

- (void)handleFailureInFunction:(NSString *)functionName file:(NSString *)fileName lineNumber:(NSInteger)line description:(nullable NSString *)format,... __attribute__((format(__NSString__, 4, 5)));

@end
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDecimalNumber.h" 2 3





extern NSExceptionName const NSDecimalNumberExactnessException;
extern NSExceptionName const NSDecimalNumberOverflowException;
extern NSExceptionName const NSDecimalNumberUnderflowException;
extern NSExceptionName const NSDecimalNumberDivideByZeroException;



@class NSDecimalNumber;

@protocol NSDecimalNumberBehaviors

- (NSRoundingMode)roundingMode;

- (short)scale;


- (nullable NSDecimalNumber *)exceptionDuringOperation:(SEL)operation error:(NSCalculationError)error leftOperand:(NSDecimalNumber *)leftOperand rightOperand:(nullable NSDecimalNumber *)rightOperand;


@end



@interface NSDecimalNumber : NSNumber {
@private
    signed int _exponent:8;
    unsigned int _length:4;
    unsigned int _isNegative:1;
    unsigned int _isCompact:1;
    unsigned int _reserved:1;
    unsigned int _hasExternalRefCount:1;
    unsigned int _refs:16;
    unsigned short _mantissa[0];
}

- (instancetype)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)flag;
- (instancetype)initWithDecimal:(NSDecimal)dcm __attribute__((objc_designated_initializer));
- (instancetype)initWithString:(nullable NSString *)numberValue;
- (instancetype)initWithString:(nullable NSString *)numberValue locale:(nullable id)locale;

- (NSString *)descriptionWithLocale:(nullable id)locale;

@property (readonly) NSDecimal decimalValue;

+ (NSDecimalNumber *)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)flag;
+ (NSDecimalNumber *)decimalNumberWithDecimal:(NSDecimal)dcm;
+ (NSDecimalNumber *)decimalNumberWithString:(nullable NSString *)numberValue;
+ (NSDecimalNumber *)decimalNumberWithString:(nullable NSString *)numberValue locale:(nullable id)locale;


@property (class, readonly, copy) NSDecimalNumber *zero;
@property (class, readonly, copy) NSDecimalNumber *one;
@property (class, readonly, copy) NSDecimalNumber *minimumDecimalNumber;
@property (class, readonly, copy) NSDecimalNumber *maximumDecimalNumber;
@property (class, readonly, copy) NSDecimalNumber *notANumber;


- (NSDecimalNumber *)decimalNumberByAdding:(NSDecimalNumber *)decimalNumber;
- (NSDecimalNumber *)decimalNumberByAdding:(NSDecimalNumber *)decimalNumber withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

- (NSDecimalNumber *)decimalNumberBySubtracting:(NSDecimalNumber *)decimalNumber;
- (NSDecimalNumber *)decimalNumberBySubtracting:(NSDecimalNumber *)decimalNumber withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

- (NSDecimalNumber *)decimalNumberByMultiplyingBy:(NSDecimalNumber *)decimalNumber;
- (NSDecimalNumber *)decimalNumberByMultiplyingBy:(NSDecimalNumber *)decimalNumber withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

- (NSDecimalNumber *)decimalNumberByDividingBy:(NSDecimalNumber *)decimalNumber;
- (NSDecimalNumber *)decimalNumberByDividingBy:(NSDecimalNumber *)decimalNumber withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

- (NSDecimalNumber *)decimalNumberByRaisingToPower:(NSUInteger)power;
- (NSDecimalNumber *)decimalNumberByRaisingToPower:(NSUInteger)power withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

- (NSDecimalNumber *)decimalNumberByMultiplyingByPowerOf10:(short)power;
- (NSDecimalNumber *)decimalNumberByMultiplyingByPowerOf10:(short)power withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;


- (NSDecimalNumber *)decimalNumberByRoundingAccordingToBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;


- (NSComparisonResult)compare:(NSNumber *)decimalNumber;



@property (class, strong) id <NSDecimalNumberBehaviors> defaultBehavior;







@property (readonly) const char *objCType __attribute__((objc_returns_inner_pointer));


@property (readonly) double doubleValue;


@end



@interface NSDecimalNumberHandler : NSObject <NSDecimalNumberBehaviors, NSCoding> {
  @private
    signed int _scale:16;
    unsigned _roundingMode:3;
    unsigned _raiseOnExactness:1;
    unsigned _raiseOnOverflow:1;
    unsigned _raiseOnUnderflow:1;
    unsigned _raiseOnDivideByZero:1;
    unsigned _unused:9;
    void *_reserved2;
    void *_reserved;
}

+ (NSDecimalNumberHandler *)defaultDecimalNumberHandler;





- (instancetype)initWithRoundingMode:(NSRoundingMode)roundingMode scale:(short)scale raiseOnExactness:(BOOL)exact raiseOnOverflow:(BOOL)overflow raiseOnUnderflow:(BOOL)underflow raiseOnDivideByZero:(BOOL)divideByZero __attribute__((objc_designated_initializer));

+ (instancetype)decimalNumberHandlerWithRoundingMode:(NSRoundingMode)roundingMode scale:(short)scale raiseOnExactness:(BOOL)exact raiseOnOverflow:(BOOL)overflow raiseOnUnderflow:(BOOL)underflow raiseOnDivideByZero:(BOOL)divideByZero;

@end



@interface NSNumber (NSDecimalNumberExtensions)

@property (readonly) NSDecimal decimalValue;


@end

@interface NSScanner (NSDecimalNumberScanning)

- (BOOL)scanDecimal:(nullable NSDecimal *)dcm;

@end
# 32 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSError.h" 1 3






@class NSDictionary, NSArray<ObjectType>, NSString;


typedef NSString *NSErrorDomain;







extern NSErrorDomain const NSCocoaErrorDomain;


extern NSErrorDomain const NSPOSIXErrorDomain;
extern NSErrorDomain const NSOSStatusErrorDomain;
extern NSErrorDomain const NSMachErrorDomain;



extern NSString *const NSUnderlyingErrorKey;







extern NSString *const NSLocalizedDescriptionKey;
extern NSString *const NSLocalizedFailureReasonErrorKey;
extern NSString *const NSLocalizedRecoverySuggestionErrorKey;
extern NSString *const NSLocalizedRecoveryOptionsErrorKey;
extern NSString *const NSRecoveryAttempterErrorKey;
extern NSString *const NSHelpAnchorErrorKey;


extern NSString *const NSStringEncodingErrorKey ;
extern NSString *const NSURLErrorKey;
extern NSString *const NSFilePathErrorKey;
# 61 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSError.h" 3
@interface NSError : NSObject <NSCopying, NSSecureCoding> {
    @private
    void *_reserved;
    NSInteger _code;
    NSString *_domain;
    NSDictionary *_userInfo;
}



- (instancetype)initWithDomain:(NSErrorDomain)domain code:(NSInteger)code userInfo:(nullable NSDictionary *)dict __attribute__((objc_designated_initializer));
+ (instancetype)errorWithDomain:(NSErrorDomain)domain code:(NSInteger)code userInfo:(nullable NSDictionary *)dict;



@property (readonly, copy) NSErrorDomain domain;
@property (readonly) NSInteger code;



@property (readonly, copy) NSDictionary *userInfo;



@property (readonly, copy) NSString *localizedDescription;



@property (nullable, readonly, copy) NSString *localizedFailureReason;



@property (nullable, readonly, copy) NSString *localizedRecoverySuggestion;



@property (nullable, readonly, copy) NSArray<NSString *> *localizedRecoveryOptions;



@property (nullable, readonly, strong) id recoveryAttempter;



@property (nullable, readonly, copy) NSString *helpAnchor;
# 119 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSError.h" 3
+ (void)setUserInfoValueProviderForDomain:(NSErrorDomain)errorDomain provider:(id _Nullable (^ _Nullable)(NSError *err, NSString *userInfoKey))provider __attribute__((availability(ios,introduced=9_0)));
+ (id _Nullable (^ _Nullable)(NSError *err, NSString *userInfoKey))userInfoValueProviderForDomain:(NSErrorDomain)errorDomain __attribute__((availability(ios,introduced=9_0)));


@end


@interface NSObject(NSErrorRecoveryAttempting)







- (void)attemptRecoveryFromError:(NSError *)error optionIndex:(NSUInteger)recoveryOptionIndex delegate:(nullable id)delegate didRecoverSelector:(nullable SEL)didRecoverSelector contextInfo:(nullable void *)contextInfo;



- (BOOL)attemptRecoveryFromError:(NSError *)error optionIndex:(NSUInteger)recoveryOptionIndex;

@end
# 35 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileHandle.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileHandle.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSRunLoop.h" 1 3








@class NSTimer, NSPort, NSArray<ObjectType>, NSString;



extern NSRunLoopMode const NSDefaultRunLoopMode;
extern NSRunLoopMode const NSRunLoopCommonModes __attribute__((availability(ios,introduced=2_0)));

@interface NSRunLoop : NSObject {
@private
    id _rl;
    id _dperf;
    id _perft;
    id _info;
    id _ports;
    void *_reserved[6];
}


@property (class, readonly, strong) NSRunLoop *currentRunLoop;
@property (class, readonly, strong) NSRunLoop *mainRunLoop __attribute__((availability(ios,introduced=2_0)));


@property (nullable, readonly, copy) NSRunLoopMode currentMode;

- (CFRunLoopRef)getCFRunLoop __attribute__((cf_returns_not_retained));

- (void)addTimer:(NSTimer *)timer forMode:(NSRunLoopMode)mode;

- (void)addPort:(NSPort *)aPort forMode:(NSRunLoopMode)mode;
- (void)removePort:(NSPort *)aPort forMode:(NSRunLoopMode)mode;

- (nullable NSDate *)limitDateForMode:(NSRunLoopMode)mode;
- (void)acceptInputForMode:(NSRunLoopMode)mode beforeDate:(NSDate *)limitDate;

@end

@interface NSRunLoop (NSRunLoopConveniences)

- (void)run;
- (void)runUntilDate:(NSDate *)limitDate;
- (BOOL)runMode:(NSRunLoopMode)mode beforeDate:(NSDate *)limitDate;
# 58 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSRunLoop.h" 3
- (void)performInModes:(NSArray<NSRunLoopMode> *)modes block:(void (^)(void))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



- (void)performBlock:(void (^)(void))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@end



@interface NSObject (NSDelayedPerforming)

- (void)performSelector:(SEL)aSelector withObject:(nullable id)anArgument afterDelay:(NSTimeInterval)delay inModes:(NSArray<NSRunLoopMode> *)modes;
- (void)performSelector:(SEL)aSelector withObject:(nullable id)anArgument afterDelay:(NSTimeInterval)delay;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)aTarget selector:(SEL)aSelector object:(nullable id)anArgument;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)aTarget;

@end

@interface NSRunLoop (NSOrderedPerform)

- (void)performSelector:(SEL)aSelector target:(id)target argument:(nullable id)arg order:(NSUInteger)order modes:(NSArray<NSRunLoopMode> *)modes;
- (void)cancelPerformSelector:(SEL)aSelector target:(id)target argument:(nullable id)arg;
- (void)cancelPerformSelectorsWithTarget:(id)target;

@end
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileHandle.h" 2 3

@class NSString, NSData, NSError;



@interface NSFileHandle : NSObject <NSSecureCoding>

@property (readonly, copy) NSData *availableData;

- (NSData *)readDataToEndOfFile;
- (NSData *)readDataOfLength:(NSUInteger)length;

- (void)writeData:(NSData *)data;

@property (readonly) unsigned long long offsetInFile;
- (unsigned long long)seekToEndOfFile;
- (void)seekToFileOffset:(unsigned long long)offset;

- (void)truncateFileAtOffset:(unsigned long long)offset;
- (void)synchronizeFile;
- (void)closeFile;

- (instancetype)initWithFileDescriptor:(int)fd closeOnDealloc:(BOOL)closeopt __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

@end

@interface NSFileHandle (NSFileHandleCreation)


@property (class, readonly, strong) NSFileHandle *fileHandleWithStandardInput;
@property (class, readonly, strong) NSFileHandle *fileHandleWithStandardOutput;
@property (class, readonly, strong) NSFileHandle *fileHandleWithStandardError;
@property (class, readonly, strong) NSFileHandle *fileHandleWithNullDevice;


+ (nullable instancetype)fileHandleForReadingAtPath:(NSString *)path;
+ (nullable instancetype)fileHandleForWritingAtPath:(NSString *)path;
+ (nullable instancetype)fileHandleForUpdatingAtPath:(NSString *)path;

+ (nullable instancetype)fileHandleForReadingFromURL:(NSURL *)url error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));
+ (nullable instancetype)fileHandleForWritingToURL:(NSURL *)url error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));
+ (nullable instancetype)fileHandleForUpdatingURL:(NSURL *)url error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));

@end

extern NSExceptionName const NSFileHandleOperationException;

extern NSNotificationName const NSFileHandleReadCompletionNotification;
extern NSNotificationName const NSFileHandleReadToEndOfFileCompletionNotification;
extern NSNotificationName const NSFileHandleConnectionAcceptedNotification;
extern NSNotificationName const NSFileHandleDataAvailableNotification;

extern NSString * const NSFileHandleNotificationDataItem;
extern NSString * const NSFileHandleNotificationFileHandleItem;
extern NSString * const NSFileHandleNotificationMonitorModes __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" )));

@interface NSFileHandle (NSFileHandleAsynchronousAccess)

- (void)readInBackgroundAndNotifyForModes:(nullable NSArray<NSRunLoopMode> *)modes;
- (void)readInBackgroundAndNotify;

- (void)readToEndOfFileInBackgroundAndNotifyForModes:(nullable NSArray<NSRunLoopMode> *)modes;
- (void)readToEndOfFileInBackgroundAndNotify;

- (void)acceptConnectionInBackgroundAndNotifyForModes:(nullable NSArray<NSRunLoopMode> *)modes;
- (void)acceptConnectionInBackgroundAndNotify;

- (void)waitForDataInBackgroundAndNotifyForModes:(nullable NSArray<NSRunLoopMode> *)modes;
- (void)waitForDataInBackgroundAndNotify;


@property (nullable, copy) void (^readabilityHandler)(NSFileHandle *) __attribute__((availability(ios,introduced=5_0)));
@property (nullable, copy) void (^writeabilityHandler)(NSFileHandle *) __attribute__((availability(ios,introduced=5_0)));


@end

@interface NSFileHandle (NSFileHandlePlatformSpecific)

- (instancetype)initWithFileDescriptor:(int)fd;

@property (readonly) int fileDescriptor;

@end

@interface NSPipe : NSObject

@property (readonly, retain) NSFileHandle *fileHandleForReading;
@property (readonly, retain) NSFileHandle *fileHandleForWriting;

+ (NSPipe *)pipe;

@end
# 37 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileManager.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPathUtilities.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPathUtilities.h" 3
@interface NSString (NSStringPathExtensions)

+ (NSString *)pathWithComponents:(NSArray<NSString *> *)components;
@property (readonly, copy) NSArray<NSString *> *pathComponents;

@property (getter=isAbsolutePath, readonly) BOOL absolutePath;

@property (readonly, copy) NSString *lastPathComponent;
@property (readonly, copy) NSString *stringByDeletingLastPathComponent;
- (NSString *)stringByAppendingPathComponent:(NSString *)str;

@property (readonly, copy) NSString *pathExtension;
@property (readonly, copy) NSString *stringByDeletingPathExtension;
- (nullable NSString *)stringByAppendingPathExtension:(NSString *)str;

@property (readonly, copy) NSString *stringByAbbreviatingWithTildeInPath;
@property (readonly, copy) NSString *stringByExpandingTildeInPath;

@property (readonly, copy) NSString *stringByStandardizingPath;

@property (readonly, copy) NSString *stringByResolvingSymlinksInPath;

- (NSArray<NSString *> *)stringsByAppendingPaths:(NSArray<NSString *> *)paths;


- (NSUInteger)completePathIntoString:(NSString * _Nullable * _Nullable)outputName caseSensitive:(BOOL)flag matchesIntoArray:(NSArray<NSString *> * _Nullable * _Nullable)outputArray filterTypes:(nullable NSArray<NSString *> *)filterTypes;



@property (readonly) const char *fileSystemRepresentation __attribute__((objc_returns_inner_pointer));
- (BOOL)getFileSystemRepresentation:(char *)cname maxLength:(NSUInteger)max;

@end

@interface NSArray<ObjectType> (NSArrayPathExtensions)

- (NSArray<NSString *> *)pathsMatchingExtensions:(NSArray<NSString *> *)filterTypes;

@end

extern NSString *NSUserName(void);
extern NSString *NSFullUserName(void);

extern NSString *NSHomeDirectory(void);
extern NSString * _Nullable NSHomeDirectoryForUser(NSString * _Nullable userName);

extern NSString *NSTemporaryDirectory(void);

extern NSString *NSOpenStepRootDirectory(void);

typedef enum NSSearchPathDirectory : NSUInteger NSSearchPathDirectory; enum NSSearchPathDirectory : NSUInteger {
    NSApplicationDirectory = 1,
    NSDemoApplicationDirectory,
    NSDeveloperApplicationDirectory,
    NSAdminApplicationDirectory,
    NSLibraryDirectory,
    NSDeveloperDirectory,
    NSUserDirectory,
    NSDocumentationDirectory,
    NSDocumentDirectory,
    NSCoreServiceDirectory,
    NSAutosavedInformationDirectory __attribute__((availability(ios,introduced=4_0))) = 11,
    NSDesktopDirectory = 12,
    NSCachesDirectory = 13,
    NSApplicationSupportDirectory = 14,
    NSDownloadsDirectory __attribute__((availability(ios,introduced=2_0))) = 15,
    NSInputMethodsDirectory __attribute__((availability(ios,introduced=4_0))) = 16,
    NSMoviesDirectory __attribute__((availability(ios,introduced=4_0))) = 17,
    NSMusicDirectory __attribute__((availability(ios,introduced=4_0))) = 18,
    NSPicturesDirectory __attribute__((availability(ios,introduced=4_0))) = 19,
    NSPrinterDescriptionDirectory __attribute__((availability(ios,introduced=4_0))) = 20,
    NSSharedPublicDirectory __attribute__((availability(ios,introduced=4_0))) = 21,
    NSPreferencePanesDirectory __attribute__((availability(ios,introduced=4_0))) = 22,
    NSApplicationScriptsDirectory __attribute__((availability(ios,introduced=NA))) = 23,
    NSItemReplacementDirectory __attribute__((availability(ios,introduced=4_0))) = 99,
    NSAllApplicationsDirectory = 100,
    NSAllLibrariesDirectory = 101,
    NSTrashDirectory __attribute__((availability(ios,introduced=NA))) = 102

};

typedef enum NSSearchPathDomainMask : NSUInteger NSSearchPathDomainMask; enum NSSearchPathDomainMask : NSUInteger {
    NSUserDomainMask = 1,
    NSLocalDomainMask = 2,
    NSNetworkDomainMask = 4,
    NSSystemDomainMask = 8,
    NSAllDomainsMask = 0x0ffff
};

extern NSArray<NSString *> *NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde);
# 9 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileManager.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURL.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURL.h" 3
@class NSArray<ObjectType>, NSNumber, NSData, NSDictionary<KeyType, ObjectType>;

typedef NSString * NSURLResourceKey __attribute__((swift_wrapper(struct)));




@interface NSURL: NSObject <NSSecureCoding, NSCopying>



{
    NSString *_urlString;
    NSURL *_baseURL;
    void *_clients;
    void *_reserved;
}



- (nullable instancetype)initWithScheme:(NSString *)scheme host:(nullable NSString *)host path:(NSString *)path __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLComponents instead, which lets you create a valid URL with any valid combination of URL components and subcomponents (not just scheme, host and path), and lets you set components and subcomponents with either percent-encoded or un-percent-encoded strings.")));



- (instancetype)initFileURLWithPath:(NSString *)path isDirectory:(BOOL)isDir relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(ios,introduced=9_0))) __attribute__((objc_designated_initializer));


- (instancetype)initFileURLWithPath:(NSString *)path relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(ios,introduced=9_0))) __attribute__((objc_designated_initializer));

- (instancetype)initFileURLWithPath:(NSString *)path isDirectory:(BOOL)isDir __attribute__((availability(ios,introduced=2_0))) __attribute__((objc_designated_initializer));
- (instancetype)initFileURLWithPath:(NSString *)path __attribute__((objc_designated_initializer));



+ (NSURL *)fileURLWithPath:(NSString *)path isDirectory:(BOOL) isDir relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(ios,introduced=9_0)));


+ (NSURL *)fileURLWithPath:(NSString *)path relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(ios,introduced=9_0)));

+ (NSURL *)fileURLWithPath:(NSString *)path isDirectory:(BOOL)isDir __attribute__((availability(ios,introduced=2_0)));
+ (NSURL *)fileURLWithPath:(NSString *)path;



- (instancetype)initFileURLWithFileSystemRepresentation:(const char *)path isDirectory:(BOOL)isDir relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(ios,introduced=7_0))) __attribute__((objc_designated_initializer));



+ (NSURL *)fileURLWithFileSystemRepresentation:(const char *)path isDirectory:(BOOL) isDir relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(ios,introduced=7_0)));



- (nullable instancetype)initWithString:(NSString *)URLString;
- (nullable instancetype)initWithString:(NSString *)URLString relativeToURL:(nullable NSURL *)baseURL __attribute__((objc_designated_initializer));
+ (nullable instancetype)URLWithString:(NSString *)URLString;
+ (nullable instancetype)URLWithString:(NSString *)URLString relativeToURL:(nullable NSURL *)baseURL;




- (instancetype)initWithDataRepresentation:(NSData *)data relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(ios,introduced=9_0))) __attribute__((objc_designated_initializer));


+ (NSURL *)URLWithDataRepresentation:(NSData *)data relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(ios,introduced=9_0)));



- (instancetype)initAbsoluteURLWithDataRepresentation:(NSData *)data relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(ios,introduced=9_0))) __attribute__((objc_designated_initializer));


+ (NSURL *)absoluteURLWithDataRepresentation:(NSData *)data relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(ios,introduced=9_0)));



@property (readonly, copy) NSData *dataRepresentation __attribute__((availability(ios,introduced=9_0)));


@property (nullable, readonly, copy) NSString *absoluteString;
@property (readonly, copy) NSString *relativeString;
@property (nullable, readonly, copy) NSURL *baseURL;
@property (nullable, readonly, copy) NSURL *absoluteURL;



@property (nullable, readonly, copy) NSString *scheme;
@property (nullable, readonly, copy) NSString *resourceSpecifier;




@property (nullable, readonly, copy) NSString *host;
@property (nullable, readonly, copy) NSNumber *port;
@property (nullable, readonly, copy) NSString *user;
@property (nullable, readonly, copy) NSString *password;
@property (nullable, readonly, copy) NSString *path;
@property (nullable, readonly, copy) NSString *fragment;
@property (nullable, readonly, copy) NSString *parameterString;
@property (nullable, readonly, copy) NSString *query;
@property (nullable, readonly, copy) NSString *relativePath;



@property (readonly) BOOL hasDirectoryPath __attribute__((availability(ios,introduced=9_0)));



- (BOOL)getFileSystemRepresentation:(char *)buffer maxLength:(NSUInteger)maxBufferLength __attribute__((availability(ios,introduced=7_0)));



@property (readonly) const char *fileSystemRepresentation __attribute__((objc_returns_inner_pointer)) __attribute__((availability(ios,introduced=7_0)));

@property (readonly, getter=isFileURL) BOOL fileURL;


extern NSString *NSURLFileScheme;


@property (nullable, readonly, copy) NSURL *standardizedURL;




- (BOOL)checkResourceIsReachableAndReturnError:(NSError **)error __attribute__((swift_error(none))) __attribute__((availability(ios,introduced=4_0)));







- (BOOL)isFileReferenceURL __attribute__((availability(ios,introduced=4_0)));



- (nullable NSURL *)fileReferenceURL __attribute__((availability(ios,introduced=4_0)));



@property (nullable, readonly, copy) NSURL *filePathURL __attribute__((availability(ios,introduced=4_0)));
# 165 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURL.h" 3
- (BOOL)getResourceValue:(out id _Nullable * _Nonnull)value forKey:(NSURLResourceKey)key error:(out NSError ** _Nullable)error __attribute__((availability(ios,introduced=4_0)));



- (nullable NSDictionary<NSURLResourceKey, id> *)resourceValuesForKeys:(NSArray<NSURLResourceKey> *)keys error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));



- (BOOL)setResourceValue:(nullable id)value forKey:(NSURLResourceKey)key error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));



- (BOOL)setResourceValues:(NSDictionary<NSURLResourceKey, id> *)keyedValues error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));

extern NSURLResourceKey const NSURLKeysOfUnsetValuesKey __attribute__((availability(ios,introduced=5_0)));



- (void)removeCachedResourceValueForKey:(NSURLResourceKey)key __attribute__((availability(ios,introduced=7_0)));



- (void)removeAllCachedResourceValues __attribute__((availability(ios,introduced=7_0)));



- (void)setTemporaryResourceValue:(nullable id)value forKey:(NSURLResourceKey)key __attribute__((availability(ios,introduced=7_0)));
# 201 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURL.h" 3
extern NSURLResourceKey const NSURLNameKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLLocalizedNameKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLIsRegularFileKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLIsDirectoryKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLIsSymbolicLinkKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLIsVolumeKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLIsPackageKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLIsApplicationKey __attribute__((availability(ios,introduced=9_0)));
extern NSURLResourceKey const NSURLApplicationIsScriptableKey __attribute__((availability(ios,introduced=NA)));
extern NSURLResourceKey const NSURLIsSystemImmutableKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLIsUserImmutableKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLIsHiddenKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLHasHiddenExtensionKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLCreationDateKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLContentAccessDateKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLContentModificationDateKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLAttributeModificationDateKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLLinkCountKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLParentDirectoryURLKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeURLKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLTypeIdentifierKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLLocalizedTypeDescriptionKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLLabelNumberKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLLabelColorKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLLocalizedLabelKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLEffectiveIconKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLCustomIconKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLFileResourceIdentifierKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeIdentifierKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLPreferredIOBlockSizeKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLIsReadableKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLIsWritableKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLIsExecutableKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLFileSecurityKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLIsExcludedFromBackupKey __attribute__((availability(ios,introduced=5_1)));
extern NSURLResourceKey const NSURLTagNamesKey __attribute__((availability(ios,introduced=NA)));
extern NSURLResourceKey const NSURLPathKey __attribute__((availability(ios,introduced=6_0)));
extern NSURLResourceKey const NSURLCanonicalPathKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern NSURLResourceKey const NSURLIsMountTriggerKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLGenerationIdentifierKey __attribute__((availability(ios,introduced=8_0)));
extern NSURLResourceKey const NSURLDocumentIdentifierKey __attribute__((availability(ios,introduced=8_0)));
extern NSURLResourceKey const NSURLAddedToDirectoryDateKey __attribute__((availability(ios,introduced=8_0)));
extern NSURLResourceKey const NSURLQuarantinePropertiesKey __attribute__((availability(ios,introduced=NA)));
extern NSURLResourceKey const NSURLFileResourceTypeKey __attribute__((availability(ios,introduced=5_0)));

typedef NSString * NSURLFileResourceType __attribute__((swift_wrapper(enum)));



extern NSURLFileResourceType const NSURLFileResourceTypeNamedPipe __attribute__((availability(ios,introduced=5_0)));
extern NSURLFileResourceType const NSURLFileResourceTypeCharacterSpecial __attribute__((availability(ios,introduced=5_0)));
extern NSURLFileResourceType const NSURLFileResourceTypeDirectory __attribute__((availability(ios,introduced=5_0)));
extern NSURLFileResourceType const NSURLFileResourceTypeBlockSpecial __attribute__((availability(ios,introduced=5_0)));
extern NSURLFileResourceType const NSURLFileResourceTypeRegular __attribute__((availability(ios,introduced=5_0)));
extern NSURLFileResourceType const NSURLFileResourceTypeSymbolicLink __attribute__((availability(ios,introduced=5_0)));
extern NSURLFileResourceType const NSURLFileResourceTypeSocket __attribute__((availability(ios,introduced=5_0)));
extern NSURLFileResourceType const NSURLFileResourceTypeUnknown __attribute__((availability(ios,introduced=5_0)));

extern NSURLResourceKey const NSURLThumbnailDictionaryKey __attribute__((availability(ios,introduced=8_0)));
extern NSURLResourceKey const NSURLThumbnailKey __attribute__((availability(ios,unavailable)));

typedef NSString *NSURLThumbnailDictionaryItem __attribute__((swift_wrapper(struct)));


extern NSURLThumbnailDictionaryItem const NSThumbnail1024x1024SizeKey __attribute__((availability(ios,introduced=8_0)));



extern NSURLResourceKey const NSURLFileSizeKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLFileAllocatedSizeKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLTotalFileSizeKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLTotalFileAllocatedSizeKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLIsAliasFileKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLFileProtectionKey __attribute__((availability(ios,introduced=9_0)));

typedef NSString * NSURLFileProtectionType __attribute__((swift_wrapper(enum)));


extern NSURLFileProtectionType const NSURLFileProtectionNone __attribute__((availability(ios,introduced=9_0)));
extern NSURLFileProtectionType const NSURLFileProtectionComplete __attribute__((availability(ios,introduced=9_0)));
extern NSURLFileProtectionType const NSURLFileProtectionCompleteUnlessOpen __attribute__((availability(ios,introduced=9_0)));
extern NSURLFileProtectionType const NSURLFileProtectionCompleteUntilFirstUserAuthentication __attribute__((availability(ios,introduced=9_0)));





extern NSURLResourceKey const NSURLVolumeLocalizedFormatDescriptionKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeTotalCapacityKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeAvailableCapacityKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeResourceCountKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeSupportsPersistentIDsKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeSupportsSymbolicLinksKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeSupportsHardLinksKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeSupportsJournalingKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeIsJournalingKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeSupportsSparseFilesKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeSupportsZeroRunsKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeSupportsCaseSensitiveNamesKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeSupportsCasePreservedNamesKey __attribute__((availability(ios,introduced=4_0)));
extern NSURLResourceKey const NSURLVolumeSupportsRootDirectoryDatesKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeSupportsVolumeSizesKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeSupportsRenamingKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeSupportsAdvisoryFileLockingKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeSupportsExtendedSecurityKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeIsBrowsableKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeMaximumFileSizeKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeIsEjectableKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeIsRemovableKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeIsInternalKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeIsAutomountedKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeIsLocalKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeIsReadOnlyKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeCreationDateKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeURLForRemountingKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeUUIDStringKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeNameKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeLocalizedNameKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLVolumeIsEncryptedKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern NSURLResourceKey const NSURLVolumeIsRootFileSystemKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern NSURLResourceKey const NSURLVolumeSupportsCompressionKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern NSURLResourceKey const NSURLVolumeSupportsFileCloningKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern NSURLResourceKey const NSURLVolumeSupportsSwapRenamingKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern NSURLResourceKey const NSURLVolumeSupportsExclusiveRenamingKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



extern NSURLResourceKey const NSURLIsUbiquitousItemKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLUbiquitousItemHasUnresolvedConflictsKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLUbiquitousItemIsDownloadedKey __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use NSURLUbiquitousItemDownloadingStatusKey instead")));
extern NSURLResourceKey const NSURLUbiquitousItemIsDownloadingKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLUbiquitousItemIsUploadedKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLUbiquitousItemIsUploadingKey __attribute__((availability(ios,introduced=5_0)));
extern NSURLResourceKey const NSURLUbiquitousItemPercentDownloadedKey __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" )));
extern NSURLResourceKey const NSURLUbiquitousItemPercentUploadedKey __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" )));
extern NSURLResourceKey const NSURLUbiquitousItemDownloadingStatusKey __attribute__((availability(ios,introduced=7_0)));
extern NSURLResourceKey const NSURLUbiquitousItemDownloadingErrorKey __attribute__((availability(ios,introduced=7_0)));
extern NSURLResourceKey const NSURLUbiquitousItemUploadingErrorKey __attribute__((availability(ios,introduced=7_0)));
extern NSURLResourceKey const NSURLUbiquitousItemDownloadRequestedKey __attribute__((availability(ios,introduced=8_0)));
extern NSURLResourceKey const NSURLUbiquitousItemContainerDisplayNameKey __attribute__((availability(ios,introduced=8_0)));

typedef NSString * NSURLUbiquitousItemDownloadingStatus __attribute__((swift_wrapper(enum)));


extern NSURLUbiquitousItemDownloadingStatus const NSURLUbiquitousItemDownloadingStatusNotDownloaded __attribute__((availability(ios,introduced=7_0)));
extern NSURLUbiquitousItemDownloadingStatus const NSURLUbiquitousItemDownloadingStatusDownloaded __attribute__((availability(ios,introduced=7_0)));
extern NSURLUbiquitousItemDownloadingStatus const NSURLUbiquitousItemDownloadingStatusCurrent __attribute__((availability(ios,introduced=7_0)));




typedef enum NSURLBookmarkCreationOptions : NSUInteger NSURLBookmarkCreationOptions; enum NSURLBookmarkCreationOptions : NSUInteger {
    NSURLBookmarkCreationPreferFileIDResolution __attribute__((availability(ios,introduced=4_0,deprecated=7_0,message="" ))) = ( 1UL << 8 ),
    NSURLBookmarkCreationMinimalBookmark = ( 1UL << 9 ),
    NSURLBookmarkCreationSuitableForBookmarkFile = ( 1UL << 10 ),
    NSURLBookmarkCreationWithSecurityScope __attribute__((availability(ios,introduced=NA))) = ( 1 << 11 ),
    NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess __attribute__((availability(ios,introduced=NA))) = ( 1 << 12 ),
} __attribute__((availability(ios,introduced=4_0)));

typedef enum NSURLBookmarkResolutionOptions : NSUInteger NSURLBookmarkResolutionOptions; enum NSURLBookmarkResolutionOptions : NSUInteger {
    NSURLBookmarkResolutionWithoutUI = ( 1UL << 8 ),
    NSURLBookmarkResolutionWithoutMounting = ( 1UL << 9 ),
    NSURLBookmarkResolutionWithSecurityScope __attribute__((availability(ios,introduced=NA))) = ( 1 << 10 )
} __attribute__((availability(ios,introduced=4_0)));

typedef NSUInteger NSURLBookmarkFileCreationOptions;



- (nullable NSData *)bookmarkDataWithOptions:(NSURLBookmarkCreationOptions)options includingResourceValuesForKeys:(nullable NSArray<NSURLResourceKey> *)keys relativeToURL:(nullable NSURL *)relativeURL error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));



- (nullable instancetype)initByResolvingBookmarkData:(NSData *)bookmarkData options:(NSURLBookmarkResolutionOptions)options relativeToURL:(nullable NSURL *)relativeURL bookmarkDataIsStale:(BOOL * _Nullable)isStale error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));


+ (nullable instancetype)URLByResolvingBookmarkData:(NSData *)bookmarkData options:(NSURLBookmarkResolutionOptions)options relativeToURL:(nullable NSURL *)relativeURL bookmarkDataIsStale:(BOOL * _Nullable)isStale error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));



+ (nullable NSDictionary<NSURLResourceKey, id> *)resourceValuesForKeys:(NSArray<NSURLResourceKey> *)keys fromBookmarkData:(NSData *)bookmarkData __attribute__((availability(ios,introduced=4_0)));



+ (BOOL)writeBookmarkData:(NSData *)bookmarkData toURL:(NSURL *)bookmarkFileURL options:(NSURLBookmarkFileCreationOptions)options error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));



+ (nullable NSData *)bookmarkDataWithContentsOfURL:(NSURL *)bookmarkFileURL error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));



+ (nullable instancetype)URLByResolvingAliasFileAtURL:(NSURL *)url options:(NSURLBookmarkResolutionOptions)options error:(NSError **)error __attribute__((availability(ios,introduced=8_0)));



- (BOOL)startAccessingSecurityScopedResource __attribute__((availability(ios,introduced=8_0)));



- (void)stopAccessingSecurityScopedResource __attribute__((availability(ios,introduced=8_0)));

@end


@interface NSURL (NSPromisedItems)
# 419 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURL.h" 3
- (BOOL)getPromisedItemResourceValue:(id _Nullable * _Nonnull)value forKey:(NSURLResourceKey)key error:(NSError **)error __attribute__((availability(ios,introduced=8_0)));
- (nullable NSDictionary<NSURLResourceKey, id> *)promisedItemResourceValuesForKeys:(NSArray<NSURLResourceKey> *)keys error:(NSError **)error __attribute__((availability(ios,introduced=8_0)));
- (BOOL)checkPromisedItemIsReachableAndReturnError:(NSError **)error __attribute__((swift_error(none))) __attribute__((availability(ios,introduced=8_0)));

@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

@interface NSURLQueryItem : NSObject <NSSecureCoding, NSCopying> {
@private
    NSString *_name;
    NSString *_value;
}
- (instancetype)initWithName:(NSString *)name value:(nullable NSString *)value __attribute__((objc_designated_initializer));
+ (instancetype)queryItemWithName:(NSString *)name value:(nullable NSString *)value;
@property (readonly) NSString *name;
@property (nullable, readonly) NSString *value;
@end


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))
@interface NSURLComponents : NSObject <NSCopying>


- (instancetype)init;


- (nullable instancetype)initWithURL:(NSURL *)url resolvingAgainstBaseURL:(BOOL)resolve;


+ (nullable instancetype)componentsWithURL:(NSURL *)url resolvingAgainstBaseURL:(BOOL)resolve;


- (nullable instancetype)initWithString:(NSString *)URLString;


+ (nullable instancetype)componentsWithString:(NSString *)URLString;


@property (nullable, readonly, copy) NSURL *URL;


- (nullable NSURL *)URLRelativeToURL:(nullable NSURL *)baseURL;


@property (nullable, readonly, copy) NSString *string __attribute__((availability(ios,introduced=8_0)));




@property (nullable, copy) NSString *scheme;
@property (nullable, copy) NSString *user;
@property (nullable, copy) NSString *password;
@property (nullable, copy) NSString *host;
@property (nullable, copy) NSNumber *port;
@property (nullable, copy) NSString *path;
@property (nullable, copy) NSString *query;
@property (nullable, copy) NSString *fragment;


@property (nullable, copy) NSString *percentEncodedUser;
@property (nullable, copy) NSString *percentEncodedPassword;
@property (nullable, copy) NSString *percentEncodedHost;
@property (nullable, copy) NSString *percentEncodedPath;
@property (nullable, copy) NSString *percentEncodedQuery;
@property (nullable, copy) NSString *percentEncodedFragment;



@property (readonly) NSRange rangeOfScheme __attribute__((availability(ios,introduced=9_0)));
@property (readonly) NSRange rangeOfUser __attribute__((availability(ios,introduced=9_0)));
@property (readonly) NSRange rangeOfPassword __attribute__((availability(ios,introduced=9_0)));
@property (readonly) NSRange rangeOfHost __attribute__((availability(ios,introduced=9_0)));
@property (readonly) NSRange rangeOfPort __attribute__((availability(ios,introduced=9_0)));
@property (readonly) NSRange rangeOfPath __attribute__((availability(ios,introduced=9_0)));
@property (readonly) NSRange rangeOfQuery __attribute__((availability(ios,introduced=9_0)));
@property (readonly) NSRange rangeOfFragment __attribute__((availability(ios,introduced=9_0)));




@property (nullable, copy) NSArray<NSURLQueryItem *> *queryItems __attribute__((availability(ios,introduced=8_0)));

@end


@interface NSCharacterSet (NSURLUtilities)




@property (class, readonly, copy) NSCharacterSet *URLUserAllowedCharacterSet __attribute__((availability(ios,introduced=7_0)));


@property (class, readonly, copy) NSCharacterSet *URLPasswordAllowedCharacterSet __attribute__((availability(ios,introduced=7_0)));


@property (class, readonly, copy) NSCharacterSet *URLHostAllowedCharacterSet __attribute__((availability(ios,introduced=7_0)));


@property (class, readonly, copy) NSCharacterSet *URLPathAllowedCharacterSet __attribute__((availability(ios,introduced=7_0)));


@property (class, readonly, copy) NSCharacterSet *URLQueryAllowedCharacterSet __attribute__((availability(ios,introduced=7_0)));


@property (class, readonly, copy) NSCharacterSet *URLFragmentAllowedCharacterSet __attribute__((availability(ios,introduced=7_0)));

@end


@interface NSString (NSURLUtilities)


- (nullable NSString *)stringByAddingPercentEncodingWithAllowedCharacters:(NSCharacterSet *)allowedCharacters __attribute__((availability(ios,introduced=7_0)));


@property (nullable, readonly, copy) NSString *stringByRemovingPercentEncoding __attribute__((availability(ios,introduced=7_0)));


- (nullable NSString *)stringByAddingPercentEscapesUsingEncoding:(NSStringEncoding)enc __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use -stringByAddingPercentEncodingWithAllowedCharacters: instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent since each URL component or subcomponent has different rules for what characters are valid.")));
- (nullable NSString *)stringByReplacingPercentEscapesUsingEncoding:(NSStringEncoding)enc __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use -stringByRemovingPercentEncoding instead, which always uses the recommended UTF-8 encoding.")));

@end


@interface NSURL (NSURLPathUtilities)



+ (nullable NSURL *)fileURLWithPathComponents:(NSArray<NSString *> *)components __attribute__((availability(ios,introduced=4_0)));
@property (nullable, readonly, copy) NSArray<NSString *> *pathComponents __attribute__((availability(ios,introduced=4_0)));
@property (nullable, readonly, copy) NSString *lastPathComponent __attribute__((availability(ios,introduced=4_0)));
@property (nullable, readonly, copy) NSString *pathExtension __attribute__((availability(ios,introduced=4_0)));

- (nullable NSURL *)URLByAppendingPathComponent:(NSString *)pathComponent __attribute__((availability(ios,introduced=4_0)));
- (nullable NSURL *)URLByAppendingPathComponent:(NSString *)pathComponent isDirectory:(BOOL)isDirectory __attribute__((availability(ios,introduced=5_0)));
@property (nullable, readonly, copy) NSURL *URLByDeletingLastPathComponent __attribute__((availability(ios,introduced=4_0)));
- (nullable NSURL *)URLByAppendingPathExtension:(NSString *)pathExtension __attribute__((availability(ios,introduced=4_0)));
@property (nullable, readonly, copy) NSURL *URLByDeletingPathExtension __attribute__((availability(ios,introduced=4_0)));




@property (nullable, readonly, copy) NSURL *URLByStandardizingPath __attribute__((availability(ios,introduced=4_0)));
@property (nullable, readonly, copy) NSURL *URLByResolvingSymlinksInPath __attribute__((availability(ios,introduced=4_0)));

@end





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface NSFileSecurity : NSObject <NSCopying, NSCoding>
- (nullable instancetype) initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
@end
# 12 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileManager.h" 2 3


@class NSArray<ObjectType>, NSData, NSDate, NSDirectoryEnumerator<ObjectType>, NSError, NSNumber;
@protocol NSFileManagerDelegate;

typedef NSString * NSFileAttributeKey __attribute__((swift_wrapper(struct)));
typedef NSString * NSFileAttributeType __attribute__((swift_wrapper(enum)));
typedef NSString * NSFileProtectionType __attribute__((swift_wrapper(enum)));







typedef enum NSVolumeEnumerationOptions : NSUInteger NSVolumeEnumerationOptions; enum NSVolumeEnumerationOptions : NSUInteger {


    NSVolumeEnumerationSkipHiddenVolumes = 1UL << 1,



    NSVolumeEnumerationProduceFileReferenceURLs = 1UL << 2
} __attribute__((availability(ios,introduced=4_0)));

typedef enum NSDirectoryEnumerationOptions : NSUInteger NSDirectoryEnumerationOptions; enum NSDirectoryEnumerationOptions : NSUInteger {


    NSDirectoryEnumerationSkipsSubdirectoryDescendants = 1UL << 0,



    NSDirectoryEnumerationSkipsPackageDescendants = 1UL << 1,



    NSDirectoryEnumerationSkipsHiddenFiles = 1UL << 2
} __attribute__((availability(ios,introduced=4_0)));

typedef enum NSFileManagerItemReplacementOptions : NSUInteger NSFileManagerItemReplacementOptions; enum NSFileManagerItemReplacementOptions : NSUInteger {


    NSFileManagerItemReplacementUsingNewMetadataOnly = 1UL << 0,



     NSFileManagerItemReplacementWithoutDeletingBackupItem = 1UL << 1
} __attribute__((availability(ios,introduced=4_0)));

typedef enum NSURLRelationship : NSInteger NSURLRelationship; enum NSURLRelationship : NSInteger {
    NSURLRelationshipContains,
    NSURLRelationshipSame,
    NSURLRelationshipOther
} __attribute__((availability(ios,introduced=8_0)));


typedef enum NSFileManagerUnmountOptions : NSUInteger NSFileManagerUnmountOptions; enum NSFileManagerUnmountOptions : NSUInteger {


    NSFileManagerUnmountAllPartitionsAndEjectDisk = 1UL << 0,



    NSFileManagerUnmountWithoutUI = 1UL << 1,
} __attribute__((availability(ios,introduced=NA)));



extern NSString *const NSFileManagerUnmountDissentingProcessIdentifierErrorKey __attribute__((availability(ios,introduced=NA)));






extern NSNotificationName const NSUbiquityIdentityDidChangeNotification __attribute__((availability(ios,introduced=6_0)));

@interface NSFileManager : NSObject




@property (class, readonly, strong) NSFileManager *defaultManager;




- (nullable NSArray<NSURL *> *)mountedVolumeURLsIncludingResourceValuesForKeys:(nullable NSArray<NSURLResourceKey> *)propertyKeys options:(NSVolumeEnumerationOptions)options __attribute__((availability(ios,introduced=4_0)));



- (void)unmountVolumeAtURL:(NSURL *)url options:(NSFileManagerUnmountOptions)mask completionHandler:(void (^)(NSError * _Nullable errorOrNil))completionHandler __attribute__((availability(ios,introduced=NA)));







- (nullable NSArray<NSURL *> *)contentsOfDirectoryAtURL:(NSURL *)url includingPropertiesForKeys:(nullable NSArray<NSURLResourceKey> *)keys options:(NSDirectoryEnumerationOptions)mask error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));




- (NSArray<NSURL *> *)URLsForDirectory:(NSSearchPathDirectory)directory inDomains:(NSSearchPathDomainMask)domainMask __attribute__((availability(ios,introduced=4_0)));





- (nullable NSURL *)URLForDirectory:(NSSearchPathDirectory)directory inDomain:(NSSearchPathDomainMask)domain appropriateForURL:(nullable NSURL *)url create:(BOOL)shouldCreate error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));



- (BOOL)getRelationship:(NSURLRelationship *)outRelationship ofDirectoryAtURL:(NSURL *)directoryURL toItemAtURL:(NSURL *)otherURL error:(NSError **)error __attribute__((availability(ios,introduced=8_0)));



- (BOOL)getRelationship:(NSURLRelationship *)outRelationship ofDirectory:(NSSearchPathDirectory)directory inDomain:(NSSearchPathDomainMask)domainMask toItemAtURL:(NSURL *)url error:(NSError **)error __attribute__((availability(ios,introduced=8_0)));



- (BOOL)createDirectoryAtURL:(NSURL *)url withIntermediateDirectories:(BOOL)createIntermediates attributes:(nullable NSDictionary<NSString *, id> *)attributes error:(NSError **)error __attribute__((availability(ios,introduced=5_0)));



- (BOOL)createSymbolicLinkAtURL:(NSURL *)url withDestinationURL:(NSURL *)destURL error:(NSError **)error __attribute__((availability(ios,introduced=5_0)));



@property (nullable, assign) id <NSFileManagerDelegate> delegate __attribute__((availability(ios,introduced=2_0)));






- (BOOL)setAttributes:(NSDictionary<NSFileAttributeKey, id> *)attributes ofItemAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(ios,introduced=2_0)));






- (BOOL)createDirectoryAtPath:(NSString *)path withIntermediateDirectories:(BOOL)createIntermediates attributes:(nullable NSDictionary<NSString *, id> *)attributes error:(NSError **)error __attribute__((availability(ios,introduced=2_0)));





- (nullable NSArray<NSString *> *)contentsOfDirectoryAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(ios,introduced=2_0)));





- (nullable NSArray<NSString *> *)subpathsOfDirectoryAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(ios,introduced=2_0)));






- (nullable NSDictionary<NSFileAttributeKey, id> *)attributesOfItemAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(ios,introduced=2_0)));







- (nullable NSDictionary<NSFileAttributeKey, id> *)attributesOfFileSystemForPath:(NSString *)path error:(NSError **)error __attribute__((availability(ios,introduced=2_0)));






- (BOOL)createSymbolicLinkAtPath:(NSString *)path withDestinationPath:(NSString *)destPath error:(NSError **)error __attribute__((availability(ios,introduced=2_0)));





- (nullable NSString *)destinationOfSymbolicLinkAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(ios,introduced=2_0)));



- (BOOL)copyItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath error:(NSError **)error __attribute__((availability(ios,introduced=2_0)));
- (BOOL)moveItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath error:(NSError **)error __attribute__((availability(ios,introduced=2_0)));
- (BOOL)linkItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath error:(NSError **)error __attribute__((availability(ios,introduced=2_0)));
- (BOOL)removeItemAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(ios,introduced=2_0)));



- (BOOL)copyItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));
- (BOOL)moveItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));
- (BOOL)linkItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));
- (BOOL)removeItemAtURL:(NSURL *)URL error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));





- (BOOL)trashItemAtURL:(NSURL *)url resultingItemURL:(NSURL * _Nullable * _Nullable)outResultingURL error:(NSError **)error __attribute__((availability(ios,unavailable)));



- (nullable NSDictionary *)fileAttributesAtPath:(NSString *)path traverseLink:(BOOL)yorn __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (BOOL)changeFileAttributes:(NSDictionary *)attributes atPath:(NSString *)path __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (nullable NSArray *)directoryContentsAtPath:(NSString *)path __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (nullable NSDictionary *)fileSystemAttributesAtPath:(NSString *)path __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (nullable NSString *)pathContentOfSymbolicLinkAtPath:(NSString *)path __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (BOOL)createSymbolicLinkAtPath:(NSString *)path pathContent:(NSString *)otherpath __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (BOOL)createDirectoryAtPath:(NSString *)path attributes:(NSDictionary *)attributes __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
# 237 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileManager.h" 3
@property (readonly, copy) NSString *currentDirectoryPath;
- (BOOL)changeCurrentDirectoryPath:(NSString *)path;



- (BOOL)fileExistsAtPath:(NSString *)path;
- (BOOL)fileExistsAtPath:(NSString *)path isDirectory:(nullable BOOL *)isDirectory;
- (BOOL)isReadableFileAtPath:(NSString *)path;
- (BOOL)isWritableFileAtPath:(NSString *)path;
- (BOOL)isExecutableFileAtPath:(NSString *)path;
- (BOOL)isDeletableFileAtPath:(NSString *)path;



- (BOOL)contentsEqualAtPath:(NSString *)path1 andPath:(NSString *)path2;



- (NSString *)displayNameAtPath:(NSString *)path;



- (nullable NSArray<NSString *> *)componentsToDisplayForPath:(NSString *)path;



- (nullable NSDirectoryEnumerator<NSString *> *)enumeratorAtPath:(NSString *)path;





- (nullable NSDirectoryEnumerator<NSURL *> *)enumeratorAtURL:(NSURL *)url includingPropertiesForKeys:(nullable NSArray<NSURLResourceKey> *)keys options:(NSDirectoryEnumerationOptions)mask errorHandler:(nullable BOOL (^)(NSURL *url, NSError *error))handler __attribute__((availability(ios,introduced=4_0)));



- (nullable NSArray<NSString *> *)subpathsAtPath:(NSString *)path;



- (nullable NSData *)contentsAtPath:(NSString *)path;
- (BOOL)createFileAtPath:(NSString *)path contents:(nullable NSData *)data attributes:(nullable NSDictionary<NSString *, id> *)attr;



- (const char *)fileSystemRepresentationWithPath:(NSString *)path __attribute__((objc_returns_inner_pointer));



- (NSString *)stringWithFileSystemRepresentation:(const char *)str length:(NSUInteger)len;
# 295 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileManager.h" 3
- (BOOL)replaceItemAtURL:(NSURL *)originalItemURL withItemAtURL:(NSURL *)newItemURL backupItemName:(nullable NSString *)backupItemName options:(NSFileManagerItemReplacementOptions)options resultingItemURL:(NSURL * _Nullable * _Nullable)resultingURL error:(NSError **)error __attribute__((availability(ios,introduced=4_0)));




- (BOOL)setUbiquitous:(BOOL)flag itemAtURL:(NSURL *)url destinationURL:(NSURL *)destinationURL error:(NSError **)error __attribute__((availability(ios,introduced=5_0)));



- (BOOL)isUbiquitousItemAtURL:(NSURL *)url __attribute__((availability(ios,introduced=5_0)));



- (BOOL)startDownloadingUbiquitousItemAtURL:(NSURL *)url error:(NSError **)error __attribute__((availability(ios,introduced=5_0)));



- (BOOL)evictUbiquitousItemAtURL:(NSURL *)url error:(NSError **)error __attribute__((availability(ios,introduced=5_0)));



- (nullable NSURL *)URLForUbiquityContainerIdentifier:(nullable NSString *)containerIdentifier __attribute__((availability(ios,introduced=5_0)));



- (nullable NSURL *)URLForPublishingUbiquitousItemAtURL:(NSURL *)url expirationDate:(NSDate * _Nullable * _Nullable)outDate error:(NSError **)error __attribute__((availability(ios,introduced=5_0)));





@property (nullable, readonly, copy) id<NSObject,NSCopying,NSCoding> ubiquityIdentityToken __attribute__((availability(ios,introduced=6_0)));



- (nullable NSURL *)containerURLForSecurityApplicationGroupIdentifier:(NSString *)groupIdentifier __attribute__((availability(ios,introduced=7_0)));


@end

@interface NSFileManager (NSUserInformation)

@property (readonly, copy) NSURL *homeDirectoryForCurrentUser __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
@property (readonly, copy) NSURL *temporaryDirectory __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

- (nullable NSURL *)homeDirectoryForUser:(NSString *)userName __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

@end



@interface NSObject (NSCopyLinkMoveHandler)
- (BOOL)fileManager:(NSFileManager *)fm shouldProceedAfterError:(NSDictionary *)errorInfo __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
- (void)fileManager:(NSFileManager *)fm willProcessPath:(NSString *)path __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));
@end


@protocol NSFileManagerDelegate <NSObject>
@optional





- (BOOL)fileManager:(NSFileManager *)fileManager shouldCopyItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
- (BOOL)fileManager:(NSFileManager *)fileManager shouldCopyItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(ios,introduced=4_0)));





- (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error copyingItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
- (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error copyingItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(ios,introduced=4_0)));





- (BOOL)fileManager:(NSFileManager *)fileManager shouldMoveItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
- (BOOL)fileManager:(NSFileManager *)fileManager shouldMoveItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(ios,introduced=4_0)));





- (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error movingItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
- (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error movingItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(ios,introduced=4_0)));





- (BOOL)fileManager:(NSFileManager *)fileManager shouldLinkItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
- (BOOL)fileManager:(NSFileManager *)fileManager shouldLinkItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(ios,introduced=4_0)));





- (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error linkingItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
- (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error linkingItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(ios,introduced=4_0)));





- (BOOL)fileManager:(NSFileManager *)fileManager shouldRemoveItemAtPath:(NSString *)path;
- (BOOL)fileManager:(NSFileManager *)fileManager shouldRemoveItemAtURL:(NSURL *)URL __attribute__((availability(ios,introduced=4_0)));





- (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error removingItemAtPath:(NSString *)path;
- (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error removingItemAtURL:(NSURL *)URL __attribute__((availability(ios,introduced=4_0)));

@end


@interface NSDirectoryEnumerator<ObjectType> : NSEnumerator<ObjectType>




@property (nullable, readonly, copy) NSDictionary<NSFileAttributeKey, id> *fileAttributes;
@property (nullable, readonly, copy) NSDictionary<NSFileAttributeKey, id> *directoryAttributes;


- (void)skipDescendents;



@property (readonly) NSUInteger level __attribute__((availability(ios,introduced=4_0)));



- (void)skipDescendants __attribute__((availability(ios,introduced=4_0)));

@end

extern NSFileAttributeKey const NSFileType;
extern NSFileAttributeType const NSFileTypeDirectory;
extern NSFileAttributeType const NSFileTypeRegular;
extern NSFileAttributeType const NSFileTypeSymbolicLink;
extern NSFileAttributeType const NSFileTypeSocket;
extern NSFileAttributeType const NSFileTypeCharacterSpecial;
extern NSFileAttributeType const NSFileTypeBlockSpecial;
extern NSFileAttributeType const NSFileTypeUnknown;
extern NSFileAttributeKey const NSFileSize;
extern NSFileAttributeKey const NSFileModificationDate;
extern NSFileAttributeKey const NSFileReferenceCount;
extern NSFileAttributeKey const NSFileDeviceIdentifier;
extern NSFileAttributeKey const NSFileOwnerAccountName;
extern NSFileAttributeKey const NSFileGroupOwnerAccountName;
extern NSFileAttributeKey const NSFilePosixPermissions;
extern NSFileAttributeKey const NSFileSystemNumber;
extern NSFileAttributeKey const NSFileSystemFileNumber;
extern NSFileAttributeKey const NSFileExtensionHidden;
extern NSFileAttributeKey const NSFileHFSCreatorCode;
extern NSFileAttributeKey const NSFileHFSTypeCode;
extern NSFileAttributeKey const NSFileImmutable;
extern NSFileAttributeKey const NSFileAppendOnly;
extern NSFileAttributeKey const NSFileCreationDate;
extern NSFileAttributeKey const NSFileOwnerAccountID;
extern NSFileAttributeKey const NSFileGroupOwnerAccountID;
extern NSFileAttributeKey const NSFileBusy;
extern NSFileAttributeKey const NSFileProtectionKey __attribute__((availability(ios,introduced=4_0)));
extern NSFileProtectionType const NSFileProtectionNone __attribute__((availability(ios,introduced=4_0)));
extern NSFileProtectionType const NSFileProtectionComplete __attribute__((availability(ios,introduced=4_0)));
extern NSFileProtectionType const NSFileProtectionCompleteUnlessOpen __attribute__((availability(ios,introduced=5_0)));
extern NSFileProtectionType const NSFileProtectionCompleteUntilFirstUserAuthentication __attribute__((availability(ios,introduced=5_0)));

extern NSFileAttributeKey const NSFileSystemSize;
extern NSFileAttributeKey const NSFileSystemFreeSize;
extern NSFileAttributeKey const NSFileSystemNodes;
extern NSFileAttributeKey const NSFileSystemFreeNodes;

@interface NSDictionary<KeyType, ObjectType> (NSFileAttributes)

- (unsigned long long)fileSize;
- (nullable NSDate *)fileModificationDate;
- (nullable NSString *)fileType;
- (NSUInteger)filePosixPermissions;
- (nullable NSString *)fileOwnerAccountName;
- (nullable NSString *)fileGroupOwnerAccountName;
- (NSInteger)fileSystemNumber;
- (NSUInteger)fileSystemFileNumber;
- (BOOL)fileExtensionHidden;
- (OSType)fileHFSCreatorCode;
- (OSType)fileHFSTypeCode;
- (BOOL)fileIsImmutable;
- (BOOL)fileIsAppendOnly;
- (nullable NSDate *)fileCreationDate;
- (nullable NSNumber *)fileOwnerAccountID;
- (nullable NSNumber *)fileGroupOwnerAccountID;
@end
# 38 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHashTable.h" 1 3




# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPointerFunctions.h" 1 3
# 31 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPointerFunctions.h" 3
typedef enum NSPointerFunctionsOptions : NSUInteger NSPointerFunctionsOptions; enum NSPointerFunctionsOptions : NSUInteger {



    NSPointerFunctionsStrongMemory __attribute__((availability(ios,introduced=6_0))) = (0UL << 0),



    NSPointerFunctionsOpaqueMemory __attribute__((availability(ios,introduced=6_0))) = (2UL << 0),
    NSPointerFunctionsMallocMemory __attribute__((availability(ios,introduced=6_0))) = (3UL << 0),
    NSPointerFunctionsMachVirtualMemory __attribute__((availability(ios,introduced=6_0))) = (4UL << 0),
    NSPointerFunctionsWeakMemory __attribute__((availability(ios,introduced=6_0))) = (5UL << 0),



    NSPointerFunctionsObjectPersonality __attribute__((availability(ios,introduced=6_0))) = (0UL << 8),
    NSPointerFunctionsOpaquePersonality __attribute__((availability(ios,introduced=6_0))) = (1UL << 8),
    NSPointerFunctionsObjectPointerPersonality __attribute__((availability(ios,introduced=6_0))) = (2UL << 8),
    NSPointerFunctionsCStringPersonality __attribute__((availability(ios,introduced=6_0))) = (3UL << 8),
    NSPointerFunctionsStructPersonality __attribute__((availability(ios,introduced=6_0))) = (4UL << 8),
    NSPointerFunctionsIntegerPersonality __attribute__((availability(ios,introduced=6_0))) = (5UL << 8),

    NSPointerFunctionsCopyIn __attribute__((availability(ios,introduced=6_0))) = (1UL << 16),
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))
@interface NSPointerFunctions : NSObject <NSCopying>

- (instancetype)initWithOptions:(NSPointerFunctionsOptions)options __attribute__((objc_designated_initializer));
+ (NSPointerFunctions *)pointerFunctionsWithOptions:(NSPointerFunctionsOptions)options;


@property (nullable) NSUInteger (*hashFunction)(const void *item, NSUInteger (* _Nullable size)(const void *item));
@property (nullable) BOOL (*isEqualFunction)(const void *item1, const void*item2, NSUInteger (* _Nullable size)(const void *item));
@property (nullable) NSUInteger (*sizeFunction)(const void *item);
@property (nullable) NSString * _Nullable (*descriptionFunction)(const void *item);


@property (nullable) void (*relinquishFunction)(const void *item, NSUInteger (* _Nullable size)(const void *item));
@property (nullable) void * _Nonnull (*acquireFunction)(const void *src, NSUInteger (* _Nullable size)(const void *item), BOOL shouldCopy);


@property BOOL usesStrongWriteBarrier
    __attribute__((availability(macosx,introduced=10.5,deprecated=10.12,message="Garbage collection no longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=10.0,message="Garbage collection no longer supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Garbage collection no longer supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Garbage collection no longer supported")));

@property BOOL usesWeakReadAndWriteBarriers
    __attribute__((availability(macosx,introduced=10.5,deprecated=10.12,message="Garbage collection no longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=10.0,message="Garbage collection no longer supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Garbage collection no longer supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Garbage collection no longer supported")));
@end
# 6 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHashTable.h" 2 3






@class NSArray<ObjectType>, NSSet<ObjectType>, NSHashTable;







static const NSPointerFunctionsOptions NSHashTableStrongMemory __attribute__((availability(ios,introduced=6_0))) = NSPointerFunctionsStrongMemory;



static const NSPointerFunctionsOptions NSHashTableCopyIn __attribute__((availability(ios,introduced=6_0))) = NSPointerFunctionsCopyIn;
static const NSPointerFunctionsOptions NSHashTableObjectPointerPersonality __attribute__((availability(ios,introduced=6_0))) = NSPointerFunctionsObjectPointerPersonality;
static const NSPointerFunctionsOptions NSHashTableWeakMemory __attribute__((availability(ios,introduced=6_0))) = NSPointerFunctionsWeakMemory;

typedef NSUInteger NSHashTableOptions;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))
@interface NSHashTable<ObjectType> : NSObject <NSCopying, NSCoding, NSFastEnumeration>

- (instancetype)initWithOptions:(NSPointerFunctionsOptions)options capacity:(NSUInteger)initialCapacity __attribute__((objc_designated_initializer));
- (instancetype)initWithPointerFunctions:(NSPointerFunctions *)functions capacity:(NSUInteger)initialCapacity __attribute__((objc_designated_initializer));



+ (NSHashTable<ObjectType> *)hashTableWithOptions:(NSPointerFunctionsOptions)options;





+ (NSHashTable<ObjectType> *)weakObjectsHashTable __attribute__((availability(ios,introduced=6_0)));



@property (readonly, copy) NSPointerFunctions *pointerFunctions;

@property (readonly) NSUInteger count;
- (nullable ObjectType)member:(nullable ObjectType)object;
- (NSEnumerator<ObjectType> *)objectEnumerator;

- (void)addObject:(nullable ObjectType)object;
- (void)removeObject:(nullable ObjectType)object;

- (void)removeAllObjects;

@property (readonly, copy) NSArray<ObjectType> *allObjects;

@property (nullable, nonatomic, readonly) ObjectType anyObject;
- (BOOL)containsObject:(nullable ObjectType)anObject;

- (BOOL)intersectsHashTable:(NSHashTable<ObjectType> *)other;
- (BOOL)isEqualToHashTable:(NSHashTable<ObjectType> *)other;
- (BOOL)isSubsetOfHashTable:(NSHashTable<ObjectType> *)other;

- (void)intersectHashTable:(NSHashTable<ObjectType> *)other;
- (void)unionHashTable:(NSHashTable<ObjectType> *)other;
- (void)minusHashTable:(NSHashTable<ObjectType> *)other;

@property (readonly, copy) NSSet<ObjectType> *setRepresentation;

@end
# 40 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@class NSArray<ObjectType>;
@class NSDate;
@class NSDictionary<KeyType, ObjectType>;
@class NSNumber;
@class NSString;
@class NSURL;

typedef NSString * NSHTTPCookiePropertyKey __attribute__((swift_wrapper(struct)));







extern NSHTTPCookiePropertyKey const NSHTTPCookieName;





extern NSHTTPCookiePropertyKey const NSHTTPCookieValue;





extern NSHTTPCookiePropertyKey const NSHTTPCookieOriginURL;





extern NSHTTPCookiePropertyKey const NSHTTPCookieVersion;





extern NSHTTPCookiePropertyKey const NSHTTPCookieDomain;





extern NSHTTPCookiePropertyKey const NSHTTPCookiePath;





extern NSHTTPCookiePropertyKey const NSHTTPCookieSecure;





extern NSHTTPCookiePropertyKey const NSHTTPCookieExpires;





extern NSHTTPCookiePropertyKey const NSHTTPCookieComment;





extern NSHTTPCookiePropertyKey const NSHTTPCookieCommentURL;





extern NSHTTPCookiePropertyKey const NSHTTPCookieDiscard;





extern NSHTTPCookiePropertyKey const NSHTTPCookieMaximumAge;





extern NSHTTPCookiePropertyKey const NSHTTPCookiePort;


@class NSHTTPCookieInternal;
# 111 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@interface NSHTTPCookie : NSObject
{
@private
    NSHTTPCookieInternal * _cookiePrivate;
}
# 240 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
- (nullable instancetype)initWithProperties:(NSDictionary<NSHTTPCookiePropertyKey, id> *)properties;
# 255 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
+ (nullable NSHTTPCookie *)cookieWithProperties:(NSDictionary<NSHTTPCookiePropertyKey, id> *)properties;
# 265 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
+ (NSDictionary<NSString *, NSString *> *)requestHeaderFieldsWithCookies:(NSArray<NSHTTPCookie *> *)cookies;
# 276 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
+ (NSArray<NSHTTPCookie *> *)cookiesWithResponseHeaderFields:(NSDictionary<NSString *, NSString *> *)headerFields forURL:(NSURL *)URL;
# 290 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@property (nullable, readonly, copy) NSDictionary<NSHTTPCookiePropertyKey, id> *properties;
# 299 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@property (readonly) NSUInteger version;






@property (readonly, copy) NSString *name;






@property (readonly, copy) NSString *value;
# 324 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@property (nullable, readonly, copy) NSDate *expiresDate;
# 333 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@property (readonly, getter=isSessionOnly) BOOL sessionOnly;
# 344 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@property (readonly, copy) NSString *domain;
# 354 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@property (readonly, copy) NSString *path;
# 367 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@property (readonly, getter=isSecure) BOOL secure;
# 381 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@property (readonly, getter=isHTTPOnly) BOOL HTTPOnly;
# 392 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@property (nullable, readonly, copy) NSString *comment;
# 403 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@property (nullable, readonly, copy) NSURL *commentURL;
# 416 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookie.h" 3
@property (nullable, readonly, copy) NSArray<NSNumber *> *portList;

@end
# 41 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookieStorage.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookieStorage.h" 3
@class NSArray<ObjectType>;
@class NSHTTPCookie;
@class NSURL;
@class NSDate;
@class NSURLSessionTask;
@class NSSortDescriptor;
# 28 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookieStorage.h" 3
typedef enum NSHTTPCookieAcceptPolicy : NSUInteger NSHTTPCookieAcceptPolicy; enum NSHTTPCookieAcceptPolicy : NSUInteger {
    NSHTTPCookieAcceptPolicyAlways,
    NSHTTPCookieAcceptPolicyNever,
    NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain
};


@class NSHTTPCookieStorageInternal;
# 46 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookieStorage.h" 3
@interface NSHTTPCookieStorage : NSObject
{
    @private
    NSHTTPCookieStorageInternal *_internal;
}
# 60 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookieStorage.h" 3
@property(class, readonly, strong) NSHTTPCookieStorage *sharedHTTPCookieStorage;
# 74 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookieStorage.h" 3
+ (NSHTTPCookieStorage *)sharedCookieStorageForGroupContainerIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=9_0)));






@property (nullable , readonly, copy) NSArray<NSHTTPCookie *> *cookies;







- (void)setCookie:(NSHTTPCookie *)cookie;





- (void)deleteCookie:(NSHTTPCookie *)cookie;





- (void)removeCookiesSinceDate:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));
# 113 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookieStorage.h" 3
- (nullable NSArray<NSHTTPCookie *> *)cookiesForURL:(NSURL *)URL;
# 132 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSHTTPCookieStorage.h" 3
- (void)setCookies:(NSArray<NSHTTPCookie *> *)cookies forURL:(nullable NSURL *)URL mainDocumentURL:(nullable NSURL *)mainDocumentURL;






@property NSHTTPCookieAcceptPolicy cookieAcceptPolicy;







- (NSArray<NSHTTPCookie *> *)sortedCookiesUsingDescriptors:(NSArray<NSSortDescriptor *> *) sortOrder __attribute__((availability(ios,introduced=5_0)));

@end

@interface NSHTTPCookieStorage (NSURLSessionTaskAdditions)
- (void)storeCookies:(NSArray<NSHTTPCookie *> *)cookies forTask:(NSURLSessionTask *)task __attribute__((availability(ios,introduced=8_0)));
- (void)getCookiesForTask:(NSURLSessionTask *)task completionHandler:(void (^) (NSArray<NSHTTPCookie *> * _Nullable cookies))completionHandler __attribute__((availability(ios,introduced=8_0)));
@end







extern NSNotificationName const NSHTTPCookieManagerAcceptPolicyChangedNotification;





extern NSNotificationName const NSHTTPCookieManagerCookiesChangedNotification;
# 42 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSIndexPath.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSIndexPath.h" 3
@interface NSIndexPath : NSObject <NSCopying, NSSecureCoding> {
 @private
 NSUInteger *_indexes;



 NSUInteger _length;
        void *_reserved;
}

+ (instancetype)indexPathWithIndex:(NSUInteger)index;
+ (instancetype)indexPathWithIndexes:(const NSUInteger [])indexes length:(NSUInteger)length;

- (instancetype)initWithIndexes:(const NSUInteger [])indexes length:(NSUInteger)length __attribute__((objc_designated_initializer));

- (instancetype)initWithIndex:(NSUInteger)index;


- (NSIndexPath *)indexPathByAddingIndex:(NSUInteger)index;
- (NSIndexPath *)indexPathByRemovingLastIndex;

- (NSUInteger)indexAtPosition:(NSUInteger)position;
@property (readonly) NSUInteger length;
# 41 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSIndexPath.h" 3
- (void)getIndexes:(NSUInteger *)indexes range:(NSRange)positionRange __attribute__((availability(ios,introduced=7_0)));


- (NSComparisonResult)compare:(NSIndexPath *)otherObject;

@end

@interface NSIndexPath (NSDeprecated)

- (void)getIndexes:(NSUInteger *)indexes;
@end
# 43 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSIndexSet.h" 1 3
# 31 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSIndexSet.h" 3
@interface NSIndexSet : NSObject <NSCopying, NSMutableCopying, NSSecureCoding> {
    @protected
    struct {
        NSUInteger _isEmpty:1;
        NSUInteger _hasSingleRange:1;
        NSUInteger _cacheValid:1;
        NSUInteger _reservedArrayBinderController:29;
    } _indexSetFlags;
    union {
        struct {
            NSRange _range;
        } _singleRange;
        struct {
            void * _data;
            void *_reserved;
        } _multipleRanges;
    } _internal;
}

+ (instancetype)indexSet;
+ (instancetype)indexSetWithIndex:(NSUInteger)value;
+ (instancetype)indexSetWithIndexesInRange:(NSRange)range;

- (instancetype)initWithIndexesInRange:(NSRange)range __attribute__((objc_designated_initializer));
- (instancetype)initWithIndexSet:(NSIndexSet *)indexSet __attribute__((objc_designated_initializer));

- (instancetype)initWithIndex:(NSUInteger)value;

- (BOOL)isEqualToIndexSet:(NSIndexSet *)indexSet;

@property (readonly) NSUInteger count;



@property (readonly) NSUInteger firstIndex;
@property (readonly) NSUInteger lastIndex;
- (NSUInteger)indexGreaterThanIndex:(NSUInteger)value;
- (NSUInteger)indexLessThanIndex:(NSUInteger)value;
- (NSUInteger)indexGreaterThanOrEqualToIndex:(NSUInteger)value;
- (NSUInteger)indexLessThanOrEqualToIndex:(NSUInteger)value;



- (NSUInteger)getIndexes:(NSUInteger *)indexBuffer maxCount:(NSUInteger)bufferSize inIndexRange:(nullable NSRangePointer)range;

- (NSUInteger)countOfIndexesInRange:(NSRange)range __attribute__((availability(ios,introduced=2_0)));

- (BOOL)containsIndex:(NSUInteger)value;
- (BOOL)containsIndexesInRange:(NSRange)range;
- (BOOL)containsIndexes:(NSIndexSet *)indexSet;

- (BOOL)intersectsIndexesInRange:(NSRange)range;

- (void)enumerateIndexesUsingBlock:(void (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));
- (void)enumerateIndexesWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));
- (void)enumerateIndexesInRange:(NSRange)range options:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));

- (NSUInteger)indexPassingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));
- (NSUInteger)indexWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));
- (NSUInteger)indexInRange:(NSRange)range options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));

- (NSIndexSet *)indexesPassingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));
- (NSIndexSet *)indexesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));
- (NSIndexSet *)indexesInRange:(NSRange)range options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(ios,introduced=4_0)));






- (void)enumerateRangesUsingBlock:(void (__attribute__((noescape)) ^)(NSRange range, BOOL *stop))block __attribute__((availability(ios,introduced=5_0)));
- (void)enumerateRangesWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSRange range, BOOL *stop))block __attribute__((availability(ios,introduced=5_0)));
- (void)enumerateRangesInRange:(NSRange)range options:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSRange range, BOOL *stop))block __attribute__((availability(ios,introduced=5_0)));

@end

@interface NSMutableIndexSet : NSIndexSet {
    @protected
    void *_reserved;
}

- (void)addIndexes:(NSIndexSet *)indexSet;
- (void)removeIndexes:(NSIndexSet *)indexSet;
- (void)removeAllIndexes;
- (void)addIndex:(NSUInteger)value;
- (void)removeIndex:(NSUInteger)value;
- (void)addIndexesInRange:(NSRange)range;
- (void)removeIndexesInRange:(NSRange)range;



- (void)shiftIndexesStartingAtIndex:(NSUInteger)index by:(NSInteger)delta;

@end
# 44 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSInvocation.h" 1 3







@class NSMethodSignature;



__attribute__((availability(swift, unavailable, message="NSInvocation and related APIs not available")))
@interface NSInvocation : NSObject {
@private
    void *_frame;
    void *_retdata;
    id _signature;
    id _container;
    uint8_t _retainedArgs;
    uint8_t _reserved[15];
}

+ (NSInvocation *)invocationWithMethodSignature:(NSMethodSignature *)sig;

@property (readonly, retain) NSMethodSignature *methodSignature;

- (void)retainArguments;
@property (readonly) BOOL argumentsRetained;

@property (nullable, assign) id target;
@property SEL selector;

- (void)getReturnValue:(void *)retLoc;
- (void)setReturnValue:(void *)retLoc;

- (void)getArgument:(void *)argumentLocation atIndex:(NSInteger)idx;
- (void)setArgument:(void *)argumentLocation atIndex:(NSInteger)idx;

- (void)invoke;
- (void)invokeWithTarget:(id)target;

@end
# 45 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSJSONSerialization.h" 1 3







@class NSError, NSOutputStream, NSInputStream, NSData;



typedef enum NSJSONReadingOptions : NSUInteger NSJSONReadingOptions; enum NSJSONReadingOptions : NSUInteger {
    NSJSONReadingMutableContainers = (1UL << 0),
    NSJSONReadingMutableLeaves = (1UL << 1),
    NSJSONReadingAllowFragments = (1UL << 2)
} __attribute__((availability(ios,introduced=5_0)));

typedef enum NSJSONWritingOptions : NSUInteger NSJSONWritingOptions; enum NSJSONWritingOptions : NSUInteger {
    NSJSONWritingPrettyPrinted = (1UL << 0)
} __attribute__((availability(ios,introduced=5_0)));
# 30 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSJSONSerialization.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface NSJSONSerialization : NSObject {
@private
    void *reserved[6];
}
# 43 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSJSONSerialization.h" 3
+ (BOOL)isValidJSONObject:(id)obj;



+ (nullable NSData *)dataWithJSONObject:(id)obj options:(NSJSONWritingOptions)opt error:(NSError **)error;




+ (nullable id)JSONObjectWithData:(NSData *)data options:(NSJSONReadingOptions)opt error:(NSError **)error;



+ (NSInteger)writeJSONObject:(id)obj toStream:(NSOutputStream *)stream options:(NSJSONWritingOptions)opt error:(NSError **)error;



+ (nullable id)JSONObjectWithStream:(NSInputStream *)stream options:(NSJSONReadingOptions)opt error:(NSError **)error;

@end
# 46 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueCoding.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSOrderedSet.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSOrderedSet.h" 3
@class NSArray, NSIndexSet, NSSet<ObjectType>, NSString;





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface NSOrderedSet<__covariant ObjectType> : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>

@property (readonly) NSUInteger count;
- (ObjectType)objectAtIndex:(NSUInteger)idx;
- (NSUInteger)indexOfObject:(ObjectType)object;
- (instancetype)init __attribute__((objc_designated_initializer));
- (instancetype)initWithObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)cnt __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end

@interface NSOrderedSet<ObjectType> (NSExtendedOrderedSet)

- (void)getObjects:(ObjectType __attribute__((objc_ownership(none))) [])objects range:(NSRange)range __attribute__((availability(swift, unavailable, message="Use 'array' instead")));
- (NSArray<ObjectType> *)objectsAtIndexes:(NSIndexSet *)indexes;
@property (nullable, nonatomic, readonly) ObjectType firstObject;
@property (nullable, nonatomic, readonly) ObjectType lastObject;

- (BOOL)isEqualToOrderedSet:(NSOrderedSet<ObjectType> *)other;

- (BOOL)containsObject:(ObjectType)object;
- (BOOL)intersectsOrderedSet:(NSOrderedSet<ObjectType> *)other;
- (BOOL)intersectsSet:(NSSet<ObjectType> *)set;

- (BOOL)isSubsetOfOrderedSet:(NSOrderedSet<ObjectType> *)other;
- (BOOL)isSubsetOfSet:(NSSet<ObjectType> *)set;

- (ObjectType)objectAtIndexedSubscript:(NSUInteger)idx __attribute__((availability(ios,introduced=6_0)));

- (NSEnumerator<ObjectType> *)objectEnumerator;
- (NSEnumerator<ObjectType> *)reverseObjectEnumerator;

@property (readonly, copy) NSOrderedSet<ObjectType> *reversedOrderedSet;







@property (readonly, strong) NSArray<ObjectType> *array;
@property (readonly, strong) NSSet<ObjectType> *set;

- (void)enumerateObjectsUsingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block;
- (void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block;
- (void)enumerateObjectsAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block;

- (NSUInteger)indexOfObjectPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;
- (NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;
- (NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;

- (NSIndexSet *)indexesOfObjectsPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;
- (NSIndexSet *)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;
- (NSIndexSet *)indexesOfObjectsAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;

- (NSUInteger)indexOfObject:(ObjectType)object inSortedRange:(NSRange)range options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmp;

- (NSArray<ObjectType> *)sortedArrayUsingComparator:(NSComparator __attribute__((noescape)))cmptr;
- (NSArray<ObjectType> *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr;

@property (readonly, copy) NSString *description;
- (NSString *)descriptionWithLocale:(nullable id)locale;
- (NSString *)descriptionWithLocale:(nullable id)locale indent:(NSUInteger)level;

@end

@interface NSOrderedSet<ObjectType> (NSOrderedSetCreation)

+ (instancetype)orderedSet;
+ (instancetype)orderedSetWithObject:(ObjectType)object;
+ (instancetype)orderedSetWithObjects:(const ObjectType [])objects count:(NSUInteger)cnt;
+ (instancetype)orderedSetWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
+ (instancetype)orderedSetWithOrderedSet:(NSOrderedSet<ObjectType> *)set;
+ (instancetype)orderedSetWithOrderedSet:(NSOrderedSet<ObjectType> *)set range:(NSRange)range copyItems:(BOOL)flag;
+ (instancetype)orderedSetWithArray:(NSArray<ObjectType> *)array;
+ (instancetype)orderedSetWithArray:(NSArray<ObjectType> *)array range:(NSRange)range copyItems:(BOOL)flag;
+ (instancetype)orderedSetWithSet:(NSSet<ObjectType> *)set;
+ (instancetype)orderedSetWithSet:(NSSet<ObjectType> *)set copyItems:(BOOL)flag;

- (instancetype)initWithObject:(ObjectType)object;
- (instancetype)initWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
- (instancetype)initWithOrderedSet:(NSOrderedSet<ObjectType> *)set;
- (instancetype)initWithOrderedSet:(NSOrderedSet<ObjectType> *)set copyItems:(BOOL)flag;
- (instancetype)initWithOrderedSet:(NSOrderedSet<ObjectType> *)set range:(NSRange)range copyItems:(BOOL)flag;
- (instancetype)initWithArray:(NSArray<ObjectType> *)array;
- (instancetype)initWithArray:(NSArray<ObjectType> *)set copyItems:(BOOL)flag;
- (instancetype)initWithArray:(NSArray<ObjectType> *)set range:(NSRange)range copyItems:(BOOL)flag;
- (instancetype)initWithSet:(NSSet<ObjectType> *)set;
- (instancetype)initWithSet:(NSSet<ObjectType> *)set copyItems:(BOOL)flag;

@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface NSMutableOrderedSet<ObjectType> : NSOrderedSet<ObjectType>

- (void)insertObject:(ObjectType)object atIndex:(NSUInteger)idx;
- (void)removeObjectAtIndex:(NSUInteger)idx;
- (void)replaceObjectAtIndex:(NSUInteger)idx withObject:(ObjectType)object;
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((objc_designated_initializer));
- (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));

@end

@interface NSMutableOrderedSet<ObjectType> (NSExtendedMutableOrderedSet)

- (void)addObject:(ObjectType)object;
- (void)addObjects:(const ObjectType [])objects count:(NSUInteger)count;
- (void)addObjectsFromArray:(NSArray<ObjectType> *)array;

- (void)exchangeObjectAtIndex:(NSUInteger)idx1 withObjectAtIndex:(NSUInteger)idx2;
- (void)moveObjectsAtIndexes:(NSIndexSet *)indexes toIndex:(NSUInteger)idx;

- (void)insertObjects:(NSArray<ObjectType> *)objects atIndexes:(NSIndexSet *)indexes;

- (void)setObject:(ObjectType)obj atIndex:(NSUInteger)idx;
- (void)setObject:(ObjectType)obj atIndexedSubscript:(NSUInteger)idx __attribute__((availability(ios,introduced=6_0)));

- (void)replaceObjectsInRange:(NSRange)range withObjects:(const ObjectType [])objects count:(NSUInteger)count;
- (void)replaceObjectsAtIndexes:(NSIndexSet *)indexes withObjects:(NSArray<ObjectType> *)objects;

- (void)removeObjectsInRange:(NSRange)range;
- (void)removeObjectsAtIndexes:(NSIndexSet *)indexes;
- (void)removeAllObjects;

- (void)removeObject:(ObjectType)object;
- (void)removeObjectsInArray:(NSArray<ObjectType> *)array;

- (void)intersectOrderedSet:(NSOrderedSet<ObjectType> *)other;
- (void)minusOrderedSet:(NSOrderedSet<ObjectType> *)other;
- (void)unionOrderedSet:(NSOrderedSet<ObjectType> *)other;

- (void)intersectSet:(NSSet<ObjectType> *)other;
- (void)minusSet:(NSSet<ObjectType> *)other;
- (void)unionSet:(NSSet<ObjectType> *)other;


- (void)sortUsingComparator:(NSComparator __attribute__((noescape)))cmptr;
- (void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr;
- (void)sortRange:(NSRange)range options:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr;


@end

@interface NSMutableOrderedSet<ObjectType> (NSMutableOrderedSetCreation)

+ (instancetype)orderedSetWithCapacity:(NSUInteger)numItems;

@end
# 9 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueCoding.h" 2 3



@class NSError, NSString;
# 22 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueCoding.h" 3
extern NSExceptionName const NSUndefinedKeyException;

typedef NSString * NSKeyValueOperator __attribute__((swift_wrapper(enum)));



extern NSKeyValueOperator const NSAverageKeyValueOperator;
extern NSKeyValueOperator const NSCountKeyValueOperator;
extern NSKeyValueOperator const NSDistinctUnionOfArraysKeyValueOperator;
extern NSKeyValueOperator const NSDistinctUnionOfObjectsKeyValueOperator;
extern NSKeyValueOperator const NSDistinctUnionOfSetsKeyValueOperator;
extern NSKeyValueOperator const NSMaximumKeyValueOperator;
extern NSKeyValueOperator const NSMinimumKeyValueOperator;
extern NSKeyValueOperator const NSSumKeyValueOperator;
extern NSKeyValueOperator const NSUnionOfArraysKeyValueOperator;
extern NSKeyValueOperator const NSUnionOfObjectsKeyValueOperator;
extern NSKeyValueOperator const NSUnionOfSetsKeyValueOperator;

@interface NSObject(NSKeyValueCoding)




@property (class, readonly) BOOL accessInstanceVariablesDirectly;
# 63 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueCoding.h" 3
- (nullable id)valueForKey:(NSString *)key;
# 78 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueCoding.h" 3
- (void)setValue:(nullable id)value forKey:(NSString *)key;





- (BOOL)validateValue:(inout id _Nullable * _Nonnull)ioValue forKey:(NSString *)inKey error:(out NSError **)outError;
# 96 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueCoding.h" 3
- (NSMutableArray *)mutableArrayValueForKey:(NSString *)key;
# 108 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueCoding.h" 3
- (NSMutableOrderedSet *)mutableOrderedSetValueForKey:(NSString *)key __attribute__((availability(ios,introduced=5_0)));
# 120 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueCoding.h" 3
- (NSMutableSet *)mutableSetValueForKey:(NSString *)key;



- (nullable id)valueForKeyPath:(NSString *)keyPath;
- (void)setValue:(nullable id)value forKeyPath:(NSString *)keyPath;
- (BOOL)validateValue:(inout id _Nullable * _Nonnull)ioValue forKeyPath:(NSString *)inKeyPath error:(out NSError **)outError;
- (NSMutableArray *)mutableArrayValueForKeyPath:(NSString *)keyPath;
- (NSMutableOrderedSet *)mutableOrderedSetValueForKeyPath:(NSString *)keyPath __attribute__((availability(ios,introduced=5_0)));
- (NSMutableSet *)mutableSetValueForKeyPath:(NSString *)keyPath;



- (nullable id)valueForUndefinedKey:(NSString *)key;



- (void)setValue:(nullable id)value forUndefinedKey:(NSString *)key;



- (void)setNilValueForKey:(NSString *)key;



- (NSDictionary<NSString *, id> *)dictionaryWithValuesForKeys:(NSArray<NSString *> *)keys;



- (void)setValuesForKeysWithDictionary:(NSDictionary<NSString *, id> *)keyedValues;

@end

@interface NSArray<ObjectType>(NSKeyValueCoding)



- (id)valueForKey:(NSString *)key;



- (void)setValue:(nullable id)value forKey:(NSString *)key;

@end

@interface NSDictionary<KeyType, ObjectType>(NSKeyValueCoding)



- (nullable ObjectType)valueForKey:(NSString *)key;

@end

@interface NSMutableDictionary<KeyType, ObjectType>(NSKeyValueCoding)



- (void)setValue:(nullable ObjectType)value forKey:(NSString *)key;

@end

@interface NSOrderedSet<ObjectType>(NSKeyValueCoding)



- (id)valueForKey:(NSString *)key __attribute__((availability(ios,introduced=5_0)));



- (void)setValue:(nullable id)value forKey:(NSString *)key __attribute__((availability(ios,introduced=5_0)));

@end

@interface NSSet<ObjectType>(NSKeyValueCoding)



- (id)valueForKey:(NSString *)key;



- (void)setValue:(nullable id)value forKey:(NSString *)key;

@end
# 47 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueObserving.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueObserving.h" 3
@class NSIndexSet, NSString;





typedef enum NSKeyValueObservingOptions : NSUInteger NSKeyValueObservingOptions; enum NSKeyValueObservingOptions : NSUInteger {



    NSKeyValueObservingOptionNew = 0x01,
    NSKeyValueObservingOptionOld = 0x02,



    NSKeyValueObservingOptionInitial __attribute__((availability(ios,introduced=2_0))) = 0x04,





    NSKeyValueObservingOptionPrior __attribute__((availability(ios,introduced=2_0))) = 0x08

};



typedef enum NSKeyValueChange : NSUInteger NSKeyValueChange; enum NSKeyValueChange : NSUInteger {
    NSKeyValueChangeSetting = 1,
    NSKeyValueChangeInsertion = 2,
    NSKeyValueChangeRemoval = 3,
    NSKeyValueChangeReplacement = 4,
};



typedef enum NSKeyValueSetMutationKind : NSUInteger NSKeyValueSetMutationKind; enum NSKeyValueSetMutationKind : NSUInteger {
    NSKeyValueUnionSetMutation = 1,
    NSKeyValueMinusSetMutation = 2,
    NSKeyValueIntersectSetMutation = 3,
    NSKeyValueSetSetMutation = 4
};

typedef NSString * NSKeyValueChangeKey __attribute__((swift_wrapper(enum)));


extern NSKeyValueChangeKey const NSKeyValueChangeKindKey;
extern NSKeyValueChangeKey const NSKeyValueChangeNewKey;
extern NSKeyValueChangeKey const NSKeyValueChangeOldKey;
extern NSKeyValueChangeKey const NSKeyValueChangeIndexesKey;
extern NSKeyValueChangeKey const NSKeyValueChangeNotificationIsPriorKey __attribute__((availability(ios,introduced=2_0)));

@interface NSObject(NSKeyValueObserving)
# 81 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueObserving.h" 3
- (void)observeValueForKeyPath:(nullable NSString *)keyPath ofObject:(nullable id)object change:(nullable NSDictionary<NSKeyValueChangeKey, id> *)change context:(nullable void *)context;

@end

@interface NSObject(NSKeyValueObserverRegistration)



- (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(ios,introduced=5_0)));
- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

@end

@interface NSArray<ObjectType>(NSKeyValueObserverRegistration)



- (void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
- (void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(ios,introduced=5_0)));
- (void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath;



- (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(ios,introduced=5_0)));
- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

@end

@interface NSOrderedSet<ObjectType>(NSKeyValueObserverRegistration)



- (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(ios,introduced=5_0)));
- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

@end

@interface NSSet<ObjectType>(NSKeyValueObserverRegistration)



- (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(ios,introduced=5_0)));
- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

@end

@interface NSObject(NSKeyValueObserverNotification)







- (void)willChangeValueForKey:(NSString *)key;
- (void)didChangeValueForKey:(NSString *)key;







- (void)willChange:(NSKeyValueChange)changeKind valuesAtIndexes:(NSIndexSet *)indexes forKey:(NSString *)key;
- (void)didChange:(NSKeyValueChange)changeKind valuesAtIndexes:(NSIndexSet *)indexes forKey:(NSString *)key;
# 163 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueObserving.h" 3
- (void)willChangeValueForKey:(NSString *)key withSetMutation:(NSKeyValueSetMutationKind)mutationKind usingObjects:(NSSet *)objects;
- (void)didChangeValueForKey:(NSString *)key withSetMutation:(NSKeyValueSetMutationKind)mutationKind usingObjects:(NSSet *)objects;

@end

@interface NSObject(NSKeyValueObservingCustomization)
# 178 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyValueObserving.h" 3
+ (NSSet<NSString *> *)keyPathsForValuesAffectingValueForKey:(NSString *)key __attribute__((availability(ios,introduced=2_0)));



+ (BOOL)automaticallyNotifiesObserversForKey:(NSString *)key;



@property (nullable) void *observationInfo __attribute__((objc_returns_inner_pointer));

@end
# 48 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyedArchiver.h" 1 3





# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPropertyList.h" 1 3







@class NSData, NSString, NSError, NSInputStream, NSOutputStream;



typedef enum NSPropertyListMutabilityOptions : NSUInteger NSPropertyListMutabilityOptions; enum NSPropertyListMutabilityOptions : NSUInteger {
    NSPropertyListImmutable = kCFPropertyListImmutable,
    NSPropertyListMutableContainers = kCFPropertyListMutableContainers,
    NSPropertyListMutableContainersAndLeaves = kCFPropertyListMutableContainersAndLeaves
};

typedef enum NSPropertyListFormat : NSUInteger NSPropertyListFormat; enum NSPropertyListFormat : NSUInteger {
    NSPropertyListOpenStepFormat = kCFPropertyListOpenStepFormat,
    NSPropertyListXMLFormat_v1_0 = kCFPropertyListXMLFormat_v1_0,
    NSPropertyListBinaryFormat_v1_0 = kCFPropertyListBinaryFormat_v1_0
};

typedef NSPropertyListMutabilityOptions NSPropertyListReadOptions;
typedef NSUInteger NSPropertyListWriteOptions;

@interface NSPropertyListSerialization : NSObject {
    void *reserved[6];
}



+ (BOOL)propertyList:(id)plist isValidForFormat:(NSPropertyListFormat)format;



+ (nullable NSData *)dataWithPropertyList:(id)plist format:(NSPropertyListFormat)format options:(NSPropertyListWriteOptions)opt error:(out NSError **)error __attribute__((availability(ios,introduced=4_0)));



+ (NSInteger)writePropertyList:(id)plist toStream:(NSOutputStream *)stream format:(NSPropertyListFormat)format options:(NSPropertyListWriteOptions)opt error:(out NSError **)error __attribute__((availability(ios,introduced=4_0)));



+ (nullable id)propertyListWithData:(NSData *)data options:(NSPropertyListReadOptions)opt format:(nullable NSPropertyListFormat *)format error:(out NSError **)error __attribute__((availability(ios,introduced=4_0)));



+ (nullable id)propertyListWithStream:(NSInputStream *)stream options:(NSPropertyListReadOptions)opt format:(nullable NSPropertyListFormat *)format error:(out NSError **)error __attribute__((availability(ios,introduced=4_0)));




+ (nullable NSData *)dataFromPropertyList:(id)plist format:(NSPropertyListFormat)format errorDescription:(out __attribute__((objc_ownership(strong))) NSString * _Nullable * _Nullable)errorString __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use dataWithPropertyList:format:options:error: instead.")));



+ (nullable id)propertyListFromData:(NSData *)data mutabilityOption:(NSPropertyListMutabilityOptions)opt format:(nullable NSPropertyListFormat *)format errorDescription:(out __attribute__((objc_ownership(strong))) NSString * _Nullable * _Nullable)errorString __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use propertyListWithData:options:format:error: instead.")));

@end
# 7 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyedArchiver.h" 2 3






@class NSArray<ObjectType>, NSMutableData, NSData, NSString;
@protocol NSKeyedArchiverDelegate, NSKeyedUnarchiverDelegate;



extern NSExceptionName const NSInvalidArchiveOperationException;
extern NSExceptionName const NSInvalidUnarchiveOperationException;

extern NSString * const NSKeyedArchiveRootObjectKey __attribute__((availability(ios,introduced=7_0)));

@interface NSKeyedArchiver : NSCoder {
@private
    void *_stream;
    NSUInteger _flags;
    id _delegate;
    id _containers;
    id _objects;
    id _objRefMap;
    id _replacementMap;
    id _classNameMap;
    id _conditionals;
    id _classes;
    NSUInteger _genericKey;
    void *_cache;
    NSUInteger _cacheSize;
    NSUInteger _estimatedCount;
    void *_reserved2;
    id _visited;
    void *_reserved0;
}


- (instancetype)init __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

+ (NSData *)archivedDataWithRootObject:(id)rootObject;
+ (BOOL)archiveRootObject:(id)rootObject toFile:(NSString *)path;

- (instancetype)initForWritingWithMutableData:(NSMutableData *)data;

@property (nullable, assign) id <NSKeyedArchiverDelegate> delegate;

@property NSPropertyListFormat outputFormat;


@property (readonly, strong) NSData *encodedData __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

- (void)finishEncoding;

+ (void)setClassName:(nullable NSString *)codedName forClass:(Class)cls;
- (void)setClassName:(nullable NSString *)codedName forClass:(Class)cls;



+ (nullable NSString *)classNameForClass:(Class)cls;
- (nullable NSString *)classNameForClass:(Class)cls;

- (void)encodeObject:(nullable id)objv forKey:(NSString *)key;
- (void)encodeConditionalObject:(nullable id)objv forKey:(NSString *)key;
- (void)encodeBool:(BOOL)boolv forKey:(NSString *)key;
- (void)encodeInt:(int)intv forKey:(NSString *)key;
- (void)encodeInt32:(int32_t)intv forKey:(NSString *)key;
- (void)encodeInt64:(int64_t)intv forKey:(NSString *)key;
- (void)encodeFloat:(float)realv forKey:(NSString *)key;
- (void)encodeDouble:(double)realv forKey:(NSString *)key;
- (void)encodeBytes:(nullable const uint8_t *)bytesp length:(NSUInteger)lenv forKey:(NSString *)key;


@property (readwrite) BOOL requiresSecureCoding __attribute__((availability(ios,introduced=6_0)));

@end

@interface NSKeyedUnarchiver : NSCoder {
@private
    id _delegate;
    uint32_t _flags;
    id _objRefMap;
    id _replacementMap;
    id _nameClassMap;
    id _tmpRefObjMap;
    id _refObjMap;
    int32_t _genericKey;
    id _data;
    void *_offsetData;
    id _containers;
    id _objects;
    const uint8_t *_bytes;
    uint64_t _len;
    id _helper;
    void *_reserved0;
}

+ (nullable id)unarchiveObjectWithData:(NSData *)data;
+ (nullable id)unarchiveTopLevelObjectWithData:(NSData *)data error:(NSError **)error __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(swift, unavailable, message="Use 'unarchiveTopLevelObjectWithData(_:) throws' instead")));
+ (nullable id)unarchiveObjectWithFile:(NSString *)path;

- (instancetype)initForReadingWithData:(NSData *)data;

@property (nullable, assign) id <NSKeyedUnarchiverDelegate> delegate;

- (void)finishDecoding;

+ (void)setClass:(nullable Class)cls forClassName:(NSString *)codedName;
- (void)setClass:(nullable Class)cls forClassName:(NSString *)codedName;



+ (nullable Class)classForClassName:(NSString *)codedName;
- (nullable Class)classForClassName:(NSString *)codedName;

- (BOOL)containsValueForKey:(NSString *)key;

- (nullable id)decodeObjectForKey:(NSString *)key;
- (BOOL)decodeBoolForKey:(NSString *)key;
- (int)decodeIntForKey:(NSString *)key;
- (int32_t)decodeInt32ForKey:(NSString *)key;
- (int64_t)decodeInt64ForKey:(NSString *)key;
- (float)decodeFloatForKey:(NSString *)key;
- (double)decodeDoubleForKey:(NSString *)key;
- (nullable const uint8_t *)decodeBytesForKey:(NSString *)key returnedLength:(nullable NSUInteger *)lengthp __attribute__((objc_returns_inner_pointer));


@property (readwrite) BOOL requiresSecureCoding __attribute__((availability(ios,introduced=6_0)));

@property (readwrite) NSDecodingFailurePolicy decodingFailurePolicy __attribute__((availability(ios,introduced=9_0)));

@end

@protocol NSKeyedArchiverDelegate <NSObject>
@optional


- (nullable id)archiver:(NSKeyedArchiver *)archiver willEncodeObject:(id)object;
# 155 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyedArchiver.h" 3
- (void)archiver:(NSKeyedArchiver *)archiver didEncodeObject:(nullable id)object;






- (void)archiver:(NSKeyedArchiver *)archiver willReplaceObject:(nullable id)object withObject:(nullable id)newObject;





- (void)archiverWillFinish:(NSKeyedArchiver *)archiver;


- (void)archiverDidFinish:(NSKeyedArchiver *)archiver;


@end

@protocol NSKeyedUnarchiverDelegate <NSObject>
@optional


- (nullable Class)unarchiver:(NSKeyedUnarchiver *)unarchiver cannotDecodeObjectOfClassName:(NSString *)name originalClasses:(NSArray<NSString *> *)classNames;
# 189 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyedArchiver.h" 3
- (nullable id)unarchiver:(NSKeyedUnarchiver *)unarchiver didDecodeObject:(nullable id) __attribute__((ns_consumed)) object __attribute__((ns_returns_retained));







- (void)unarchiver:(NSKeyedUnarchiver *)unarchiver willReplaceObject:(id)object withObject:(id)newObject;





- (void)unarchiverWillFinish:(NSKeyedUnarchiver *)unarchiver;


- (void)unarchiverDidFinish:(NSKeyedUnarchiver *)unarchiver;


@end

@interface NSObject (NSKeyedArchiverObjectSubstitution)

@property (nullable, readonly) Class classForKeyedArchiver;
# 222 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyedArchiver.h" 3
- (nullable id)replacementObjectForKeyedArchiver:(NSKeyedArchiver *)archiver;
# 234 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSKeyedArchiver.h" 3
+ (NSArray<NSString *> *)classFallbacksForKeyedArchiver;


@end

@interface NSObject (NSKeyedUnarchiverObjectSubstitution)

+ (Class)classForKeyedUnarchiver;





@end
# 49 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSLock.h" 1 3






@class NSDate;



@protocol NSLocking

- (void)lock;
- (void)unlock;

@end

@interface NSLock : NSObject <NSLocking> {
@private
    void *_priv;
}

- (BOOL)tryLock;
- (BOOL)lockBeforeDate:(NSDate *)limit;

@property (nullable, copy) NSString *name __attribute__((availability(ios,introduced=2_0)));

@end

@interface NSConditionLock : NSObject <NSLocking> {
@private
    void *_priv;
}

- (instancetype)initWithCondition:(NSInteger)condition __attribute__((objc_designated_initializer));

@property (readonly) NSInteger condition;
- (void)lockWhenCondition:(NSInteger)condition;
- (BOOL)tryLock;
- (BOOL)tryLockWhenCondition:(NSInteger)condition;
- (void)unlockWithCondition:(NSInteger)condition;
- (BOOL)lockBeforeDate:(NSDate *)limit;
- (BOOL)lockWhenCondition:(NSInteger)condition beforeDate:(NSDate *)limit;

@property (nullable, copy) NSString *name __attribute__((availability(ios,introduced=2_0)));

@end

@interface NSRecursiveLock : NSObject <NSLocking> {
@private
    void *_priv;
}

- (BOOL)tryLock;
- (BOOL)lockBeforeDate:(NSDate *)limit;

@property (nullable, copy) NSString *name __attribute__((availability(ios,introduced=2_0)));

@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0)))
@interface NSCondition : NSObject <NSLocking> {
@private
    void *_priv;
}

- (void)wait;
- (BOOL)waitUntilDate:(NSDate *)limit;
- (void)signal;
- (void)broadcast;

@property (nullable, copy) NSString *name __attribute__((availability(ios,introduced=2_0)));

@end
# 51 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMapTable.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMapTable.h" 3
@class NSArray, NSDictionary<KeyType, ObjectType>, NSMapTable;
# 22 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMapTable.h" 3
static const NSPointerFunctionsOptions NSMapTableStrongMemory __attribute__((availability(ios,introduced=6_0))) = NSPointerFunctionsStrongMemory;



static const NSPointerFunctionsOptions NSMapTableCopyIn __attribute__((availability(ios,introduced=6_0))) = NSPointerFunctionsCopyIn;
static const NSPointerFunctionsOptions NSMapTableObjectPointerPersonality __attribute__((availability(ios,introduced=6_0))) = NSPointerFunctionsObjectPointerPersonality;
static const NSPointerFunctionsOptions NSMapTableWeakMemory __attribute__((availability(ios,introduced=6_0))) = NSPointerFunctionsWeakMemory;

typedef NSUInteger NSMapTableOptions;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))
@interface NSMapTable<KeyType, ObjectType> : NSObject <NSCopying, NSCoding, NSFastEnumeration>

- (instancetype)initWithKeyOptions:(NSPointerFunctionsOptions)keyOptions valueOptions:(NSPointerFunctionsOptions)valueOptions capacity:(NSUInteger)initialCapacity __attribute__((objc_designated_initializer));
- (instancetype)initWithKeyPointerFunctions:(NSPointerFunctions *)keyFunctions valuePointerFunctions:(NSPointerFunctions *)valueFunctions capacity:(NSUInteger)initialCapacity __attribute__((objc_designated_initializer));

+ (NSMapTable<KeyType, ObjectType> *)mapTableWithKeyOptions:(NSPointerFunctionsOptions)keyOptions valueOptions:(NSPointerFunctionsOptions)valueOptions;
# 47 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMapTable.h" 3
+ (NSMapTable<KeyType, ObjectType> *)strongToStrongObjectsMapTable __attribute__((availability(ios,introduced=6_0)));
+ (NSMapTable<KeyType, ObjectType> *)weakToStrongObjectsMapTable __attribute__((availability(ios,introduced=6_0)));
+ (NSMapTable<KeyType, ObjectType> *)strongToWeakObjectsMapTable __attribute__((availability(ios,introduced=6_0)));
+ (NSMapTable<KeyType, ObjectType> *)weakToWeakObjectsMapTable __attribute__((availability(ios,introduced=6_0)));


@property (readonly, copy) NSPointerFunctions *keyPointerFunctions;
@property (readonly, copy) NSPointerFunctions *valuePointerFunctions;

- (nullable ObjectType)objectForKey:(nullable KeyType)aKey;

- (void)removeObjectForKey:(nullable KeyType)aKey;
- (void)setObject:(nullable ObjectType)anObject forKey:(nullable KeyType)aKey;

@property (readonly) NSUInteger count;

- (NSEnumerator<KeyType> *)keyEnumerator;
- (nullable NSEnumerator<ObjectType> *)objectEnumerator;

- (void)removeAllObjects;

- (NSDictionary<KeyType, ObjectType> *)dictionaryRepresentation;
@end
# 52 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMethodSignature.h" 1 3








__attribute__((availability(swift, unavailable, message="NSInvocation and related APIs not available")))
@interface NSMethodSignature : NSObject {
@private
    void *_private;
    void *_reserved[6];
}

+ (nullable NSMethodSignature *)signatureWithObjCTypes:(const char *)types;

@property (readonly) NSUInteger numberOfArguments;
- (const char *)getArgumentTypeAtIndex:(NSUInteger)idx __attribute__((objc_returns_inner_pointer));

@property (readonly) NSUInteger frameLength;

- (BOOL)isOneway;

@property (readonly) const char *methodReturnType __attribute__((objc_returns_inner_pointer));
@property (readonly) NSUInteger methodReturnLength;

@end
# 53 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSNotificationQueue.h" 1 3







@class NSNotification, NSNotificationCenter, NSArray<ObjectType>, NSString;



typedef enum NSPostingStyle : NSUInteger NSPostingStyle; enum NSPostingStyle : NSUInteger {
    NSPostWhenIdle = 1,
    NSPostASAP = 2,
    NSPostNow = 3
};

typedef enum NSNotificationCoalescing : NSUInteger NSNotificationCoalescing; enum NSNotificationCoalescing : NSUInteger {
    NSNotificationNoCoalescing = 0,
    NSNotificationCoalescingOnName = 1,
    NSNotificationCoalescingOnSender = 2
};

@interface NSNotificationQueue : NSObject {
@private
    id _notificationCenter;
    id _asapQueue;
    id _asapObs;
    id _idleQueue;
    id _idleObs;
}

@property (class, readonly, strong) NSNotificationQueue *defaultQueue;


- (instancetype)initWithNotificationCenter:(NSNotificationCenter *)notificationCenter __attribute__((objc_designated_initializer));

- (void)enqueueNotification:(NSNotification *)notification postingStyle:(NSPostingStyle)postingStyle;
- (void)enqueueNotification:(NSNotification *)notification postingStyle:(NSPostingStyle)postingStyle coalesceMask:(NSNotificationCoalescing)coalesceMask forModes:(nullable NSArray<NSRunLoopMode> *)modes;

- (void)dequeueNotificationsMatching:(NSNotification *)notification coalesceMask:(NSUInteger)coalesceMask;

@end
# 55 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSNull.h" 1 3








@interface NSNull : NSObject <NSCopying, NSSecureCoding>

+ (NSNull *)null;

@end
# 56 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSOperation.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSOperation.h" 3
@class NSArray<ObjectType>, NSSet;
# 21 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSOperation.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0)))
@interface NSOperation : NSObject {
@private
    id _private;
    int32_t _private1;

    int32_t _private1b;

}

- (void)start;
- (void)main;

@property (readonly, getter=isCancelled) BOOL cancelled;
- (void)cancel;

@property (readonly, getter=isExecuting) BOOL executing;
@property (readonly, getter=isFinished) BOOL finished;
@property (readonly, getter=isConcurrent) BOOL concurrent;
@property (readonly, getter=isAsynchronous) BOOL asynchronous __attribute__((availability(ios,introduced=7_0)));
@property (readonly, getter=isReady) BOOL ready;

- (void)addDependency:(NSOperation *)op;
- (void)removeDependency:(NSOperation *)op;

@property (readonly, copy) NSArray<NSOperation *> *dependencies;

typedef enum NSOperationQueuePriority : NSInteger NSOperationQueuePriority; enum NSOperationQueuePriority : NSInteger {
 NSOperationQueuePriorityVeryLow = -8L,
 NSOperationQueuePriorityLow = -4L,
 NSOperationQueuePriorityNormal = 0,
 NSOperationQueuePriorityHigh = 4,
 NSOperationQueuePriorityVeryHigh = 8
};

@property NSOperationQueuePriority queuePriority;

@property (nullable, copy) void (^completionBlock)(void) __attribute__((availability(ios,introduced=4_0)));

- (void)waitUntilFinished __attribute__((availability(ios,introduced=4_0)));

@property double threadPriority __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" )));

@property NSQualityOfService qualityOfService __attribute__((availability(ios,introduced=8_0)));

@property (nullable, copy) NSString *name __attribute__((availability(ios,introduced=8_0)));

@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))
@interface NSBlockOperation : NSOperation {
@private
    id _private2;
    void *_reserved2;
}

+ (instancetype)blockOperationWithBlock:(void (^)(void))block;

- (void)addExecutionBlock:(void (^)(void))block;
@property (readonly, copy) NSArray<void (^)(void)> *executionBlocks;

@end


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0)))
__attribute__((availability(swift, unavailable, message="NSInvocation and related APIs not available")))
@interface NSInvocationOperation : NSOperation {
@private
    id _inv;
    id _exception;
    void *_reserved2;
}

- (nullable instancetype)initWithTarget:(id)target selector:(SEL)sel object:(nullable id)arg;
- (instancetype)initWithInvocation:(NSInvocation *)inv __attribute__((objc_designated_initializer));

@property (readonly, retain) NSInvocation *invocation;

@property (nullable, readonly, retain) id result;

@end

extern NSExceptionName const NSInvocationOperationVoidResultException __attribute__((availability(ios,introduced=2_0)));
extern NSExceptionName const NSInvocationOperationCancelledException __attribute__((availability(ios,introduced=2_0)));

static const NSInteger NSOperationQueueDefaultMaxConcurrentOperationCount = -1;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0)))
@interface NSOperationQueue : NSObject {
@private
    id _private;
    void *_reserved;
}

- (void)addOperation:(NSOperation *)op;
- (void)addOperations:(NSArray<NSOperation *> *)ops waitUntilFinished:(BOOL)wait __attribute__((availability(ios,introduced=4_0)));

- (void)addOperationWithBlock:(void (^)(void))block __attribute__((availability(ios,introduced=4_0)));

@property (readonly, copy) NSArray<__kindof NSOperation *> *operations;
@property (readonly) NSUInteger operationCount __attribute__((availability(ios,introduced=4_0)));

@property NSInteger maxConcurrentOperationCount;

@property (getter=isSuspended) BOOL suspended;

@property (nullable, copy) NSString *name __attribute__((availability(ios,introduced=4_0)));

@property NSQualityOfService qualityOfService __attribute__((availability(ios,introduced=8_0)));

@property (nullable, assign ) dispatch_queue_t underlyingQueue __attribute__((availability(ios,introduced=8_0)));

- (void)cancelAllOperations;

- (void)waitUntilAllOperationsAreFinished;


@property (class, readonly, strong, nullable) NSOperationQueue *currentQueue __attribute__((availability(ios,introduced=4_0)));
@property (class, readonly, strong) NSOperationQueue *mainQueue __attribute__((availability(ios,introduced=4_0)));


@end
# 59 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSOrthography.h" 1 3






@class NSString, NSArray<ObjectType>, NSDictionary<KeyType, ObjectType>;





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))
@interface NSOrthography : NSObject <NSCopying, NSSecureCoding>


@property (readonly, copy) NSString *dominantScript;
@property (readonly, copy) NSDictionary<NSString *, NSArray<NSString *> *> *languageMap;
- (instancetype)initWithDominantScript:(NSString *)script languageMap:(NSDictionary<NSString *, NSArray<NSString *> *> *)map __attribute__((availability(ios,introduced=4_0))) __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end

@interface NSOrthography (NSOrthographyExtended)


- (nullable NSArray<NSString *> *)languagesForScript:(NSString *)script __attribute__((availability(ios,introduced=4_0)));
- (nullable NSString *)dominantLanguageForScript:(NSString *)script __attribute__((availability(ios,introduced=4_0)));


@property (readonly, copy) NSString *dominantLanguage __attribute__((availability(ios,introduced=4_0)));
@property (readonly, copy) NSArray<NSString *> *allScripts __attribute__((availability(ios,introduced=4_0)));
@property (readonly, copy) NSArray<NSString *> *allLanguages __attribute__((availability(ios,introduced=4_0)));

@end

@interface NSOrthography (NSOrthographyCreation)

+ (instancetype)orthographyWithDominantScript:(NSString *)script languageMap:(NSDictionary<NSString *, NSArray<NSString *> *> *)map __attribute__((availability(ios,introduced=4_0)));

@end
# 61 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPointerArray.h" 1 3
# 26 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPointerArray.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))
@interface NSPointerArray : NSObject <NSFastEnumeration, NSCopying, NSCoding>

- (instancetype)initWithOptions:(NSPointerFunctionsOptions)options __attribute__((objc_designated_initializer));
- (instancetype)initWithPointerFunctions:(NSPointerFunctions *)functions __attribute__((objc_designated_initializer));

+ (NSPointerArray *)pointerArrayWithOptions:(NSPointerFunctionsOptions)options;
+ (NSPointerArray *)pointerArrayWithPointerFunctions:(NSPointerFunctions *)functions;


@property (readonly, copy) NSPointerFunctions *pointerFunctions;

- (nullable void *)pointerAtIndex:(NSUInteger)index;


- (void)addPointer:(nullable void *)pointer;
- (void)removePointerAtIndex:(NSUInteger)index;
- (void)insertPointer:(nullable void *)item atIndex:(NSUInteger)index;

- (void)replacePointerAtIndex:(NSUInteger)index withPointer:(nullable void *)item;

- (void)compact;



@property NSUInteger count;

@end


@interface NSPointerArray (NSPointerArrayConveniences)







+ (NSPointerArray *)strongObjectsPointerArray __attribute__((availability(ios,introduced=6_0)));
+ (NSPointerArray *)weakObjectsPointerArray __attribute__((availability(ios,introduced=6_0)));

@property (readonly, copy) NSArray *allObjects;

@end
# 63 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPort.h" 1 3








typedef int NSSocketNativeHandle;

@class NSRunLoop, NSMutableArray, NSDate;
@class NSConnection, NSPortMessage;
@class NSData;
@protocol NSPortDelegate, NSMachPortDelegate;



extern NSNotificationName const NSPortDidBecomeInvalidNotification;

@interface NSPort : NSObject <NSCopying, NSCoding>







+ (NSPort *)port;

- (void)invalidate;
@property (readonly, getter=isValid) BOOL valid;

- (void)setDelegate:(nullable id <NSPortDelegate>)anObject;
- (nullable id <NSPortDelegate>)delegate;





- (void)scheduleInRunLoop:(NSRunLoop *)runLoop forMode:(NSRunLoopMode)mode;
- (void)removeFromRunLoop:(NSRunLoop *)runLoop forMode:(NSRunLoopMode)mode;



@property (readonly) NSUInteger reservedSpaceLength;
- (BOOL)sendBeforeDate:(NSDate *)limitDate components:(nullable NSMutableArray *)components from:(nullable NSPort *) receivePort reserved:(NSUInteger)headerSpaceReserved;
- (BOOL)sendBeforeDate:(NSDate *)limitDate msgid:(NSUInteger)msgID components:(nullable NSMutableArray *)components from:(nullable NSPort *)receivePort reserved:(NSUInteger)headerSpaceReserved;
# 68 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPort.h" 3
@end

@protocol NSPortDelegate <NSObject>
@optional

- (void)handlePortMessage:(NSPortMessage *)message;



@end



__attribute__((objc_arc_weak_reference_unavailable))
@interface NSMachPort : NSPort {
    @private
    id _delegate;
    NSUInteger _flags;
    uint32_t _machPort;
    NSUInteger _reserved;
}

+ (NSPort *)portWithMachPort:(uint32_t)machPort;
- (instancetype)initWithMachPort:(uint32_t)machPort __attribute__((objc_designated_initializer));

- (void)setDelegate:(nullable id <NSMachPortDelegate>)anObject;
- (nullable id <NSMachPortDelegate>)delegate;

typedef enum NSMachPortOptions : NSUInteger NSMachPortOptions; enum NSMachPortOptions : NSUInteger {
    NSMachPortDeallocateNone = 0,
    NSMachPortDeallocateSendRight = (1UL << 0),
    NSMachPortDeallocateReceiveRight = (1UL << 1)
} __attribute__((availability(ios,introduced=2_0)));

+ (NSPort *)portWithMachPort:(uint32_t)machPort options:(NSMachPortOptions)f __attribute__((availability(ios,introduced=2_0)));
- (instancetype)initWithMachPort:(uint32_t)machPort options:(NSMachPortOptions)f __attribute__((availability(ios,introduced=2_0))) __attribute__((objc_designated_initializer));

@property (readonly) uint32_t machPort;

- (void)scheduleInRunLoop:(NSRunLoop *)runLoop forMode:(NSRunLoopMode)mode;
- (void)removeFromRunLoop:(NSRunLoop *)runLoop forMode:(NSRunLoopMode)mode;




@end

@protocol NSMachPortDelegate <NSPortDelegate>
@optional



- (void)handleMachMessage:(void *)msg;

@end





__attribute__((objc_arc_weak_reference_unavailable))
@interface NSMessagePort : NSPort {
    @private
    void *_port;
    id _delegate;
}

@end






@interface NSSocketPort : NSPort {
    @private
    void *_receiver;
    id _connectors;
    void *_loops;
    void *_data;
    id _signature;
    id _delegate;
    id _lock;
    NSUInteger _maxSize;
    NSUInteger _useCount;
    NSUInteger _reserved;
}

- (instancetype)init;
- (nullable instancetype)initWithTCPPort:(unsigned short)port;
- (nullable instancetype)initWithProtocolFamily:(int)family socketType:(int)type protocol:(int)protocol address:(NSData *)address __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithProtocolFamily:(int)family socketType:(int)type protocol:(int)protocol socket:(NSSocketNativeHandle)sock __attribute__((objc_designated_initializer));
- (nullable instancetype)initRemoteWithTCPPort:(unsigned short)port host:(nullable NSString *)hostName;
- (instancetype)initRemoteWithProtocolFamily:(int)family socketType:(int)type protocol:(int)protocol address:(NSData *)address __attribute__((objc_designated_initializer));


@property (readonly) int protocolFamily;
@property (readonly) int socketType;
@property (readonly) int protocol;
@property (readonly, copy) NSData *address;
@property (readonly) NSSocketNativeHandle socket;

@end
# 65 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProcessInfo.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProcessInfo.h" 3
enum {
    NSWindowsNTOperatingSystem = 1,
    NSWindows95OperatingSystem,
    NSSolarisOperatingSystem,
    NSHPUXOperatingSystem,
    NSMACHOperatingSystem,
    NSSunOSOperatingSystem,
    NSOSF1OperatingSystem
} __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" )));

typedef struct {
    NSInteger majorVersion;
    NSInteger minorVersion;
    NSInteger patchVersion;
} NSOperatingSystemVersion;

@class NSArray<ObjectType>, NSString, NSDictionary<KeyType, ObjectType>;

@interface NSProcessInfo : NSObject {
@private
    NSDictionary *environment;
    NSArray *arguments;
    NSString *hostName;
    NSString *name;
    NSInteger automaticTerminationOptOutCounter;
}


@property (class, readonly, strong) NSProcessInfo *processInfo;


@property (readonly, copy) NSDictionary<NSString *, NSString *> *environment;
@property (readonly, copy) NSArray<NSString *> *arguments;
@property (readonly, copy) NSString *hostName;
@property (copy) NSString *processName;
@property (readonly) int processIdentifier;

@property (readonly, copy) NSString *globallyUniqueString;

- (NSUInteger)operatingSystem __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "-operatingSystem always returns NSMACHOperatingSystem, use -operatingSystemVersion or -isOperatingSystemAtLeastVersion: instead")));
- (NSString *)operatingSystemName __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "-operatingSystemName always returns NSMACHOperatingSystem, use -operatingSystemVersionString instead")));


@property (readonly, copy) NSString *operatingSystemVersionString;

@property (readonly) NSOperatingSystemVersion operatingSystemVersion __attribute__((availability(ios,introduced=8_0)));

@property (readonly) NSUInteger processorCount __attribute__((availability(ios,introduced=2_0)));
@property (readonly) NSUInteger activeProcessorCount __attribute__((availability(ios,introduced=2_0)));
@property (readonly) unsigned long long physicalMemory __attribute__((availability(ios,introduced=2_0)));

- (BOOL) isOperatingSystemAtLeastVersion:(NSOperatingSystemVersion)version __attribute__((availability(ios,introduced=8_0)));
@property (readonly) NSTimeInterval systemUptime __attribute__((availability(ios,introduced=4_0)));






- (void)disableSuddenTermination __attribute__((availability(ios,introduced=NA)));
- (void)enableSuddenTermination __attribute__((availability(ios,introduced=NA)));







- (void)disableAutomaticTermination:(NSString *)reason __attribute__((availability(ios,introduced=NA)));
- (void)enableAutomaticTermination:(NSString *)reason __attribute__((availability(ios,introduced=NA)));






@property BOOL automaticTerminationSupportEnabled __attribute__((availability(ios,introduced=NA)));

@end
# 124 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProcessInfo.h" 3
typedef enum NSActivityOptions : uint64_t NSActivityOptions; enum NSActivityOptions : uint64_t {
# 134 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProcessInfo.h" 3
    NSActivityIdleDisplaySleepDisabled = (1ULL << 40),


    NSActivityIdleSystemSleepDisabled = (1ULL << 20),


    NSActivitySuddenTerminationDisabled = (1ULL << 14),


    NSActivityAutomaticTerminationDisabled = (1ULL << 15),





    NSActivityUserInitiated = (0x00FFFFFFULL | NSActivityIdleSystemSleepDisabled),
    NSActivityUserInitiatedAllowingIdleSystemSleep = (NSActivityUserInitiated & ~NSActivityIdleSystemSleepDisabled),


    NSActivityBackground = 0x000000FFULL,


    NSActivityLatencyCritical = 0xFF00000000ULL,
} __attribute__((availability(ios,introduced=7_0)));

@interface NSProcessInfo (NSProcessInfoActivity)



- (id <NSObject>)beginActivityWithOptions:(NSActivityOptions)options reason:(NSString *)reason __attribute__((availability(ios,introduced=7_0)));




- (void)endActivity:(id <NSObject>)activity __attribute__((availability(ios,introduced=7_0)));




- (void)performActivityWithOptions:(NSActivityOptions)options reason:(NSString *)reason usingBlock:(void (^)(void))block __attribute__((availability(ios,introduced=7_0)));




- (void)performExpiringActivityWithReason:(NSString *)reason usingBlock:(void(^)(BOOL expired))block __attribute__((availability(ios,introduced=8_2)));

@end

@interface NSProcessInfo (NSUserInformation)

@property (readonly, copy) NSString *userName __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
@property (readonly, copy) NSString *fullUserName __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

@end


typedef enum NSProcessInfoThermalState : NSInteger NSProcessInfoThermalState; enum NSProcessInfoThermalState : NSInteger {

    NSProcessInfoThermalStateNominal,


    NSProcessInfoThermalStateFair,


    NSProcessInfoThermalStateSerious,


    NSProcessInfoThermalStateCritical
} __attribute__((availability(ios,introduced=NA)));

@interface NSProcessInfo (NSProcessInfoThermalState)


@property (readonly) NSProcessInfoThermalState thermalState __attribute__((availability(ios,introduced=NA)));

@end

@interface NSProcessInfo (NSProcessInfoPowerState)


@property (readonly, getter=isLowPowerModeEnabled) BOOL lowPowerModeEnabled __attribute__((availability(ios,introduced=9_0)));

@end
# 225 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProcessInfo.h" 3
extern NSNotificationName const NSProcessInfoThermalStateDidChangeNotification __attribute__((availability(ios,introduced=NA)));
# 234 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProcessInfo.h" 3
extern NSNotificationName const NSProcessInfoPowerStateDidChangeNotification __attribute__((availability(ios,introduced=9_0)));
# 66 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSProxy.h" 1 3






@class NSMethodSignature, NSInvocation;



__attribute__((objc_root_class))
@interface NSProxy <NSObject> {
    Class isa;
}

+ (id)alloc;
+ (id)allocWithZone:(nullable NSZone *)zone ;
+ (Class)class;

- (void)forwardInvocation:(NSInvocation *)invocation;
- (nullable NSMethodSignature *)methodSignatureForSelector:(SEL)sel __attribute__((availability(swift, unavailable, message="NSInvocation and related APIs not available")));
- (void)dealloc;
- (void)finalize;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
+ (BOOL)respondsToSelector:(SEL)aSelector;

- (BOOL)allowsWeakReference __attribute__((unavailable));
- (BOOL)retainWeakReference __attribute__((unavailable));



@end
# 68 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSRegularExpression.h" 1 3






# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSTextCheckingResult.h" 1 3








@class NSString, NSArray<ObjectType>, NSDictionary<KeyType, ObjectType>, NSDate, NSTimeZone, NSOrthography, NSURL, NSRegularExpression;





typedef enum NSTextCheckingType : uint64_t NSTextCheckingType; enum NSTextCheckingType : uint64_t {
    NSTextCheckingTypeOrthography = 1ULL << 0,
    NSTextCheckingTypeSpelling = 1ULL << 1,
    NSTextCheckingTypeGrammar = 1ULL << 2,
    NSTextCheckingTypeDate = 1ULL << 3,
    NSTextCheckingTypeAddress = 1ULL << 4,
    NSTextCheckingTypeLink = 1ULL << 5,
    NSTextCheckingTypeQuote = 1ULL << 6,
    NSTextCheckingTypeDash = 1ULL << 7,
    NSTextCheckingTypeReplacement = 1ULL << 8,
    NSTextCheckingTypeCorrection = 1ULL << 9,
    NSTextCheckingTypeRegularExpression __attribute__((availability(ios,introduced=4_0))) = 1ULL << 10,
    NSTextCheckingTypePhoneNumber __attribute__((availability(ios,introduced=4_0))) = 1ULL << 11,
    NSTextCheckingTypeTransitInformation __attribute__((availability(ios,introduced=4_0))) = 1ULL << 12
};

typedef uint64_t NSTextCheckingTypes;
enum : NSTextCheckingTypes {
    NSTextCheckingAllSystemTypes = 0xffffffffULL,
    NSTextCheckingAllCustomTypes = 0xffffffffULL << 32,
    NSTextCheckingAllTypes = (NSTextCheckingAllSystemTypes | NSTextCheckingAllCustomTypes)
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))
@interface NSTextCheckingResult : NSObject <NSCopying, NSSecureCoding>


@property (readonly) NSTextCheckingType resultType;
@property (readonly) NSRange range;

@end

@interface NSTextCheckingResult (NSTextCheckingResultOptional)


@property (nullable, readonly, copy) NSOrthography *orthography;

@property (nullable, readonly, copy) NSArray<NSDictionary<NSString *, id> *> *grammarDetails;

@property (nullable, readonly, copy) NSDate *date;
@property (nullable, readonly, copy) NSTimeZone *timeZone;
@property (readonly) NSTimeInterval duration;
@property (nullable, readonly, copy) NSDictionary<NSString *, NSString *> *components __attribute__((availability(ios,introduced=4_0)));
@property (nullable, readonly, copy) NSURL *URL;
@property (nullable, readonly, copy) NSString *replacementString;
@property (nullable, readonly, copy) NSArray<NSString *> *alternativeStrings __attribute__((availability(ios,introduced=7_0)));
@property (nullable, readonly, copy) NSRegularExpression *regularExpression __attribute__((availability(ios,introduced=4_0)));
@property (nullable, readonly, copy) NSString *phoneNumber __attribute__((availability(ios,introduced=4_0)));

@property (nullable, readonly, copy) NSDictionary<NSString *, NSString *> *addressComponents;


@property (readonly) NSUInteger numberOfRanges __attribute__((availability(ios,introduced=4_0)));
- (NSRange)rangeAtIndex:(NSUInteger)idx __attribute__((availability(ios,introduced=4_0)));
- (NSTextCheckingResult *)resultByAdjustingRangesWithOffset:(NSInteger)offset __attribute__((availability(ios,introduced=5_0)));

@end




extern NSString * const NSTextCheckingNameKey __attribute__((availability(ios,introduced=4_0)));
extern NSString * const NSTextCheckingJobTitleKey __attribute__((availability(ios,introduced=4_0)));
extern NSString * const NSTextCheckingOrganizationKey __attribute__((availability(ios,introduced=4_0)));
extern NSString * const NSTextCheckingStreetKey __attribute__((availability(ios,introduced=4_0)));
extern NSString * const NSTextCheckingCityKey __attribute__((availability(ios,introduced=4_0)));
extern NSString * const NSTextCheckingStateKey __attribute__((availability(ios,introduced=4_0)));
extern NSString * const NSTextCheckingZIPKey __attribute__((availability(ios,introduced=4_0)));
extern NSString * const NSTextCheckingCountryKey __attribute__((availability(ios,introduced=4_0)));
extern NSString * const NSTextCheckingPhoneKey __attribute__((availability(ios,introduced=4_0)));
extern NSString * const NSTextCheckingAirlineKey __attribute__((availability(ios,introduced=4_0)));
extern NSString * const NSTextCheckingFlightKey __attribute__((availability(ios,introduced=4_0)));


@interface NSTextCheckingResult (NSTextCheckingResultCreation)


+ (NSTextCheckingResult *)orthographyCheckingResultWithRange:(NSRange)range orthography:(NSOrthography *)orthography;
+ (NSTextCheckingResult *)spellCheckingResultWithRange:(NSRange)range;

+ (NSTextCheckingResult *)grammarCheckingResultWithRange:(NSRange)range details:(NSArray<NSDictionary<NSString *, id> *> *)details;

+ (NSTextCheckingResult *)dateCheckingResultWithRange:(NSRange)range date:(NSDate *)date;
+ (NSTextCheckingResult *)dateCheckingResultWithRange:(NSRange)range date:(NSDate *)date timeZone:(NSTimeZone *)timeZone duration:(NSTimeInterval)duration;
+ (NSTextCheckingResult *)addressCheckingResultWithRange:(NSRange)range components:(NSDictionary<NSString *, NSString *> *)components;
+ (NSTextCheckingResult *)linkCheckingResultWithRange:(NSRange)range URL:(NSURL *)url;
+ (NSTextCheckingResult *)quoteCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString;
+ (NSTextCheckingResult *)dashCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString;
+ (NSTextCheckingResult *)replacementCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString;
+ (NSTextCheckingResult *)correctionCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString;
+ (NSTextCheckingResult *)correctionCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString alternativeStrings:(NSArray<NSString *> *)alternativeStrings __attribute__((availability(ios,introduced=7_0)));
+ (NSTextCheckingResult *)regularExpressionCheckingResultWithRanges:(NSRangePointer)ranges count:(NSUInteger)count regularExpression:(NSRegularExpression *)regularExpression __attribute__((availability(ios,introduced=4_0)));
+ (NSTextCheckingResult *)phoneNumberCheckingResultWithRange:(NSRange)range phoneNumber:(NSString *)phoneNumber __attribute__((availability(ios,introduced=4_0)));
+ (NSTextCheckingResult *)transitInformationCheckingResultWithRange:(NSRange)range components:(NSDictionary<NSString *, NSString *> *)components __attribute__((availability(ios,introduced=4_0)));

@end
# 8 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSRegularExpression.h" 2 3

@class NSArray<ObjectType>;






typedef enum NSRegularExpressionOptions : NSUInteger NSRegularExpressionOptions; enum NSRegularExpressionOptions : NSUInteger {
   NSRegularExpressionCaseInsensitive = 1 << 0,
   NSRegularExpressionAllowCommentsAndWhitespace = 1 << 1,
   NSRegularExpressionIgnoreMetacharacters = 1 << 2,
   NSRegularExpressionDotMatchesLineSeparators = 1 << 3,
   NSRegularExpressionAnchorsMatchLines = 1 << 4,
   NSRegularExpressionUseUnixLineSeparators = 1 << 5,
   NSRegularExpressionUseUnicodeWordBoundaries = 1 << 6
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))
@interface NSRegularExpression : NSObject <NSCopying, NSSecureCoding> {
    @protected
    NSString *_pattern;
    NSUInteger _options;
    void *_internal;
    id _reserved1;
    int32_t _checkout;
    int32_t _reserved2;
}



+ (nullable NSRegularExpression *)regularExpressionWithPattern:(NSString *)pattern options:(NSRegularExpressionOptions)options error:(NSError **)error;
- (nullable instancetype)initWithPattern:(NSString *)pattern options:(NSRegularExpressionOptions)options error:(NSError **)error __attribute__((objc_designated_initializer));

@property (readonly, copy) NSString *pattern;
@property (readonly) NSRegularExpressionOptions options;
@property (readonly) NSUInteger numberOfCaptureGroups;



+ (NSString *)escapedPatternForString:(NSString *)string;

@end


typedef enum NSMatchingOptions : NSUInteger NSMatchingOptions; enum NSMatchingOptions : NSUInteger {
   NSMatchingReportProgress = 1 << 0,
   NSMatchingReportCompletion = 1 << 1,
   NSMatchingAnchored = 1 << 2,
   NSMatchingWithTransparentBounds = 1 << 3,
   NSMatchingWithoutAnchoringBounds = 1 << 4
};

typedef enum NSMatchingFlags : NSUInteger NSMatchingFlags; enum NSMatchingFlags : NSUInteger {
   NSMatchingProgress = 1 << 0,
   NSMatchingCompleted = 1 << 1,
   NSMatchingHitEnd = 1 << 2,
   NSMatchingRequiredEnd = 1 << 3,
   NSMatchingInternalError = 1 << 4
};

@interface NSRegularExpression (NSMatching)




- (void)enumerateMatchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range usingBlock:(void (__attribute__((noescape)) ^)(NSTextCheckingResult * _Nullable result, NSMatchingFlags flags, BOOL *stop))block;

- (NSArray<NSTextCheckingResult *> *)matchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range;
- (NSUInteger)numberOfMatchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range;
- (nullable NSTextCheckingResult *)firstMatchInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range;
- (NSRange)rangeOfFirstMatchInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range;
# 90 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSRegularExpression.h" 3
@end


@interface NSRegularExpression (NSReplacement)



- (NSString *)stringByReplacingMatchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range withTemplate:(NSString *)templ;
- (NSUInteger)replaceMatchesInString:(NSMutableString *)string options:(NSMatchingOptions)options range:(NSRange)range withTemplate:(NSString *)templ;



- (NSString *)replacementStringForResult:(NSTextCheckingResult *)result inString:(NSString *)string offset:(NSInteger)offset template:(NSString *)templ;



+ (NSString *)escapedTemplateForString:(NSString *)string;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))
@interface NSDataDetector : NSRegularExpression {
    @protected
    NSTextCheckingTypes _types;
}



+ (nullable NSDataDetector *)dataDetectorWithTypes:(NSTextCheckingTypes)checkingTypes error:(NSError **)error;
- (nullable instancetype)initWithTypes:(NSTextCheckingTypes)checkingTypes error:(NSError **)error __attribute__((objc_designated_initializer));

@property (readonly) NSTextCheckingTypes checkingTypes;

@end
# 70 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSSortDescriptor.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSSortDescriptor.h" 3
@interface NSSortDescriptor : NSObject <NSSecureCoding, NSCopying> {
@private
    NSUInteger _sortDescriptorFlags;
    NSString *_key;
    SEL _selector;
    id _selectorOrBlock;
}

+ (instancetype)sortDescriptorWithKey:(nullable NSString *)key ascending:(BOOL)ascending __attribute__((availability(ios,introduced=4_0)));
+ (instancetype)sortDescriptorWithKey:(nullable NSString *)key ascending:(BOOL)ascending selector:(nullable SEL)selector __attribute__((availability(ios,introduced=4_0)));


- (instancetype)initWithKey:(nullable NSString *)key ascending:(BOOL)ascending;
- (instancetype)initWithKey:(nullable NSString *)key ascending:(BOOL)ascending selector:(nullable SEL)selector;
- (nullable instancetype)initWithCoder:(NSCoder *)coder;

@property (nullable, readonly, copy) NSString *key;
@property (readonly) BOOL ascending;
@property (nullable, readonly) SEL selector;

- (void)allowEvaluation __attribute__((availability(ios,introduced=7_0)));

+ (instancetype)sortDescriptorWithKey:(nullable NSString *)key ascending:(BOOL)ascending comparator:(NSComparator)cmptr __attribute__((availability(ios,introduced=4_0)));

- (instancetype)initWithKey:(nullable NSString *)key ascending:(BOOL)ascending comparator:(NSComparator)cmptr __attribute__((availability(ios,introduced=4_0)));

@property (readonly) NSComparator comparator __attribute__((availability(ios,introduced=4_0)));

- (NSComparisonResult)compareObject:(id)object1 toObject:(id)object2;
@property (readonly, retain) id reversedSortDescriptor;

@end

@interface NSSet<ObjectType> (NSSortDescriptorSorting)

- (NSArray<ObjectType> *)sortedArrayUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors __attribute__((availability(ios,introduced=4_0)));

@end

@interface NSArray<ObjectType> (NSSortDescriptorSorting)

- (NSArray<ObjectType> *)sortedArrayUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors;

@end

@interface NSMutableArray<ObjectType> (NSSortDescriptorSorting)

- (void)sortUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors;

@end

@interface NSOrderedSet<ObjectType> (NSKeyValueSorting)


- (NSArray<ObjectType> *)sortedArrayUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors __attribute__((availability(ios,introduced=5_0)));

@end

@interface NSMutableOrderedSet<ObjectType> (NSKeyValueSorting)


- (void)sortUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors __attribute__((availability(ios,introduced=5_0)));

@end
# 74 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSStream.h" 1 3







@class NSData, NSDictionary, NSError, NSHost, NSInputStream, NSOutputStream, NSRunLoop, NSString, NSURL;
@protocol NSStreamDelegate;

typedef NSString * NSStreamPropertyKey __attribute__((swift_wrapper(struct)));



typedef enum NSStreamStatus : NSUInteger NSStreamStatus; enum NSStreamStatus : NSUInteger {
    NSStreamStatusNotOpen = 0,
    NSStreamStatusOpening = 1,
    NSStreamStatusOpen = 2,
    NSStreamStatusReading = 3,
    NSStreamStatusWriting = 4,
    NSStreamStatusAtEnd = 5,
    NSStreamStatusClosed = 6,
    NSStreamStatusError = 7
};

typedef enum NSStreamEvent : NSUInteger NSStreamEvent; enum NSStreamEvent : NSUInteger {
    NSStreamEventNone = 0,
    NSStreamEventOpenCompleted = 1UL << 0,
    NSStreamEventHasBytesAvailable = 1UL << 1,
    NSStreamEventHasSpaceAvailable = 1UL << 2,
    NSStreamEventErrorOccurred = 1UL << 3,
    NSStreamEventEndEncountered = 1UL << 4
};



@interface NSStream : NSObject
- (void)open;
- (void)close;

@property (nullable, assign) id <NSStreamDelegate> delegate;



- (nullable id)propertyForKey:(NSStreamPropertyKey)key;
- (BOOL)setProperty:(nullable id)property forKey:(NSStreamPropertyKey)key;





- (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;
- (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;

@property (readonly) NSStreamStatus streamStatus;
@property (nullable, readonly, copy) NSError *streamError;
@end



@interface NSInputStream : NSStream
- (NSInteger)read:(uint8_t *)buffer maxLength:(NSUInteger)len;


- (BOOL)getBuffer:(uint8_t * _Nullable * _Nonnull)buffer length:(NSUInteger *)len;


@property (readonly) BOOL hasBytesAvailable;


- (instancetype)initWithData:(NSData *)data __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithURL:(NSURL *)url __attribute__((availability(ios,introduced=4_0))) __attribute__((objc_designated_initializer));

@end



@interface NSOutputStream : NSStream
- (NSInteger)write:(const uint8_t *)buffer maxLength:(NSUInteger)len;


@property (readonly) BOOL hasSpaceAvailable;


- (instancetype)initToMemory __attribute__((objc_designated_initializer));
- (instancetype)initToBuffer:(uint8_t *)buffer capacity:(NSUInteger)capacity __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithURL:(NSURL *)url append:(BOOL)shouldAppend __attribute__((availability(ios,introduced=4_0))) __attribute__((objc_designated_initializer));

@end


@interface NSStream (NSSocketStreamCreationExtensions)

+ (void)getStreamsToHostWithName:(NSString *)hostname port:(NSInteger)port inputStream:(NSInputStream * _Nullable * _Nullable)inputStream outputStream:(NSOutputStream * _Nullable * _Nullable)outputStream __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)));





@end

@interface NSStream (NSStreamBoundPairCreationExtensions)
+ (void)getBoundStreamsWithBufferSize:(NSUInteger)bufferSize inputStream:(NSInputStream * _Nullable * _Nullable)inputStream outputStream:(NSOutputStream * _Nullable * _Nullable)outputStream __attribute__((availability(ios,introduced=8_0)));
@end


@interface NSInputStream (NSInputStreamExtensions)
- (nullable instancetype)initWithFileAtPath:(NSString *)path;

+ (nullable instancetype)inputStreamWithData:(NSData *)data;
+ (nullable instancetype)inputStreamWithFileAtPath:(NSString *)path;
+ (nullable instancetype)inputStreamWithURL:(NSURL *)url __attribute__((availability(ios,introduced=4_0)));
@end


@interface NSOutputStream (NSOutputStreamExtensions)
- (nullable instancetype)initToFileAtPath:(NSString *)path append:(BOOL)shouldAppend;

+ (instancetype)outputStreamToMemory;
+ (instancetype)outputStreamToBuffer:(uint8_t *)buffer capacity:(NSUInteger)capacity;
+ (instancetype)outputStreamToFileAtPath:(NSString *)path append:(BOOL)shouldAppend;
+ (nullable instancetype)outputStreamWithURL:(NSURL *)url append:(BOOL)shouldAppend __attribute__((availability(ios,introduced=4_0)));
@end

@protocol NSStreamDelegate <NSObject>
@optional
- (void)stream:(NSStream *)aStream handleEvent:(NSStreamEvent)eventCode;
@end



extern NSStreamPropertyKey const NSStreamSocketSecurityLevelKey __attribute__((availability(ios,introduced=2_0)));

typedef NSString * NSStreamSocketSecurityLevel __attribute__((swift_wrapper(enum)));

extern NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelNone __attribute__((availability(ios,introduced=2_0)));
extern NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelSSLv2 __attribute__((availability(ios,introduced=2_0)));
extern NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelSSLv3 __attribute__((availability(ios,introduced=2_0)));
extern NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelTLSv1 __attribute__((availability(ios,introduced=2_0)));
extern NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelNegotiatedSSL __attribute__((availability(ios,introduced=2_0)));

extern NSStreamPropertyKey const NSStreamSOCKSProxyConfigurationKey __attribute__((availability(ios,introduced=2_0)));

typedef NSString * NSStreamSOCKSProxyConfiguration __attribute__((swift_wrapper(enum)));

extern NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyHostKey __attribute__((availability(ios,introduced=2_0)));

extern NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyPortKey __attribute__((availability(ios,introduced=2_0)));

extern NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyVersionKey __attribute__((availability(ios,introduced=2_0)));

extern NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyUserKey __attribute__((availability(ios,introduced=2_0)));

extern NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyPasswordKey __attribute__((availability(ios,introduced=2_0)));


typedef NSString * NSStreamSOCKSProxyVersion __attribute__((swift_wrapper(enum)));

extern NSStreamSOCKSProxyVersion const NSStreamSOCKSProxyVersion4 __attribute__((availability(ios,introduced=2_0)));

extern NSStreamSOCKSProxyVersion const NSStreamSOCKSProxyVersion5 __attribute__((availability(ios,introduced=2_0)));


extern NSStreamPropertyKey const NSStreamDataWrittenToMemoryStreamKey __attribute__((availability(ios,introduced=2_0)));


extern NSStreamPropertyKey const NSStreamFileCurrentOffsetKey __attribute__((availability(ios,introduced=2_0)));



extern NSErrorDomain const NSStreamSocketSSLErrorDomain __attribute__((availability(ios,introduced=2_0)));

extern NSErrorDomain const NSStreamSOCKSErrorDomain __attribute__((availability(ios,introduced=2_0)));






extern NSStreamPropertyKey const NSStreamNetworkServiceType __attribute__((availability(ios,introduced=4_0)));

typedef NSString * NSStreamNetworkServiceTypeValue __attribute__((swift_wrapper(enum)));


extern NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeVoIP __attribute__((availability(ios,introduced=4_0)));
extern NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeVideo __attribute__((availability(ios,introduced=5_0)));
extern NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeBackground __attribute__((availability(ios,introduced=5_0)));
extern NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeVoice __attribute__((availability(ios,introduced=5_0)));
extern NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeCallSignaling __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
# 75 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSThread.h" 1 3








@class NSArray<ObjectType>, NSMutableDictionary, NSDate, NSNumber, NSString;



@interface NSThread : NSObject {
@private
    id _private;
    uint8_t _bytes[44];
}


@property (class, readonly, strong) NSThread *currentThread;


+ (void)detachNewThreadWithBlock:(void (^)(void))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
+ (void)detachNewThreadSelector:(SEL)selector toTarget:(id)target withObject:(nullable id)argument;

+ (BOOL)isMultiThreaded;

@property (readonly, retain) NSMutableDictionary *threadDictionary;

+ (void)sleepUntilDate:(NSDate *)date;
+ (void)sleepForTimeInterval:(NSTimeInterval)ti;

+ (void)exit;

+ (double)threadPriority;
+ (BOOL)setThreadPriority:(double)p;

@property double threadPriority __attribute__((availability(ios,introduced=4_0)));

@property NSQualityOfService qualityOfService __attribute__((availability(ios,introduced=8_0)));


@property (class, readonly, copy) NSArray<NSNumber *> *callStackReturnAddresses __attribute__((availability(ios,introduced=2_0)));
@property (class, readonly, copy) NSArray<NSString *> *callStackSymbols __attribute__((availability(ios,introduced=4_0)));


@property (nullable, copy) NSString *name __attribute__((availability(ios,introduced=2_0)));

@property NSUInteger stackSize __attribute__((availability(ios,introduced=2_0)));

@property (readonly) BOOL isMainThread __attribute__((availability(ios,introduced=2_0)));

@property (class, readonly) BOOL isMainThread __attribute__((availability(ios,introduced=2_0)));
@property (class, readonly, strong) NSThread *mainThread __attribute__((availability(ios,introduced=2_0)));


- (instancetype)init __attribute__((availability(ios,introduced=2_0))) __attribute__((objc_designated_initializer));
- (instancetype)initWithTarget:(id)target selector:(SEL)selector object:(nullable id)argument __attribute__((availability(ios,introduced=2_0)));
- (instancetype)initWithBlock:(void (^)(void))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

@property (readonly, getter=isExecuting) BOOL executing __attribute__((availability(ios,introduced=2_0)));
@property (readonly, getter=isFinished) BOOL finished __attribute__((availability(ios,introduced=2_0)));
@property (readonly, getter=isCancelled) BOOL cancelled __attribute__((availability(ios,introduced=2_0)));

- (void)cancel __attribute__((availability(ios,introduced=2_0)));

- (void)start __attribute__((availability(ios,introduced=2_0)));

- (void)main __attribute__((availability(ios,introduced=2_0)));

@end

extern NSNotificationName const NSWillBecomeMultiThreadedNotification;
extern NSNotificationName const NSDidBecomeSingleThreadedNotification;
extern NSNotificationName const NSThreadWillExitNotification;

@interface NSObject (NSThreadPerformAdditions)

- (void)performSelectorOnMainThread:(SEL)aSelector withObject:(nullable id)arg waitUntilDone:(BOOL)wait modes:(nullable NSArray<NSString *> *)array;
- (void)performSelectorOnMainThread:(SEL)aSelector withObject:(nullable id)arg waitUntilDone:(BOOL)wait;


- (void)performSelector:(SEL)aSelector onThread:(NSThread *)thr withObject:(nullable id)arg waitUntilDone:(BOOL)wait modes:(nullable NSArray<NSString *> *)array __attribute__((availability(ios,introduced=2_0)));
- (void)performSelector:(SEL)aSelector onThread:(NSThread *)thr withObject:(nullable id)arg waitUntilDone:(BOOL)wait __attribute__((availability(ios,introduced=2_0)));

- (void)performSelectorInBackground:(SEL)aSelector withObject:(nullable id)arg __attribute__((availability(ios,introduced=2_0)));

@end
# 78 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSTimeZone.h" 1 3








@class NSString, NSArray<ObjectType>, NSDictionary<KeyType, ObjectType>, NSDate, NSData, NSLocale;



@interface NSTimeZone : NSObject <NSCopying, NSSecureCoding>

@property (readonly, copy) NSString *name;
@property (readonly, copy) NSData *data;

- (NSInteger)secondsFromGMTForDate:(NSDate *)aDate;
- (nullable NSString *)abbreviationForDate:(NSDate *)aDate;
- (BOOL)isDaylightSavingTimeForDate:(NSDate *)aDate;
- (NSTimeInterval)daylightSavingTimeOffsetForDate:(NSDate *)aDate __attribute__((availability(ios,introduced=2_0)));
- (nullable NSDate *)nextDaylightSavingTimeTransitionAfterDate:(NSDate *)aDate __attribute__((availability(ios,introduced=2_0)));

@end

@interface NSTimeZone (NSExtendedTimeZone)


@property (class, readonly, copy) NSTimeZone *systemTimeZone;

+ (void)resetSystemTimeZone;


@property (class, copy) NSTimeZone *defaultTimeZone;

@property (class, readonly, copy) NSTimeZone *localTimeZone;

@property (class, readonly, copy) NSArray<NSString *> *knownTimeZoneNames;

@property (class, copy) NSDictionary<NSString *, NSString *> *abbreviationDictionary __attribute__((availability(ios,introduced=4_0)));

+ (NSDictionary<NSString *, NSString *> *)abbreviationDictionary;

@property (class, readonly, copy) NSString *timeZoneDataVersion __attribute__((availability(ios,introduced=4_0)));


@property (readonly) NSInteger secondsFromGMT;
@property (nullable, readonly, copy) NSString *abbreviation;
@property (readonly, getter=isDaylightSavingTime) BOOL daylightSavingTime;
@property (readonly) NSTimeInterval daylightSavingTimeOffset __attribute__((availability(ios,introduced=2_0)));
@property (nullable, readonly, copy) NSDate *nextDaylightSavingTimeTransition __attribute__((availability(ios,introduced=2_0)));

@property (readonly, copy) NSString *description;

- (BOOL)isEqualToTimeZone:(NSTimeZone *)aTimeZone;

typedef enum NSTimeZoneNameStyle : NSInteger NSTimeZoneNameStyle; enum NSTimeZoneNameStyle : NSInteger {
 NSTimeZoneNameStyleStandard,
 NSTimeZoneNameStyleShortStandard,
 NSTimeZoneNameStyleDaylightSaving,
 NSTimeZoneNameStyleShortDaylightSaving,
 NSTimeZoneNameStyleGeneric,
 NSTimeZoneNameStyleShortGeneric
};

- (nullable NSString *)localizedName:(NSTimeZoneNameStyle)style locale:(nullable NSLocale *)locale __attribute__((availability(ios,introduced=2_0)));

@end

@interface NSTimeZone (NSTimeZoneCreation)




+ (nullable instancetype)timeZoneWithName:(NSString *)tzName;
+ (nullable instancetype)timeZoneWithName:(NSString *)tzName data:(nullable NSData *)aData;

- (nullable instancetype)initWithName:(NSString *)tzName;
- (nullable instancetype)initWithName:(NSString *)tzName data:(nullable NSData *)aData;




+ (instancetype)timeZoneForSecondsFromGMT:(NSInteger)seconds;

+ (nullable instancetype)timeZoneWithAbbreviation:(NSString *)abbreviation;

@end

extern NSNotificationName const NSSystemTimeZoneDidChangeNotification __attribute__((availability(ios,introduced=2_0)));
# 79 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSTimer.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSTimer.h" 3
@interface NSTimer : NSObject

+ (NSTimer *)timerWithTimeInterval:(NSTimeInterval)ti invocation:(NSInvocation *)invocation repeats:(BOOL)yesOrNo;
+ (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)ti invocation:(NSInvocation *)invocation repeats:(BOOL)yesOrNo;

+ (NSTimer *)timerWithTimeInterval:(NSTimeInterval)ti target:(id)aTarget selector:(SEL)aSelector userInfo:(nullable id)userInfo repeats:(BOOL)yesOrNo;
+ (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)ti target:(id)aTarget selector:(SEL)aSelector userInfo:(nullable id)userInfo repeats:(BOOL)yesOrNo;






+ (NSTimer *)timerWithTimeInterval:(NSTimeInterval)interval repeats:(BOOL)repeats block:(void (^)(NSTimer *timer))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));





+ (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)interval repeats:(BOOL)repeats block:(void (^)(NSTimer *timer))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));






- (instancetype)initWithFireDate:(NSDate *)date interval:(NSTimeInterval)interval repeats:(BOOL)repeats block:(void (^)(NSTimer *timer))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

- (instancetype)initWithFireDate:(NSDate *)date interval:(NSTimeInterval)ti target:(id)t selector:(SEL)s userInfo:(nullable id)ui repeats:(BOOL)rep __attribute__((objc_designated_initializer));

- (void)fire;

@property (copy) NSDate *fireDate;
@property (readonly) NSTimeInterval timeInterval;



@property NSTimeInterval tolerance __attribute__((availability(ios,introduced=7_0)));

- (void)invalidate;
@property (readonly, getter=isValid) BOOL valid;

@property (nullable, readonly, retain) id userInfo;

@end
# 80 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLAuthenticationChallenge.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLAuthenticationChallenge.h" 3
@class NSURLAuthenticationChallenge;
@class NSURLCredential;
@class NSURLProtectionSpace;
@class NSURLResponse;
@class NSError;
# 28 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLAuthenticationChallenge.h" 3
@protocol NSURLAuthenticationChallengeSender <NSObject>




- (void)useCredential:(NSURLCredential *)credential forAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;




- (void)continueWithoutCredentialForAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;




- (void)cancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;

@optional



- (void)performDefaultHandlingForAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;




- (void)rejectProtectionSpaceAndContinueWithChallenge:(NSURLAuthenticationChallenge *)challenge;

@end

@class NSURLAuthenticationChallengeInternal;
# 67 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLAuthenticationChallenge.h" 3
@interface NSURLAuthenticationChallenge : NSObject <NSSecureCoding>
{
@private
    NSURLAuthenticationChallengeInternal *_internal;
}
# 83 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLAuthenticationChallenge.h" 3
- (instancetype)initWithProtectionSpace:(NSURLProtectionSpace *)space proposedCredential:(nullable NSURLCredential *)credential previousFailureCount:(NSInteger)previousFailureCount failureResponse:(nullable NSURLResponse *)response error:(nullable NSError *)error sender:(id<NSURLAuthenticationChallengeSender>)sender;
# 93 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLAuthenticationChallenge.h" 3
- (instancetype)initWithAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge sender:(id<NSURLAuthenticationChallengeSender>)sender;






@property (readonly, copy) NSURLProtectionSpace *protectionSpace;
# 114 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLAuthenticationChallenge.h" 3
@property (nullable, readonly, copy) NSURLCredential *proposedCredential;






@property (readonly) NSInteger previousFailureCount;
# 132 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLAuthenticationChallenge.h" 3
@property (nullable, readonly, copy) NSURLResponse *failureResponse;
# 142 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLAuthenticationChallenge.h" 3
@property (nullable, readonly, copy) NSError *error;







@property (nullable, readonly, retain) id<NSURLAuthenticationChallengeSender> sender;

@end
# 83 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCache.h" 1 3
# 30 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCache.h" 3
typedef enum NSURLCacheStoragePolicy : NSUInteger NSURLCacheStoragePolicy; enum NSURLCacheStoragePolicy : NSUInteger
{
    NSURLCacheStorageAllowed,
    NSURLCacheStorageAllowedInMemoryOnly,
    NSURLCacheStorageNotAllowed,
};


@class NSCachedURLResponseInternal;
@class NSData;
@class NSDictionary;
@class NSURLRequest;
@class NSURLResponse;
@class NSDate;
@class NSURLSessionDataTask;
# 53 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCache.h" 3
@interface NSCachedURLResponse : NSObject <NSSecureCoding, NSCopying>
{
    @private
    NSCachedURLResponseInternal *_internal;
}
# 71 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCache.h" 3
- (instancetype)initWithResponse:(NSURLResponse *)response data:(NSData *)data;
# 85 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCache.h" 3
- (instancetype)initWithResponse:(NSURLResponse *)response data:(NSData *)data userInfo:(nullable NSDictionary *)userInfo storagePolicy:(NSURLCacheStoragePolicy)storagePolicy;






@property (readonly, copy) NSURLResponse *response;






@property (readonly, copy) NSData *data;






@property (nullable, readonly, copy) NSDictionary *userInfo;






@property (readonly) NSURLCacheStoragePolicy storagePolicy;

@end


@class NSURLRequest;
@class NSURLCacheInternal;

@interface NSURLCache : NSObject
{
    @private
    NSURLCacheInternal *_internal;
}
# 153 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCache.h" 3
@property (class, strong) NSURLCache *sharedURLCache;
# 169 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCache.h" 3
- (instancetype)initWithMemoryCapacity:(NSUInteger)memoryCapacity diskCapacity:(NSUInteger)diskCapacity diskPath:(nullable NSString *)path;
# 182 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCache.h" 3
- (nullable NSCachedURLResponse *)cachedResponseForRequest:(NSURLRequest *)request;
# 191 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCache.h" 3
- (void)storeCachedResponse:(NSCachedURLResponse *)cachedResponse forRequest:(NSURLRequest *)request;
# 201 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCache.h" 3
- (void)removeCachedResponseForRequest:(NSURLRequest *)request;






- (void)removeAllCachedResponses;





- (void)removeCachedResponsesSinceDate:(NSDate *)date __attribute__((availability(ios,introduced=8_0)));







@property NSUInteger memoryCapacity;







@property NSUInteger diskCapacity;
# 240 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCache.h" 3
@property (readonly) NSUInteger currentMemoryUsage;
# 250 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCache.h" 3
@property (readonly) NSUInteger currentDiskUsage;

@end

@interface NSURLCache (NSURLSessionTaskAdditions)
- (void)storeCachedResponse:(NSCachedURLResponse *)cachedResponse forDataTask:(NSURLSessionDataTask *)dataTask __attribute__((availability(ios,introduced=8_0)));
- (void)getCachedResponseForDataTask:(NSURLSessionDataTask *)dataTask completionHandler:(void (^) (NSCachedURLResponse * _Nullable cachedResponse))completionHandler __attribute__((availability(ios,introduced=8_0)));
- (void)removeCachedResponseForDataTask:(NSURLSessionDataTask *)dataTask __attribute__((availability(ios,introduced=8_0)));
@end
# 84 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLConnection.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLConnection.h" 3
@class NSArray;
@class NSURL;
@class NSCachedURLResponse;
@class NSData;
@class NSError;
@class NSURLAuthenticationChallenge;
@class NSURLConnectionInternal;
@class NSURLRequest;
@class NSURLResponse;
@class NSRunLoop;
@class NSInputStream;
@class NSURLProtectionSpace;
@class NSOperationQueue;

@protocol NSURLConnectionDelegate;
# 111 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLConnection.h" 3
@interface NSURLConnection : NSObject
{
    @private
    NSURLConnectionInternal *_internal;
}


- (nullable instancetype)initWithRequest:(NSURLRequest *)request delegate:(nullable id)delegate startImmediately:(BOOL)startImmediately __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(watchos,unavailable)));

- (nullable instancetype)initWithRequest:(NSURLRequest *)request delegate:(nullable id)delegate __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(watchos,unavailable)));
+ (nullable NSURLConnection*)connectionWithRequest:(NSURLRequest *)request delegate:(nullable id)delegate __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(watchos,unavailable)));

@property (readonly, copy) NSURLRequest *originalRequest __attribute__((availability(ios,introduced=5_0)));
@property (readonly, copy) NSURLRequest *currentRequest __attribute__((availability(ios,introduced=5_0)));

- (void)start __attribute__((availability(ios,introduced=2_0)));
- (void)cancel;

- (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode __attribute__((availability(ios,introduced=2_0)));
- (void)unscheduleFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode __attribute__((availability(ios,introduced=2_0)));
- (void)setDelegateQueue:(nullable NSOperationQueue*) queue __attribute__((availability(ios,introduced=5_0)));
# 163 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLConnection.h" 3
+ (BOOL)canHandleRequest:(NSURLRequest *)request;

@end
# 209 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLConnection.h" 3
@protocol NSURLConnectionDelegate <NSObject>
@optional
- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error;
- (BOOL)connectionShouldUseCredentialStorage:(NSURLConnection *)connection;
- (void)connection:(NSURLConnection *)connection willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;
- (BOOL)connection:(NSURLConnection *)connection canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)protectionSpace __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" "Use -connection:willSendRequestForAuthenticationChallenge: instead.")));
- (void)connection:(NSURLConnection *)connection didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use -connection:willSendRequestForAuthenticationChallenge: instead.")));
- (void)connection:(NSURLConnection *)connection didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use -connection:willSendRequestForAuthenticationChallenge: instead.")));
@end
# 297 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLConnection.h" 3
@protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>
@optional
- (nullable NSURLRequest *)connection:(NSURLConnection *)connection willSendRequest:(NSURLRequest *)request redirectResponse:(nullable NSURLResponse *)response;
- (void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response;

- (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data;

- (nullable NSInputStream *)connection:(NSURLConnection *)connection needNewBodyStream:(NSURLRequest *)request;
- (void)connection:(NSURLConnection *)connection didSendBodyData:(NSInteger)bytesWritten
                                                 totalBytesWritten:(NSInteger)totalBytesWritten
                                         totalBytesExpectedToWrite:(NSInteger)totalBytesExpectedToWrite;

- (nullable NSCachedURLResponse *)connection:(NSURLConnection *)connection willCacheResponse:(NSCachedURLResponse *)cachedResponse;

- (void)connectionDidFinishLoading:(NSURLConnection *)connection;
@end
# 351 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLConnection.h" 3
@protocol NSURLConnectionDownloadDelegate <NSURLConnectionDelegate>
@optional
- (void)connection:(NSURLConnection *)connection didWriteData:(long long)bytesWritten totalBytesWritten:(long long)totalBytesWritten expectedTotalBytes:(long long) expectedTotalBytes;
- (void)connectionDidResumeDownloading:(NSURLConnection *)connection totalBytesWritten:(long long)totalBytesWritten expectedTotalBytes:(long long) expectedTotalBytes;

@required
- (void)connectionDidFinishDownloading:(NSURLConnection *)connection destinationURL:(NSURL *) destinationURL;
@end
# 368 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLConnection.h" 3
@interface NSURLConnection (NSURLConnectionSynchronousLoading)
# 408 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLConnection.h" 3
+ (nullable NSData *)sendSynchronousRequest:(NSURLRequest *)request returningResponse:(NSURLResponse * _Nullable * _Nullable)response error:(NSError **)error __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(watchos,unavailable)));

@end
# 423 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLConnection.h" 3
@interface NSURLConnection (NSURLConnectionQueuedLoading)
# 457 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLConnection.h" 3
+ (void)sendAsynchronousRequest:(NSURLRequest*) request
                          queue:(NSOperationQueue*) queue
              completionHandler:(void (^)(NSURLResponse* _Nullable response, NSData* _Nullable data, NSError* _Nullable connectionError)) handler __attribute__((availability(ios,introduced=5_0,deprecated=9_0,message="" "Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(watchos,unavailable)));

@end
# 85 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredential.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 1 3
# 24 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecBase.h" 1 3
# 52 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecBase.h" 3
typedef struct __attribute__((objc_bridge(id))) __SecCertificate *SecCertificateRef;







typedef struct __attribute__((objc_bridge(id))) __SecIdentity *SecIdentityRef;






typedef struct __attribute__((objc_bridge(id))) __SecKey *SecKeyRef;






typedef struct __attribute__((objc_bridge(id))) __SecPolicy *SecPolicyRef;






typedef struct __attribute__((objc_bridge(id))) __SecAccessControl *SecAccessControlRef;
# 95 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecBase.h" 3
enum : OSStatus
{
    errSecSuccess = 0,
    errSecUnimplemented = -4,
    errSecIO = -36,
    errSecOpWr = -49,
    errSecParam = -50,
    errSecAllocate = -108,
    errSecUserCanceled = -128,
    errSecBadReq = -909,
    errSecInternalComponent = -2070,
    errSecNotAvailable = -25291,
    errSecDuplicateItem = -25299,
    errSecItemNotFound = -25300,
    errSecInteractionNotAllowed = -25308,
    errSecDecode = -26275,
    errSecAuthFailed = -25293,
    errSecVerifyFailed = -67808,
};
# 25 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecCertificate.h" 1 3
# 50 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecCertificate.h" 3
CFTypeID SecCertificateGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
# 61 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecCertificate.h" 3
_Nullable
SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef _Nullable allocator,
    CFDataRef data) __attribute__((availability(ios,introduced=2.0)));
# 72 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecCertificate.h" 3
CFDataRef SecCertificateCopyData(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=2.0)));
# 86 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecCertificate.h" 3
_Nullable
CFStringRef SecCertificateCopySubjectSummary(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=2.0)));
# 26 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecIdentity.h" 1 3
# 46 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecIdentity.h" 3
CFTypeID SecIdentityGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
# 58 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecIdentity.h" 3
OSStatus SecIdentityCopyCertificate(
            SecIdentityRef identityRef,
            SecCertificateRef * _Nonnull __attribute__((cf_returns_retained)) certificateRef)
    __attribute__((availability(ios,introduced=2.0)));
# 71 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecIdentity.h" 3
OSStatus SecIdentityCopyPrivateKey(
            SecIdentityRef identityRef,
            SecKeyRef * _Nonnull __attribute__((cf_returns_retained)) privateKeyRef)
    __attribute__((availability(ios,introduced=2.0)));
# 27 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecImportExport.h" 1 3
# 50 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecImportExport.h" 3
extern const CFStringRef kSecImportExportPassphrase
    __attribute__((availability(ios,introduced=2.0)));
# 69 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecImportExport.h" 3
extern const CFStringRef kSecImportItemLabel
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportItemKeyID
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportItemTrust
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportItemCertChain
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportItemIdentity
    __attribute__((availability(ios,introduced=2.0)));
# 93 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecImportExport.h" 3
OSStatus SecPKCS12Import(CFDataRef pkcs12_data, CFDictionaryRef options,
    CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) items) __attribute__((availability(ios,introduced=2.0)));
# 28 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecAccessControl.h" 1 3
# 46 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecAccessControl.h" 3
CFTypeID SecAccessControlGetTypeID(void)
__attribute__((availability(ios,introduced=8.0)));

typedef enum SecAccessControlCreateFlags : CFOptionFlags SecAccessControlCreateFlags; enum SecAccessControlCreateFlags : CFOptionFlags {
    kSecAccessControlUserPresence = 1 << 0,
    kSecAccessControlTouchIDAny __attribute__((availability(ios,introduced=9_0))) = 1u << 1,
    kSecAccessControlTouchIDCurrentSet __attribute__((availability(ios,introduced=9_0))) = 1u << 3,
    kSecAccessControlDevicePasscode __attribute__((availability(ios,introduced=9_0))) = 1u << 4,
    kSecAccessControlOr __attribute__((availability(ios,introduced=9_0))) = 1u << 14,
    kSecAccessControlAnd __attribute__((availability(ios,introduced=9_0))) = 1u << 15,
    kSecAccessControlPrivateKeyUsage __attribute__((availability(ios,introduced=9_0))) = 1u << 30,
    kSecAccessControlApplicationPassword __attribute__((availability(ios,introduced=9_0))) = 1u << 31,
} __attribute__((availability(ios,introduced=8.0)));
# 75 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecAccessControl.h" 3
_Nullable
SecAccessControlRef SecAccessControlCreateWithFlags(CFAllocatorRef _Nullable allocator, CFTypeRef protection,
                                                    SecAccessControlCreateFlags flags, CFErrorRef *error)
__attribute__((availability(ios,introduced=8.0)));
# 29 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 1 3
# 52 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecClass
    __attribute__((availability(ios,introduced=2.0)));
# 66 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecClassGenericPassword
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassInternetPassword
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassCertificate
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassKey
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassIdentity
    __attribute__((availability(ios,introduced=2.0)));
# 407 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecAttrAccessible
    __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessControl
    __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kSecAttrAccessGroup
    __attribute__((availability(ios,introduced=3.0)));
extern const CFStringRef kSecAttrSynchronizable
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecAttrCreationDate
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrModificationDate
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrDescription
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrComment
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCreator
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrType
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrLabel
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsInvisible
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsNegative
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAccount
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrService
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrGeneric
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSecurityDomain
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrServer
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocol
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationType
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrPort
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrPath
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSubject
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIssuer
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSerialNumber
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSubjectKeyID
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrPublicKeyHash
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCertificateType
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCertificateEncoding
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyClass
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrApplicationLabel
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsPermanent
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrApplicationTag
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyType
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeySizeInBits
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrEffectiveKeySize
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanEncrypt
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanDecrypt
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanDerive
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanSign
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanVerify
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanWrap
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanUnwrap
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSyncViewHint
    __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecAttrTokenID
    __attribute__((availability(ios,introduced=9.0)));
# 546 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecAttrAccessibleWhenUnlocked
    __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleAfterFirstUnlock
    __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleAlways
    __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleWhenPasscodeSetThisDeviceOnly
    __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kSecAttrAccessibleWhenUnlockedThisDeviceOnly
    __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly
    __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleAlwaysThisDeviceOnly
    __attribute__((availability(ios,introduced=4.0)));
# 598 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecAttrProtocolFTP
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolFTPAccount
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolHTTP
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIRC
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolNNTP
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolPOP3
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolSMTP
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolSOCKS
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIMAP
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolLDAP
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolAppleTalk
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolAFP
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolTelnet
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolSSH
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolFTPS
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolHTTPS
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolHTTPProxy
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolHTTPSProxy
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolFTPProxy
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolSMB
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolRTSP
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolRTSPProxy
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolDAAP
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolEPPC
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIPP
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolNNTPS
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolLDAPS
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolTelnetS
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIMAPS
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIRCS
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolPOP3S
    __attribute__((availability(ios,introduced=2.0)));
# 675 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecAttrAuthenticationTypeNTLM
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeMSN
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeDPA
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeRPA
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeHTTPBasic
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeHTTPDigest
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeHTMLForm
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeDefault
    __attribute__((availability(ios,introduced=2.0)));
# 701 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecAttrKeyClassPublic
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyClassPrivate
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyClassSymmetric
    __attribute__((availability(ios,introduced=2.0)));
# 717 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecAttrKeyTypeRSA
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyTypeEC
    __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrKeyTypeECSECPrimeRandom
    __attribute__((availability(ios,introduced=10.0)));
# 734 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecAttrSynchronizableAny
    __attribute__((availability(ios,introduced=7.0)));
# 780 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecMatchPolicy
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchItemList
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchSearchList
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchIssuers
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchEmailAddressIfPresent
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchSubjectContains
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchCaseInsensitive
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchTrustedOnly
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchValidOnDate
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchLimit
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchLimitOne
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchLimitAll
    __attribute__((availability(ios,introduced=2.0)));
# 832 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecReturnData
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecReturnAttributes
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecReturnRef
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecReturnPersistentRef
    __attribute__((availability(ios,introduced=2.0)));
# 859 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecValueData
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecValueRef
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecValuePersistentRef
    __attribute__((availability(ios,introduced=2.0)));
# 898 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecUseItemList
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecUseOperationPrompt
    __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kSecUseNoAuthenticationUI
    __attribute__((availability(ios,introduced=8.0,deprecated=9.0,message="Use a kSecUseAuthenticationUI instead.")));
extern const CFStringRef kSecUseAuthenticationUI
    __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecUseAuthenticationContext
    __attribute__((availability(ios,introduced=9.0)));
# 924 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecUseAuthenticationUIAllow
    __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecUseAuthenticationUIFail
    __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecUseAuthenticationUISkip
    __attribute__((availability(ios,introduced=9.0)));
# 944 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecAttrTokenIDSecureEnclave
__attribute__((availability(ios,introduced=9.0)));
# 957 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
extern const CFStringRef kSecAttrAccessGroupToken
    __attribute__((availability(ios,introduced=10.0)));
# 1016 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef * _Nullable __attribute__((cf_returns_retained)) result)
    __attribute__((availability(ios,introduced=2.0)));
# 1053 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef * _Nullable __attribute__((cf_returns_retained)) result)
    __attribute__((availability(ios,introduced=2.0)));
# 1072 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
OSStatus SecItemUpdate(CFDictionaryRef query,
    CFDictionaryRef attributesToUpdate)
    __attribute__((availability(ios,introduced=2.0)));
# 1102 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecItem.h" 3
OSStatus SecItemDelete(CFDictionaryRef query)
    __attribute__((availability(ios,introduced=2.0)));
# 30 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 1 3
# 47 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
typedef enum SecPadding : uint32_t SecPadding; enum SecPadding : uint32_t
{
    kSecPaddingNone = 0,
    kSecPaddingPKCS1 = 1,
    kSecPaddingOAEP = 2,




    kSecPaddingSigRaw = 0x4000,




    kSecPaddingPKCS1MD2 = 0x8000,




    kSecPaddingPKCS1MD5 = 0x8001,




    kSecPaddingPKCS1SHA1 = 0x8002,




    kSecPaddingPKCS1SHA224 = 0x8003,




    kSecPaddingPKCS1SHA256 = 0x8004,




    kSecPaddingPKCS1SHA384 = 0x8005,




    kSecPaddingPKCS1SHA512 = 0x8006,
};







CFTypeID SecKeyGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
# 112 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
extern const CFStringRef kSecPrivateKeyAttrs
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecPublicKeyAttrs
    __attribute__((availability(ios,introduced=2.0)));
# 159 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
OSStatus SecKeyGeneratePair(CFDictionaryRef parameters, SecKeyRef * _Nullable __attribute__((cf_returns_retained)) publicKey,
    SecKeyRef * _Nullable __attribute__((cf_returns_retained)) privateKey) __attribute__((availability(ios,introduced=2.0)));
# 191 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
OSStatus SecKeyRawSign(
    SecKeyRef key,
 SecPadding padding,
 const uint8_t *dataToSign,
 size_t dataToSignLen,
 uint8_t *sig,
 size_t *sigLen)
    __attribute__((availability(ios,introduced=2.0)));
# 221 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
OSStatus SecKeyRawVerify(
    SecKeyRef key,
 SecPadding padding,
 const uint8_t *signedData,
 size_t signedDataLen,
 const uint8_t *sig,
 size_t sigLen)
    __attribute__((availability(ios,introduced=2.0)));
# 255 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
OSStatus SecKeyEncrypt(
    SecKeyRef key,
 SecPadding padding,
 const uint8_t *plainText,
 size_t plainTextLen,
 uint8_t *cipherText,
 size_t *cipherTextLen)
    __attribute__((availability(ios,introduced=2.0)));
# 284 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
OSStatus SecKeyDecrypt(
    SecKeyRef key,
 SecPadding padding,


 const uint8_t *cipherText,
 size_t cipherTextLen,
 uint8_t *plainText,
 size_t *plainTextLen)
    __attribute__((availability(ios,introduced=2.0)));
# 303 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
size_t SecKeyGetBlockSize(SecKeyRef key)
    __attribute__((availability(ios,introduced=2.0)));
# 346 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
SecKeyRef _Nullable SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 367 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
SecKeyRef _Nullable SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 382 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
CFDataRef _Nullable SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 404 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
CFDictionaryRef _Nullable SecKeyCopyAttributes(SecKeyRef key)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 414 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
SecKeyRef _Nullable SecKeyCopyPublicKey(SecKeyRef key)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 693 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
typedef CFStringRef SecKeyAlgorithm __attribute__((swift_wrapper(enum)))
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureRaw
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15Raw
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureRFC4754
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionRaw
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionPKCS1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA1AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA224AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA256AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA384AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA512AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA1AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA224AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA256AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA384AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA512AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA1AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA224AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA256AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA384AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA512AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandard
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactor
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 837 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
CFDataRef _Nullable SecKeyCreateSignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef dataToSign,
                                           CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 854 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 870 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
CFDataRef _Nullable SecKeyCreateEncryptedData(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef plaintext, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 886 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
CFDataRef _Nullable SecKeyCreateDecryptedData(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef ciphertext, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));







typedef CFStringRef SecKeyKeyExchangeParameter __attribute__((swift_wrapper(enum)))
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyKeyExchangeParameter kSecKeyKeyExchangeParameterRequestedSize
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyKeyExchangeParameter kSecKeyKeyExchangeParameterSharedInfo
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 913 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
CFDataRef _Nullable SecKeyCopyKeyExchangeResult(SecKeyRef privateKey, SecKeyAlgorithm algorithm, SecKeyRef publicKey, CFDictionaryRef parameters, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 935 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
typedef enum SecKeyOperationType : CFIndex SecKeyOperationType; enum SecKeyOperationType : CFIndex {
    kSecKeyOperationTypeSign = 0,
    kSecKeyOperationTypeVerify = 1,
    kSecKeyOperationTypeEncrypt = 2,
    kSecKeyOperationTypeDecrypt = 3,
    kSecKeyOperationTypeKeyExchange = 4,
} __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 951 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecKey.h" 3
Boolean SecKeyIsAlgorithmSupported(SecKeyRef key, SecKeyOperationType operation, SecKeyAlgorithm algorithm)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 31 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecPolicy.h" 1 3
# 61 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecPolicy.h" 3
extern const CFStringRef kSecPolicyAppleX509Basic
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleSSL
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleSMIME
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleEAP
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleIPsec
    __attribute__((availability(ios,introduced=7.0)));




extern const CFStringRef kSecPolicyApplePKINITClient
    __attribute__((availability(ios,unavailable)));
extern const CFStringRef kSecPolicyApplePKINITServer
    __attribute__((availability(ios,unavailable)));
extern const CFStringRef kSecPolicyAppleCodeSigning
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyMacAppStoreReceipt
    __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecPolicyAppleIDValidation
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleTimeStamping
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleRevocation
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyApplePassbookSigning
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyApplePayIssuerEncryption
    __attribute__((availability(ios,introduced=9.0)));
# 126 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecPolicy.h" 3
extern const CFStringRef kSecPolicyOid
 __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyName
 __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyClient
 __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyRevocationFlags
 __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyTeamIdentifier
    __attribute__((availability(ios,introduced=7.0)));







CFTypeID SecPolicyGetTypeID(void)
 __attribute__((availability(ios,introduced=2.0)));
# 157 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecPolicy.h" 3
_Nullable
CFDictionaryRef SecPolicyCopyProperties(SecPolicyRef policyRef)
 __attribute__((availability(ios,introduced=7.0)));







SecPolicyRef SecPolicyCreateBasicX509(void)
 __attribute__((availability(ios,introduced=2.0)));
# 180 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecPolicy.h" 3
SecPolicyRef SecPolicyCreateSSL(Boolean server, CFStringRef _Nullable hostname)
 __attribute__((availability(ios,introduced=2.0)));
# 204 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecPolicy.h" 3
enum : CFOptionFlags {
 kSecRevocationOCSPMethod = (1 << 0),
 kSecRevocationCRLMethod = (1 << 1),
 kSecRevocationPreferCRL = (1 << 2),
 kSecRevocationRequirePositiveResponse = (1 << 3),
 kSecRevocationNetworkAccessDisabled = (1 << 4),
 kSecRevocationUseAnyAvailableMethod = (kSecRevocationOCSPMethod |
  kSecRevocationCRLMethod)
};
# 227 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecPolicy.h" 3
_Nullable
SecPolicyRef SecPolicyCreateRevocation(CFOptionFlags revocationFlags)
 __attribute__((availability(ios,introduced=7.0)));
# 242 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecPolicy.h" 3
_Nullable
SecPolicyRef SecPolicyCreateWithProperties(CFTypeRef policyIdentifier,
 CFDictionaryRef _Nullable properties)
 __attribute__((availability(ios,introduced=7.0)));
# 32 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecRandom.h" 1 3
# 46 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecRandom.h" 3
typedef const struct __SecRandom * SecRandomRef;



extern const SecRandomRef kSecRandomDefault
    __attribute__((availability(ios,introduced=2.0)));
# 60 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecRandom.h" 3
int SecRandomCopyBytes(SecRandomRef _Nullable rnd, size_t count, uint8_t *bytes)
    __attribute__ ((warn_unused_result))
    __attribute__((availability(ios,introduced=2.0)));
# 33 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecSharedCredential.h" 1 3
# 55 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecSharedCredential.h" 3
extern const CFStringRef kSecSharedPassword
    __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
# 69 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecSharedCredential.h" 3
void SecAddSharedWebCredential(CFStringRef fqdn, CFStringRef account, CFStringRef _Nullable password,
    void (^completionHandler)(CFErrorRef _Nullable error))
    __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
# 91 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecSharedCredential.h" 3
void SecRequestSharedWebCredential(CFStringRef _Nullable fqdn, CFStringRef _Nullable account,
    void (^completionHandler)(CFArrayRef _Nullable credentials, CFErrorRef _Nullable error))
    __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));






_Nullable
CFStringRef SecCreateSharedWebCredentialPassword(void)
    __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
# 34 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 1 3
# 83 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
typedef enum SecTrustResultType : uint32_t SecTrustResultType; enum SecTrustResultType : uint32_t {
    kSecTrustResultInvalid __attribute__((availability(ios,introduced=2_0))) = 0,
    kSecTrustResultProceed __attribute__((availability(ios,introduced=2_0))) = 1,
    kSecTrustResultConfirm __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" ))) = 2,
    kSecTrustResultDeny __attribute__((availability(ios,introduced=2_0))) = 3,
    kSecTrustResultUnspecified __attribute__((availability(ios,introduced=2_0))) = 4,
    kSecTrustResultRecoverableTrustFailure __attribute__((availability(ios,introduced=2_0))) = 5,
    kSecTrustResultFatalTrustFailure __attribute__((availability(ios,introduced=2_0))) = 6,
    kSecTrustResultOtherError __attribute__((availability(ios,introduced=2_0))) = 7
};





typedef struct __attribute__((objc_bridge(id))) __SecTrust *SecTrustRef;
# 110 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
extern const CFStringRef kSecPropertyTypeTitle
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPropertyTypeError
    __attribute__((availability(ios,introduced=7.0)));
# 157 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
extern const CFStringRef kSecTrustEvaluationDate
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustExtendedValidation
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustOrganizationName
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustResultValue
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustRevocationChecked
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustRevocationValidUntilDate
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustCertificateTransparency
    __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecTrustCertificateTransparencyWhiteList
    __attribute__((availability(ios,introduced=10.0)));
# 182 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
typedef void (^SecTrustCallback)(SecTrustRef trustRef, SecTrustResultType trustResult);
# 191 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
CFTypeID SecTrustGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
# 207 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustCreateWithCertificates(CFTypeRef certificates,
    CFTypeRef _Nullable policies, SecTrustRef * _Nonnull __attribute__((cf_returns_retained)) trust)
    __attribute__((availability(ios,introduced=2.0)));
# 221 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustSetPolicies(SecTrustRef trust, CFTypeRef policies)
    __attribute__((availability(ios,introduced=6.0)));
# 232 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustCopyPolicies(SecTrustRef trust, CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) policies)
    __attribute__((availability(ios,introduced=7.0)));
# 248 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustSetNetworkFetchAllowed(SecTrustRef trust,
    Boolean allowFetch)
    __attribute__((availability(ios,introduced=7.0)));
# 263 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustGetNetworkFetchAllowed(SecTrustRef trust,
    Boolean *allowFetch)
    __attribute__((availability(ios,introduced=7.0)));
# 277 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustSetAnchorCertificates(SecTrustRef trust,
    CFArrayRef anchorCertificates)
    __attribute__((availability(ios,introduced=2.0)));
# 291 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustSetAnchorCertificatesOnly(SecTrustRef trust,
    Boolean anchorCertificatesOnly)
    __attribute__((availability(ios,introduced=2.0)));
# 306 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustCopyCustomAnchorCertificates(SecTrustRef trust,
    CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) anchors)
    __attribute__((availability(ios,introduced=7.0)));
# 322 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustSetVerifyDate(SecTrustRef trust, CFDateRef verifyDate)
    __attribute__((availability(ios,introduced=2.0)));
# 336 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
CFAbsoluteTime SecTrustGetVerifyTime(SecTrustRef trust)
    __attribute__((availability(ios,introduced=2.0)));
# 352 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustEvaluate(SecTrustRef trust, SecTrustResultType * _Nullable result)
    __attribute__((availability(ios,introduced=2.0)));
# 366 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustEvaluateAsync(SecTrustRef trust,
    dispatch_queue_t _Nullable queue, SecTrustCallback result)
    __attribute__((availability(ios,introduced=7.0)));
# 381 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustGetTrustResult(SecTrustRef trust,
    SecTrustResultType *result)
    __attribute__((availability(ios,introduced=7.0)));
# 395 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
_Nullable
SecKeyRef SecTrustCopyPublicKey(SecTrustRef trust)
    __attribute__((availability(ios,introduced=2.0)));
# 410 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
CFIndex SecTrustGetCertificateCount(SecTrustRef trust)
    __attribute__((availability(ios,introduced=2.0)));
# 423 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
_Nullable
SecCertificateRef SecTrustGetCertificateAtIndex(SecTrustRef trust, CFIndex ix)
    __attribute__((availability(ios,introduced=2.0)));
# 443 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
CFDataRef SecTrustCopyExceptions(SecTrustRef trust)
    __attribute__((availability(ios,introduced=4.0)));
# 470 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
_Bool SecTrustSetExceptions(SecTrustRef trust, CFDataRef _Nullable exceptions)
    __attribute__((availability(ios,introduced=4.0)));
# 485 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
_Nullable
CFArrayRef SecTrustCopyProperties(SecTrustRef trust)
    __attribute__((availability(ios,introduced=2.0)));
# 501 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
_Nullable
CFDictionaryRef SecTrustCopyResult(SecTrustRef trust)
    __attribute__((availability(ios,introduced=7.0)));
# 517 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecTrust.h" 3
OSStatus SecTrustSetOCSPResponse(SecTrustRef trust, CFTypeRef _Nullable responseData)
    __attribute__((availability(ios,introduced=7.0)));
# 35 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/Security.h" 2 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredential.h" 2 3

@class NSString;
@class NSArray;
# 27 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredential.h" 3
typedef enum NSURLCredentialPersistence : NSUInteger NSURLCredentialPersistence; enum NSURLCredentialPersistence : NSUInteger {
    NSURLCredentialPersistenceNone,
    NSURLCredentialPersistenceForSession,
    NSURLCredentialPersistencePermanent,
    NSURLCredentialPersistenceSynchronizable __attribute__((availability(ios,introduced=6_0)))
};

@class NSURLCredentialInternal;






@interface NSURLCredential : NSObject <NSSecureCoding, NSCopying>
{
    @private
    __attribute__((objc_ownership(strong))) NSURLCredentialInternal *_internal;
}






@property (readonly) NSURLCredentialPersistence persistence;

@end





@interface NSURLCredential(NSInternetPassword)
# 70 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredential.h" 3
- (instancetype)initWithUser:(NSString *)user password:(NSString *)password persistence:(NSURLCredentialPersistence)persistence;
# 80 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredential.h" 3
+ (NSURLCredential *)credentialWithUser:(NSString *)user password:(NSString *)password persistence:(NSURLCredentialPersistence)persistence;






@property (nullable, readonly, copy) NSString *user;
# 97 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredential.h" 3
@property (nullable, readonly, copy) NSString *password;
# 108 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredential.h" 3
@property (readonly) BOOL hasPassword;

@end





@interface NSURLCredential(NSClientCertificate)
# 126 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredential.h" 3
- (instancetype)initWithIdentity:(SecIdentityRef)identity certificates:(nullable NSArray *)certArray persistence:(NSURLCredentialPersistence)persistence __attribute__((availability(ios,introduced=3_0)));
# 136 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredential.h" 3
+ (NSURLCredential *)credentialWithIdentity:(SecIdentityRef)identity certificates:(nullable NSArray *)certArray persistence:(NSURLCredentialPersistence)persistence __attribute__((availability(ios,introduced=3_0)));






@property (nullable, readonly) SecIdentityRef identity;






@property (readonly, copy) NSArray *certificates __attribute__((availability(ios,introduced=3_0)));

@end

@interface NSURLCredential(NSServerTrust)






- (instancetype)initWithTrust:(SecTrustRef)trust __attribute__((availability(ios,introduced=3_0)));






+ (NSURLCredential *)credentialForTrust:(SecTrustRef)trust __attribute__((availability(ios,introduced=3_0)));

@end
# 86 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredentialStorage.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtectionSpace.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtectionSpace.h" 3
@class NSString;
@class NSArray<ObjectType>;
@class NSData;







extern NSString * const NSURLProtectionSpaceHTTP __attribute__((availability(ios,introduced=2_0)));





extern NSString * const NSURLProtectionSpaceHTTPS __attribute__((availability(ios,introduced=2_0)));





extern NSString * const NSURLProtectionSpaceFTP __attribute__((availability(ios,introduced=2_0)));





extern NSString * const NSURLProtectionSpaceHTTPProxy;





extern NSString * const NSURLProtectionSpaceHTTPSProxy;





extern NSString * const NSURLProtectionSpaceFTPProxy;





extern NSString * const NSURLProtectionSpaceSOCKSProxy;





extern NSString * const NSURLAuthenticationMethodDefault;






extern NSString * const NSURLAuthenticationMethodHTTPBasic;





extern NSString * const NSURLAuthenticationMethodHTTPDigest;





extern NSString * const NSURLAuthenticationMethodHTMLForm;





extern NSString * const NSURLAuthenticationMethodNTLM __attribute__((availability(ios,introduced=2_0)));





extern NSString * const NSURLAuthenticationMethodNegotiate __attribute__((availability(ios,introduced=2_0)));





extern NSString * const NSURLAuthenticationMethodClientCertificate __attribute__((availability(ios,introduced=3_0)));





extern NSString * const NSURLAuthenticationMethodServerTrust __attribute__((availability(ios,introduced=3_0)));

@class NSURLProtectionSpaceInternal;






@interface NSURLProtectionSpace : NSObject <NSSecureCoding, NSCopying>
{
@private
    NSURLProtectionSpaceInternal *_internal;
}
# 135 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtectionSpace.h" 3
- (instancetype)initWithHost:(NSString *)host port:(NSInteger)port protocol:(nullable NSString *)protocol realm:(nullable NSString *)realm authenticationMethod:(nullable NSString *)authenticationMethod;
# 151 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtectionSpace.h" 3
- (instancetype)initWithProxyHost:(NSString *)host port:(NSInteger)port type:(nullable NSString *)type realm:(nullable NSString *)realm authenticationMethod:(nullable NSString *)authenticationMethod;
# 161 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtectionSpace.h" 3
@property (nullable, readonly, copy) NSString *realm;






@property (readonly) BOOL receivesCredentialSecurely;






@property (readonly) BOOL isProxy;






@property (readonly, copy) NSString *host;






@property (readonly) NSInteger port;






@property (nullable, readonly, copy) NSString *proxyType;






@property (nullable, readonly, copy) NSString *protocol;






@property (readonly, copy) NSString *authenticationMethod;

@end





@interface NSURLProtectionSpace(NSClientCertificateSpace)






@property (nullable, readonly, copy) NSArray<NSData *> *distinguishedNames __attribute__((availability(ios,introduced=3_0)));

@end





@interface NSURLProtectionSpace(NSServerTrustValidationSpace)






@property (nullable, readonly) SecTrustRef serverTrust __attribute__((availability(ios,introduced=3_0)));

@end
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredentialStorage.h" 2 3


@class NSDictionary<KeyType, ObjectType>;
@class NSString;
@class NSURLCredential;
@class NSURLSessionTask;

@class NSURLCredentialStorageInternal;
# 26 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredentialStorage.h" 3
@interface NSURLCredentialStorage : NSObject
{
    @private
    NSURLCredentialStorageInternal *_internal;
}







@property (class, readonly, strong) NSURLCredentialStorage *sharedCredentialStorage;
# 47 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredentialStorage.h" 3
- (nullable NSDictionary<NSString *, NSURLCredential *> *)credentialsForProtectionSpace:(NSURLProtectionSpace *)space;
# 56 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredentialStorage.h" 3
@property (readonly, copy) NSDictionary<NSURLProtectionSpace *, NSDictionary<NSString *, NSURLCredential *> *> *allCredentials;
# 67 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredentialStorage.h" 3
- (void)setCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space;
# 78 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredentialStorage.h" 3
- (void)removeCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space;
# 91 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredentialStorage.h" 3
- (void)removeCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space options:(nullable NSDictionary<NSString *, id> *)options __attribute__((availability(ios,introduced=7_0)));






- (nullable NSURLCredential *)defaultCredentialForProtectionSpace:(NSURLProtectionSpace *)space;
# 107 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLCredentialStorage.h" 3
- (void)setDefaultCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space;

@end

@interface NSURLCredentialStorage (NSURLSessionTaskAdditions)
- (void)getCredentialsForProtectionSpace:(NSURLProtectionSpace *)protectionSpace task:(NSURLSessionTask *)task completionHandler:(void (^) (NSDictionary<NSString *, NSURLCredential *> * _Nullable credentials))completionHandler __attribute__((availability(ios,introduced=8_0)));
- (void)setCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)protectionSpace task:(NSURLSessionTask *)task __attribute__((availability(ios,introduced=8_0)));
- (void)removeCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)protectionSpace options:(nullable NSDictionary<NSString *, id> *)options task:(NSURLSessionTask *)task __attribute__((availability(ios,introduced=8_0)));
- (void)getDefaultCredentialForProtectionSpace:(NSURLProtectionSpace *)space task:(NSURLSessionTask *)task completionHandler:(void (^) (NSURLCredential * _Nullable credential))completionHandler __attribute__((availability(ios,introduced=8_0)));
- (void)setDefaultCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)protectionSpace task:(NSURLSessionTask *)task __attribute__((availability(ios,introduced=8_0)));
@end






extern NSNotificationName const NSURLCredentialStorageChangedNotification;







extern NSString *const NSURLCredentialStorageRemoveSynchronizableCredentials __attribute__((availability(ios,introduced=7_0)));
# 87 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLError.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 1 3
# 23 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkDefs.h" 1 3
# 24 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 1 3
# 42 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFErrorDomainCFNetwork __attribute__((availability(ios,introduced=2_0)));
# 52 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFErrorDomainWinSock __attribute__((availability(ios,introduced=2_0)));
# 62 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
typedef enum CFNetworkErrors : int CFNetworkErrors; enum CFNetworkErrors : int {

  kCFHostErrorHostNotFound = 1,
  kCFHostErrorUnknown = 2,

  kCFSOCKSErrorUnknownClientVersion = 100,
  kCFSOCKSErrorUnsupportedServerVersion = 101,

  kCFSOCKS4ErrorRequestFailed = 110,
  kCFSOCKS4ErrorIdentdFailed = 111,
  kCFSOCKS4ErrorIdConflict = 112,
  kCFSOCKS4ErrorUnknownStatusCode = 113,

  kCFSOCKS5ErrorBadState = 120,
  kCFSOCKS5ErrorBadResponseAddr = 121,
  kCFSOCKS5ErrorBadCredentials = 122,
  kCFSOCKS5ErrorUnsupportedNegotiationMethod = 123,
  kCFSOCKS5ErrorNoAcceptableMethod = 124,

  kCFFTPErrorUnexpectedStatusCode = 200,

  kCFErrorHTTPAuthenticationTypeUnsupported = 300,
  kCFErrorHTTPBadCredentials = 301,
  kCFErrorHTTPConnectionLost = 302,
  kCFErrorHTTPParseFailure = 303,
  kCFErrorHTTPRedirectionLoopDetected = 304,
  kCFErrorHTTPBadURL = 305,
  kCFErrorHTTPProxyConnectionFailure = 306,
  kCFErrorHTTPBadProxyCredentials = 307,
  kCFErrorPACFileError = 308,
  kCFErrorPACFileAuth = 309,
  kCFErrorHTTPSProxyConnectionFailure = 310,
  kCFStreamErrorHTTPSProxyFailureUnexpectedResponseToCONNECTMethod = 311,


  kCFURLErrorBackgroundSessionInUseByAnotherProcess = -996,
  kCFURLErrorBackgroundSessionWasDisconnected = -997,
  kCFURLErrorUnknown = -998,
  kCFURLErrorCancelled = -999,
  kCFURLErrorBadURL = -1000,
  kCFURLErrorTimedOut = -1001,
  kCFURLErrorUnsupportedURL = -1002,
  kCFURLErrorCannotFindHost = -1003,
  kCFURLErrorCannotConnectToHost = -1004,
  kCFURLErrorNetworkConnectionLost = -1005,
  kCFURLErrorDNSLookupFailed = -1006,
  kCFURLErrorHTTPTooManyRedirects = -1007,
  kCFURLErrorResourceUnavailable = -1008,
  kCFURLErrorNotConnectedToInternet = -1009,
  kCFURLErrorRedirectToNonExistentLocation = -1010,
  kCFURLErrorBadServerResponse = -1011,
  kCFURLErrorUserCancelledAuthentication = -1012,
  kCFURLErrorUserAuthenticationRequired = -1013,
  kCFURLErrorZeroByteResource = -1014,
  kCFURLErrorCannotDecodeRawData = -1015,
  kCFURLErrorCannotDecodeContentData = -1016,
  kCFURLErrorCannotParseResponse = -1017,
  kCFURLErrorInternationalRoamingOff = -1018,
  kCFURLErrorCallIsActive = -1019,
  kCFURLErrorDataNotAllowed = -1020,
  kCFURLErrorRequestBodyStreamExhausted = -1021,
  kCFURLErrorAppTransportSecurityRequiresSecureConnection = -1022,
  kCFURLErrorFileDoesNotExist = -1100,
  kCFURLErrorFileIsDirectory = -1101,
  kCFURLErrorNoPermissionsToReadFile = -1102,
  kCFURLErrorDataLengthExceedsMaximum = -1103,

  kCFURLErrorSecureConnectionFailed = -1200,
  kCFURLErrorServerCertificateHasBadDate = -1201,
  kCFURLErrorServerCertificateUntrusted = -1202,
  kCFURLErrorServerCertificateHasUnknownRoot = -1203,
  kCFURLErrorServerCertificateNotYetValid = -1204,
  kCFURLErrorClientCertificateRejected = -1205,
  kCFURLErrorClientCertificateRequired = -1206,
  kCFURLErrorCannotLoadFromNetwork = -2000,

  kCFURLErrorCannotCreateFile = -3000,
  kCFURLErrorCannotOpenFile = -3001,
  kCFURLErrorCannotCloseFile = -3002,
  kCFURLErrorCannotWriteToFile = -3003,
  kCFURLErrorCannotRemoveFile = -3004,
  kCFURLErrorCannotMoveFile = -3005,
  kCFURLErrorDownloadDecodingFailedMidStream = -3006,
  kCFURLErrorDownloadDecodingFailedToComplete = -3007,


  kCFHTTPCookieCannotParseCookieFile = -4000,


  kCFNetServiceErrorUnknown = -72000L,
  kCFNetServiceErrorCollision = -72001L,
  kCFNetServiceErrorNotFound = -72002L,
  kCFNetServiceErrorInProgress = -72003L,
  kCFNetServiceErrorBadArgument = -72004L,
  kCFNetServiceErrorCancel = -72005L,
  kCFNetServiceErrorInvalid = -72006L,
  kCFNetServiceErrorTimeout = -72007L,
  kCFNetServiceErrorDNSServiceFailure = -73000L
};
# 172 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFURLErrorFailingURLErrorKey __attribute__((availability(ios,introduced=2_2)));
# 183 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFURLErrorFailingURLStringErrorKey __attribute__((availability(ios,introduced=2_2)));
# 194 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFGetAddrInfoFailureKey __attribute__((availability(ios,introduced=2_0)));
# 204 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFSOCKSStatusCodeKey __attribute__((availability(ios,introduced=2_0)));
# 215 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFSOCKSVersionKey __attribute__((availability(ios,introduced=2_0)));
# 226 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFSOCKSNegotiationMethodKey __attribute__((availability(ios,introduced=2_0)));
# 237 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFDNSServiceFailureKey __attribute__((availability(ios,introduced=2_0)));
# 248 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFFTPStatusCodeKey __attribute__((availability(ios,introduced=2_0)));
# 28 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 1 3
# 26 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 1 3
# 38 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
#pragma pack(push, 2)








typedef struct __CFHost* CFHostRef;
# 56 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern const SInt32 kCFStreamErrorDomainNetDB __attribute__((availability(ios,introduced=2_0)));
# 66 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern const SInt32 kCFStreamErrorDomainSystemConfiguration __attribute__((availability(ios,introduced=2_0)));
# 76 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
typedef enum CFHostInfoType : int CFHostInfoType; enum CFHostInfoType : int {





  kCFHostAddresses = 0,




  kCFHostNames = 1,





  kCFHostReachability = 2
};
# 104 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
struct CFHostClientContext {






  CFIndex version;





  void * _Nullable info;
# 126 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
  CFAllocatorRetainCallBack _Nullable retain;





  CFAllocatorReleaseCallBack _Nullable release;







  CFAllocatorCopyDescriptionCallBack _Nullable copyDescription;
};
typedef struct CFHostClientContext CFHostClientContext;
# 166 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
typedef void ( * CFHostClientCallBack)(CFHostRef theHost, CFHostInfoType typeInfo, const CFStreamError * _Nullable error, void * _Nullable info);
# 179 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern CFTypeID
CFHostGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
# 209 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern CFHostRef
CFHostCreateWithName(CFAllocatorRef _Nullable allocator, CFStringRef hostname) __attribute__((availability(ios,introduced=2_0)));
# 239 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern CFHostRef
CFHostCreateWithAddress(CFAllocatorRef _Nullable allocator, CFDataRef addr) __attribute__((availability(ios,introduced=2_0)));
# 270 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern CFHostRef
CFHostCreateCopy(CFAllocatorRef _Nullable alloc, CFHostRef host) __attribute__((availability(ios,introduced=2_0)));
# 308 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern Boolean
CFHostStartInfoResolution(CFHostRef theHost, CFHostInfoType info, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
# 341 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern _Nullable CFArrayRef
CFHostGetAddressing(CFHostRef theHost, Boolean * _Nullable hasBeenResolved) __attribute__((availability(ios,introduced=2_0)));
# 373 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern _Nullable CFArrayRef
CFHostGetNames(CFHostRef theHost, Boolean * _Nullable hasBeenResolved) __attribute__((availability(ios,introduced=2_0)));
# 409 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern _Nullable CFDataRef
CFHostGetReachability(CFHostRef theHost, Boolean * _Nullable hasBeenResolved) __attribute__((availability(ios,introduced=2_0)));
# 434 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern void
CFHostCancelInfoResolution(CFHostRef theHost, CFHostInfoType info) __attribute__((availability(ios,introduced=2_0)));
# 472 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern Boolean
CFHostSetClient(CFHostRef theHost, CFHostClientCallBack _Nullable clientCB, CFHostClientContext * _Nullable clientContext) __attribute__((availability(ios,introduced=2_0)));
# 504 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern void
CFHostScheduleWithRunLoop(CFHostRef theHost, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
# 536 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern void
CFHostUnscheduleFromRunLoop(CFHostRef theHost, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));



#pragma pack(pop)
# 27 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 1 3
# 38 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
#pragma pack(push, 2)
# 48 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef struct __CFNetService* CFNetServiceRef;
# 57 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef struct __CFNetServiceMonitor* CFNetServiceMonitorRef;
# 66 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef struct __CFNetServiceBrowser* CFNetServiceBrowserRef;
# 76 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern const SInt32 kCFStreamErrorDomainMach __attribute__((availability(ios,introduced=2_0)));
# 89 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern const SInt32 kCFStreamErrorDomainNetServices __attribute__((availability(ios,introduced=2_0)));
# 99 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef enum CFNetServicesError : int CFNetServicesError; enum CFNetServicesError : int {




  kCFNetServicesErrorUnknown = -72000L,






  kCFNetServicesErrorCollision = -72001L,




  kCFNetServicesErrorNotFound = -72002L,





  kCFNetServicesErrorInProgress = -72003L,




  kCFNetServicesErrorBadArgument = -72004L,




  kCFNetServicesErrorCancel = -72005L,





  kCFNetServicesErrorInvalid = -72006L,





  kCFNetServicesErrorTimeout = -72007L
};
# 156 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef enum CFNetServiceMonitorType : int CFNetServiceMonitorType; enum CFNetServiceMonitorType : int {




  kCFNetServiceMonitorTXT = 1
};
# 171 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef enum CFNetServiceRegisterFlags : CFOptionFlags CFNetServiceRegisterFlags; enum CFNetServiceRegisterFlags : CFOptionFlags {




  kCFNetServiceFlagNoAutoRename = 1
};
# 186 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef enum CFNetServiceBrowserFlags : CFOptionFlags CFNetServiceBrowserFlags; enum CFNetServiceBrowserFlags : CFOptionFlags {




  kCFNetServiceFlagMoreComing = 1,




  kCFNetServiceFlagIsDomain = 2,




  kCFNetServiceFlagIsDefault = 4,




  kCFNetServiceFlagIsRegistrationDomain __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" ))) = 4,




  kCFNetServiceFlagRemove = 8
};
# 223 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
struct CFNetServiceClientContext {






  CFIndex version;





  void * _Nullable info;
# 246 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
  CFAllocatorRetainCallBack _Nullable retain;





  CFAllocatorReleaseCallBack _Nullable release;







  CFAllocatorCopyDescriptionCallBack _Nullable copyDescription;
};
typedef struct CFNetServiceClientContext CFNetServiceClientContext;
# 285 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef void ( * CFNetServiceClientCallBack)(CFNetServiceRef theService, CFStreamError * _Nullable error, void * _Nullable info);
# 314 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef void ( * CFNetServiceMonitorClientCallBack)(CFNetServiceMonitorRef theMonitor, CFNetServiceRef _Nullable theService, CFNetServiceMonitorType typeInfo, CFDataRef _Nullable rdata, CFStreamError * _Nullable error, void * _Nullable info);
# 344 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef void ( * CFNetServiceBrowserClientCallBack)(CFNetServiceBrowserRef browser, CFOptionFlags flags, CFTypeRef _Nullable domainOrService, CFStreamError * _Nullable error, void * _Nullable info);
# 356 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFTypeID
CFNetServiceGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
# 370 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFTypeID
CFNetServiceMonitorGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
# 384 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFTypeID
CFNetServiceBrowserGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
# 434 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFNetServiceRef
CFNetServiceCreate(CFAllocatorRef _Nullable alloc, CFStringRef domain, CFStringRef serviceType, CFStringRef name, SInt32 port) __attribute__((availability(ios,introduced=2_0)));
# 466 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFNetServiceRef
CFNetServiceCreateCopy(CFAllocatorRef _Nullable alloc, CFNetServiceRef service) __attribute__((availability(ios,introduced=2_0)));
# 493 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFStringRef
CFNetServiceGetDomain(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
# 520 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFStringRef
CFNetServiceGetType(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
# 547 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFStringRef
CFNetServiceGetName(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
# 590 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceRegisterWithOptions(CFNetServiceRef theService, CFOptionFlags options, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
# 632 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceResolveWithTimeout(CFNetServiceRef theService, CFTimeInterval timeout, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
# 652 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceCancel(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
# 681 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern _Nullable CFStringRef
CFNetServiceGetTargetHost(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
# 707 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern SInt32
CFNetServiceGetPortNumber(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
# 737 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern _Nullable CFArrayRef
CFNetServiceGetAddressing(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
# 767 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern _Nullable CFDataRef
CFNetServiceGetTXTData(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
# 794 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceSetTXTData(CFNetServiceRef theService, CFDataRef txtRecord) __attribute__((availability(ios,introduced=2_0)));
# 827 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern _Nullable CFDictionaryRef
CFNetServiceCreateDictionaryWithTXTData(CFAllocatorRef _Nullable alloc, CFDataRef txtRecord) __attribute__((availability(ios,introduced=2_0)));
# 868 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern _Nullable CFDataRef
CFNetServiceCreateTXTDataWithDictionary(CFAllocatorRef _Nullable alloc, CFDictionaryRef keyValuePairs) __attribute__((availability(ios,introduced=2_0)));
# 912 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceSetClient(CFNetServiceRef theService, CFNetServiceClientCallBack _Nullable clientCB, CFNetServiceClientContext * _Nullable clientContext) __attribute__((availability(ios,introduced=2_0)));
# 940 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceScheduleWithRunLoop(CFNetServiceRef theService, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
# 969 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceUnscheduleFromRunLoop(CFNetServiceRef theService, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
# 1007 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFNetServiceMonitorRef
CFNetServiceMonitorCreate(
  CFAllocatorRef _Nullable alloc,
  CFNetServiceRef theService,
  CFNetServiceMonitorClientCallBack clientCB,
  CFNetServiceClientContext * clientContext) __attribute__((availability(ios,introduced=2_0)));
# 1033 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceMonitorInvalidate(CFNetServiceMonitorRef monitor) __attribute__((availability(ios,introduced=2_0)));
# 1072 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceMonitorStart(CFNetServiceMonitorRef monitor, CFNetServiceMonitorType recordType, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
# 1100 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceMonitorStop(CFNetServiceMonitorRef monitor, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
# 1131 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceMonitorScheduleWithRunLoop(CFNetServiceMonitorRef monitor, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
# 1159 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceMonitorUnscheduleFromRunLoop(CFNetServiceMonitorRef monitor, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
# 1193 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFNetServiceBrowserRef
CFNetServiceBrowserCreate(CFAllocatorRef _Nullable alloc, CFNetServiceBrowserClientCallBack clientCB, CFNetServiceClientContext *clientContext) __attribute__((availability(ios,introduced=2_0)));
# 1212 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceBrowserInvalidate(CFNetServiceBrowserRef browser) __attribute__((availability(ios,introduced=2_0)));
# 1253 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceBrowserSearchForDomains(CFNetServiceBrowserRef browser, Boolean registrationDomains, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
# 1296 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceBrowserSearchForServices(CFNetServiceBrowserRef browser, CFStringRef domain, CFStringRef serviceType, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
# 1326 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceBrowserStopSearch(CFNetServiceBrowserRef browser, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
# 1357 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceBrowserScheduleWithRunLoop(CFNetServiceBrowserRef browser, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
# 1385 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceBrowserUnscheduleFromRunLoop(CFNetServiceBrowserRef browser, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
# 1429 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceRegister(CFNetServiceRef theService, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));
# 1475 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceResolve(CFNetServiceRef theService, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));
# 1512 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern _Nullable CFStringRef
CFNetServiceGetProtocolSpecificInformation(CFNetServiceRef theService) __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));
# 1541 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceSetProtocolSpecificInformation(CFNetServiceRef theService, CFStringRef _Nullable theInfo) __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));





#pragma pack(pop)
# 31 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 2 3
# 74 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySSLContext __attribute__((availability(ios,introduced=5_0)));
# 85 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySSLPeerTrust __attribute__((availability(ios,introduced=2_0)));
# 97 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLValidatesCertificateChain __attribute__((availability(ios,introduced=2_0)));
# 108 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySSLSettings __attribute__((availability(ios,introduced=2_0)));
# 119 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLLevel __attribute__((availability(ios,introduced=2_0)));
# 132 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLPeerName __attribute__((availability(ios,introduced=2_0)));
# 144 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLCertificates __attribute__((availability(ios,introduced=2_0)));
# 157 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLIsServer __attribute__((availability(ios,introduced=2_0)));
# 170 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamNetworkServiceType __attribute__((availability(ios,introduced=4_0)));


extern const CFStringRef kCFStreamNetworkServiceTypeVideo __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamNetworkServiceTypeVoice __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamNetworkServiceTypeBackground __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamNetworkServiceTypeCallSignaling __attribute__((availability(ios,introduced=10_0)));


extern const CFStringRef kCFStreamNetworkServiceTypeVoIP __attribute__((availability(ios,introduced=4_0,deprecated=9_0,message="" "use PushKit for VoIP control purposes")));
# 192 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertyNoCellular __attribute__((availability(ios,introduced=5_0)));
# 203 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertyConnectionIsCellular __attribute__((availability(ios,introduced=6_0)));
# 215 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFIndex kCFStreamErrorDomainWinSock __attribute__((availability(ios,introduced=2_0)));
# 224 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const int kCFStreamErrorDomainSOCKS __attribute__((availability(ios,introduced=2_0)));



static __inline__ __attribute__((always_inline))
SInt32 CFSocketStreamSOCKSGetErrorSubdomain(const CFStreamError* error) {
 return ((error->error >> 16) & 0x0000FFFF);
}

static __inline__ __attribute__((always_inline))
SInt32 CFSocketStreamSOCKSGetError(const CFStreamError* error) {
 return (error->error & 0x0000FFFF);
}

enum {
  kCFStreamErrorSOCKSSubDomainNone = 0,
  kCFStreamErrorSOCKSSubDomainVersionCode = 1,
  kCFStreamErrorSOCKS4SubDomainResponse = 2,
  kCFStreamErrorSOCKS5SubDomainUserPass = 3,
  kCFStreamErrorSOCKS5SubDomainMethod = 4,
  kCFStreamErrorSOCKS5SubDomainResponse = 5
};



enum {
  kCFStreamErrorSOCKS5BadResponseAddr = 1,
  kCFStreamErrorSOCKS5BadState = 2,
  kCFStreamErrorSOCKSUnknownClientVersion = 3
};


enum {
  kCFStreamErrorSOCKS4RequestFailed = 91,
  kCFStreamErrorSOCKS4IdentdFailed = 92,
  kCFStreamErrorSOCKS4IdConflict = 93
};


enum {
  kSOCKS5NoAcceptableMethod = 0xFF
};
# 283 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySOCKSProxy __attribute__((availability(ios,introduced=2_0)));
# 295 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySOCKSProxyHost __attribute__((availability(ios,introduced=2_0)));
# 308 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySOCKSProxyPort __attribute__((availability(ios,introduced=2_0)));
# 321 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySOCKSVersion __attribute__((availability(ios,introduced=2_0)));
# 331 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSOCKSVersion4 __attribute__((availability(ios,introduced=2_0)));
# 341 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSOCKSVersion5 __attribute__((availability(ios,introduced=2_0)));
# 355 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySOCKSUser __attribute__((availability(ios,introduced=2_0)));
# 369 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySOCKSPassword __attribute__((availability(ios,introduced=2_0)));
# 381 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertyProxyLocalBypass __attribute__((availability(ios,introduced=2_0)));
# 391 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const int kCFStreamErrorDomainSSL __attribute__((availability(ios,introduced=2_0)));
# 405 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySocketSecurityLevel __attribute__((availability(ios,introduced=2_0)));
# 415 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSecurityLevelNone __attribute__((availability(ios,introduced=2_0)));
# 425 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSecurityLevelSSLv2 __attribute__((availability(ios,introduced=2_0)));
# 435 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSecurityLevelSSLv3 __attribute__((availability(ios,introduced=2_0)));
# 445 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSecurityLevelTLSv1 __attribute__((availability(ios,introduced=2_0)));
# 456 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSecurityLevelNegotiatedSSL __attribute__((availability(ios,introduced=2_0)));
# 474 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertyShouldCloseNativeSocket __attribute__((availability(ios,introduced=2_0)));
# 485 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySocketRemoteHost __attribute__((availability(ios,introduced=2_0)));
# 496 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySocketRemoteNetService __attribute__((availability(ios,introduced=2_0)));
# 509 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySocketExtendedBackgroundIdleMode __attribute__((availability(ios,introduced=9_0)));
# 545 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern void
CFStreamCreatePairWithSocketToCFHost(
  CFAllocatorRef _Nullable alloc,
  CFHostRef host,
  SInt32 port,
  CFReadStreamRef _Nullable * _Nullable readStream,
  CFWriteStreamRef _Nullable * _Nullable writeStream) __attribute__((availability(ios,introduced=2_0)));
# 586 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern void
CFStreamCreatePairWithSocketToNetService(
  CFAllocatorRef _Nullable alloc,
  CFNetServiceRef service,
  CFReadStreamRef _Nullable * _Nullable readStream,
  CFWriteStreamRef _Nullable * _Nullable writeStream) __attribute__((availability(ios,introduced=2_0)));
# 609 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySSLPeerCertificates __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
extern const CFStringRef kCFStreamSSLAllowsExpiredCertificates __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
extern const CFStringRef kCFStreamSSLAllowsExpiredRoots __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
extern const CFStringRef kCFStreamSSLAllowsAnyRoot __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
# 32 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 1 3
# 40 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const SInt32 kCFStreamErrorDomainFTP __attribute__((availability(ios,introduced=2_0)));
# 62 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPUserName __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 74 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPPassword __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 86 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPUsePassiveMode __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 97 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPResourceSize __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 111 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPFetchResourceInfo __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 122 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPFileTransferOffset __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 134 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPAttemptPersistentConnection __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 147 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPProxy __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 161 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPProxyHost __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 175 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPProxyPort __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));





extern const CFStringRef kCFStreamPropertyFTPProxyUser __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));





extern const CFStringRef kCFStreamPropertyFTPProxyPassword __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 205 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceMode __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 216 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceName __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 227 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceOwner __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 238 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceGroup __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 250 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceLink __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 261 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceSize __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 272 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceType __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 283 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceModDate __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 320 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern CFReadStreamRef
CFReadStreamCreateWithFTPURL(CFAllocatorRef _Nullable alloc, CFURLRef ftpURL) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 364 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern CFIndex
CFFTPCreateParsedResourceListing(CFAllocatorRef _Nullable alloc, const UInt8 *buffer, CFIndex bufferLength, CFDictionaryRef _Nullable * _Nullable parsed) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 402 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern CFWriteStreamRef
CFWriteStreamCreateWithFTPURL(CFAllocatorRef _Nullable alloc, CFURLRef ftpURL) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
# 36 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 1 3
# 45 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPVersion1_0 __attribute__((availability(ios,introduced=2_0)));
# 54 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPVersion1_1 __attribute__((availability(ios,introduced=2_0)));
# 63 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPVersion2_0 __attribute__((availability(ios,introduced=8_0)));
# 72 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeBasic __attribute__((availability(ios,introduced=2_0)));
# 81 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeDigest __attribute__((availability(ios,introduced=2_0)));
# 90 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeNTLM __attribute__((availability(ios,introduced=2_0)));
# 99 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeKerberos __attribute__((availability(ios,introduced=2_0)));
# 108 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeNegotiate __attribute__((availability(ios,introduced=2_0)));
# 117 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeNegotiate2 __attribute__((availability(ios,introduced=3_0)));
# 126 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeXMobileMeAuthToken __attribute__((availability(ios,introduced=4_3)));
# 135 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeOAuth1 __attribute__((availability(ios,introduced=7_0)));
# 145 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
typedef struct __CFHTTPMessage* CFHTTPMessageRef;
# 160 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFTypeID
CFHTTPMessageGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
# 199 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFHTTPMessageRef
CFHTTPMessageCreateRequest(CFAllocatorRef _Nullable alloc, CFStringRef requestMethod, CFURLRef url, CFStringRef httpVersion) __attribute__((availability(ios,introduced=2_0)));
# 238 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFHTTPMessageRef
CFHTTPMessageCreateResponse(
  CFAllocatorRef _Nullable alloc,
  CFIndex statusCode,
  CFStringRef _Nullable statusDescription,
  CFStringRef httpVersion) __attribute__((availability(ios,introduced=2_0)));
# 274 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFHTTPMessageRef
CFHTTPMessageCreateEmpty(CFAllocatorRef _Nullable alloc, Boolean isRequest) __attribute__((availability(ios,introduced=2_0)));
# 305 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFHTTPMessageRef
CFHTTPMessageCreateCopy(CFAllocatorRef _Nullable alloc, CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
# 330 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern Boolean
CFHTTPMessageIsRequest(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
# 354 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFStringRef
CFHTTPMessageCopyVersion(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
# 378 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern _Nullable CFDataRef
CFHTTPMessageCopyBody(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
# 402 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern void
CFHTTPMessageSetBody(CFHTTPMessageRef message, CFDataRef bodyData) __attribute__((availability(ios,introduced=2_0)));
# 430 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern _Nullable CFStringRef
CFHTTPMessageCopyHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField) __attribute__((availability(ios,introduced=2_0)));
# 454 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern _Nullable CFDictionaryRef
CFHTTPMessageCopyAllHeaderFields(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
# 482 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern void
CFHTTPMessageSetHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField, CFStringRef _Nullable value) __attribute__((availability(ios,introduced=2_0)));
# 514 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern Boolean
CFHTTPMessageAppendBytes(CFHTTPMessageRef message, const UInt8 *newBytes, CFIndex numBytes) __attribute__((availability(ios,introduced=2_0)));
# 538 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern Boolean
CFHTTPMessageIsHeaderComplete(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
# 563 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern _Nullable CFDataRef
CFHTTPMessageCopySerializedMessage(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
# 590 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern _Nullable CFURLRef
CFHTTPMessageCopyRequestURL(CFHTTPMessageRef request) __attribute__((availability(ios,introduced=2_0)));
# 613 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern _Nullable CFStringRef
CFHTTPMessageCopyRequestMethod(CFHTTPMessageRef request) __attribute__((availability(ios,introduced=2_0)));
# 658 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern Boolean
CFHTTPMessageAddAuthentication(
  CFHTTPMessageRef request,
  CFHTTPMessageRef _Nullable authenticationFailureResponse,
  CFStringRef username,
  CFStringRef password,
  CFStringRef _Nullable authenticationScheme,
  Boolean forProxy) __attribute__((availability(ios,introduced=2_0)));
# 691 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFIndex
CFHTTPMessageGetResponseStatusCode(CFHTTPMessageRef response) __attribute__((availability(ios,introduced=2_0)));
# 716 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern _Nullable CFStringRef
CFHTTPMessageCopyResponseStatusLine(CFHTTPMessageRef response) __attribute__((availability(ios,introduced=2_0)));
# 44 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 1 3
# 49 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const SInt32 kCFStreamErrorDomainHTTP __attribute__((availability(ios,introduced=2_0)));







typedef enum CFStreamErrorHTTP : int CFStreamErrorHTTP; enum CFStreamErrorHTTP : int {




  kCFStreamErrorHTTPParseFailure = -1,




  kCFStreamErrorHTTPRedirectionLoop = -2,




  kCFStreamErrorHTTPBadURL = -3
};
# 83 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPResponseHeader __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 96 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPFinalURL __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 108 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPFinalRequest __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 124 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPProxy __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 135 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPProxyHost __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 145 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPProxyPort __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 156 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPSProxyHost __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 167 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPSProxyPort __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 179 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPShouldAutoredirect __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 193 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPAttemptPersistentConnection __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 206 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPRequestBytesWrittenCount __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 246 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern CFReadStreamRef
CFReadStreamCreateForHTTPRequest(CFAllocatorRef _Nullable alloc, CFHTTPMessageRef request) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 292 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern CFReadStreamRef
CFReadStreamCreateForStreamedHTTPRequest(CFAllocatorRef _Nullable alloc, CFHTTPMessageRef requestHeaders, CFReadStreamRef requestBody) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
# 315 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern void
CFHTTPReadStreamSetRedirectsAutomatically(CFReadStreamRef httpStream, Boolean shouldAutoRedirect) __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));
# 48 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 1 3
# 45 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
typedef struct _CFHTTPAuthentication* CFHTTPAuthenticationRef;
# 55 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
typedef enum CFStreamErrorHTTPAuthentication : int CFStreamErrorHTTPAuthentication; enum CFStreamErrorHTTPAuthentication : int {





  kCFStreamErrorHTTPAuthenticationTypeUnsupported = -1000,





  kCFStreamErrorHTTPAuthenticationBadUserName = -1001,





  kCFStreamErrorHTTPAuthenticationBadPassword = -1002
};
# 86 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern const CFStringRef kCFHTTPAuthenticationUsername __attribute__((availability(ios,introduced=2_0)));
# 97 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern const CFStringRef kCFHTTPAuthenticationPassword __attribute__((availability(ios,introduced=2_0)));
# 108 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern const CFStringRef kCFHTTPAuthenticationAccountDomain __attribute__((availability(ios,introduced=2_0)));
# 120 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern CFTypeID
CFHTTPAuthenticationGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
# 152 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern CFHTTPAuthenticationRef
CFHTTPAuthenticationCreateFromResponse(CFAllocatorRef _Nullable alloc, CFHTTPMessageRef response) __attribute__((availability(ios,introduced=2_0)));
# 192 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPAuthenticationIsValid(CFHTTPAuthenticationRef auth, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
# 223 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPAuthenticationAppliesToRequest(CFHTTPAuthenticationRef auth, CFHTTPMessageRef request) __attribute__((availability(ios,introduced=2_0)));
# 252 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPAuthenticationRequiresOrderedRequests(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
# 297 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPMessageApplyCredentials(
  CFHTTPMessageRef request,
  CFHTTPAuthenticationRef auth,
  CFStringRef _Nullable username,
  CFStringRef _Nullable password,
  CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
# 345 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPMessageApplyCredentialDictionary(
  CFHTTPMessageRef request,
  CFHTTPAuthenticationRef auth,
  CFDictionaryRef dict,
  CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
# 380 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern CFStringRef
CFHTTPAuthenticationCopyRealm(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
# 411 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern CFArrayRef
CFHTTPAuthenticationCopyDomains(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
# 440 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern CFStringRef
CFHTTPAuthenticationCopyMethod(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
# 468 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPAuthenticationRequiresUserNameAndPassword(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
# 497 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPAuthenticationRequiresAccountDomain(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
# 52 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 1 3
# 42 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
typedef struct __CFNetDiagnostic* CFNetDiagnosticRef;







typedef enum CFNetDiagnosticStatusValues : int CFNetDiagnosticStatusValues; enum CFNetDiagnosticStatusValues : int {




  kCFNetDiagnosticNoErr = 0,




  kCFNetDiagnosticErr = -66560L,




  kCFNetDiagnosticConnectionUp = -66559L,
  kCFNetDiagnosticConnectionIndeterminate = -66558L,




  kCFNetDiagnosticConnectionDown = -66557L
};
# 81 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
typedef CFIndex CFNetDiagnosticStatus;
# 107 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
extern CFNetDiagnosticRef
CFNetDiagnosticCreateWithStreams(CFAllocatorRef _Nullable alloc, CFReadStreamRef _Nullable readStream, CFWriteStreamRef _Nullable writeStream) __attribute__((availability(ios,introduced=2_0)));
# 130 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
extern CFNetDiagnosticRef
CFNetDiagnosticCreateWithURL(CFAllocatorRef alloc, CFURLRef url) __attribute__((availability(ios,introduced=2_0)));
# 155 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
extern void
CFNetDiagnosticSetName(CFNetDiagnosticRef details, CFStringRef name) __attribute__((availability(ios,introduced=2_0)));
# 179 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
extern CFNetDiagnosticStatus
CFNetDiagnosticDiagnoseProblemInteractively(CFNetDiagnosticRef details) __attribute__((availability(ios,introduced=2_0)));
# 209 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
extern CFNetDiagnosticStatus
CFNetDiagnosticCopyNetworkStatusPassively(CFNetDiagnosticRef details, CFStringRef _Nullable * _Nullable description) __attribute__((availability(ios,introduced=2_0)));
# 56 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 1 3
# 81 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern _Nullable CFDictionaryRef
CFNetworkCopySystemProxySettings(void) __attribute__((availability(ios,introduced=2_0)));
# 108 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern CFArrayRef
CFNetworkCopyProxiesForURL(CFURLRef url, CFDictionaryRef proxySettings) __attribute__((availability(ios,introduced=2_0)));
# 140 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
typedef void ( * CFProxyAutoConfigurationResultCallback)(void *client, CFArrayRef proxyList, CFErrorRef _Nullable error);
# 167 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern _Nullable CFArrayRef
CFNetworkCopyProxiesForAutoConfigurationScript(CFStringRef proxyAutoConfigurationScript, CFURLRef targetURL, CFErrorRef * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
# 206 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern CFRunLoopSourceRef
CFNetworkExecuteProxyAutoConfigurationScript(
  CFStringRef proxyAutoConfigurationScript,
  CFURLRef targetURL,
  CFProxyAutoConfigurationResultCallback cb,
  CFStreamClientContext * clientContext) __attribute__((availability(ios,introduced=2_0)));
# 227 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern CFRunLoopSourceRef
CFNetworkExecuteProxyAutoConfigurationURL(
  CFURLRef proxyAutoConfigURL,
  CFURLRef targetURL,
  CFProxyAutoConfigurationResultCallback cb,
  CFStreamClientContext * clientContext) __attribute__((availability(ios,introduced=2_0)));
# 243 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyTypeKey __attribute__((availability(ios,introduced=2_0)));
# 253 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyHostNameKey __attribute__((availability(ios,introduced=2_0)));
# 263 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyPortNumberKey __attribute__((availability(ios,introduced=2_0)));
# 275 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyAutoConfigurationURLKey __attribute__((availability(ios,introduced=2_0)));
# 285 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyAutoConfigurationJavaScriptKey __attribute__((availability(ios,introduced=3_0)));
# 298 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyUsernameKey __attribute__((availability(ios,introduced=2_0)));
# 310 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyPasswordKey __attribute__((availability(ios,introduced=2_0)));
# 326 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyTypeNone __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeHTTP __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeHTTPS __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeSOCKS __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeFTP __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeAutoConfigurationURL __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeAutoConfigurationJavaScript __attribute__((availability(ios,introduced=3_0)));





extern const CFStringRef kCFProxyAutoConfigurationHTTPResponseKey __attribute__((availability(ios,introduced=2_0)));
# 379 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesExceptionsList __attribute__((availability(ios,introduced=NA)));
# 389 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesExcludeSimpleHostnames __attribute__((availability(ios,introduced=NA)));
# 398 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesFTPEnable __attribute__((availability(ios,introduced=NA)));
# 408 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesFTPPassive __attribute__((availability(ios,introduced=NA)));
# 417 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesFTPPort __attribute__((availability(ios,introduced=NA)));
# 426 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesFTPProxy __attribute__((availability(ios,introduced=NA)));
# 435 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesGopherEnable __attribute__((availability(ios,introduced=NA)));
# 444 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesGopherPort __attribute__((availability(ios,introduced=NA)));
# 453 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesGopherProxy __attribute__((availability(ios,introduced=NA)));
# 462 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesHTTPEnable __attribute__((availability(ios,introduced=2_0)));
# 471 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesHTTPPort __attribute__((availability(ios,introduced=2_0)));
# 480 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesHTTPProxy __attribute__((availability(ios,introduced=2_0)));
# 489 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesHTTPSEnable __attribute__((availability(ios,introduced=NA)));
# 498 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesHTTPSPort __attribute__((availability(ios,introduced=NA)));
# 507 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesHTTPSProxy __attribute__((availability(ios,introduced=NA)));
# 516 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesRTSPEnable __attribute__((availability(ios,introduced=NA)));
# 525 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesRTSPPort __attribute__((availability(ios,introduced=NA)));
# 534 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesRTSPProxy __attribute__((availability(ios,introduced=NA)));
# 543 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesSOCKSEnable __attribute__((availability(ios,introduced=NA)));
# 552 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesSOCKSPort __attribute__((availability(ios,introduced=NA)));
# 561 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesSOCKSProxy __attribute__((availability(ios,introduced=NA)));
# 570 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesProxyAutoConfigEnable __attribute__((availability(ios,introduced=2_0)));
# 579 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesProxyAutoConfigURLString __attribute__((availability(ios,introduced=2_0)));
# 588 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesProxyAutoConfigJavaScript __attribute__((availability(ios,introduced=3_0)));
# 597 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesProxyAutoDiscoveryEnable __attribute__((availability(ios,introduced=NA)));
# 64 "APPLE_SDKROOT/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLError.h" 2 3
# 20 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLError.h" 3
@class NSString;







extern NSErrorDomain const NSURLErrorDomain;





extern NSString * const NSURLErrorFailingURLErrorKey __attribute__((availability(ios,introduced=4_0)));






extern NSString * const NSURLErrorFailingURLStringErrorKey __attribute__((availability(ios,introduced=4_0)));






extern NSString * const NSErrorFailingURLStringKey __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));





extern NSString * const NSURLErrorFailingURLPeerTrustErrorKey __attribute__((availability(ios,introduced=4_0)));






extern NSString * const NSURLErrorBackgroundTaskCancelledReasonKey __attribute__((availability(ios,introduced=8_0)));






enum : NSInteger
{
    NSURLErrorCancelledReasonUserForceQuitApplication = 0,
    NSURLErrorCancelledReasonBackgroundUpdatesDisabled = 1,
    NSURLErrorCancelledReasonInsufficientSystemResources __attribute__((availability(ios,introduced=8_0))) = 2,

} __attribute__((availability(ios,introduced=7_0)));





enum : NSInteger
{
    NSURLErrorUnknown = -1,
    NSURLErrorCancelled = -999,
    NSURLErrorBadURL = -1000,
    NSURLErrorTimedOut = -1001,
    NSURLErrorUnsupportedURL = -1002,
    NSURLErrorCannotFindHost = -1003,
    NSURLErrorCannotConnectToHost = -1004,
    NSURLErrorNetworkConnectionLost = -1005,
    NSURLErrorDNSLookupFailed = -1006,
    NSURLErrorHTTPTooManyRedirects = -1007,
    NSURLErrorResourceUnavailable = -1008,
    NSURLErrorNotConnectedToInternet = -1009,
    NSURLErrorRedirectToNonExistentLocation = -1010,
    NSURLErrorBadServerResponse = -1011,
    NSURLErrorUserCancelledAuthentication = -1012,
    NSURLErrorUserAuthenticationRequired = -1013,
    NSURLErrorZeroByteResource = -1014,
    NSURLErrorCannotDecodeRawData = -1015,
    NSURLErrorCannotDecodeContentData = -1016,
    NSURLErrorCannotParseResponse = -1017,
    NSURLErrorAppTransportSecurityRequiresSecureConnection __attribute__((availability(ios,introduced=9_0))) = -1022,
    NSURLErrorFileDoesNotExist = -1100,
    NSURLErrorFileIsDirectory = -1101,
    NSURLErrorNoPermissionsToReadFile = -1102,
    NSURLErrorDataLengthExceedsMaximum __attribute__((availability(ios,introduced=2_0))) = -1103,


    NSURLErrorSecureConnectionFailed = -1200,
    NSURLErrorServerCertificateHasBadDate = -1201,
    NSURLErrorServerCertificateUntrusted = -1202,
    NSURLErrorServerCertificateHasUnknownRoot = -1203,
    NSURLErrorServerCertificateNotYetValid = -1204,
    NSURLErrorClientCertificateRejected = -1205,
    NSURLErrorClientCertificateRequired = -1206,
    NSURLErrorCannotLoadFromNetwork = -2000,


    NSURLErrorCannotCreateFile = -3000,
    NSURLErrorCannotOpenFile = -3001,
    NSURLErrorCannotCloseFile = -3002,
    NSURLErrorCannotWriteToFile = -3003,
    NSURLErrorCannotRemoveFile = -3004,
    NSURLErrorCannotMoveFile = -3005,
    NSURLErrorDownloadDecodingFailedMidStream = -3006,
    NSURLErrorDownloadDecodingFailedToComplete =-3007,

    NSURLErrorInternationalRoamingOff __attribute__((availability(ios,introduced=3_0))) = -1018,
    NSURLErrorCallIsActive __attribute__((availability(ios,introduced=3_0))) = -1019,
    NSURLErrorDataNotAllowed __attribute__((availability(ios,introduced=3_0))) = -1020,
    NSURLErrorRequestBodyStreamExhausted __attribute__((availability(ios,introduced=3_0))) = -1021,

    NSURLErrorBackgroundSessionRequiresSharedContainer __attribute__((availability(ios,introduced=8_0))) = -995,
    NSURLErrorBackgroundSessionInUseByAnotherProcess __attribute__((availability(ios,introduced=8_0))) = -996,
    NSURLErrorBackgroundSessionWasDisconnected __attribute__((availability(ios,introduced=8_0)))= -997,
};
# 88 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
@class NSCachedURLResponse;
@class NSError;
@class NSMutableURLRequest;
@class NSURLAuthenticationChallenge;
@class NSURLConnection;
@class NSURLProtocol;
@class NSURLProtocolInternal;
@class NSURLRequest;
@class NSURLResponse;
@class NSURLSessionTask;
# 65 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
@protocol NSURLProtocolClient <NSObject>
# 75 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
- (void)URLProtocol:(NSURLProtocol *)protocol wasRedirectedToRequest:(NSURLRequest *)request redirectResponse:(NSURLResponse *)redirectResponse;
# 86 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
- (void)URLProtocol:(NSURLProtocol *)protocol cachedResponseIsValid:(NSCachedURLResponse *)cachedResponse;
# 99 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
- (void)URLProtocol:(NSURLProtocol *)protocol didReceiveResponse:(NSURLResponse *)response cacheStoragePolicy:(NSURLCacheStoragePolicy)policy;
# 111 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
- (void)URLProtocol:(NSURLProtocol *)protocol didLoadData:(NSData *)data;







- (void)URLProtocolDidFinishLoading:(NSURLProtocol *)protocol;
# 128 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
- (void)URLProtocol:(NSURLProtocol *)protocol didFailWithError:(NSError *)error;
# 140 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
- (void)URLProtocol:(NSURLProtocol *)protocol didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;







- (void)URLProtocol:(NSURLProtocol *)protocol didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;

@end
# 161 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
@interface NSURLProtocol : NSObject
{
    @private
    NSURLProtocolInternal *_internal;
}
# 180 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
- (instancetype)initWithRequest:(NSURLRequest *)request cachedResponse:(nullable NSCachedURLResponse *)cachedResponse client:(nullable id <NSURLProtocolClient>)client __attribute__((objc_designated_initializer));






@property (nullable, readonly, retain) id <NSURLProtocolClient> client;






@property (readonly, copy) NSURLRequest *request;






@property (nullable, readonly, copy) NSCachedURLResponse *cachedResponse;
# 221 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
+ (BOOL)canInitWithRequest:(NSURLRequest *)request;
# 240 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
+ (NSURLRequest *)canonicalRequestForRequest:(NSURLRequest *)request;
# 251 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
+ (BOOL)requestIsCacheEquivalent:(NSURLRequest *)a toRequest:(NSURLRequest *)b;







- (void)startLoading;
# 269 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
- (void)stopLoading;
# 287 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
+ (nullable id)propertyForKey:(NSString *)key inRequest:(NSURLRequest *)request;
# 300 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
+ (void)setProperty:(id)value forKey:(NSString *)key inRequest:(NSMutableURLRequest *)request;
# 311 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
+ (void)removePropertyForKey:(NSString *)key inRequest:(NSMutableURLRequest *)request;
# 337 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
+ (BOOL)registerClass:(Class)protocolClass;
# 346 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLProtocol.h" 3
+ (void)unregisterClass:(Class)protocolClass;

@end


@interface NSURLProtocol (NSURLSessionTaskAdditions)
+ (BOOL)canInitWithTask:(NSURLSessionTask *)task __attribute__((availability(ios,introduced=8_0)));
- (instancetype)initWithTask:(NSURLSessionTask *)task cachedResponse:(nullable NSCachedURLResponse *)cachedResponse client:(nullable id <NSURLProtocolClient>)client __attribute__((availability(ios,introduced=8_0)));
@property (nullable, readonly, copy) NSURLSessionTask *task __attribute__((availability(ios,introduced=8_0)));
@end
# 90 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@class NSData;
@class NSDictionary<KeyType, ObjectType>;
@class NSInputStream;
@class NSString;
@class NSURL;
@class NSURLRequestInternal;
# 97 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
typedef enum NSURLRequestCachePolicy : NSUInteger NSURLRequestCachePolicy; enum NSURLRequestCachePolicy : NSUInteger
{
    NSURLRequestUseProtocolCachePolicy = 0,

    NSURLRequestReloadIgnoringLocalCacheData = 1,
    NSURLRequestReloadIgnoringLocalAndRemoteCacheData = 4,
    NSURLRequestReloadIgnoringCacheData = NSURLRequestReloadIgnoringLocalCacheData,

    NSURLRequestReturnCacheDataElseLoad = 2,
    NSURLRequestReturnCacheDataDontLoad = 3,

    NSURLRequestReloadRevalidatingCacheData = 5,
};
# 135 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
typedef enum NSURLRequestNetworkServiceType : NSUInteger NSURLRequestNetworkServiceType; enum NSURLRequestNetworkServiceType : NSUInteger
{
    NSURLNetworkServiceTypeDefault = 0,
    NSURLNetworkServiceTypeVoIP = 1,
    NSURLNetworkServiceTypeVideo = 2,
    NSURLNetworkServiceTypeBackground = 3,
    NSURLNetworkServiceTypeVoice = 4,
    NSURLNetworkServiceTypeCallSignaling __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = 11,
};
# 177 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@interface NSURLRequest : NSObject <NSSecureCoding, NSCopying, NSMutableCopying>
{
    @private
    NSURLRequestInternal *_internal;
}
# 193 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
+ (instancetype)requestWithURL:(NSURL *)URL;







@property (class, readonly) BOOL supportsSecureCoding;
# 214 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
+ (instancetype)requestWithURL:(NSURL *)URL cachePolicy:(NSURLRequestCachePolicy)cachePolicy timeoutInterval:(NSTimeInterval)timeoutInterval;
# 225 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
- (instancetype)initWithURL:(NSURL *)URL;
# 240 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
- (instancetype)initWithURL:(NSURL *)URL cachePolicy:(NSURLRequestCachePolicy)cachePolicy timeoutInterval:(NSTimeInterval)timeoutInterval __attribute__((objc_designated_initializer));






@property (nullable, readonly, copy) NSURL *URL;






@property (readonly) NSURLRequestCachePolicy cachePolicy;
# 271 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (readonly) NSTimeInterval timeoutInterval;
# 284 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (nullable, readonly, copy) NSURL *mainDocumentURL;
# 293 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (readonly) NSURLRequestNetworkServiceType networkServiceType __attribute__((availability(ios,introduced=4_0)));
# 302 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (readonly) BOOL allowsCellularAccess __attribute__((availability(ios,introduced=6_0)));

@end
# 337 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@interface NSMutableURLRequest : NSURLRequest






@property (nullable, copy) NSURL *URL;






@property NSURLRequestCachePolicy cachePolicy;
# 368 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property NSTimeInterval timeoutInterval;
# 384 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (nullable, copy) NSURL *mainDocumentURL;
# 393 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property NSURLRequestNetworkServiceType networkServiceType __attribute__((availability(ios,introduced=4_0)));
# 402 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property BOOL allowsCellularAccess __attribute__((availability(ios,introduced=6_0)));

@end
# 413 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@interface NSURLRequest (NSHTTPURLRequest)






@property (nullable, readonly, copy) NSString *HTTPMethod;
# 429 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (nullable, readonly, copy) NSDictionary<NSString *, NSString *> *allHTTPHeaderFields;
# 441 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
- (nullable NSString *)valueForHTTPHeaderField:(NSString *)field;
# 450 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (nullable, readonly, copy) NSData *HTTPBody;
# 464 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (nullable, readonly, retain) NSInputStream *HTTPBodyStream;
# 474 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (readonly) BOOL HTTPShouldHandleCookies;
# 484 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (readonly) BOOL HTTPShouldUsePipelining __attribute__((availability(ios,introduced=4_0)));

@end
# 495 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@interface NSMutableURLRequest (NSMutableHTTPURLRequest)






@property (copy) NSString *HTTPMethod;
# 517 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (nullable, copy) NSDictionary<NSString *, NSString *> *allHTTPHeaderFields;
# 529 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
- (void)setValue:(nullable NSString *)value forHTTPHeaderField:(NSString *)field;
# 545 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
- (void)addValue:(NSString *)value forHTTPHeaderField:(NSString *)field;
# 554 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (nullable, copy) NSData *HTTPBody;
# 566 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property (nullable, retain) NSInputStream *HTTPBodyStream;
# 578 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property BOOL HTTPShouldHandleCookies;
# 598 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLRequest.h" 3
@property BOOL HTTPShouldUsePipelining __attribute__((availability(ios,introduced=4_0)));

@end
# 91 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLResponse.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLResponse.h" 3
@class NSDictionary<KeyType, ObjectType>;
@class NSString;
@class NSURL;
@class NSURLRequest;
@class NSURLResponseInternal;
# 33 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLResponse.h" 3
@interface NSURLResponse : NSObject <NSSecureCoding, NSCopying>
{
    @package
    NSURLResponseInternal *_internal;
}
# 49 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLResponse.h" 3
- (instancetype)initWithURL:(NSURL *)URL MIMEType:(nullable NSString *)MIMEType expectedContentLength:(NSInteger)length textEncodingName:(nullable NSString *)name __attribute__((objc_designated_initializer));






@property (nullable, readonly, copy) NSURL *URL;
# 69 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLResponse.h" 3
@property (nullable, readonly, copy) NSString *MIMEType;
# 84 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLResponse.h" 3
@property (readonly) long long expectedContentLength;
# 97 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLResponse.h" 3
@property (nullable, readonly, copy) NSString *textEncodingName;
# 111 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLResponse.h" 3
@property (nullable, readonly, copy) NSString *suggestedFilename;

@end



@class NSHTTPURLResponseInternal;
# 127 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLResponse.h" 3
@interface NSHTTPURLResponse : NSURLResponse
{
    @package
    NSHTTPURLResponseInternal *_httpInternal;
}
# 143 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLResponse.h" 3
- (nullable instancetype)initWithURL:(NSURL *)url statusCode:(NSInteger)statusCode HTTPVersion:(nullable NSString *)HTTPVersion headerFields:(nullable NSDictionary<NSString *, NSString *> *)headerFields __attribute__((availability(ios,introduced=5_0)));






@property (readonly) NSInteger statusCode;
# 163 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLResponse.h" 3
@property (readonly, copy) NSDictionary *allHeaderFields;
# 172 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLResponse.h" 3
+ (NSString *)localizedStringForStatusCode:(NSInteger)statusCode;

@end
# 92 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUserDefaults.h" 1 3







@class NSArray<ObjectType>, NSData, NSDictionary<KeyValue, ObjectValue>, NSMutableDictionary, NSString, NSURL;




extern NSString * const NSGlobalDomain;

extern NSString * const NSArgumentDomain;

extern NSString * const NSRegistrationDomain;
# 49 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUserDefaults.h" 3
@interface NSUserDefaults : NSObject {
@private
    id _kvo_;
    CFStringRef _identifier_;
    CFStringRef _container_;
    void *_reserved[2];
}





@property (class, readonly, strong) NSUserDefaults *standardUserDefaults;



+ (void)resetStandardUserDefaults;


- (instancetype)init;


- (nullable instancetype)initWithSuiteName:(nullable NSString *)suitename __attribute__((availability(ios,introduced=7_0))) __attribute__((objc_designated_initializer));


- (nullable id)initWithUser:(NSString *)username __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" )));




- (nullable id)objectForKey:(NSString *)defaultName;




- (void)setObject:(nullable id)value forKey:(NSString *)defaultName;


- (void)removeObjectForKey:(NSString *)defaultName;


- (nullable NSString *)stringForKey:(NSString *)defaultName;


- (nullable NSArray *)arrayForKey:(NSString *)defaultName;

- (nullable NSDictionary<NSString *, id> *)dictionaryForKey:(NSString *)defaultName;

- (nullable NSData *)dataForKey:(NSString *)defaultName;

- (nullable NSArray<NSString *> *)stringArrayForKey:(NSString *)defaultName;



- (NSInteger)integerForKey:(NSString *)defaultName;

- (float)floatForKey:(NSString *)defaultName;

- (double)doubleForKey:(NSString *)defaultName;




- (BOOL)boolForKey:(NSString *)defaultName;



- (nullable NSURL *)URLForKey:(NSString *)defaultName __attribute__((availability(ios,introduced=4_0)));


- (void)setInteger:(NSInteger)value forKey:(NSString *)defaultName;

- (void)setFloat:(float)value forKey:(NSString *)defaultName;

- (void)setDouble:(double)value forKey:(NSString *)defaultName;

- (void)setBool:(BOOL)value forKey:(NSString *)defaultName;

- (void)setURL:(nullable NSURL *)url forKey:(NSString *)defaultName __attribute__((availability(ios,introduced=4_0)));






- (void)registerDefaults:(NSDictionary<NSString *, id> *)registrationDictionary;




- (void)addSuiteNamed:(NSString *)suiteName;



- (void)removeSuiteNamed:(NSString *)suiteName;




- (NSDictionary<NSString *, id> *)dictionaryRepresentation;




@property (readonly, copy) NSArray<NSString *> *volatileDomainNames;
- (NSDictionary<NSString *, id> *)volatileDomainForName:(NSString *)domainName;
- (void)setVolatileDomain:(NSDictionary<NSString *, id> *)domain forName:(NSString *)domainName;
- (void)removeVolatileDomainForName:(NSString *)domainName;


- (NSArray *)persistentDomainNames __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" )));


- (nullable NSDictionary<NSString *, id> *)persistentDomainForName:(NSString *)domainName;

- (void)setPersistentDomain:(NSDictionary<NSString *, id> *)domain forName:(NSString *)domainName;

- (void)removePersistentDomainForName:(NSString *)domainName;
# 177 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUserDefaults.h" 3
- (BOOL)synchronize;


- (BOOL)objectIsForcedForKey:(NSString *)key;


- (BOOL)objectIsForcedForKey:(NSString *)key inDomain:(NSString *)domain;

@end




extern NSNotificationName const NSUserDefaultsSizeLimitExceededNotification __attribute__((availability(ios,introduced=9_3)));






extern NSNotificationName const NSUbiquitousUserDefaultsNoCloudAccountNotification __attribute__((availability(ios,introduced=9_3)));




extern NSNotificationName const NSUbiquitousUserDefaultsDidChangeAccountsNotification __attribute__((availability(ios,introduced=9_3)));




extern NSNotificationName const NSUbiquitousUserDefaultsCompletedInitialSyncNotification __attribute__((availability(ios,introduced=9_3)));




extern NSNotificationName const NSUserDefaultsDidChangeNotification;
# 93 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSValueTransformer.h" 1 3






@class NSArray<ObjectType>, NSString;



typedef NSString *NSValueTransformerName __attribute__((swift_wrapper(struct)));

extern NSValueTransformerName const NSNegateBooleanTransformerName __attribute__((availability(ios,introduced=3_0)));
extern NSValueTransformerName const NSIsNilTransformerName __attribute__((availability(ios,introduced=3_0)));
extern NSValueTransformerName const NSIsNotNilTransformerName __attribute__((availability(ios,introduced=3_0)));
extern NSValueTransformerName const NSUnarchiveFromDataTransformerName __attribute__((availability(ios,introduced=3_0)));
extern NSValueTransformerName const NSKeyedUnarchiveFromDataTransformerName __attribute__((availability(ios,introduced=3_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))
@interface NSValueTransformer : NSObject {
}



+ (void)setValueTransformer:(nullable NSValueTransformer *)transformer forName:(NSValueTransformerName)name;
+ (nullable NSValueTransformer *)valueTransformerForName:(NSValueTransformerName)name;
+ (NSArray<NSValueTransformerName> *)valueTransformerNames;


+ (Class)transformedValueClass;
+ (BOOL)allowsReverseTransformation;

- (nullable id)transformedValue:(nullable id)value;
- (nullable id)reverseTransformedValue:(nullable id)value;

@end
# 95 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSXMLParser.h" 1 3







@class NSData, NSDictionary<KeyType, ObjectType>, NSError, NSString, NSURL, NSInputStream, NSSet<ObjectType>;
@protocol NSXMLParserDelegate;



__attribute__((availability(ios,introduced=8_0)))
typedef enum NSXMLParserExternalEntityResolvingPolicy : NSUInteger NSXMLParserExternalEntityResolvingPolicy; enum NSXMLParserExternalEntityResolvingPolicy : NSUInteger {
    NSXMLParserResolveExternalEntitiesNever = 0,
    NSXMLParserResolveExternalEntitiesNoNetwork,
    NSXMLParserResolveExternalEntitiesSameOriginOnly,
    NSXMLParserResolveExternalEntitiesAlways
};

@interface NSXMLParser : NSObject {
@private
    id _reserved0;
    id _delegate;
    id _reserved1;
    id _reserved2;
    id _reserved3;
}
- (nullable instancetype)initWithContentsOfURL:(NSURL *)url;
- (instancetype)initWithData:(NSData *)data __attribute__((objc_designated_initializer));
- (instancetype)initWithStream:(NSInputStream *)stream __attribute__((availability(ios,introduced=5_0)));


@property (nullable, assign) id <NSXMLParserDelegate> delegate;

@property BOOL shouldProcessNamespaces;
@property BOOL shouldReportNamespacePrefixes;


@property NSXMLParserExternalEntityResolvingPolicy externalEntityResolvingPolicy __attribute__((availability(ios,introduced=8_0)));

@property (nullable, copy) NSSet<NSURL *> *allowedExternalEntityURLs __attribute__((availability(ios,introduced=8_0)));

- (BOOL)parse;
- (void)abortParsing;

@property (nullable, readonly, copy) NSError *parserError;



@property BOOL shouldResolveExternalEntities;

@end


@interface NSXMLParser (NSXMLParserLocatorAdditions)
@property (nullable, readonly, copy) NSString *publicID;
@property (nullable, readonly, copy) NSString *systemID;
@property (readonly) NSInteger lineNumber;
@property (readonly) NSInteger columnNumber;

@end
# 81 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSXMLParser.h" 3
@protocol NSXMLParserDelegate <NSObject>
@optional


- (void)parserDidStartDocument:(NSXMLParser *)parser;

- (void)parserDidEndDocument:(NSXMLParser *)parser;



- (void)parser:(NSXMLParser *)parser foundNotationDeclarationWithName:(NSString *)name publicID:(nullable NSString *)publicID systemID:(nullable NSString *)systemID;

- (void)parser:(NSXMLParser *)parser foundUnparsedEntityDeclarationWithName:(NSString *)name publicID:(nullable NSString *)publicID systemID:(nullable NSString *)systemID notationName:(nullable NSString *)notationName;

- (void)parser:(NSXMLParser *)parser foundAttributeDeclarationWithName:(NSString *)attributeName forElement:(NSString *)elementName type:(nullable NSString *)type defaultValue:(nullable NSString *)defaultValue;

- (void)parser:(NSXMLParser *)parser foundElementDeclarationWithName:(NSString *)elementName model:(NSString *)model;

- (void)parser:(NSXMLParser *)parser foundInternalEntityDeclarationWithName:(NSString *)name value:(nullable NSString *)value;

- (void)parser:(NSXMLParser *)parser foundExternalEntityDeclarationWithName:(NSString *)name publicID:(nullable NSString *)publicID systemID:(nullable NSString *)systemID;

- (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName namespaceURI:(nullable NSString *)namespaceURI qualifiedName:(nullable NSString *)qName attributes:(NSDictionary<NSString *, NSString *> *)attributeDict;







- (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName namespaceURI:(nullable NSString *)namespaceURI qualifiedName:(nullable NSString *)qName;


- (void)parser:(NSXMLParser *)parser didStartMappingPrefix:(NSString *)prefix toURI:(NSString *)namespaceURI;




- (void)parser:(NSXMLParser *)parser didEndMappingPrefix:(NSString *)prefix;


- (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string;


- (void)parser:(NSXMLParser *)parser foundIgnorableWhitespace:(NSString *)whitespaceString;


- (void)parser:(NSXMLParser *)parser foundProcessingInstructionWithTarget:(NSString *)target data:(nullable NSString *)data;


- (void)parser:(NSXMLParser *)parser foundComment:(NSString *)comment;


- (void)parser:(NSXMLParser *)parser foundCDATA:(NSData *)CDATABlock;


- (nullable NSData *)parser:(NSXMLParser *)parser resolveExternalEntityName:(NSString *)name systemID:(nullable NSString *)systemID;


- (void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError;


- (void)parser:(NSXMLParser *)parser validationErrorOccurred:(NSError *)validationError;

@end

extern NSErrorDomain const NSXMLParserErrorDomain __attribute__((availability(ios,introduced=2_0)));


typedef enum NSXMLParserError : NSInteger NSXMLParserError; enum NSXMLParserError : NSInteger {
    NSXMLParserInternalError = 1,
    NSXMLParserOutOfMemoryError = 2,
    NSXMLParserDocumentStartError = 3,
    NSXMLParserEmptyDocumentError = 4,
    NSXMLParserPrematureDocumentEndError = 5,
    NSXMLParserInvalidHexCharacterRefError = 6,
    NSXMLParserInvalidDecimalCharacterRefError = 7,
    NSXMLParserInvalidCharacterRefError = 8,
    NSXMLParserInvalidCharacterError = 9,
    NSXMLParserCharacterRefAtEOFError = 10,
    NSXMLParserCharacterRefInPrologError = 11,
    NSXMLParserCharacterRefInEpilogError = 12,
    NSXMLParserCharacterRefInDTDError = 13,
    NSXMLParserEntityRefAtEOFError = 14,
    NSXMLParserEntityRefInPrologError = 15,
    NSXMLParserEntityRefInEpilogError = 16,
    NSXMLParserEntityRefInDTDError = 17,
    NSXMLParserParsedEntityRefAtEOFError = 18,
    NSXMLParserParsedEntityRefInPrologError = 19,
    NSXMLParserParsedEntityRefInEpilogError = 20,
    NSXMLParserParsedEntityRefInInternalSubsetError = 21,
    NSXMLParserEntityReferenceWithoutNameError = 22,
    NSXMLParserEntityReferenceMissingSemiError = 23,
    NSXMLParserParsedEntityRefNoNameError = 24,
    NSXMLParserParsedEntityRefMissingSemiError = 25,
    NSXMLParserUndeclaredEntityError = 26,
    NSXMLParserUnparsedEntityError = 28,
    NSXMLParserEntityIsExternalError = 29,
    NSXMLParserEntityIsParameterError = 30,
    NSXMLParserUnknownEncodingError = 31,
    NSXMLParserEncodingNotSupportedError = 32,
    NSXMLParserStringNotStartedError = 33,
    NSXMLParserStringNotClosedError = 34,
    NSXMLParserNamespaceDeclarationError = 35,
    NSXMLParserEntityNotStartedError = 36,
    NSXMLParserEntityNotFinishedError = 37,
    NSXMLParserLessThanSymbolInAttributeError = 38,
    NSXMLParserAttributeNotStartedError = 39,
    NSXMLParserAttributeNotFinishedError = 40,
    NSXMLParserAttributeHasNoValueError = 41,
    NSXMLParserAttributeRedefinedError = 42,
    NSXMLParserLiteralNotStartedError = 43,
    NSXMLParserLiteralNotFinishedError = 44,
    NSXMLParserCommentNotFinishedError = 45,
    NSXMLParserProcessingInstructionNotStartedError = 46,
    NSXMLParserProcessingInstructionNotFinishedError = 47,
    NSXMLParserNotationNotStartedError = 48,
    NSXMLParserNotationNotFinishedError = 49,
    NSXMLParserAttributeListNotStartedError = 50,
    NSXMLParserAttributeListNotFinishedError = 51,
    NSXMLParserMixedContentDeclNotStartedError = 52,
    NSXMLParserMixedContentDeclNotFinishedError = 53,
    NSXMLParserElementContentDeclNotStartedError = 54,
    NSXMLParserElementContentDeclNotFinishedError = 55,
    NSXMLParserXMLDeclNotStartedError = 56,
    NSXMLParserXMLDeclNotFinishedError = 57,
    NSXMLParserConditionalSectionNotStartedError = 58,
    NSXMLParserConditionalSectionNotFinishedError = 59,
    NSXMLParserExternalSubsetNotFinishedError = 60,
    NSXMLParserDOCTYPEDeclNotFinishedError = 61,
    NSXMLParserMisplacedCDATAEndStringError = 62,
    NSXMLParserCDATANotFinishedError = 63,
    NSXMLParserMisplacedXMLDeclarationError = 64,
    NSXMLParserSpaceRequiredError = 65,
    NSXMLParserSeparatorRequiredError = 66,
    NSXMLParserNMTOKENRequiredError = 67,
    NSXMLParserNAMERequiredError = 68,
    NSXMLParserPCDATARequiredError = 69,
    NSXMLParserURIRequiredError = 70,
    NSXMLParserPublicIdentifierRequiredError = 71,
    NSXMLParserLTRequiredError = 72,
    NSXMLParserGTRequiredError = 73,
    NSXMLParserLTSlashRequiredError = 74,
    NSXMLParserEqualExpectedError = 75,
    NSXMLParserTagNameMismatchError = 76,
    NSXMLParserUnfinishedTagError = 77,
    NSXMLParserStandaloneValueError = 78,
    NSXMLParserInvalidEncodingNameError = 79,
    NSXMLParserCommentContainsDoubleHyphenError = 80,
    NSXMLParserInvalidEncodingError = 81,
    NSXMLParserExternalStandaloneEntityError = 82,
    NSXMLParserInvalidConditionalSectionError = 83,
    NSXMLParserEntityValueRequiredError = 84,
    NSXMLParserNotWellBalancedError = 85,
    NSXMLParserExtraContentError = 86,
    NSXMLParserInvalidCharacterInEntityError = 87,
    NSXMLParserParsedEntityRefInInternalError = 88,
    NSXMLParserEntityRefLoopError = 89,
    NSXMLParserEntityBoundaryError = 90,
    NSXMLParserInvalidURIError = 91,
    NSXMLParserURIFragmentError = 92,
    NSXMLParserNoDTDError = 94,
    NSXMLParserDelegateAbortedParseError = 512
};
# 96 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/FoundationErrors.h" 1 3








enum : NSInteger {

    NSFileNoSuchFileError = 4,
    NSFileLockingError = 255,
    NSFileReadUnknownError = 256,
    NSFileReadNoPermissionError = 257,
    NSFileReadInvalidFileNameError = 258,
    NSFileReadCorruptFileError = 259,
    NSFileReadNoSuchFileError = 260,
    NSFileReadInapplicableStringEncodingError = 261,
    NSFileReadUnsupportedSchemeError = 262,
    NSFileReadTooLargeError __attribute__((availability(ios,introduced=2_0))) = 263,
    NSFileReadUnknownStringEncodingError __attribute__((availability(ios,introduced=2_0))) = 264,
    NSFileWriteUnknownError = 512,
    NSFileWriteNoPermissionError = 513,
    NSFileWriteInvalidFileNameError = 514,
    NSFileWriteFileExistsError __attribute__((availability(ios,introduced=5_0))) = 516,
    NSFileWriteInapplicableStringEncodingError = 517,
    NSFileWriteUnsupportedSchemeError = 518,
    NSFileWriteOutOfSpaceError = 640,
    NSFileWriteVolumeReadOnlyError __attribute__((availability(ios,introduced=4_0))) = 642,


    NSFileManagerUnmountUnknownError __attribute__((availability(ios,introduced=NA))) = 768,
    NSFileManagerUnmountBusyError __attribute__((availability(ios,introduced=NA))) = 769,


    NSKeyValueValidationError = 1024,
    NSFormattingError = 2048,
    NSUserCancelledError = 3072,
    NSFeatureUnsupportedError __attribute__((availability(ios,introduced=6_0))) = 3328,


    NSExecutableNotLoadableError __attribute__((availability(ios,introduced=2_0))) = 3584,
    NSExecutableArchitectureMismatchError __attribute__((availability(ios,introduced=2_0))) = 3585,
    NSExecutableRuntimeMismatchError __attribute__((availability(ios,introduced=2_0))) = 3586,
    NSExecutableLoadError __attribute__((availability(ios,introduced=2_0))) = 3587,
    NSExecutableLinkError __attribute__((availability(ios,introduced=2_0))) = 3588,


    NSFileErrorMinimum = 0,
    NSFileErrorMaximum = 1023,

    NSValidationErrorMinimum = 1024,
    NSValidationErrorMaximum = 2047,

    NSExecutableErrorMinimum __attribute__((availability(ios,introduced=2_0))) = 3584,
    NSExecutableErrorMaximum __attribute__((availability(ios,introduced=2_0))) = 3839,

    NSFormattingErrorMinimum = 2048,
    NSFormattingErrorMaximum = 2559,

    NSPropertyListReadCorruptError __attribute__((availability(ios,introduced=4_0))) = 3840,
    NSPropertyListReadUnknownVersionError __attribute__((availability(ios,introduced=4_0))) = 3841,
    NSPropertyListReadStreamError __attribute__((availability(ios,introduced=4_0))) = 3842,
    NSPropertyListWriteStreamError __attribute__((availability(ios,introduced=4_0))) = 3851,
    NSPropertyListWriteInvalidError __attribute__((availability(ios,introduced=8_0))) = 3852,

    NSPropertyListErrorMinimum __attribute__((availability(ios,introduced=4_0))) = 3840,
    NSPropertyListErrorMaximum __attribute__((availability(ios,introduced=4_0))) = 4095,

    NSXPCConnectionInterrupted __attribute__((availability(ios,introduced=6_0))) = 4097,
    NSXPCConnectionInvalid __attribute__((availability(ios,introduced=6_0))) = 4099,
    NSXPCConnectionReplyInvalid __attribute__((availability(ios,introduced=6_0))) = 4101,

    NSXPCConnectionErrorMinimum __attribute__((availability(ios,introduced=6_0))) = 4096,
    NSXPCConnectionErrorMaximum __attribute__((availability(ios,introduced=6_0))) = 4224,

    NSUbiquitousFileUnavailableError __attribute__((availability(ios,introduced=7_0))) = 4353,
    NSUbiquitousFileNotUploadedDueToQuotaError __attribute__((availability(ios,introduced=7_0))) = 4354,
    NSUbiquitousFileUbiquityServerNotAvailable __attribute__((availability(ios,introduced=7_0))) = 4355,

    NSUbiquitousFileErrorMinimum __attribute__((availability(ios,introduced=7_0))) = 4352,
    NSUbiquitousFileErrorMaximum __attribute__((availability(ios,introduced=7_0))) = 4607,

    NSUserActivityHandoffFailedError __attribute__((availability(ios,introduced=8_0))) = 4608,
    NSUserActivityConnectionUnavailableError __attribute__((availability(ios,introduced=8_0))) = 4609,
    NSUserActivityRemoteApplicationTimedOutError __attribute__((availability(ios,introduced=8_0))) = 4610,
    NSUserActivityHandoffUserInfoTooLargeError __attribute__((availability(ios,introduced=8_0))) = 4611,

    NSUserActivityErrorMinimum __attribute__((availability(ios,introduced=8_0))) = 4608,
    NSUserActivityErrorMaximum __attribute__((availability(ios,introduced=8_0))) = 4863,

    NSCoderReadCorruptError __attribute__((availability(ios,introduced=9_0))) = 4864,
    NSCoderValueNotFoundError __attribute__((availability(ios,introduced=9_0))) = 4865,
    NSCoderErrorMinimum __attribute__((availability(ios,introduced=9_0))) = 4864,
    NSCoderErrorMaximum __attribute__((availability(ios,introduced=9_0))) = 4991,

    NSBundleErrorMinimum __attribute__((availability(ios,introduced=9_0))) = 4992,
    NSBundleErrorMaximum __attribute__((availability(ios,introduced=9_0))) = 5119,

    NSBundleOnDemandResourceOutOfSpaceError __attribute__((availability(ios,introduced=9_0))) = 4992,
    NSBundleOnDemandResourceExceededMaximumSizeError __attribute__((availability(ios,introduced=9_0))) = 4993,
    NSBundleOnDemandResourceInvalidTagError __attribute__((availability(ios,introduced=9_0))) = 4994,

    NSCloudSharingNetworkFailureError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5120,
    NSCloudSharingQuotaExceededError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5121,
    NSCloudSharingTooManyParticipantsError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5122,
    NSCloudSharingConflictError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5123,
    NSCloudSharingNoPermissionError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5124,
    NSCloudSharingOtherError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5375,

    NSCloudSharingErrorMinimum __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5120,
    NSCloudSharingErrorMaximum __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5375,

};
# 99 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSAttributedString.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSAttributedString.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2)))
@interface NSAttributedString : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>

@property (readonly, copy) NSString *string;
- (NSDictionary<NSString *, id> *)attributesAtIndex:(NSUInteger)location effectiveRange:(nullable NSRangePointer)range;

@end

@interface NSAttributedString (NSExtendedAttributedString)

@property (readonly) NSUInteger length;
- (nullable id)attribute:(NSString *)attrName atIndex:(NSUInteger)location effectiveRange:(nullable NSRangePointer)range;
- (NSAttributedString *)attributedSubstringFromRange:(NSRange)range;

- (NSDictionary<NSString *, id> *)attributesAtIndex:(NSUInteger)location longestEffectiveRange:(nullable NSRangePointer)range inRange:(NSRange)rangeLimit;
- (nullable id)attribute:(NSString *)attrName atIndex:(NSUInteger)location longestEffectiveRange:(nullable NSRangePointer)range inRange:(NSRange)rangeLimit;

- (BOOL)isEqualToAttributedString:(NSAttributedString *)other;

- (instancetype)initWithString:(NSString *)str;
- (instancetype)initWithString:(NSString *)str attributes:(nullable NSDictionary<NSString *, id> *)attrs;
- (instancetype)initWithAttributedString:(NSAttributedString *)attrStr;

typedef enum NSAttributedStringEnumerationOptions : NSUInteger NSAttributedStringEnumerationOptions; enum NSAttributedStringEnumerationOptions : NSUInteger {
  NSAttributedStringEnumerationReverse = (1UL << 1),
  NSAttributedStringEnumerationLongestEffectiveRangeNotRequired = (1UL << 20)
};

- (void)enumerateAttributesInRange:(NSRange)enumerationRange options:(NSAttributedStringEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSDictionary<NSString *, id> *attrs, NSRange range, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));
- (void)enumerateAttribute:(NSString *)attrName inRange:(NSRange)enumerationRange options:(NSAttributedStringEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(id _Nullable value, NSRange range, BOOL *stop))block __attribute__((availability(ios,introduced=4_0)));

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2)))
@interface NSMutableAttributedString : NSAttributedString

- (void)replaceCharactersInRange:(NSRange)range withString:(NSString *)str;
- (void)setAttributes:(nullable NSDictionary<NSString *, id> *)attrs range:(NSRange)range;

@end

@interface NSMutableAttributedString (NSExtendedMutableAttributedString)

@property (readonly, retain) NSMutableString *mutableString;

- (void)addAttribute:(NSString *)name value:(id)value range:(NSRange)range;
- (void)addAttributes:(NSDictionary<NSString *, id> *)attrs range:(NSRange)range;
- (void)removeAttribute:(NSString *)name range:(NSRange)range;

- (void)replaceCharactersInRange:(NSRange)range withAttributedString:(NSAttributedString *)attrString;
- (void)insertAttributedString:(NSAttributedString *)attrString atIndex:(NSUInteger)loc;
- (void)appendAttributedString:(NSAttributedString *)attrString;
- (void)deleteCharactersInRange:(NSRange)range;
- (void)setAttributedString:(NSAttributedString *)attrString;

- (void)beginEditing;
- (void)endEditing;

@end
# 103 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSByteCountFormatter.h" 1 3








typedef enum NSByteCountFormatterUnits : NSUInteger NSByteCountFormatterUnits; enum NSByteCountFormatterUnits : NSUInteger {

    NSByteCountFormatterUseDefault = 0,

    NSByteCountFormatterUseBytes = 1UL << 0,
    NSByteCountFormatterUseKB = 1UL << 1,
    NSByteCountFormatterUseMB = 1UL << 2,
    NSByteCountFormatterUseGB = 1UL << 3,
    NSByteCountFormatterUseTB = 1UL << 4,
    NSByteCountFormatterUsePB = 1UL << 5,
    NSByteCountFormatterUseEB = 1UL << 6,
    NSByteCountFormatterUseZB = 1UL << 7,
    NSByteCountFormatterUseYBOrHigher = 0x0FFUL << 8,

    NSByteCountFormatterUseAll = 0x0FFFFUL
};

typedef enum NSByteCountFormatterCountStyle : NSInteger NSByteCountFormatterCountStyle; enum NSByteCountFormatterCountStyle : NSInteger {

    NSByteCountFormatterCountStyleFile = 0,

    NSByteCountFormatterCountStyleMemory = 1,

    NSByteCountFormatterCountStyleDecimal = 2,
    NSByteCountFormatterCountStyleBinary = 3
};


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))
@interface NSByteCountFormatter : NSFormatter {
    @private
    unsigned int _allowedUnits;
    char _countStyle;
    BOOL _allowsNonnumericFormatting, _includesUnit, _includesCount, _includesActualByteCount, _adaptive, _zeroPadsFractionDigits;
    int _formattingContext;
    int _reserved[5];
}



+ (NSString *)stringFromByteCount:(long long)byteCount countStyle:(NSByteCountFormatterCountStyle)countStyle;



- (NSString *)stringFromByteCount:(long long)byteCount;



@property NSByteCountFormatterUnits allowedUnits;



@property NSByteCountFormatterCountStyle countStyle;



@property BOOL allowsNonnumericFormatting;



@property BOOL includesUnit;
@property BOOL includesCount;



@property BOOL includesActualByteCount;



@property (getter=isAdaptive) BOOL adaptive;



@property BOOL zeroPadsFractionDigits;



@property NSFormattingContext formattingContext __attribute__((availability(ios,introduced=8_0)));

@end
# 104 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCache.h" 1 3






@class NSString;
@protocol NSCacheDelegate;



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))
@interface NSCache <KeyType, ObjectType> : NSObject {
@private
    id _delegate;
    void *_private[5];
    void *_reserved;
}

@property (copy) NSString *name;

@property (nullable, assign) id<NSCacheDelegate> delegate;

- (nullable ObjectType)objectForKey:(KeyType)key;
- (void)setObject:(ObjectType)obj forKey:(KeyType)key;
- (void)setObject:(ObjectType)obj forKey:(KeyType)key cost:(NSUInteger)g;
- (void)removeObjectForKey:(KeyType)key;

- (void)removeAllObjects;

@property NSUInteger totalCostLimit;
@property NSUInteger countLimit;
@property BOOL evictsObjectsWithDiscardedContent;

@end

@protocol NSCacheDelegate <NSObject>
@optional
- (void)cache:(NSCache *)cache willEvictObject:(id)obj;
@end
# 105 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSComparisonPredicate.h" 1 3




# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPredicate.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSPredicate.h" 3
@class NSDictionary <KeyType, ObjectType>, NSString;





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))
@interface NSPredicate : NSObject <NSSecureCoding, NSCopying> {
    struct _predicateFlags {
        unsigned int _evaluationBlocked:1;
        unsigned int _reservedPredicateFlags:31;
    } _predicateFlags;

    uint32_t reserved;

}


+ (NSPredicate *)predicateWithFormat:(NSString *)predicateFormat argumentArray:(nullable NSArray *)arguments;
+ (NSPredicate *)predicateWithFormat:(NSString *)predicateFormat, ...;
+ (NSPredicate *)predicateWithFormat:(NSString *)predicateFormat arguments:(va_list)argList;

+ (nullable NSPredicate *)predicateFromMetadataQueryString:(NSString *)queryString __attribute__((availability(ios,unavailable)));

+ (NSPredicate *)predicateWithValue:(BOOL)value;


+ (NSPredicate*)predicateWithBlock:(BOOL (^)(id _Nullable evaluatedObject, NSDictionary<NSString *, id> * _Nullable bindings))block __attribute__((availability(ios,introduced=4_0)));

@property (readonly, copy) NSString *predicateFormat;

- (instancetype)predicateWithSubstitutionVariables:(NSDictionary<NSString *, id> *)variables;

- (BOOL)evaluateWithObject:(nullable id)object;

- (BOOL)evaluateWithObject:(nullable id)object substitutionVariables:(nullable NSDictionary<NSString *, id> *)bindings __attribute__((availability(ios,introduced=3_0)));

- (void)allowEvaluation __attribute__((availability(ios,introduced=7_0)));

@end

@interface NSArray<ObjectType> (NSPredicateSupport)
- (NSArray<ObjectType> *)filteredArrayUsingPredicate:(NSPredicate *)predicate;
@end

@interface NSMutableArray<ObjectType> (NSPredicateSupport)
- (void)filterUsingPredicate:(NSPredicate *)predicate;
@end


@interface NSSet<ObjectType> (NSPredicateSupport)
- (NSSet<ObjectType> *)filteredSetUsingPredicate:(NSPredicate *)predicate __attribute__((availability(ios,introduced=3_0)));
@end

@interface NSMutableSet<ObjectType> (NSPredicateSupport)
- (void)filterUsingPredicate:(NSPredicate *)predicate __attribute__((availability(ios,introduced=3_0)));
@end

@interface NSOrderedSet<ObjectType> (NSPredicateSupport)

- (NSOrderedSet<ObjectType> *)filteredOrderedSetUsingPredicate:(NSPredicate *)p __attribute__((availability(ios,introduced=5_0)));

@end

@interface NSMutableOrderedSet<ObjectType> (NSPredicateSupport)

- (void)filterUsingPredicate:(NSPredicate *)p __attribute__((availability(ios,introduced=5_0)));

@end
# 6 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSComparisonPredicate.h" 2 3




typedef enum NSComparisonPredicateOptions : NSUInteger NSComparisonPredicateOptions; enum NSComparisonPredicateOptions : NSUInteger {
    NSCaseInsensitivePredicateOption = 0x01,
    NSDiacriticInsensitivePredicateOption = 0x02,
    NSNormalizedPredicateOption __attribute__((availability(ios,introduced=4_0))) = 0x04,
};


typedef enum NSComparisonPredicateModifier : NSUInteger NSComparisonPredicateModifier; enum NSComparisonPredicateModifier : NSUInteger {
    NSDirectPredicateModifier = 0,
    NSAllPredicateModifier,
    NSAnyPredicateModifier
};



typedef enum NSPredicateOperatorType : NSUInteger NSPredicateOperatorType; enum NSPredicateOperatorType : NSUInteger {
    NSLessThanPredicateOperatorType = 0,
    NSLessThanOrEqualToPredicateOperatorType,
    NSGreaterThanPredicateOperatorType,
    NSGreaterThanOrEqualToPredicateOperatorType,
    NSEqualToPredicateOperatorType,
    NSNotEqualToPredicateOperatorType,
    NSMatchesPredicateOperatorType,
    NSLikePredicateOperatorType,
    NSBeginsWithPredicateOperatorType,
    NSEndsWithPredicateOperatorType,
    NSInPredicateOperatorType,
    NSCustomSelectorPredicateOperatorType,
    NSContainsPredicateOperatorType __attribute__((availability(ios,introduced=3_0))) = 99,
    NSBetweenPredicateOperatorType __attribute__((availability(ios,introduced=3_0)))
};

@class NSPredicateOperator;
@class NSExpression;



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))
@interface NSComparisonPredicate : NSPredicate {
    @private
    void *_reserved2;
    NSPredicateOperator *_predicateOperator;
    NSExpression *_lhs;
    NSExpression *_rhs;
}

+ (NSComparisonPredicate *)predicateWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs modifier:(NSComparisonPredicateModifier)modifier type:(NSPredicateOperatorType)type options:(NSComparisonPredicateOptions)options;
+ (NSComparisonPredicate *)predicateWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs customSelector:(SEL)selector;

- (instancetype)initWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs modifier:(NSComparisonPredicateModifier)modifier type:(NSPredicateOperatorType)type options:(NSComparisonPredicateOptions)options __attribute__((objc_designated_initializer));
- (instancetype)initWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs customSelector:(SEL)selector __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

@property (readonly) NSPredicateOperatorType predicateOperatorType;
@property (readonly) NSComparisonPredicateModifier comparisonPredicateModifier;
@property (readonly, retain) NSExpression *leftExpression;
@property (readonly, retain) NSExpression *rightExpression;
@property (nullable, readonly) SEL customSelector;
@property (readonly) NSComparisonPredicateOptions options;

@end
# 106 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSCompoundPredicate.h" 1 3






@class NSArray<ObjectType>;





typedef enum NSCompoundPredicateType : NSUInteger NSCompoundPredicateType; enum NSCompoundPredicateType : NSUInteger {
    NSNotPredicateType = 0,
    NSAndPredicateType,
    NSOrPredicateType,
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))
@interface NSCompoundPredicate : NSPredicate {
    @private
    void *_reserved2;
    NSUInteger _type;
    NSArray *_subpredicates;
}

- (instancetype)initWithType:(NSCompoundPredicateType)type subpredicates:(NSArray<NSPredicate *> *)subpredicates __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

@property (readonly) NSCompoundPredicateType compoundPredicateType;
@property (readonly, copy) NSArray *subpredicates;


+ (NSCompoundPredicate *)andPredicateWithSubpredicates:(NSArray<NSPredicate *> *)subpredicates __attribute__((swift_name("init(andPredicateWithSubpredicates:)")));
+ (NSCompoundPredicate *)orPredicateWithSubpredicates:(NSArray<NSPredicate *> *)subpredicates __attribute__((swift_name("init(orPredicateWithSubpredicates:)")));
+ (NSCompoundPredicate *)notPredicateWithSubpredicate:(NSPredicate *)predicate __attribute__((swift_name("init(notPredicateWithSubpredicate:)")));

@end
# 107 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateComponentsFormatter.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateComponentsFormatter.h" 3
__attribute__((availability(ios,introduced=8_0)))
typedef enum NSDateComponentsFormatterUnitsStyle : NSInteger NSDateComponentsFormatterUnitsStyle; enum NSDateComponentsFormatterUnitsStyle : NSInteger {
    NSDateComponentsFormatterUnitsStylePositional = 0,
    NSDateComponentsFormatterUnitsStyleAbbreviated,
    NSDateComponentsFormatterUnitsStyleShort,
    NSDateComponentsFormatterUnitsStyleFull,
    NSDateComponentsFormatterUnitsStyleSpellOut,
    NSDateComponentsFormatterUnitsStyleBrief __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
};

__attribute__((availability(ios,introduced=8_0)))
typedef enum NSDateComponentsFormatterZeroFormattingBehavior : NSUInteger NSDateComponentsFormatterZeroFormattingBehavior; enum NSDateComponentsFormatterZeroFormattingBehavior : NSUInteger {
    NSDateComponentsFormatterZeroFormattingBehaviorNone = (0),
    NSDateComponentsFormatterZeroFormattingBehaviorDefault = (1 << 0),

    NSDateComponentsFormatterZeroFormattingBehaviorDropLeading = (1 << 1),
    NSDateComponentsFormatterZeroFormattingBehaviorDropMiddle = (1 << 2),
    NSDateComponentsFormatterZeroFormattingBehaviorDropTrailing = (1 << 3),
    NSDateComponentsFormatterZeroFormattingBehaviorDropAll = (NSDateComponentsFormatterZeroFormattingBehaviorDropLeading | NSDateComponentsFormatterZeroFormattingBehaviorDropMiddle | NSDateComponentsFormatterZeroFormattingBehaviorDropTrailing),

    NSDateComponentsFormatterZeroFormattingBehaviorPad = (1 << 16),
};



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface NSDateComponentsFormatter : NSFormatter {
    @private
    pthread_mutex_t _lock;
    void *_fmt;
    void *_unused;
    NSString *_fmtLocaleIdent;
    NSCalendar *_calendar;
    NSDate *_referenceDate;
    NSNumberFormatter *_unitFormatter;
    NSCalendarUnit _allowedUnits;
    NSFormattingContext _formattingContext;
    NSDateComponentsFormatterUnitsStyle _unitsStyle;
    NSDateComponentsFormatterZeroFormattingBehavior _zeroFormattingBehavior;
    NSInteger _maximumUnitCount;
    BOOL _allowsFractionalUnits;
    BOOL _collapsesLargestUnit;
    BOOL _includesApproximationPhrase;
    BOOL _includesTimeRemainingPhrase;
    void *_reserved;
}



- (nullable NSString *)stringForObjectValue:(nullable id)obj;

- (nullable NSString *)stringFromDateComponents:(NSDateComponents *)components;







- (nullable NSString *)stringFromDate:(NSDate *)startDate toDate:(NSDate *)endDate;



- (nullable NSString *)stringFromTimeInterval:(NSTimeInterval)ti;


+ (nullable NSString *)localizedStringFromDateComponents:(NSDateComponents *)components unitsStyle:(NSDateComponentsFormatterUnitsStyle) unitsStyle;



@property NSDateComponentsFormatterUnitsStyle unitsStyle;
# 97 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateComponentsFormatter.h" 3
@property NSCalendarUnit allowedUnits;





@property NSDateComponentsFormatterZeroFormattingBehavior zeroFormattingBehavior;



@property (nullable, copy) NSCalendar *calendar;



@property BOOL allowsFractionalUnits;
# 122 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSDateComponentsFormatter.h" 3
@property NSInteger maximumUnitCount;



@property BOOL collapsesLargestUnit;



@property BOOL includesApproximationPhrase;



@property BOOL includesTimeRemainingPhrase;




@property NSFormattingContext formattingContext;



- (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;

@end
# 108 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSExpression.h" 1 3






@class NSString;
@class NSArray<ObjectType>;
@class NSMutableDictionary;
@class NSPredicate;





typedef enum NSExpressionType : NSUInteger NSExpressionType; enum NSExpressionType : NSUInteger {
    NSConstantValueExpressionType = 0,
    NSEvaluatedObjectExpressionType,
    NSVariableExpressionType,
    NSKeyPathExpressionType,
    NSFunctionExpressionType,
    NSUnionSetExpressionType __attribute__((availability(ios,introduced=3_0))),
    NSIntersectSetExpressionType __attribute__((availability(ios,introduced=3_0))),
    NSMinusSetExpressionType __attribute__((availability(ios,introduced=3_0))),
    NSSubqueryExpressionType __attribute__((availability(ios,introduced=3_0))) = 13,
    NSAggregateExpressionType __attribute__((availability(ios,introduced=3_0))) = 14,
    NSAnyKeyExpressionType __attribute__((availability(ios,introduced=7_0))) = 15,
    NSBlockExpressionType = 19,
    NSConditionalExpressionType __attribute__((availability(ios,introduced=9_0))) = 20

};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))
@interface NSExpression : NSObject <NSSecureCoding, NSCopying> {
    @package
    struct _expressionFlags {
        unsigned int _evaluationBlocked:1;
        unsigned int _reservedExpressionFlags:31;
    } _expressionFlags;

    uint32_t reserved;

    NSExpressionType _expressionType;
}

+ (NSExpression *)expressionWithFormat:(NSString *)expressionFormat argumentArray:(NSArray *)arguments __attribute__((availability(ios,introduced=4_0)));
+ (NSExpression *)expressionWithFormat:(NSString *)expressionFormat, ... __attribute__((availability(ios,introduced=4_0)));
+ (NSExpression *)expressionWithFormat:(NSString *)expressionFormat arguments:(va_list)argList __attribute__((availability(ios,introduced=4_0)));

+ (NSExpression *)expressionForConstantValue:(nullable id)obj;
+ (NSExpression *)expressionForEvaluatedObject;
+ (NSExpression *)expressionForVariable:(NSString *)string;
+ (NSExpression *)expressionForKeyPath:(NSString *)keyPath;
+ (NSExpression *)expressionForFunction:(NSString *)name arguments:(NSArray *)parameters;
# 96 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSExpression.h" 3
+ (NSExpression *)expressionForAggregate:(NSArray *)subexpressions __attribute__((availability(ios,introduced=3_0)));
+ (NSExpression *)expressionForUnionSet:(NSExpression *)left with:(NSExpression *)right __attribute__((availability(ios,introduced=3_0)));
+ (NSExpression *)expressionForIntersectSet:(NSExpression *)left with:(NSExpression *)right __attribute__((availability(ios,introduced=3_0)));
+ (NSExpression *)expressionForMinusSet:(NSExpression *)left with:(NSExpression *)right __attribute__((availability(ios,introduced=3_0)));
+ (NSExpression *)expressionForSubquery:(NSExpression *)expression usingIteratorVariable:(NSString *)variable predicate:(id)predicate __attribute__((availability(ios,introduced=3_0)));
+ (NSExpression *)expressionForFunction:(NSExpression *)target selectorName:(NSString *)name arguments:(nullable NSArray *)parameters __attribute__((availability(ios,introduced=3_0)));
+ (NSExpression *)expressionForAnyKey __attribute__((availability(ios,introduced=7_0)));
+ (NSExpression *)expressionForBlock:(id (^)(id _Nullable evaluatedObject, NSArray *expressions, NSMutableDictionary * _Nullable context))block arguments:(nullable NSArray<NSExpression *> *)arguments __attribute__((availability(ios,introduced=4_0)));
+ (NSExpression *)expressionForConditional:(NSPredicate *)predicate trueExpression:(NSExpression *)trueExpression falseExpression:(NSExpression *)falseExpression __attribute__((availability(ios,introduced=9_0)));

- (instancetype)initWithExpressionType:(NSExpressionType)type __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


@property (readonly) NSExpressionType expressionType;

@property (nullable, readonly, retain) id constantValue;

@property (readonly, copy) NSString *keyPath;
@property (readonly, copy) NSString *function;
@property (readonly, copy) NSString *variable;
@property (readonly, copy) NSExpression *operand;
@property (nullable, readonly, copy) NSArray<NSExpression *> *arguments;

@property (readonly, retain) id collection __attribute__((availability(ios,introduced=3_0)));
@property (readonly, copy) NSPredicate *predicate __attribute__((availability(ios,introduced=3_0)));
@property (readonly, copy) NSExpression *leftExpression __attribute__((availability(ios,introduced=3_0)));
@property (readonly, copy) NSExpression *rightExpression __attribute__((availability(ios,introduced=3_0)));


@property (readonly, copy) NSExpression *trueExpression __attribute__((availability(ios,introduced=9_0)));
@property (readonly, copy) NSExpression *falseExpression __attribute__((availability(ios,introduced=9_0)));

@property (readonly, copy) id (^expressionBlock)(id _Nullable, NSArray *, NSMutableDictionary * _Nullable) __attribute__((availability(ios,introduced=4_0)));



- (nullable id)expressionValueWithObject:(nullable id)object context:(nullable NSMutableDictionary *)context;


- (void)allowEvaluation __attribute__((availability(ios,introduced=7_0)));

@end
# 109 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSExtensionContext.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSExtensionContext.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface NSExtensionContext : NSObject


@property(readonly, copy, nonatomic) NSArray *inputItems;


- (void)completeRequestReturningItems:(nullable NSArray *)items completionHandler:(void(^ _Nullable)(BOOL expired))completionHandler;


- (void)cancelRequestWithError:(NSError *)error;


- (void)openURL:(NSURL *)URL completionHandler:(void (^ _Nullable)(BOOL success))completionHandler;

@end


extern NSString * _Null_unspecified const NSExtensionItemsAndErrorsKey __attribute__((availability(ios,introduced=8_0)));


extern NSString * _Null_unspecified const NSExtensionHostWillEnterForegroundNotification __attribute__((availability(ios,introduced=8_2)));


extern NSString * _Null_unspecified const NSExtensionHostDidEnterBackgroundNotification __attribute__((availability(ios,introduced=8_2)));


extern NSString * _Null_unspecified const NSExtensionHostWillResignActiveNotification __attribute__((availability(ios,introduced=8_2)));


extern NSString * _Null_unspecified const NSExtensionHostDidBecomeActiveNotification __attribute__((availability(ios,introduced=8_2)));
# 110 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSExtensionItem.h" 1 3





# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSItemProvider.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSItemProvider.h" 3
typedef void (^NSItemProviderCompletionHandler)(_Nullable id <NSSecureCoding> item, NSError * _Null_unspecified error);
typedef void (^NSItemProviderLoadHandler)(_Null_unspecified NSItemProviderCompletionHandler completionHandler, _Null_unspecified Class expectedValueClass, NSDictionary * _Null_unspecified options);


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface NSItemProvider : NSObject <NSCopying>


- (instancetype)initWithItem:(nullable id <NSSecureCoding>)item typeIdentifier:(nullable NSString *)typeIdentifier __attribute__((objc_designated_initializer));


- (nullable instancetype)initWithContentsOfURL:(null_unspecified NSURL *)fileURL;


- (void)registerItemForTypeIdentifier:(NSString *)typeIdentifier loadHandler:(NSItemProviderLoadHandler)loadHandler;


@property(copy, readonly, nonatomic) NSArray *registeredTypeIdentifiers;


- (BOOL)hasItemConformingToTypeIdentifier:(NSString *)typeIdentifier;


- (void)loadItemForTypeIdentifier:(NSString *)typeIdentifier options:(nullable NSDictionary *)options completionHandler:(nullable NSItemProviderCompletionHandler)completionHandler;

@end


extern NSString * _Null_unspecified const NSItemProviderPreferredImageSizeKey __attribute__((availability(ios,introduced=8_0)));

@interface NSItemProvider(NSPreviewSupport)


@property(nullable, copy, nonatomic) NSItemProviderLoadHandler previewImageHandler __attribute__((availability(ios,introduced=8_0)));


- (void)loadPreviewImageWithOptions:(null_unspecified NSDictionary *)options completionHandler:(null_unspecified NSItemProviderCompletionHandler)completionHandler __attribute__((availability(ios,introduced=8_0)));

@end





extern NSString * _Null_unspecified const NSExtensionJavaScriptPreprocessingResultsKey __attribute__((availability(ios,introduced=8_0)));


extern NSString * _Null_unspecified const NSExtensionJavaScriptFinalizeArgumentKey __attribute__((availability(ios,introduced=8_0)));





extern NSString * _Null_unspecified const NSItemProviderErrorDomain __attribute__((availability(ios,introduced=8_0)));


typedef enum NSItemProviderErrorCode : NSInteger NSItemProviderErrorCode; enum NSItemProviderErrorCode : NSInteger {
    NSItemProviderUnknownError = -1,
    NSItemProviderItemUnavailableError = -1000,
    NSItemProviderUnexpectedValueClassError = -1100,
    NSItemProviderUnavailableCoercionError __attribute__((availability(ios,introduced=9_0))) = -1200
} __attribute__((availability(ios,introduced=8_0)));
# 7 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSExtensionItem.h" 2 3





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface NSExtensionItem : NSObject<NSCopying, NSSecureCoding>


@property(nullable, copy, nonatomic) NSAttributedString *attributedTitle;


@property(nullable, copy, nonatomic) NSAttributedString *attributedContentText;


@property(nullable, copy, nonatomic) NSArray *attachments;


@property(nullable, copy, nonatomic) NSDictionary *userInfo;

@end


extern NSString * _Null_unspecified const NSExtensionItemAttributedTitleKey __attribute__((availability(ios,introduced=8_0)));
extern NSString * _Null_unspecified const NSExtensionItemAttributedContentTextKey __attribute__((availability(ios,introduced=8_0)));
extern NSString * _Null_unspecified const NSExtensionItemAttachmentsKey __attribute__((availability(ios,introduced=8_0)));
# 111 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSExtensionRequestHandling.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSExtensionRequestHandling.h" 3
@class NSExtensionContext;


@protocol NSExtensionRequestHandling <NSObject>

@required


- (void)beginRequestWithExtensionContext:(NSExtensionContext *)context;

@end
# 112 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileCoordinator.h" 1 3








@class NSArray<ObjectType>, NSError, NSMutableDictionary, NSOperationQueue, NSURL;

@protocol NSFilePresenter;



typedef enum NSFileCoordinatorReadingOptions : NSUInteger NSFileCoordinatorReadingOptions; enum NSFileCoordinatorReadingOptions : NSUInteger {



    NSFileCoordinatorReadingWithoutChanges = 1 << 0,



    NSFileCoordinatorReadingResolvesSymbolicLink = 1 << 1,



    NSFileCoordinatorReadingImmediatelyAvailableMetadataOnly __attribute__((availability(ios,introduced=8_0))) = 1 << 2,





    NSFileCoordinatorReadingForUploading __attribute__((availability(ios,introduced=8_0))) = 1 << 3,

};

typedef enum NSFileCoordinatorWritingOptions : NSUInteger NSFileCoordinatorWritingOptions; enum NSFileCoordinatorWritingOptions : NSUInteger {
# 46 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileCoordinator.h" 3
    NSFileCoordinatorWritingForDeleting = 1 << 0,





    NSFileCoordinatorWritingForMoving = 1 << 1,



    NSFileCoordinatorWritingForMerging = 1 << 2,







    NSFileCoordinatorWritingForReplacing = 1 << 3,



    NSFileCoordinatorWritingContentIndependentMetadataOnly __attribute__((availability(ios,introduced=8_0))) = 1 << 4

};


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface NSFileAccessIntent : NSObject {
@private
    NSURL *_url;
    BOOL _isRead;
    NSInteger _options;
}
+ (instancetype)readingIntentWithURL:(NSURL *)url options:(NSFileCoordinatorReadingOptions)options;
+ (instancetype)writingIntentWithURL:(NSURL *)url options:(NSFileCoordinatorWritingOptions)options;
@property (readonly, copy) NSURL *URL;
@end


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface NSFileCoordinator : NSObject {
    @private
    id _accessArbiter;
    id _fileReactor;
    id _purposeID;
    NSURL *_recentFilePresenterURL;
    id _accessClaimIDOrIDs;
    BOOL _isCancelled;
    NSMutableDictionary *_movedItems;
}







+ (void)addFilePresenter:(id<NSFilePresenter>)filePresenter;
+ (void)removeFilePresenter:(id<NSFilePresenter>)filePresenter;

@property (class, readonly, copy) NSArray<id<NSFilePresenter>> *filePresenters;
# 122 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileCoordinator.h" 3
- (instancetype)initWithFilePresenter:(nullable id<NSFilePresenter>)filePresenterOrNil __attribute__((objc_designated_initializer));
# 136 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileCoordinator.h" 3
@property (copy) NSString *purposeIdentifier __attribute__((availability(ios,introduced=5_0)));
# 172 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileCoordinator.h" 3
- (void)coordinateAccessWithIntents:(NSArray<NSFileAccessIntent *> *)intents queue:(NSOperationQueue *)queue byAccessor:(void (^)(NSError * _Nullable error))accessor __attribute__((availability(ios,introduced=8_0)));
# 184 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileCoordinator.h" 3
- (void)coordinateReadingItemAtURL:(NSURL *)url options:(NSFileCoordinatorReadingOptions)options error:(NSError **)outError byAccessor:(void (^)(NSURL *newURL))reader;
- (void)coordinateWritingItemAtURL:(NSURL *)url options:(NSFileCoordinatorWritingOptions)options error:(NSError **)outError byAccessor:(void (^)(NSURL *newURL))writer;
- (void)coordinateReadingItemAtURL:(NSURL *)readingURL options:(NSFileCoordinatorReadingOptions)readingOptions writingItemAtURL:(NSURL *)writingURL options:(NSFileCoordinatorWritingOptions)writingOptions error:(NSError **)outError byAccessor:(void (^)(NSURL *newReadingURL, NSURL *newWritingURL))readerWriter;
- (void)coordinateWritingItemAtURL:(NSURL *)url1 options:(NSFileCoordinatorWritingOptions)options1 writingItemAtURL:(NSURL *)url2 options:(NSFileCoordinatorWritingOptions)options2 error:(NSError **)outError byAccessor:(void (^)(NSURL *newURL1, NSURL *newURL2))writer;
# 197 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileCoordinator.h" 3
- (void)prepareForReadingItemsAtURLs:(NSArray<NSURL *> *)readingURLs options:(NSFileCoordinatorReadingOptions)readingOptions writingItemsAtURLs:(NSArray<NSURL *> *)writingURLs options:(NSFileCoordinatorWritingOptions)writingOptions error:(NSError **)outError byAccessor:(void (^)(void (^completionHandler)(void)))batchAccessor;
# 207 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileCoordinator.h" 3
- (void)itemAtURL:(NSURL *)oldURL willMoveToURL:(NSURL *)newURL __attribute__((availability(ios,introduced=6_0)));
# 220 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileCoordinator.h" 3
- (void)itemAtURL:(NSURL *)oldURL didMoveToURL:(NSURL *)newURL;







- (void)cancel;

@end
# 113 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFilePresenter.h" 1 3








@class NSError, NSFileVersion, NSOperationQueue, NSURL;
# 19 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFilePresenter.h" 3
@protocol NSFilePresenter<NSObject>

@required





@property (nullable, readonly, copy) NSURL *presentedItemURL;





@property (readonly, retain) NSOperationQueue *presentedItemOperationQueue;

@optional



@property (nullable, readonly, copy) NSURL *primaryPresentedItemURL __attribute__((availability(ios,introduced=NA)));





- (void)relinquishPresentedItemToReader:(void (^)(void (^ _Nullable reacquirer)(void)))reader;





- (void)relinquishPresentedItemToWriter:(void (^)(void (^ _Nullable reacquirer)(void)))writer;







- (void)savePresentedItemChangesWithCompletionHandler:(void (^)(NSError * _Nullable errorOrNil))completionHandler;







- (void)accommodatePresentedItemDeletionWithCompletionHandler:(void (^)(NSError * _Nullable errorOrNil))completionHandler;
# 77 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFilePresenter.h" 3
- (void)presentedItemDidMoveToURL:(NSURL *)newURL;
# 90 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFilePresenter.h" 3
- (void)presentedItemDidChange;





- (void)presentedItemDidGainVersion:(NSFileVersion *)version;
- (void)presentedItemDidLoseVersion:(NSFileVersion *)version;
- (void)presentedItemDidResolveConflictVersion:(NSFileVersion *)version;
# 109 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFilePresenter.h" 3
- (void)accommodatePresentedSubitemDeletionAtURL:(NSURL *)url completionHandler:(void (^)(NSError * _Nullable errorOrNil))completionHandler;





- (void)presentedSubitemDidAppearAtURL:(NSURL *)url;





- (void)presentedSubitemAtURL:(NSURL *)oldURL didMoveToURL:(NSURL *)newURL;





- (void)presentedSubitemDidChangeAtURL:(NSURL *)url;



- (void)presentedSubitemAtURL:(NSURL *)url didGainVersion:(NSFileVersion *)version;
- (void)presentedSubitemAtURL:(NSURL *)url didLoseVersion:(NSFileVersion *)version;
- (void)presentedSubitemAtURL:(NSURL *)url didResolveConflictVersion:(NSFileVersion *)version;

@end
# 114 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileVersion.h" 1 3








@class NSArray<ObjectType>, NSDate, NSDictionary, NSError, NSString, NSURL, NSPersonNameComponents;



typedef enum NSFileVersionAddingOptions : NSUInteger NSFileVersionAddingOptions; enum NSFileVersionAddingOptions : NSUInteger {



    NSFileVersionAddingByMoving = 1 << 0

};

typedef enum NSFileVersionReplacingOptions : NSUInteger NSFileVersionReplacingOptions; enum NSFileVersionReplacingOptions : NSUInteger {



    NSFileVersionReplacingByMoving = 1 << 0

};



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface NSFileVersion : NSObject {
@private
    NSURL *_fileURL;
    id _addition;
    id _deadVersionIdentifier;
    id _nonLocalVersion;
    NSURL *_contentsURL;
    BOOL _isBackup;
    NSString *_localizedName;
    NSString *_localizedComputerName;
    NSDate *_modificationDate;
    BOOL _isResolved;
    BOOL _contentsURLIsAccessed;
    id _reserved;
    NSString *_name;
}



+ (nullable NSFileVersion *)currentVersionOfItemAtURL:(NSURL *)url;



+ (nullable NSArray<NSFileVersion *> *)otherVersionsOfItemAtURL:(NSURL *)url;



+ (nullable NSArray<NSFileVersion *> *)unresolvedConflictVersionsOfItemAtURL:(NSURL *)url;







+ (void)getNonlocalVersionsOfItemAtURL:(NSURL *)url completionHandler:(void (^)(NSArray<NSFileVersion *> * _Nullable nonlocalFileVersions, NSError * _Nullable error))completionHandler __attribute__((availability(ios,introduced=8_0)));



+ (nullable NSFileVersion *)versionOfItemAtURL:(NSURL *)url forPersistentIdentifier:(id)persistentIdentifier;







+ (nullable NSFileVersion *)addVersionOfItemAtURL:(NSURL *)url withContentsOfURL:(NSURL *)contentsURL options:(NSFileVersionAddingOptions)options error:(NSError **)outError __attribute__((availability(ios,unavailable)));



+ (NSURL *)temporaryDirectoryURLForNewVersionOfItemAtURL:(NSURL *)url __attribute__((availability(ios,unavailable)));



@property (readonly, copy) NSURL *URL;



@property (nullable, readonly, copy) NSString *localizedName;



@property (nullable, readonly, copy) NSString *localizedNameOfSavingComputer;



@property (nullable, readonly, copy) NSDate *modificationDate;



@property (readonly, retain) id<NSCoding> persistentIdentifier;



@property (readonly, getter=isConflict) BOOL conflict;







@property (getter=isResolved) BOOL resolved;
# 127 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileVersion.h" 3
@property (getter=isDiscardable) BOOL discardable __attribute__((availability(ios,unavailable)));



@property (readonly) BOOL hasLocalContents __attribute__((availability(ios,introduced=8_0)));



@property (readonly) BOOL hasThumbnail __attribute__((availability(ios,introduced=8_0)));





- (nullable NSURL *)replaceItemAtURL:(NSURL *)url options:(NSFileVersionReplacingOptions)options error:(NSError **)error;







- (BOOL)removeAndReturnError:(NSError **)outError;





+ (BOOL)removeOtherVersionsOfItemAtURL:(NSURL *)url error:(NSError **)outError;

@end
# 115 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileWrapper.h" 1 3







@class NSData, NSDictionary<KeyType, ObjectType>, NSError, NSString, NSURL;



typedef enum NSFileWrapperReadingOptions : NSUInteger NSFileWrapperReadingOptions; enum NSFileWrapperReadingOptions : NSUInteger {



    NSFileWrapperReadingImmediate = 1 << 0,



    NSFileWrapperReadingWithoutMapping = 1 << 1

} __attribute__((availability(ios,introduced=4_0)));

typedef enum NSFileWrapperWritingOptions : NSUInteger NSFileWrapperWritingOptions; enum NSFileWrapperWritingOptions : NSUInteger {



    NSFileWrapperWritingAtomic = 1 << 0,



    NSFileWrapperWritingWithNameUpdating = 1 << 1

} __attribute__((availability(ios,introduced=4_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))
@interface NSFileWrapper : NSObject<NSCoding> {
    @private
    NSDictionary *_fileAttributes;
    NSString *_preferredFileName;
    NSString *_fileName;
    id _contents;
    id _icon;
    id _moreVars;
}





- (nullable instancetype)initWithURL:(NSURL *)url options:(NSFileWrapperReadingOptions)options error:(NSError **)outError __attribute__((objc_designated_initializer)) __attribute__((availability(ios,introduced=4_0)));



- (instancetype)initDirectoryWithFileWrappers:(NSDictionary<NSString *, NSFileWrapper *> *)childrenByPreferredName __attribute__((objc_designated_initializer));



- (instancetype)initRegularFileWithContents:(NSData *)contents __attribute__((objc_designated_initializer));



- (instancetype)initSymbolicLinkWithDestinationURL:(NSURL *)url __attribute__((objc_designated_initializer)) __attribute__((availability(ios,introduced=4_0)));



- (nullable instancetype)initWithSerializedRepresentation:(NSData *)serializeRepresentation __attribute__((objc_designated_initializer));

- (nullable instancetype)initWithCoder:(NSCoder *)inCoder __attribute__((objc_designated_initializer));





@property (readonly, getter=isDirectory) BOOL directory;
@property (readonly, getter=isRegularFile) BOOL regularFile;
@property (readonly, getter=isSymbolicLink) BOOL symbolicLink;





@property (nullable, copy) NSString *preferredFilename;



@property (nullable, copy) NSString *filename;



@property (copy) NSDictionary<NSString *, id> *fileAttributes;
# 100 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSFileWrapper.h" 3
- (BOOL)matchesContentsOfURL:(NSURL *)url __attribute__((availability(ios,introduced=4_0)));



- (BOOL)readFromURL:(NSURL *)url options:(NSFileWrapperReadingOptions)options error:(NSError **)outError __attribute__((availability(ios,introduced=4_0)));





- (BOOL)writeToURL:(NSURL *)url options:(NSFileWrapperWritingOptions)options originalContentsURL:(nullable NSURL *)originalContentsURL error:(NSError **)outError __attribute__((availability(ios,introduced=4_0)));





@property (nullable, readonly, copy) NSData *serializedRepresentation;







- (NSString *)addFileWrapper:(NSFileWrapper *)child;



- (NSString *)addRegularFileWithContents:(NSData *)data preferredFilename:(NSString *)fileName;



- (void)removeFileWrapper:(NSFileWrapper *)child;



@property (nullable, readonly, copy) NSDictionary<NSString *, NSFileWrapper *> *fileWrappers;



- (nullable NSString *)keyForFileWrapper:(NSFileWrapper *)child;







@property (nullable, readonly, copy) NSData *regularFileContents;







@property (nullable, readonly, copy) NSURL *symbolicLinkDestinationURL __attribute__((availability(ios,introduced=4_0)));

@end
# 116 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSLinguisticTagger.h" 1 3







@class NSArray<ObjectType>, NSOrthography, NSValue;







extern NSString *const NSLinguisticTagSchemeTokenType __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagSchemeLexicalClass __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagSchemeNameType __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagSchemeNameTypeOrLexicalClass __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagSchemeLemma __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagSchemeLanguage __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagSchemeScript __attribute__((availability(ios,introduced=5_0)));


extern NSString *const NSLinguisticTagWord __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagPunctuation __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagWhitespace __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagOther __attribute__((availability(ios,introduced=5_0)));


extern NSString *const NSLinguisticTagNoun __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagVerb __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagAdjective __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagAdverb __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagPronoun __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagDeterminer __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagParticle __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagPreposition __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagNumber __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagConjunction __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagInterjection __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagClassifier __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagIdiom __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagOtherWord __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagSentenceTerminator __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagOpenQuote __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagCloseQuote __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagOpenParenthesis __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagCloseParenthesis __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagWordJoiner __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagDash __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagOtherPunctuation __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagParagraphBreak __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagOtherWhitespace __attribute__((availability(ios,introduced=5_0)));


extern NSString *const NSLinguisticTagPersonalName __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagPlaceName __attribute__((availability(ios,introduced=5_0)));
extern NSString *const NSLinguisticTagOrganizationName __attribute__((availability(ios,introduced=5_0)));





typedef enum NSLinguisticTaggerOptions : NSUInteger NSLinguisticTaggerOptions; enum NSLinguisticTaggerOptions : NSUInteger {
    NSLinguisticTaggerOmitWords = 1 << 0,
    NSLinguisticTaggerOmitPunctuation = 1 << 1,
    NSLinguisticTaggerOmitWhitespace = 1 << 2,
    NSLinguisticTaggerOmitOther = 1 << 3,
    NSLinguisticTaggerJoinNames = 1 << 4
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface NSLinguisticTagger : NSObject {
@private
    NSArray *_schemes;
    NSUInteger _options;
    NSString *_string;
    id _orthographyArray;
    id _tokenArray;
    id _reserved;
}



- (instancetype)initWithTagSchemes:(NSArray<NSString *> *)tagSchemes options:(NSUInteger)opts __attribute__((objc_designated_initializer)) __attribute__((availability(ios,introduced=5_0)));

@property (readonly, copy) NSArray<NSString *> *tagSchemes __attribute__((availability(ios,introduced=5_0)));
@property (nullable, retain) NSString *string __attribute__((availability(ios,introduced=5_0)));



+ (NSArray<NSString *> *)availableTagSchemesForLanguage:(NSString *)language __attribute__((availability(ios,introduced=5_0)));



- (void)setOrthography:(nullable NSOrthography *)orthography range:(NSRange)range __attribute__((availability(ios,introduced=5_0)));
- (nullable NSOrthography *)orthographyAtIndex:(NSUInteger)charIndex effectiveRange:(nullable NSRangePointer)effectiveRange __attribute__((availability(ios,introduced=5_0)));



- (void)stringEditedInRange:(NSRange)newRange changeInLength:(NSInteger)delta __attribute__((availability(ios,introduced=5_0)));



- (void)enumerateTagsInRange:(NSRange)range scheme:(NSString *)tagScheme options:(NSLinguisticTaggerOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSString *tag, NSRange tokenRange, NSRange sentenceRange, BOOL *stop))block __attribute__((availability(ios,introduced=5_0)));

- (NSRange)sentenceRangeForRange:(NSRange)range __attribute__((availability(ios,introduced=5_0)));
- (nullable NSString *)tagAtIndex:(NSUInteger)charIndex scheme:(NSString *)tagScheme tokenRange:(nullable NSRangePointer)tokenRange sentenceRange:(nullable NSRangePointer)sentenceRange __attribute__((availability(ios,introduced=5_0)));
- (NSArray<NSString *> *)tagsInRange:(NSRange)range scheme:(NSString *)tagScheme options:(NSLinguisticTaggerOptions)opts tokenRanges:(NSArray<NSValue *> * _Nullable * _Nullable)tokenRanges __attribute__((availability(ios,introduced=5_0)));
- (nullable NSArray<NSString *> *)possibleTagsAtIndex:(NSUInteger)charIndex scheme:(NSString *)tagScheme tokenRange:(nullable NSRangePointer)tokenRange sentenceRange:(nullable NSRangePointer)sentenceRange scores:(NSArray<NSValue *> * _Nullable * _Nullable)scores __attribute__((availability(ios,introduced=5_0)));

@end

@interface NSString (NSLinguisticAnalysis)



- (NSArray<NSString *> *)linguisticTagsInRange:(NSRange)range scheme:(NSString *)tagScheme options:(NSLinguisticTaggerOptions)opts orthography:(nullable NSOrthography *)orthography tokenRanges:(NSArray<NSValue *> * _Nullable * _Nullable)tokenRanges __attribute__((availability(ios,introduced=5_0)));
- (void)enumerateLinguisticTagsInRange:(NSRange)range scheme:(NSString *)tagScheme options:(NSLinguisticTaggerOptions)opts orthography:(nullable NSOrthography *)orthography usingBlock:(void (__attribute__((noescape)) ^)(NSString *tag, NSRange tokenRange, NSRange sentenceRange, BOOL *stop))block __attribute__((availability(ios,introduced=5_0)));

@end
# 118 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMetadata.h" 1 3




# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMetadataAttributes.h" 1 3






@class NSString;





extern NSString * const NSMetadataItemFSNameKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataItemDisplayNameKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataItemURLKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataItemPathKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataItemFSSizeKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataItemFSCreationDateKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataItemFSContentChangeDateKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataItemContentTypeKey __attribute__((availability(ios,introduced=8_0)));
extern NSString * const NSMetadataItemContentTypeTreeKey __attribute__((availability(ios,introduced=8_0)));

extern NSString * const NSMetadataItemIsUbiquitousKey __attribute__((availability(ios,introduced=5_0)));

extern NSString * const NSMetadataUbiquitousItemHasUnresolvedConflictsKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataUbiquitousItemIsDownloadedKey __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use NSMetadataUbiquitousItemDownloadingStatusKey instead")));
extern NSString * const NSMetadataUbiquitousItemDownloadingStatusKey __attribute__((availability(ios,introduced=7_0)));
extern NSString * const NSMetadataUbiquitousItemDownloadingStatusNotDownloaded __attribute__((availability(ios,introduced=7_0)));
extern NSString * const NSMetadataUbiquitousItemDownloadingStatusDownloaded __attribute__((availability(ios,introduced=7_0)));
extern NSString * const NSMetadataUbiquitousItemDownloadingStatusCurrent __attribute__((availability(ios,introduced=7_0)));
extern NSString * const NSMetadataUbiquitousItemIsDownloadingKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataUbiquitousItemIsUploadedKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataUbiquitousItemIsUploadingKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataUbiquitousItemPercentDownloadedKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataUbiquitousItemPercentUploadedKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataUbiquitousItemDownloadingErrorKey __attribute__((availability(ios,introduced=7_0)));
extern NSString * const NSMetadataUbiquitousItemUploadingErrorKey __attribute__((availability(ios,introduced=7_0)));
extern NSString * const NSMetadataUbiquitousItemDownloadRequestedKey __attribute__((availability(ios,introduced=8_0)));
extern NSString * const NSMetadataUbiquitousItemIsExternalDocumentKey __attribute__((availability(ios,introduced=8_0)));
extern NSString * const NSMetadataUbiquitousItemContainerDisplayNameKey __attribute__((availability(ios,introduced=8_0)));
extern NSString * const NSMetadataUbiquitousItemURLInLocalContainerKey __attribute__((availability(ios,introduced=8_0)));



extern NSString * const NSMetadataItemAttributeChangeDateKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemKeywordsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemTitleKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAuthorsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemEditorsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemParticipantsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemProjectsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemDownloadedDateKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemWhereFromsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemCommentKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemCopyrightKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemLastUsedDateKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemContentCreationDateKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemContentModificationDateKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemDateAddedKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemDurationSecondsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemContactKeywordsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemVersionKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemPixelHeightKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemPixelWidthKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemPixelCountKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemColorSpaceKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemBitsPerSampleKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemFlashOnOffKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemFocalLengthKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAcquisitionMakeKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAcquisitionModelKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemISOSpeedKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemOrientationKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemLayerNamesKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemWhiteBalanceKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemApertureKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemProfileNameKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemResolutionWidthDPIKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemResolutionHeightDPIKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemExposureModeKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemExposureTimeSecondsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemEXIFVersionKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemCameraOwnerKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemFocalLength35mmKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemLensModelKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemEXIFGPSVersionKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAltitudeKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemLatitudeKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemLongitudeKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemSpeedKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemTimestampKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGPSTrackKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemImageDirectionKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemNamedLocationKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemGPSStatusKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGPSMeasureModeKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGPSDOPKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGPSMapDatumKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGPSDestLatitudeKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGPSDestLongitudeKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGPSDestBearingKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGPSDestDistanceKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGPSProcessingMethodKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGPSAreaInformationKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGPSDateStampKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGPSDifferentalKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemCodecsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemMediaTypesKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemStreamableKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemTotalBitRateKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemVideoBitRateKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAudioBitRateKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemDeliveryTypeKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemAlbumKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemHasAlphaChannelKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemRedEyeOnOffKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemMeteringModeKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemMaxApertureKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemFNumberKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemExposureProgramKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemExposureTimeStringKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemHeadlineKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemInstructionsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemCityKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemStateOrProvinceKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemCountryKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemTextContentKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemAudioSampleRateKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAudioChannelCountKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemTempoKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemKeySignatureKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemTimeSignatureKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAudioEncodingApplicationKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemComposerKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemLyricistKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAudioTrackNumberKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemRecordingDateKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemMusicalGenreKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemIsGeneralMIDISequenceKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemRecordingYearKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemOrganizationsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemLanguagesKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemRightsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemPublishersKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemContributorsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemCoverageKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemSubjectKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemThemeKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemDescriptionKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemIdentifierKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAudiencesKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemNumberOfPagesKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemPageWidthKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemPageHeightKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemSecurityMethodKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemCreatorKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemEncodingApplicationsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemDueDateKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemStarRatingKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemPhoneNumbersKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemEmailAddressesKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemInstantMessageAddressesKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemKindKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemRecipientsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemFinderCommentKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemFontsKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemAppleLoopsRootKeyKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAppleLoopsKeyFilterTypeKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAppleLoopsLoopModeKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAppleLoopDescriptorsKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemMusicalInstrumentCategoryKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemMusicalInstrumentNameKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemCFBundleIdentifierKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemInformationKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemDirectorKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemProducerKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemGenreKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemPerformersKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemOriginalFormatKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemOriginalSourceKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAuthorEmailAddressesKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemRecipientEmailAddressesKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemAuthorAddressesKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemRecipientAddressesKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemIsLikelyJunkKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemExecutableArchitecturesKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemExecutablePlatformKey __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataItemApplicationCategoriesKey __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataItemIsApplicationManagedKey __attribute__((availability(ios,unavailable)));
# 6 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSMetadata.h" 2 3





@class NSString, NSURL, NSArray<ObjectType>, NSDictionary<KeyType, ObjectType>, NSPredicate, NSOperationQueue, NSSortDescriptor;
@class NSMetadataItem, NSMetadataQueryAttributeValueTuple, NSMetadataQueryResultGroup;
@protocol NSMetadataQueryDelegate;



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface NSMetadataQuery : NSObject {
@private
    NSUInteger _flags;
    NSTimeInterval _interval;
    id _private[11];
    void *_reserved;
}

@property (nullable, assign) id<NSMetadataQueryDelegate> delegate;
@property (nullable, copy) NSPredicate *predicate;
@property (copy) NSArray<NSSortDescriptor *> *sortDescriptors;
@property (copy) NSArray<NSString *> *valueListAttributes;
@property (nullable, copy) NSArray<NSString *> *groupingAttributes;
@property NSTimeInterval notificationBatchingInterval;

@property (copy) NSArray *searchScopes;





@property (nullable, copy) NSArray *searchItems __attribute__((availability(ios,introduced=7_0)));



@property (nullable, retain) NSOperationQueue *operationQueue __attribute__((availability(ios,introduced=7_0)));


- (BOOL)startQuery;
- (void)stopQuery;

@property (readonly, getter=isStarted) BOOL started;
@property (readonly, getter=isGathering) BOOL gathering;
@property (readonly, getter=isStopped) BOOL stopped;

- (void)disableUpdates;
- (void)enableUpdates;



@property (readonly) NSUInteger resultCount;
- (id)resultAtIndex:(NSUInteger)idx;

- (void)enumerateResultsUsingBlock:(void (__attribute__((noescape)) ^)(id result, NSUInteger idx, BOOL *stop))block __attribute__((availability(ios,introduced=7_0)));
- (void)enumerateResultsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(id result, NSUInteger idx, BOOL *stop))block __attribute__((availability(ios,introduced=7_0)));

@property (readonly, copy) NSArray *results;

- (NSUInteger)indexOfResult:(id)result;

@property (readonly, copy) NSDictionary<NSString *, NSArray<NSMetadataQueryAttributeValueTuple *> *> *valueLists;

@property (readonly, copy) NSArray<NSMetadataQueryResultGroup *> *groupedResults;

- (nullable id)valueOfAttribute:(NSString *)attrName forResultAtIndex:(NSUInteger)idx;

@end

@protocol NSMetadataQueryDelegate <NSObject>
@optional

- (id)metadataQuery:(NSMetadataQuery *)query replacementObjectForResultObject:(NSMetadataItem *)result;
- (id)metadataQuery:(NSMetadataQuery *)query replacementValueForAttribute:(NSString *)attrName value:(id)attrValue;

@end


extern NSNotificationName const NSMetadataQueryDidStartGatheringNotification __attribute__((availability(ios,introduced=5_0)));
extern NSNotificationName const NSMetadataQueryGatheringProgressNotification __attribute__((availability(ios,introduced=5_0)));
extern NSNotificationName const NSMetadataQueryDidFinishGatheringNotification __attribute__((availability(ios,introduced=5_0)));
extern NSNotificationName const NSMetadataQueryDidUpdateNotification __attribute__((availability(ios,introduced=5_0)));


extern NSString * const NSMetadataQueryUpdateAddedItemsKey __attribute__((availability(ios,introduced=8_0)));
extern NSString * const NSMetadataQueryUpdateChangedItemsKey __attribute__((availability(ios,introduced=8_0)));
extern NSString * const NSMetadataQueryUpdateRemovedItemsKey __attribute__((availability(ios,introduced=8_0)));

extern NSString * const NSMetadataQueryResultContentRelevanceAttribute __attribute__((availability(ios,introduced=5_0)));


extern NSString * const NSMetadataQueryUserHomeScope __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataQueryLocalComputerScope __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataQueryNetworkScope __attribute__((availability(ios,unavailable)));

extern NSString * const NSMetadataQueryIndexedLocalComputerScope __attribute__((availability(ios,unavailable)));
extern NSString * const NSMetadataQueryIndexedNetworkScope __attribute__((availability(ios,unavailable)));


extern NSString * const NSMetadataQueryUbiquitousDocumentsScope __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataQueryUbiquitousDataScope __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSMetadataQueryAccessibleUbiquitousExternalDocumentsScope __attribute__((availability(ios,introduced=8_0)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface NSMetadataItem : NSObject {
@private
    id _item;
    void *_reserved;
}

- (nullable instancetype)initWithURL:(NSURL *)url __attribute__((objc_designated_initializer)) __attribute__((availability(ios,unavailable)));

- (nullable id)valueForAttribute:(NSString *)key;
- (nullable NSDictionary<NSString *, id> *)valuesForAttributes:(NSArray<NSString *> *)keys;

@property (readonly, copy) NSArray<NSString *> *attributes;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface NSMetadataQueryAttributeValueTuple : NSObject {
@private
    id _attr;
    id _value;
    NSUInteger _count;
    void *_reserved;
}

@property (readonly, copy) NSString *attribute;
@property (nullable, readonly, retain) id value;
@property (readonly) NSUInteger count;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface NSMetadataQueryResultGroup : NSObject {
@private
    id _private[9];
    NSUInteger _private2[1];
    void *_reserved;
}

@property (readonly, copy) NSString *attribute;
@property (readonly, retain) id value;

@property (nullable, readonly, copy) NSArray<NSMetadataQueryResultGroup *> *subgroups;

@property (readonly) NSUInteger resultCount;
- (id)resultAtIndex:(NSUInteger)idx;

@property (readonly, copy) NSArray *results;

@end
# 119 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSNetServices.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSNetServices.h" 3
@class NSArray<ObjectType>, NSData, NSDictionary<KeyType, ObjectType>, NSInputStream, NSNumber, NSOutputStream, NSRunLoop, NSString;
@protocol NSNetServiceDelegate, NSNetServiceBrowserDelegate;





extern NSString * const NSNetServicesErrorCode;
extern NSErrorDomain const NSNetServicesErrorDomain;

typedef enum NSNetServicesError : NSInteger NSNetServicesError; enum NSNetServicesError : NSInteger {



    NSNetServicesUnknownError = -72000L,



    NSNetServicesCollisionError = -72001L,



    NSNetServicesNotFoundError = -72002L,



    NSNetServicesActivityInProgress = -72003L,



    NSNetServicesBadArgumentError = -72004L,



    NSNetServicesCancelledError = -72005L,



    NSNetServicesInvalidError = -72006L,



    NSNetServicesTimeoutError = -72007L,

};


typedef enum NSNetServiceOptions : NSUInteger NSNetServiceOptions; enum NSNetServiceOptions : NSUInteger {




    NSNetServiceNoAutoRename = 1UL << 0,
# 75 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSNetServices.h" 3
    NSNetServiceListenForConnections __attribute__((availability(ios,introduced=7_0))) = 1UL << 1
};





__attribute__((availability(watchos,unavailable)))
@interface NSNetService : NSObject {
@private
    id _netService;
    id _delegate;
    id _reserved;
}



- (instancetype)initWithDomain:(NSString *)domain type:(NSString *)type name:(NSString *)name port:(int)port __attribute__((objc_designated_initializer));





- (instancetype)initWithDomain:(NSString *)domain type:(NSString *)type name:(NSString *)name;



- (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;
- (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;



@property (nullable, assign) id <NSNetServiceDelegate> delegate;



@property BOOL includesPeerToPeer __attribute__((availability(ios,introduced=7_0)));



@property (readonly, copy) NSString *name;



@property (readonly, copy) NSString *type;



@property (readonly, copy) NSString *domain;



@property (nullable, readonly, copy) NSString *hostName;



@property (nullable, readonly, copy) NSArray<NSData *> *addresses;



@property (readonly) NSInteger port __attribute__((availability(ios,introduced=2_0)));





- (void)publish;





- (void)publishWithOptions:(NSNetServiceOptions)options __attribute__((availability(ios,introduced=2_0)));




- (void)resolve __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" )));



- (void)stop;



+ (NSDictionary<NSString *, NSData *> *)dictionaryFromTXTRecordData:(NSData *)txtData;



+ (NSData *)dataFromTXTRecordDictionary:(NSDictionary<NSString *, NSData *> *)txtDictionary;



- (void)resolveWithTimeout:(NSTimeInterval)timeout;



- (BOOL)getInputStream:(out __attribute__((objc_ownership(strong))) NSInputStream * _Nullable * _Nullable)inputStream outputStream:(out __attribute__((objc_ownership(strong))) NSOutputStream * _Nullable * _Nullable)outputStream;



- (BOOL)setTXTRecordData:(nullable NSData *)recordData;



- (nullable NSData *)TXTRecordData;



- (void)startMonitoring;



- (void)stopMonitoring;


@end



__attribute__((availability(watchos,unavailable)))
@interface NSNetServiceBrowser : NSObject {
@private
    id _netServiceBrowser;
    id _delegate;
    void * _reserved;
}

- (instancetype)init;



@property (nullable, assign) id <NSNetServiceBrowserDelegate> delegate;



@property BOOL includesPeerToPeer __attribute__((availability(ios,introduced=7_0)));



- (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;
- (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;



- (void)searchForBrowsableDomains;



- (void)searchForRegistrationDomains;



- (void)searchForServicesOfType:(NSString *)type inDomain:(NSString *)domainString;



- (void)stop;

@end



__attribute__((availability(watchos,unavailable)))
@protocol NSNetServiceDelegate <NSObject>
@optional



- (void)netServiceWillPublish:(NSNetService *)sender;



- (void)netServiceDidPublish:(NSNetService *)sender;



- (void)netService:(NSNetService *)sender didNotPublish:(NSDictionary<NSString *, NSNumber *> *)errorDict;



- (void)netServiceWillResolve:(NSNetService *)sender;



- (void)netServiceDidResolveAddress:(NSNetService *)sender;



- (void)netService:(NSNetService *)sender didNotResolve:(NSDictionary<NSString *, NSNumber *> *)errorDict;



- (void)netServiceDidStop:(NSNetService *)sender;



- (void)netService:(NSNetService *)sender didUpdateTXTRecordData:(NSData *)data;
# 285 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSNetServices.h" 3
- (void)netService:(NSNetService *)sender didAcceptConnectionWithInputStream:(NSInputStream *)inputStream outputStream:(NSOutputStream *)outputStream __attribute__((availability(ios,introduced=7_0)));

@end



__attribute__((availability(watchos,unavailable)))
@protocol NSNetServiceBrowserDelegate <NSObject>
@optional



- (void)netServiceBrowserWillSearch:(NSNetServiceBrowser *)browser;



- (void)netServiceBrowserDidStopSearch:(NSNetServiceBrowser *)browser;



- (void)netServiceBrowser:(NSNetServiceBrowser *)browser didNotSearch:(NSDictionary<NSString *, NSNumber *> *)errorDict;



- (void)netServiceBrowser:(NSNetServiceBrowser *)browser didFindDomain:(NSString *)domainString moreComing:(BOOL)moreComing;



- (void)netServiceBrowser:(NSNetServiceBrowser *)browser didFindService:(NSNetService *)service moreComing:(BOOL)moreComing;



- (void)netServiceBrowser:(NSNetServiceBrowser *)browser didRemoveDomain:(NSString *)domainString moreComing:(BOOL)moreComing;



- (void)netServiceBrowser:(NSNetServiceBrowser *)browser didRemoveService:(NSNetService *)service moreComing:(BOOL)moreComing;

@end
# 121 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUbiquitousKeyValueStore.h" 1 3







@class NSArray, NSDictionary<KeyType, ObjectType>, NSData, NSString;



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface NSUbiquitousKeyValueStore : NSObject {
@private
    id _private1;
    id _private2;
    id _private3;
    void *_private4;
    void *_reserved[3];
    int _daemonWakeToken;



}

+ (NSUbiquitousKeyValueStore *)defaultStore;

- (nullable id)objectForKey:(NSString *)aKey;
- (void)setObject:(nullable id)anObject forKey:(NSString *)aKey;
- (void)removeObjectForKey:(NSString *)aKey;

- (nullable NSString *)stringForKey:(NSString *)aKey;
- (nullable NSArray *)arrayForKey:(NSString *)aKey;
- (nullable NSDictionary<NSString *, id> *)dictionaryForKey:(NSString *)aKey;
- (nullable NSData *)dataForKey:(NSString *)aKey;
- (long long)longLongForKey:(NSString *)aKey;
- (double)doubleForKey:(NSString *)aKey;
- (BOOL)boolForKey:(NSString *)aKey;

- (void)setString:(nullable NSString *)aString forKey:(NSString *)aKey;
- (void)setData:(nullable NSData *)aData forKey:(NSString *)aKey;
- (void)setArray:(nullable NSArray *)anArray forKey:(NSString *)aKey;
- (void)setDictionary:(nullable NSDictionary<NSString *, id> *)aDictionary forKey:(NSString *)aKey;
- (void)setLongLong:(long long)value forKey:(NSString *)aKey;
- (void)setDouble:(double)value forKey:(NSString *)aKey;
- (void)setBool:(BOOL)value forKey:(NSString *)aKey;

@property (readonly, copy) NSDictionary<NSString *, id> *dictionaryRepresentation;

- (BOOL)synchronize;

@end

extern NSNotificationName const NSUbiquitousKeyValueStoreDidChangeExternallyNotification __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSUbiquitousKeyValueStoreChangeReasonKey __attribute__((availability(ios,introduced=5_0)));
extern NSString * const NSUbiquitousKeyValueStoreChangedKeysKey __attribute__((availability(ios,introduced=5_0)));

enum : NSInteger {
    NSUbiquitousKeyValueStoreServerChange __attribute__((availability(ios,introduced=5_0))),
    NSUbiquitousKeyValueStoreInitialSyncChange __attribute__((availability(ios,introduced=5_0))),
    NSUbiquitousKeyValueStoreQuotaViolationChange __attribute__((availability(ios,introduced=5_0))),
    NSUbiquitousKeyValueStoreAccountChange __attribute__((availability(ios,introduced=6_0)))
};
# 124 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUndoManager.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUndoManager.h" 3
@class NSArray<ObjectType>;
@class NSString;




static const NSUInteger NSUndoCloseGroupingRunLoopOrdering = 350000;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))
@interface NSUndoManager : NSObject {
    @private
    id _undoStack;
    id _redoStack;
    NSArray *_runLoopModes;
    uint64_t _NSUndoManagerPrivate1;
    id _target;
    id _proxy;
    void *_NSUndoManagerPrivate2;
    void *_NSUndoManagerPrivate3;
}



- (void)beginUndoGrouping;
- (void)endUndoGrouping;


@property (readonly) NSInteger groupingLevel;




- (void)disableUndoRegistration;
- (void)enableUndoRegistration;
@property (readonly, getter=isUndoRegistrationEnabled) BOOL undoRegistrationEnabled;



@property BOOL groupsByEvent;






@property NSUInteger levelsOfUndo;






@property (copy) NSArray<NSRunLoopMode> *runLoopModes;



- (void)undo;



- (void)redo;


- (void)undoNestedGroup;



@property (readonly) BOOL canUndo;
@property (readonly) BOOL canRedo;


@property (readonly, getter=isUndoing) BOOL undoing;
@property (readonly, getter=isRedoing) BOOL redoing;





- (void)removeAllActions;

- (void)removeAllActionsWithTarget:(id)target;



- (void)registerUndoWithTarget:(id)target selector:(SEL)selector object:(nullable id)anObject;



- (id)prepareWithInvocationTarget:(id)target;
# 116 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUndoManager.h" 3
- (void)registerUndoWithTarget:(id)target handler:(void (^)(id target))undoHandler __attribute__((availability(ios,introduced=9_0))) __attribute__((swift_private));

- (void)setActionIsDiscardable:(BOOL)discardable __attribute__((availability(ios,introduced=5_0)));



extern NSString * const NSUndoManagerGroupIsDiscardableKey __attribute__((availability(ios,introduced=5_0)));

@property (readonly) BOOL undoActionIsDiscardable __attribute__((availability(ios,introduced=5_0)));
@property (readonly) BOOL redoActionIsDiscardable __attribute__((availability(ios,introduced=5_0)));




@property (readonly, copy) NSString *undoActionName;
@property (readonly, copy) NSString *redoActionName;



- (void)setActionName:(NSString *)actionName;





@property (readonly, copy) NSString *undoMenuItemTitle;
@property (readonly, copy) NSString *redoMenuItemTitle;






- (NSString *)undoMenuTitleForUndoActionName:(NSString *)actionName;
- (NSString *)redoMenuTitleForUndoActionName:(NSString *)actionName;




@end

extern NSNotificationName const NSUndoManagerCheckpointNotification __attribute__((availability(ios,introduced=3_0)));




extern NSNotificationName const NSUndoManagerWillUndoChangeNotification __attribute__((availability(ios,introduced=3_0)));
extern NSNotificationName const NSUndoManagerWillRedoChangeNotification __attribute__((availability(ios,introduced=3_0)));

extern NSNotificationName const NSUndoManagerDidUndoChangeNotification __attribute__((availability(ios,introduced=3_0)));
extern NSNotificationName const NSUndoManagerDidRedoChangeNotification __attribute__((availability(ios,introduced=3_0)));

extern NSNotificationName const NSUndoManagerDidOpenUndoGroupNotification __attribute__((availability(ios,introduced=3_0)));
extern NSNotificationName const NSUndoManagerWillCloseUndoGroupNotification __attribute__((availability(ios,introduced=3_0)));


extern NSNotificationName const NSUndoManagerDidCloseUndoGroupNotification __attribute__((availability(ios,introduced=5_0)));
# 125 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 1 3
# 62 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/CipherSuite.h" 1 3
# 43 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/CipherSuite.h" 3
typedef uint16_t SSLCipherSuite;


enum : SSLCipherSuite
{ SSL_NULL_WITH_NULL_NULL = 0x0000,
    SSL_RSA_WITH_NULL_MD5 = 0x0001,
    SSL_RSA_WITH_NULL_SHA = 0x0002,
    SSL_RSA_EXPORT_WITH_RC4_40_MD5 = 0x0003,
    SSL_RSA_WITH_RC4_128_MD5 = 0x0004,
    SSL_RSA_WITH_RC4_128_SHA = 0x0005,
    SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5 = 0x0006,
    SSL_RSA_WITH_IDEA_CBC_SHA = 0x0007,
    SSL_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x0008,
    SSL_RSA_WITH_DES_CBC_SHA = 0x0009,
    SSL_RSA_WITH_3DES_EDE_CBC_SHA = 0x000A,
    SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA = 0x000B,
    SSL_DH_DSS_WITH_DES_CBC_SHA = 0x000C,
    SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA = 0x000D,
    SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x000E,
    SSL_DH_RSA_WITH_DES_CBC_SHA = 0x000F,
    SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA = 0x0010,
    SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA = 0x0011,
    SSL_DHE_DSS_WITH_DES_CBC_SHA = 0x0012,
    SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA = 0x0013,
    SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x0014,
    SSL_DHE_RSA_WITH_DES_CBC_SHA = 0x0015,
    SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA = 0x0016,
    SSL_DH_anon_EXPORT_WITH_RC4_40_MD5 = 0x0017,
    SSL_DH_anon_WITH_RC4_128_MD5 = 0x0018,
    SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA = 0x0019,
    SSL_DH_anon_WITH_DES_CBC_SHA = 0x001A,
    SSL_DH_anon_WITH_3DES_EDE_CBC_SHA = 0x001B,
    SSL_FORTEZZA_DMS_WITH_NULL_SHA = 0x001C,
    SSL_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA = 0x001D,


 TLS_RSA_WITH_AES_128_CBC_SHA = 0x002F,
 TLS_DH_DSS_WITH_AES_128_CBC_SHA = 0x0030,
 TLS_DH_RSA_WITH_AES_128_CBC_SHA = 0x0031,
 TLS_DHE_DSS_WITH_AES_128_CBC_SHA = 0x0032,
 TLS_DHE_RSA_WITH_AES_128_CBC_SHA = 0x0033,
 TLS_DH_anon_WITH_AES_128_CBC_SHA = 0x0034,
 TLS_RSA_WITH_AES_256_CBC_SHA = 0x0035,
 TLS_DH_DSS_WITH_AES_256_CBC_SHA = 0x0036,
 TLS_DH_RSA_WITH_AES_256_CBC_SHA = 0x0037,
 TLS_DHE_DSS_WITH_AES_256_CBC_SHA = 0x0038,
 TLS_DHE_RSA_WITH_AES_256_CBC_SHA = 0x0039,
 TLS_DH_anon_WITH_AES_256_CBC_SHA = 0x003A,


 TLS_ECDH_ECDSA_WITH_NULL_SHA = 0xC001,
 TLS_ECDH_ECDSA_WITH_RC4_128_SHA = 0xC002,
 TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC003,
 TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = 0xC004,
 TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = 0xC005,
 TLS_ECDHE_ECDSA_WITH_NULL_SHA = 0xC006,
 TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = 0xC007,
 TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC008,
 TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 0xC009,
 TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 0xC00A,
 TLS_ECDH_RSA_WITH_NULL_SHA = 0xC00B,
 TLS_ECDH_RSA_WITH_RC4_128_SHA = 0xC00C,
 TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = 0xC00D,
 TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = 0xC00E,
 TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = 0xC00F,
 TLS_ECDHE_RSA_WITH_NULL_SHA = 0xC010,
 TLS_ECDHE_RSA_WITH_RC4_128_SHA = 0xC011,
 TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = 0xC012,
 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = 0xC013,
 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = 0xC014,
 TLS_ECDH_anon_WITH_NULL_SHA = 0xC015,
 TLS_ECDH_anon_WITH_RC4_128_SHA = 0xC016,
 TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA = 0xC017,
 TLS_ECDH_anon_WITH_AES_128_CBC_SHA = 0xC018,
 TLS_ECDH_anon_WITH_AES_256_CBC_SHA = 0xC019,




    TLS_NULL_WITH_NULL_NULL = 0x0000,


    TLS_RSA_WITH_NULL_MD5 = 0x0001,
    TLS_RSA_WITH_NULL_SHA = 0x0002,
    TLS_RSA_WITH_RC4_128_MD5 = 0x0004,
    TLS_RSA_WITH_RC4_128_SHA = 0x0005,
    TLS_RSA_WITH_3DES_EDE_CBC_SHA = 0x000A,


    TLS_RSA_WITH_NULL_SHA256 = 0x003B,
    TLS_RSA_WITH_AES_128_CBC_SHA256 = 0x003C,
    TLS_RSA_WITH_AES_256_CBC_SHA256 = 0x003D,


    TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = 0x000D,
    TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = 0x0010,
    TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = 0x0013,
    TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = 0x0016,
# 149 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/CipherSuite.h" 3
    TLS_DH_DSS_WITH_AES_128_CBC_SHA256 = 0x003E,
    TLS_DH_RSA_WITH_AES_128_CBC_SHA256 = 0x003F,
    TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = 0x0040,
    TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = 0x0067,
    TLS_DH_DSS_WITH_AES_256_CBC_SHA256 = 0x0068,
    TLS_DH_RSA_WITH_AES_256_CBC_SHA256 = 0x0069,
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = 0x006A,
    TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = 0x006B,


    TLS_DH_anon_WITH_RC4_128_MD5 = 0x0018,
    TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = 0x001B,


    TLS_DH_anon_WITH_AES_128_CBC_SHA256 = 0x006C,
    TLS_DH_anon_WITH_AES_256_CBC_SHA256 = 0x006D,



    TLS_PSK_WITH_RC4_128_SHA = 0x008A,
    TLS_PSK_WITH_3DES_EDE_CBC_SHA = 0x008B,
    TLS_PSK_WITH_AES_128_CBC_SHA = 0x008C,
    TLS_PSK_WITH_AES_256_CBC_SHA = 0x008D,
    TLS_DHE_PSK_WITH_RC4_128_SHA = 0x008E,
    TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA = 0x008F,
    TLS_DHE_PSK_WITH_AES_128_CBC_SHA = 0x0090,
    TLS_DHE_PSK_WITH_AES_256_CBC_SHA = 0x0091,
    TLS_RSA_PSK_WITH_RC4_128_SHA = 0x0092,
    TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA = 0x0093,
    TLS_RSA_PSK_WITH_AES_128_CBC_SHA = 0x0094,
    TLS_RSA_PSK_WITH_AES_256_CBC_SHA = 0x0095,



    TLS_PSK_WITH_NULL_SHA = 0x002C,
    TLS_DHE_PSK_WITH_NULL_SHA = 0x002D,
    TLS_RSA_PSK_WITH_NULL_SHA = 0x002E,



    TLS_RSA_WITH_AES_128_GCM_SHA256 = 0x009C,
    TLS_RSA_WITH_AES_256_GCM_SHA384 = 0x009D,
    TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = 0x009E,
    TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = 0x009F,
    TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = 0x00A0,
    TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = 0x00A1,
    TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = 0x00A2,
    TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = 0x00A3,
    TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = 0x00A4,
    TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = 0x00A5,
    TLS_DH_anon_WITH_AES_128_GCM_SHA256 = 0x00A6,
    TLS_DH_anon_WITH_AES_256_GCM_SHA384 = 0x00A7,


    TLS_PSK_WITH_AES_128_GCM_SHA256 = 0x00A8,
    TLS_PSK_WITH_AES_256_GCM_SHA384 = 0x00A9,
    TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 = 0x00AA,
    TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 = 0x00AB,
    TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 = 0x00AC,
    TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 = 0x00AD,

    TLS_PSK_WITH_AES_128_CBC_SHA256 = 0x00AE,
    TLS_PSK_WITH_AES_256_CBC_SHA384 = 0x00AF,
    TLS_PSK_WITH_NULL_SHA256 = 0x00B0,
    TLS_PSK_WITH_NULL_SHA384 = 0x00B1,

    TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 = 0x00B2,
    TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 = 0x00B3,
    TLS_DHE_PSK_WITH_NULL_SHA256 = 0x00B4,
    TLS_DHE_PSK_WITH_NULL_SHA384 = 0x00B5,

    TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 = 0x00B6,
    TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 = 0x00B7,
    TLS_RSA_PSK_WITH_NULL_SHA256 = 0x00B8,
    TLS_RSA_PSK_WITH_NULL_SHA384 = 0x00B9,




    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC023,
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC024,
    TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC025,
    TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC026,
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = 0xC027,
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = 0xC028,
    TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = 0xC029,
    TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = 0xC02A,



    TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02B,
    TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02C,
    TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02D,
    TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02E,
    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = 0xC02F,
    TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = 0xC030,
    TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = 0xC031,
    TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = 0xC032,


    TLS_EMPTY_RENEGOTIATION_INFO_SCSV = 0x00FF,




    SSL_RSA_WITH_RC2_CBC_MD5 = 0xFF80,
    SSL_RSA_WITH_IDEA_CBC_MD5 = 0xFF81,
    SSL_RSA_WITH_DES_CBC_MD5 = 0xFF82,
    SSL_RSA_WITH_3DES_EDE_CBC_MD5 = 0xFF83,
    SSL_NO_SUCH_CIPHERSUITE = 0xFFFF
};
# 63 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 2 3
# 79 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
struct SSLContext;
typedef struct __attribute__((objc_bridge(id))) SSLContext *SSLContextRef;


typedef const void * SSLConnectionRef;


typedef enum SSLProtocol : int SSLProtocol; enum SSLProtocol : int {
 kSSLProtocolUnknown = 0,
 kSSLProtocol3 = 2,
 kTLSProtocol1 = 4,
    kTLSProtocol11 = 7,
    kTLSProtocol12 = 8,
    kDTLSProtocol1 = 9,


    kSSLProtocol2 = 1,
    kSSLProtocol3Only = 3,
    kTLSProtocol1Only = 5,
    kSSLProtocolAll = 6,

};


typedef enum SSLSessionOption : int SSLSessionOption; enum SSLSessionOption : int {







 kSSLSessionOptionBreakOnServerAuth = 0,




 kSSLSessionOptionBreakOnCertRequested = 1,






    kSSLSessionOptionBreakOnClientAuth = 2,





    kSSLSessionOptionFalseStart = 3,





    kSSLSessionOptionSendOneByteRecord = 4,




    kSSLSessionOptionAllowServerIdentityChange = 5,




    kSSLSessionOptionFallback = 6,



    kSSLSessionOptionBreakOnClientHello = 7,



    kSSLSessionOptionAllowRenegotiation = 8,

};


typedef enum SSLSessionState : int SSLSessionState; enum SSLSessionState : int {
 kSSLIdle,
 kSSLHandshake,
 kSSLConnected,
 kSSLClosed,
 kSSLAborted
};





typedef enum SSLClientCertificateState : int SSLClientCertificateState; enum SSLClientCertificateState : int {

 kSSLClientCertNone,

 kSSLClientCertRequested,






 kSSLClientCertSent,




 kSSLClientCertRejected
} ;
# 206 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
typedef OSStatus
(*SSLReadFunc) (SSLConnectionRef connection,
        void *data,


        size_t *dataLength);
typedef OSStatus
(*SSLWriteFunc) (SSLConnectionRef connection,
        const void *data,
        size_t *dataLength);
# 228 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
enum : OSStatus {
 errSSLProtocol = -9800,
 errSSLNegotiation = -9801,
 errSSLFatalAlert = -9802,
 errSSLWouldBlock = -9803,
    errSSLSessionNotFound = -9804,
    errSSLClosedGraceful = -9805,
    errSSLClosedAbort = -9806,
    errSSLXCertChainInvalid = -9807,
    errSSLBadCert = -9808,
 errSSLCrypto = -9809,
 errSSLInternal = -9810,
 errSSLModuleAttach = -9811,
    errSSLUnknownRootCert = -9812,
    errSSLNoRootCert = -9813,
 errSSLCertExpired = -9814,
 errSSLCertNotYetValid = -9815,
 errSSLClosedNoNotify = -9816,
 errSSLBufferOverflow = -9817,
 errSSLBadCipherSuite = -9818,


 errSSLPeerUnexpectedMsg = -9819,
 errSSLPeerBadRecordMac = -9820,
 errSSLPeerDecryptionFail = -9821,
 errSSLPeerRecordOverflow = -9822,
 errSSLPeerDecompressFail = -9823,
 errSSLPeerHandshakeFail = -9824,
 errSSLPeerBadCert = -9825,
 errSSLPeerUnsupportedCert = -9826,
 errSSLPeerCertRevoked = -9827,
 errSSLPeerCertExpired = -9828,
 errSSLPeerCertUnknown = -9829,
 errSSLIllegalParam = -9830,
 errSSLPeerUnknownCA = -9831,
 errSSLPeerAccessDenied = -9832,
 errSSLPeerDecodeError = -9833,
 errSSLPeerDecryptError = -9834,
 errSSLPeerExportRestriction = -9835,
 errSSLPeerProtocolVersion = -9836,
 errSSLPeerInsufficientSecurity = -9837,
 errSSLPeerInternalError = -9838,
 errSSLPeerUserCancelled = -9839,
 errSSLPeerNoRenegotiation = -9840,


 errSSLPeerAuthCompleted = -9841,
 errSSLClientCertRequested = -9842,


 errSSLHostNameMismatch = -9843,
 errSSLConnectionRefused = -9844,
 errSSLDecryptionFail = -9845,
 errSSLBadRecordMac = -9846,
 errSSLRecordOverflow = -9847,
 errSSLBadConfiguration = -9848,
 errSSLUnexpectedRecord = -9849,
    errSSLWeakPeerEphemeralDHKey = -9850,


    errSSLClientHelloReceived = -9851,
};
# 298 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
typedef enum SSLProtocolSide : int SSLProtocolSide; enum SSLProtocolSide : int
{
    kSSLServerSide,
    kSSLClientSide
};

typedef enum SSLConnectionType : int SSLConnectionType; enum SSLConnectionType : int
{
    kSSLStreamType,
    kSSLDatagramType
};






extern const CFStringRef kSSLSessionConfig_default;

extern const CFStringRef kSSLSessionConfig_ATSv1;

extern const CFStringRef kSSLSessionConfig_ATSv1_noPFS;

extern const CFStringRef kSSLSessionConfig_standard;

extern const CFStringRef kSSLSessionConfig_RC4_fallback;

extern const CFStringRef kSSLSessionConfig_TLSv1_fallback;

extern const CFStringRef kSSLSessionConfig_TLSv1_RC4_fallback;

extern const CFStringRef kSSLSessionConfig_legacy;

extern const CFStringRef kSSLSessionConfig_legacy_DHE;

extern const CFStringRef kSSLSessionConfig_anonymous;
# 356 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
CFTypeID
SSLContextGetTypeID(void)
 __attribute__((availability(ios,introduced=5.0)));




_Nullable
SSLContextRef
SSLCreateContext(CFAllocatorRef _Nullable alloc, SSLProtocolSide protocolSide, SSLConnectionType connectionType)
 __attribute__((availability(ios,introduced=5.0)));
# 403 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLGetSessionState (SSLContextRef context,
        SSLSessionState *state)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLSetSessionOption (SSLContextRef context,
        SSLSessionOption option,
        Boolean value)
 __attribute__((availability(ios,introduced=5.0)));




OSStatus
SSLGetSessionOption (SSLContextRef context,
        SSLSessionOption option,
        Boolean *value)
 __attribute__((availability(ios,introduced=5.0)));
# 436 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLSetIOFuncs (SSLContextRef context,
        SSLReadFunc readFunc,
        SSLWriteFunc writeFunc)
 __attribute__((availability(ios,introduced=5.0)));
# 450 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLSetSessionConfig(SSLContextRef context,
                    CFStringRef config)
    __attribute__((availability(ios,introduced=10.0)));
# 470 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLSetProtocolVersionMin (SSLContextRef context,
                           SSLProtocol minVersion)
    __attribute__((availability(ios,introduced=5.0)));




OSStatus
SSLGetProtocolVersionMin (SSLContextRef context,
                           SSLProtocol *minVersion)
    __attribute__((availability(ios,introduced=5.0)));
# 498 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLSetProtocolVersionMax (SSLContextRef context,
                           SSLProtocol maxVersion)
    __attribute__((availability(ios,introduced=5.0)));




OSStatus
SSLGetProtocolVersionMax (SSLContextRef context,
                           SSLProtocol *maxVersion)
    __attribute__((availability(ios,introduced=5.0)));
# 619 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLSetCertificate (SSLContextRef context,
        CFArrayRef _Nullable certRefs)
 __attribute__((availability(ios,introduced=5.0)));
# 634 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLSetConnection (SSLContextRef context,
        SSLConnectionRef _Nullable connection)
 __attribute__((availability(ios,introduced=5.0)));

OSStatus
SSLGetConnection (SSLContextRef context,
        SSLConnectionRef * _Nonnull __attribute__((cf_returns_not_retained)) connection)
 __attribute__((availability(ios,introduced=5.0)));
# 651 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLSetPeerDomainName (SSLContextRef context,
        const char * _Nullable peerName,
        size_t peerNameLen)
 __attribute__((availability(ios,introduced=5.0)));




OSStatus
SSLGetPeerDomainNameLength (SSLContextRef context,
        size_t *peerNameLen)
 __attribute__((availability(ios,introduced=5.0)));




OSStatus
SSLGetPeerDomainName (SSLContextRef context,
        char *peerName,
        size_t *peerNameLen)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLCopyRequestedPeerName (SSLContextRef context,
                             char *peerName,
                             size_t *peerNameLen)
    __attribute__((availability(ios,introduced=9.0)));




OSStatus
SSLCopyRequestedPeerNameLength (SSLContextRef ctx,
                                 size_t *peerNameLen)
    __attribute__((availability(ios,introduced=9.0)));







OSStatus
SSLSetDatagramHelloCookie (SSLContextRef dtlsContext,
                             const void * _Nullable cookie,
                             size_t cookieLen)
 __attribute__((availability(ios,introduced=5.0)));
# 711 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLSetMaxDatagramRecordSize (SSLContextRef dtlsContext,
                             size_t maxSize)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLGetMaxDatagramRecordSize (SSLContextRef dtlsContext,
                             size_t *maxSize)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLGetNegotiatedProtocolVersion (SSLContextRef context,
          SSLProtocol *protocol)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLGetNumberSupportedCiphers (SSLContextRef context,
         size_t *numCiphers)
 __attribute__((availability(ios,introduced=5.0)));

OSStatus
SSLGetSupportedCiphers (SSLContextRef context,
         SSLCipherSuite *ciphers,
         size_t *numCiphers)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLSetEnabledCiphers (SSLContextRef context,
        const SSLCipherSuite *ciphers,
        size_t numCiphers)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLGetNumberEnabledCiphers (SSLContextRef context,
        size_t *numCiphers)
 __attribute__((availability(ios,introduced=5.0)));

OSStatus
SSLGetEnabledCiphers (SSLContextRef context,
        SSLCipherSuite *ciphers,
        size_t *numCiphers)
 __attribute__((availability(ios,introduced=5.0)));
# 1095 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLCopyPeerTrust (SSLContextRef context,
        SecTrustRef * _Nonnull __attribute__((cf_returns_retained)) trust)
 __attribute__((availability(ios,introduced=5.0)));
# 1114 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLSetPeerID (SSLContextRef context,
        const void * _Nullable peerID,
        size_t peerIDLen)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLGetPeerID (SSLContextRef context,
        const void * _Nullable * _Nonnull peerID,
        size_t *peerIDLen)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLGetNegotiatedCipher (SSLContextRef context,
        SSLCipherSuite *cipherSuite)
 __attribute__((availability(ios,introduced=5.0)));
# 1150 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLSetEncryptionCertificate (SSLContextRef context,
        CFArrayRef certRefs)
 __attribute__((availability(ios,introduced=5.0,deprecated=9.0)));







typedef enum SSLAuthenticate : int SSLAuthenticate; enum SSLAuthenticate : int {
 kNeverAuthenticate,
 kAlwaysAuthenticate,
 kTryAuthenticate

};

OSStatus
SSLSetClientSideAuthenticate (SSLContextRef context,
         SSLAuthenticate auth)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLAddDistinguishedName (SSLContextRef context,
        const void * _Nullable derDN,
        size_t derDNLen)
 __attribute__((availability(ios,introduced=5.0)));
# 1231 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLCopyDistinguishedNames (SSLContextRef context,
        CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) names)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLGetClientCertificateState (SSLContextRef context,
         SSLClientCertificateState *clientState)
 __attribute__((availability(ios,introduced=5.0)));
# 1345 "APPLE_SDKROOT/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h" 3
OSStatus
SSLHandshake (SSLContextRef context)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLReHandshake (SSLContextRef context)
    __attribute__((availability(ios,introduced=10.0)));







OSStatus
SSLWrite (SSLContextRef context,
        const void * _Nullable data,
        size_t dataLength,
        size_t *processed)
 __attribute__((availability(ios,introduced=5.0)));






OSStatus
SSLRead (SSLContextRef context,
        void * data,
        size_t dataLength,
        size_t *processed)
 __attribute__((availability(ios,introduced=5.0)));






OSStatus
SSLGetBufferedReadSize (SSLContextRef context,
        size_t *bufSize)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLGetDatagramWriteSize (SSLContextRef dtlsContext,
        size_t *bufSize)
 __attribute__((availability(ios,introduced=5.0)));




OSStatus
SSLClose (SSLContextRef context)
 __attribute__((availability(ios,introduced=5.0)));
# 10 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 2 3

@class NSString;
@class NSURL;
@class NSError;
@class NSArray<ObjectType>;
@class NSDictionary<KeyType, ObjectType>;
@class NSInputStream;
@class NSOutputStream;
@class NSData;
@class NSOperationQueue;

@class NSURLCache;
@class NSURLResponse;
@class NSHTTPURLResponse;
@class NSHTTPCookie;
@class NSCachedURLResponse;
@class NSURLAuthenticationChallenge;
@class NSURLProtectionSpace;
@class NSURLCredential;
@class NSURLCredentialStorage;
@class NSURLSessionDataTask;
@class NSURLSessionUploadTask;
@class NSURLSessionDownloadTask;
@class NSNetService;
# 93 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
@class NSURLSession;
@class NSURLSessionDataTask;
@class NSURLSessionUploadTask;
@class NSURLSessionDownloadTask;
@class NSURLSessionStreamTask;
@class NSURLSessionConfiguration;
@protocol NSURLSessionDelegate;

@class NSURLSessionTaskMetrics;
@class NSDateInterval;
# 119 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
extern const int64_t NSURLSessionTransferSizeUnknown __attribute__((availability(ios,introduced=7_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))
@interface NSURLSession : NSObject






@property (class, readonly, strong) NSURLSession *sharedSession;
# 139 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
+ (NSURLSession *)sessionWithConfiguration:(NSURLSessionConfiguration *)configuration;
+ (NSURLSession *)sessionWithConfiguration:(NSURLSessionConfiguration *)configuration delegate:(nullable id <NSURLSessionDelegate>)delegate delegateQueue:(nullable NSOperationQueue *)queue;

@property (readonly, retain) NSOperationQueue *delegateQueue;
@property (nullable, readonly, retain) id <NSURLSessionDelegate> delegate;
@property (readonly, copy) NSURLSessionConfiguration *configuration;





@property (nullable, copy) NSString *sessionDescription;
# 164 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
- (void)finishTasksAndInvalidate;






- (void)invalidateAndCancel;

- (void)resetWithCompletionHandler:(void (^)(void))completionHandler;
- (void)flushWithCompletionHandler:(void (^)(void))completionHandler;

- (void)getTasksWithCompletionHandler:(void (^)(NSArray<NSURLSessionDataTask *> *dataTasks, NSArray<NSURLSessionUploadTask *> *uploadTasks, NSArray<NSURLSessionDownloadTask *> *downloadTasks))completionHandler;

- (void)getAllTasksWithCompletionHandler:(void (^)(NSArray<__kindof NSURLSessionTask *> *tasks))completionHandler __attribute__((availability(ios,introduced=9_0)));







- (NSURLSessionDataTask *)dataTaskWithRequest:(NSURLRequest *)request;


- (NSURLSessionDataTask *)dataTaskWithURL:(NSURL *)url;


- (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromFile:(NSURL *)fileURL;


- (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromData:(NSData *)bodyData;


- (NSURLSessionUploadTask *)uploadTaskWithStreamedRequest:(NSURLRequest *)request;


- (NSURLSessionDownloadTask *)downloadTaskWithRequest:(NSURLRequest *)request;


- (NSURLSessionDownloadTask *)downloadTaskWithURL:(NSURL *)url;


- (NSURLSessionDownloadTask *)downloadTaskWithResumeData:(NSData *)resumeData;



- (NSURLSessionStreamTask *)streamTaskWithHostName:(NSString *)hostname port:(NSInteger)port __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(watchos,unavailable)));




- (NSURLSessionStreamTask *)streamTaskWithNetService:(NSNetService *)service __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(watchos,unavailable)));

@end
# 229 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
@interface NSURLSession (NSURLSessionAsynchronousConvenience)
# 238 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
- (NSURLSessionDataTask *)dataTaskWithRequest:(NSURLRequest *)request completionHandler:(void (^)(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;
- (NSURLSessionDataTask *)dataTaskWithURL:(NSURL *)url completionHandler:(void (^)(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;




- (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromFile:(NSURL *)fileURL completionHandler:(void (^)(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;
- (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromData:(nullable NSData *)bodyData completionHandler:(void (^)(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;







- (NSURLSessionDownloadTask *)downloadTaskWithRequest:(NSURLRequest *)request completionHandler:(void (^)(NSURL * _Nullable location, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;
- (NSURLSessionDownloadTask *)downloadTaskWithURL:(NSURL *)url completionHandler:(void (^)(NSURL * _Nullable location, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;
- (NSURLSessionDownloadTask *)downloadTaskWithResumeData:(NSData *)resumeData completionHandler:(void (^)(NSURL * _Nullable location, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;

@end

typedef enum NSURLSessionTaskState : NSInteger NSURLSessionTaskState; enum NSURLSessionTaskState : NSInteger {
    NSURLSessionTaskStateRunning = 0,
    NSURLSessionTaskStateSuspended = 1,
    NSURLSessionTaskStateCanceling = 2,
    NSURLSessionTaskStateCompleted = 3,
} __attribute__((availability(ios,introduced=7_0)));





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))
@interface NSURLSessionTask : NSObject <NSCopying>

@property (readonly) NSUInteger taskIdentifier;
@property (nullable, readonly, copy) NSURLRequest *originalRequest;
@property (nullable, readonly, copy) NSURLRequest *currentRequest;
@property (nullable, readonly, copy) NSURLResponse *response;







@property (readonly) int64_t countOfBytesReceived;


@property (readonly) int64_t countOfBytesSent;


@property (readonly) int64_t countOfBytesExpectedToSend;


@property (readonly) int64_t countOfBytesExpectedToReceive;





@property (nullable, copy) NSString *taskDescription;







- (void)cancel;




@property (readonly) NSURLSessionTaskState state;





@property (nullable, readonly, copy) NSError *error;
# 329 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
- (void)suspend;
- (void)resume;
# 347 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
@property float priority __attribute__((availability(ios,introduced=8_0)));

@end

extern const float NSURLSessionTaskPriorityDefault __attribute__((availability(ios,introduced=8_0)));
extern const float NSURLSessionTaskPriorityLow __attribute__((availability(ios,introduced=8_0)));
extern const float NSURLSessionTaskPriorityHigh __attribute__((availability(ios,introduced=8_0)));






@interface NSURLSessionDataTask : NSURLSessionTask
@end







@interface NSURLSessionUploadTask : NSURLSessionDataTask
@end





@interface NSURLSessionDownloadTask : NSURLSessionTask
# 385 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
- (void)cancelByProducingResumeData:(void (^)(NSData * _Nullable resumeData))completionHandler;

@end
# 412 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface NSURLSessionStreamTask : NSURLSessionTask






- (void)readDataOfMinLength:(NSUInteger)minBytes maxLength:(NSUInteger)maxBytes timeout:(NSTimeInterval)timeout completionHandler:(void (^) (NSData * _Nullable data, BOOL atEOF, NSError * _Nullable error))completionHandler;






- (void)writeData:(NSData *)data timeout:(NSTimeInterval)timeout completionHandler:(void (^) (NSError * _Nullable error))completionHandler;







- (void)captureStreams;







- (void)closeWrite;





- (void)closeRead;






- (void)startSecureConnection;





- (void)stopSecureConnection;

@end
# 480 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))
@interface NSURLSessionConfiguration : NSObject <NSCopying>


@property (class, readonly, strong) NSURLSessionConfiguration *defaultSessionConfiguration;
@property (class, readonly, strong) NSURLSessionConfiguration *ephemeralSessionConfiguration;


+ (NSURLSessionConfiguration *)backgroundSessionConfigurationWithIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=8_0)));


@property (nullable, readonly, copy) NSString *identifier;


@property NSURLRequestCachePolicy requestCachePolicy;


@property NSTimeInterval timeoutIntervalForRequest;


@property NSTimeInterval timeoutIntervalForResource;


@property NSURLRequestNetworkServiceType networkServiceType;


@property BOOL allowsCellularAccess;


@property (getter=isDiscretionary) BOOL discretionary __attribute__((availability(ios,introduced=7_0)));





@property (nullable, copy) NSString *sharedContainerIdentifier __attribute__((availability(ios,introduced=8_0)));






@property BOOL sessionSendsLaunchEvents __attribute__((availability(ios,introduced=7_0)));


@property (nullable, copy) NSDictionary *connectionProxyDictionary;


@property SSLProtocol TLSMinimumSupportedProtocol;


@property SSLProtocol TLSMaximumSupportedProtocol;


@property BOOL HTTPShouldUsePipelining;


@property BOOL HTTPShouldSetCookies;


@property NSHTTPCookieAcceptPolicy HTTPCookieAcceptPolicy;



@property (nullable, copy) NSDictionary *HTTPAdditionalHeaders;


@property NSInteger HTTPMaximumConnectionsPerHost;


@property (nullable, retain) NSHTTPCookieStorage *HTTPCookieStorage;


@property (nullable, retain) NSURLCredentialStorage *URLCredentialStorage;


@property (nullable, retain) NSURLCache *URLCache;




@property BOOL shouldUseExtendedBackgroundIdleMode __attribute__((availability(ios,introduced=9_0)));
# 572 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
@property (nullable, copy) NSArray<Class> *protocolClasses;

@end




typedef enum NSURLSessionAuthChallengeDisposition : NSInteger NSURLSessionAuthChallengeDisposition; enum NSURLSessionAuthChallengeDisposition : NSInteger {
    NSURLSessionAuthChallengeUseCredential = 0,
    NSURLSessionAuthChallengePerformDefaultHandling = 1,
    NSURLSessionAuthChallengeCancelAuthenticationChallenge = 2,
    NSURLSessionAuthChallengeRejectProtectionSpace = 3,
} __attribute__((availability(ios,introduced=7_0)));


typedef enum NSURLSessionResponseDisposition : NSInteger NSURLSessionResponseDisposition; enum NSURLSessionResponseDisposition : NSInteger {
    NSURLSessionResponseCancel = 0,
    NSURLSessionResponseAllow = 1,
    NSURLSessionResponseBecomeDownload = 2,
    NSURLSessionResponseBecomeStream __attribute__((availability(ios,introduced=9_0))) = 3,
} __attribute__((availability(ios,introduced=7_0)));
# 603 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
@protocol NSURLSessionDelegate <NSObject>
@optional





- (void)URLSession:(NSURLSession *)session didBecomeInvalidWithError:(nullable NSError *)error;
# 621 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
- (void)URLSession:(NSURLSession *)session didReceiveChallenge:(NSURLAuthenticationChallenge *)challenge
                                             completionHandler:(void (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential * _Nullable credential))completionHandler;
# 632 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)session __attribute__((availability(ios,introduced=7_0)));

@end




@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>
@optional
# 651 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                     willPerformHTTPRedirection:(NSHTTPURLResponse *)response
                                     newRequest:(NSURLRequest *)request
                              completionHandler:(void (^)(NSURLRequest * _Nullable))completionHandler;






- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                            didReceiveChallenge:(NSURLAuthenticationChallenge *)challenge
                              completionHandler:(void (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential * _Nullable credential))completionHandler;





- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                              needNewBodyStream:(void (^)(NSInputStream * _Nullable bodyStream))completionHandler;




- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                                didSendBodyData:(int64_t)bytesSent
                                 totalBytesSent:(int64_t)totalBytesSent
                       totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;




- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics *)metrics __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));




- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                           didCompleteWithError:(nullable NSError *)error;

@end





@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>
@optional
# 707 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                                 didReceiveResponse:(NSURLResponse *)response
                                  completionHandler:(void (^)(NSURLSessionResponseDisposition disposition))completionHandler;




- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                              didBecomeDownloadTask:(NSURLSessionDownloadTask *)downloadTask;
# 733 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                                didBecomeStreamTask:(NSURLSessionStreamTask *)streamTask;






- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                                     didReceiveData:(NSData *)data;







- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                                  willCacheResponse:(NSCachedURLResponse *)proposedResponse
                                  completionHandler:(void (^)(NSCachedURLResponse * _Nullable cachedResponse))completionHandler;

@end





@protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>






- (void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask
                              didFinishDownloadingToURL:(NSURL *)location;

@optional

- (void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask
                                           didWriteData:(int64_t)bytesWritten
                                      totalBytesWritten:(int64_t)totalBytesWritten
                              totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;






- (void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask
                                      didResumeAtOffset:(int64_t)fileOffset
                                     expectedTotalBytes:(int64_t)expectedTotalBytes;

@end

@protocol NSURLSessionStreamDelegate <NSURLSessionTaskDelegate>
@optional







- (void)URLSession:(NSURLSession *)session readClosedForStreamTask:(NSURLSessionStreamTask *)streamTask;





- (void)URLSession:(NSURLSession *)session writeClosedForStreamTask:(NSURLSessionStreamTask *)streamTask;
# 812 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
- (void)URLSession:(NSURLSession *)session betterRouteDiscoveredForStreamTask:(NSURLSessionStreamTask *)streamTask;







- (void)URLSession:(NSURLSession *)session streamTask:(NSURLSessionStreamTask *)streamTask
                                 didBecomeInputStream:(NSInputStream *)inputStream
                                         outputStream:(NSOutputStream *)outputStream;

@end


extern NSString * const NSURLSessionDownloadTaskResumeData __attribute__((availability(ios,introduced=7_0)));

@interface NSURLSessionConfiguration (NSURLSessionDeprecated)
+ (NSURLSessionConfiguration *)backgroundSessionConfiguration:(NSString *)identifier __attribute__((availability(ios,introduced=7_0,deprecated=8_0,message="" "Please use backgroundSessionConfigurationWithIdentifier: instead")));
@end




typedef enum NSURLSessionTaskMetricsResourceFetchType : NSInteger NSURLSessionTaskMetricsResourceFetchType; enum NSURLSessionTaskMetricsResourceFetchType : NSInteger {
    NSURLSessionTaskMetricsResourceFetchTypeUnknown,
    NSURLSessionTaskMetricsResourceFetchTypeNetworkLoad,
    NSURLSessionTaskMetricsResourceFetchTypeServerPush,
    NSURLSessionTaskMetricsResourceFetchTypeLocalCache,
} __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));




__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSURLSessionTaskTransactionMetrics : NSObject




@property (copy, readonly) NSURLRequest *request;




@property (nullable, copy, readonly) NSURLResponse *response;
# 876 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
@property (nullable, copy, readonly) NSDate *fetchStartDate;




@property (nullable, copy, readonly) NSDate *domainLookupStartDate;




@property (nullable, copy, readonly) NSDate *domainLookupEndDate;






@property (nullable, copy, readonly) NSDate *connectStartDate;
# 902 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
@property (nullable, copy, readonly) NSDate *secureConnectionStartDate;






@property (nullable, copy, readonly) NSDate *secureConnectionEndDate;




@property (nullable, copy, readonly) NSDate *connectEndDate;






@property (nullable, copy, readonly) NSDate *requestStartDate;






@property (nullable, copy, readonly) NSDate *requestEndDate;






@property (nullable, copy, readonly) NSDate *responseStartDate;




@property (nullable, copy, readonly) NSDate *responseEndDate;
# 954 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSURLSession.h" 3
@property (nullable, copy, readonly) NSString *networkProtocolName;




@property (assign, readonly, getter=isProxyConnection) BOOL proxyConnection;




@property (assign, readonly, getter=isReusedConnection) BOOL reusedConnection;




@property (assign, readonly) NSURLSessionTaskMetricsResourceFetchType resourceFetchType;


-(instancetype)init;


@end


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
@interface NSURLSessionTaskMetrics : NSObject




@property (copy, readonly) NSArray<NSURLSessionTaskTransactionMetrics *> *transactionMetrics;






@property (copy, readonly) NSDateInterval *taskInterval;




@property (assign, readonly) NSUInteger redirectCount;

-(instancetype)init;

@end
# 126 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUserActivity.h" 1 3








@class NSArray, NSDictionary<KeyType, ObjectType>, NSSet<ObjectType>, NSString, NSURL, NSInputStream, NSOutputStream, NSError;
@protocol NSUserActivityDelegate;





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface NSUserActivity : NSObject



- (instancetype)initWithActivityType:(NSString *)activityType __attribute__((objc_designated_initializer));



- (instancetype)init __attribute__((availability(macosx,introduced=10.10,deprecated=10.12,message="Use initWithActivityType: with a specific activity type string"))) __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use initWithActivityType: with a specific activity type string"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Use initWithActivityType: with a specific activity type string"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Use initWithActivityType: with a specific activity type string")));



@property (readonly, copy) NSString *activityType;



@property (nullable, copy) NSString *title;



@property (nullable, copy) NSDictionary *userInfo;



- (void)addUserInfoEntriesFromDictionary:(NSDictionary *)otherDictionary;


@property (copy) NSSet<NSString *> *requiredUserInfoKeys __attribute__((availability(ios,introduced=9_0)));



@property (assign) BOOL needsSave;



@property (nullable, copy) NSURL *webpageURL;


@property (copy) NSDate *expirationDate __attribute__((availability(ios,introduced=9_0)));


@property (copy) NSSet<NSString *> *keywords __attribute__((availability(ios,introduced=9_0)));



@property BOOL supportsContinuationStreams;



@property (nullable, weak) id<NSUserActivityDelegate> delegate;



- (void)becomeCurrent;


- (void)resignCurrent __attribute__((availability(ios,introduced=9_0)));



- (void)invalidate;



- (void)getContinuationStreamsWithCompletionHandler:(void (^)(NSInputStream * _Nullable inputStream, NSOutputStream * _Nullable outputStream, NSError * _Nullable error))completionHandler;


@property (getter=isEligibleForHandoff) BOOL eligibleForHandoff __attribute__((availability(ios,introduced=9_0)));


@property (getter=isEligibleForSearch) BOOL eligibleForSearch __attribute__((availability(ios,introduced=9_0)));


@property (getter=isEligibleForPublicIndexing) BOOL eligibleForPublicIndexing __attribute__((availability(ios,introduced=9_0)));

@end



extern NSString * const NSUserActivityTypeBrowsingWeb __attribute__((availability(ios,introduced=8_0)));



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@protocol NSUserActivityDelegate <NSObject>
@optional



- (void)userActivityWillSave:(NSUserActivity *)userActivity;



- (void)userActivityWasContinued:(NSUserActivity *)userActivity;



- (void)userActivity:(nullable NSUserActivity *)userActivity didReceiveInputStream:(NSInputStream *)inputStream outputStream:(NSOutputStream *)outputStream;

@end
# 127 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUUID.h" 1 3






# 1 "APPLE_SDKROOT/usr/include/uuid/uuid.h" 1 3 4
# 43 "APPLE_SDKROOT/usr/include/uuid/uuid.h" 3 4
typedef __darwin_uuid_string_t uuid_string_t;





static const uuid_t UUID_NULL __attribute__ ((unused)) = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};





void uuid_clear(uuid_t uu);

int uuid_compare(const uuid_t uu1, const uuid_t uu2);

void uuid_copy(uuid_t dst, const uuid_t src);

void uuid_generate(uuid_t out);
void uuid_generate_random(uuid_t out);
void uuid_generate_time(uuid_t out);

int uuid_is_null(const uuid_t uu);

int uuid_parse(const uuid_string_t in, uuid_t uu);

void uuid_unparse(const uuid_t uu, uuid_string_t out);
void uuid_unparse_lower(const uuid_t uu, uuid_string_t out);
void uuid_unparse_upper(const uuid_t uu, uuid_string_t out);
# 8 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/NSUUID.h" 2 3





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))
@interface NSUUID : NSObject <NSCopying, NSSecureCoding>


+ (instancetype)UUID;


- (instancetype)init __attribute__((objc_designated_initializer));


- (nullable instancetype)initWithUUIDString:(NSString *)string;


- (instancetype)initWithUUIDBytes:(const uuid_t)bytes;


- (void)getUUIDBytes:(uuid_t)uuid;


@property (readonly, copy) NSString *UUIDString;

@end
# 128 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 184 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/FoundationLegacySwiftCompatibility.h" 1 3
# 185 "APPLE_SDKROOT/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" 2 3
# 9 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccelerometer.h" 2 3







typedef double UIAccelerationValue;

@protocol UIAccelerometerDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" "UIAcceleration has been replaced by the CoreMotion framework"))) __attribute__((availability(tvos,unavailable)))
@interface UIAcceleration : NSObject

@property(nonatomic,readonly) NSTimeInterval timestamp;
@property(nonatomic,readonly) UIAccelerationValue x;
@property(nonatomic,readonly) UIAccelerationValue y;
@property(nonatomic,readonly) UIAccelerationValue z;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" "UIAccelerometer has been replaced by the CoreMotion framework"))) __attribute__((availability(tvos,unavailable)))
@interface UIAccelerometer : NSObject

+ (UIAccelerometer *)sharedAccelerometer;

@property(nonatomic) NSTimeInterval updateInterval;
@property(nullable,nonatomic,weak) id<UIAccelerometerDelegate> delegate;

@end

 __attribute__((availability(tvos,unavailable)))
@protocol UIAccelerometerDelegate<NSObject>
@optional

- (void)accelerometer:(UIAccelerometer *)accelerometer didAccelerate:(UIAcceleration *)acceleration __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" ))) __attribute__((availability(tvos,unavailable)));

@end
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CoreGraphics.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGBase.h" 1 3








# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stddef.h" 1 3 4
# 10 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGBase.h" 2 3
# 245 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGBase.h" 3
typedef double CGFloat;
# 9 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CoreGraphics.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGAffineTransform.h" 1 3







typedef struct CGAffineTransform CGAffineTransform;



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGGeometry.h" 1 3
# 20 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGGeometry.h" 3
struct CGPoint {
    CGFloat x;
    CGFloat y;
};
typedef struct CGPoint CGPoint;



struct CGSize {
    CGFloat width;
    CGFloat height;
};
typedef struct CGSize CGSize;





struct CGVector {
    CGFloat dx;
    CGFloat dy;
};
typedef struct CGVector CGVector;



struct CGRect {
    CGPoint origin;
    CGSize size;
};
typedef struct CGRect CGRect;



typedef enum CGRectEdge : uint32_t CGRectEdge; enum CGRectEdge : uint32_t {
    CGRectMinXEdge, CGRectMinYEdge, CGRectMaxXEdge, CGRectMaxYEdge
};



extern const CGPoint CGPointZero
      __attribute__((availability(ios,introduced=2.0)));



extern const CGSize CGSizeZero
    __attribute__((availability(ios,introduced=2.0)));



extern const CGRect CGRectZero
    __attribute__((availability(ios,introduced=2.0)));





extern const CGRect CGRectNull
    __attribute__((availability(ios,introduced=2.0)));



extern const CGRect CGRectInfinite
    __attribute__((availability(ios,introduced=2.0)));



static inline CGPoint CGPointMake(CGFloat x, CGFloat y);



static inline CGSize CGSizeMake(CGFloat width, CGFloat height);



static inline CGVector CGVectorMake(CGFloat dx, CGFloat dy);



static inline CGRect CGRectMake(CGFloat x, CGFloat y, CGFloat width,
  CGFloat height);



extern CGFloat CGRectGetMinX(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern CGFloat CGRectGetMidX(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern CGFloat CGRectGetMaxX(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern CGFloat CGRectGetMinY(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern CGFloat CGRectGetMidY(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern CGFloat CGRectGetMaxY(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern CGFloat CGRectGetWidth(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern CGFloat CGRectGetHeight(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGPointEqualToPoint(CGPoint point1, CGPoint point2)
    __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGSizeEqualToSize(CGSize size1, CGSize size2)
    __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGRectEqualToRect(CGRect rect1, CGRect rect2)
    __attribute__((availability(ios,introduced=2.0)));




extern CGRect CGRectStandardize(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGRectIsEmpty(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGRectIsNull(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGRectIsInfinite(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));




extern CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
    __attribute__((availability(ios,introduced=2.0)));




extern CGRect CGRectIntegral(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern CGRect CGRectUnion(CGRect r1, CGRect r2)
    __attribute__((availability(ios,introduced=2.0)));



extern CGRect CGRectIntersection(CGRect r1, CGRect r2)
    __attribute__((availability(ios,introduced=2.0)));



extern CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
    __attribute__((availability(ios,introduced=2.0)));







extern void CGRectDivide(CGRect rect, CGRect * slice,
    CGRect * remainder, CGFloat amount, CGRectEdge edge)
    __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGRectContainsPoint(CGRect rect, CGPoint point)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGRectContainsRect(CGRect rect1, CGRect rect2)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGRectIntersectsRect(CGRect rect1, CGRect rect2)
    __attribute__((availability(ios,introduced=2.0)));





extern CFDictionaryRef CGPointCreateDictionaryRepresentation(
    CGPoint point)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGPointMakeWithDictionaryRepresentation(
    CFDictionaryRef _Nullable dict, CGPoint * _Nullable point)
    __attribute__((availability(ios,introduced=2.0)));



extern CFDictionaryRef CGSizeCreateDictionaryRepresentation(CGSize size)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGSizeMakeWithDictionaryRepresentation(
    CFDictionaryRef _Nullable dict, CGSize * _Nullable size)
    __attribute__((availability(ios,introduced=2.0)));



extern CFDictionaryRef CGRectCreateDictionaryRepresentation(CGRect)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGRectMakeWithDictionaryRepresentation(
    CFDictionaryRef _Nullable dict, CGRect * _Nullable rect)
    __attribute__((availability(ios,introduced=2.0)));



static inline CGPoint
CGPointMake(CGFloat x, CGFloat y)
{
  CGPoint p; p.x = x; p.y = y; return p;
}

static inline CGSize
CGSizeMake(CGFloat width, CGFloat height)
{
  CGSize size; size.width = width; size.height = height; return size;
}

static inline CGVector
CGVectorMake(CGFloat dx, CGFloat dy)
{
  CGVector vector; vector.dx = dx; vector.dy = dy; return vector;
}

static inline CGRect
CGRectMake(CGFloat x, CGFloat y, CGFloat width, CGFloat height)
{
  CGRect rect;
  rect.origin.x = x; rect.origin.y = y;
  rect.size.width = width; rect.size.height = height;
  return rect;
}

static inline _Bool
__CGPointEqualToPoint(CGPoint point1, CGPoint point2)
{
  return point1.x == point2.x && point1.y == point2.y;
}


static inline _Bool
__CGSizeEqualToSize(CGSize size1, CGSize size2)
{
  return size1.width == size2.width && size1.height == size2.height;
}
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGAffineTransform.h" 2 3



struct CGAffineTransform {
  CGFloat a, b, c, d;
  CGFloat tx, ty;
};



extern const CGAffineTransform CGAffineTransformIdentity
  __attribute__((availability(ios,introduced=2.0)));



extern CGAffineTransform CGAffineTransformMake(CGFloat a, CGFloat b,
  CGFloat c, CGFloat d, CGFloat tx, CGFloat ty)
  __attribute__((availability(ios,introduced=2.0)));




extern CGAffineTransform CGAffineTransformMakeTranslation(CGFloat tx,
  CGFloat ty) __attribute__((availability(ios,introduced=2.0)));




extern CGAffineTransform CGAffineTransformMakeScale(CGFloat sx, CGFloat sy)
  __attribute__((availability(ios,introduced=2.0)));




extern CGAffineTransform CGAffineTransformMakeRotation(CGFloat angle)
  __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGAffineTransformIsIdentity(CGAffineTransform t)
  __attribute__((availability(ios,introduced=2.0)));




extern CGAffineTransform CGAffineTransformTranslate(CGAffineTransform t,
  CGFloat tx, CGFloat ty) __attribute__((availability(ios,introduced=2.0)));




extern CGAffineTransform CGAffineTransformScale(CGAffineTransform t,
  CGFloat sx, CGFloat sy) __attribute__((availability(ios,introduced=2.0)));




extern CGAffineTransform CGAffineTransformRotate(CGAffineTransform t,
  CGFloat angle) __attribute__((availability(ios,introduced=2.0)));




extern CGAffineTransform CGAffineTransformInvert(CGAffineTransform t)
  __attribute__((availability(ios,introduced=2.0)));




extern CGAffineTransform CGAffineTransformConcat(CGAffineTransform t1,
  CGAffineTransform t2) __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGAffineTransformEqualToTransform(CGAffineTransform t1,
  CGAffineTransform t2) __attribute__((availability(ios,introduced=2.0)));





extern CGPoint CGPointApplyAffineTransform(CGPoint point,
  CGAffineTransform t) __attribute__((availability(ios,introduced=2.0)));





extern CGSize CGSizeApplyAffineTransform(CGSize size, CGAffineTransform t)
  __attribute__((availability(ios,introduced=2.0)));
# 110 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGAffineTransform.h" 3
extern CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform t)
  __attribute__((availability(ios,introduced=2.0)));



static inline CGAffineTransform
__CGAffineTransformMake(CGFloat a, CGFloat b, CGFloat c, CGFloat d,
  CGFloat tx, CGFloat ty)
{
  CGAffineTransform t;
  t.a = a; t.b = b; t.c = c; t.d = d; t.tx = tx; t.ty = ty;
  return t;
}


static inline CGPoint
__CGPointApplyAffineTransform(CGPoint point, CGAffineTransform t)
{
  CGPoint p;
  p.x = (CGFloat)((double)t.a * point.x + (double)t.c * point.y + t.tx);
  p.y = (CGFloat)((double)t.b * point.x + (double)t.d * point.y + t.ty);
  return p;
}


static inline CGSize
__CGSizeApplyAffineTransform(CGSize size, CGAffineTransform t)
{
  CGSize s;
  s.width = (CGFloat)((double)t.a * size.width + (double)t.c * size.height);
  s.height = (CGFloat)((double)t.b * size.width + (double)t.d * size.height);
  return s;
}
# 11 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CoreGraphics.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGBitmapContext.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
typedef struct CGContext *CGContextRef;




# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColor.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColor.h" 3
typedef struct CGColor *CGColorRef;



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorSpace.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorSpace.h" 3
typedef struct CGColorSpace *CGColorSpaceRef;



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGDataProvider.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGDataProvider.h" 3
typedef struct CGDataProvider *CGDataProviderRef;
# 25 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGDataProvider.h" 3
typedef size_t (*CGDataProviderGetBytesCallback)(void * _Nullable info,
    void * buffer, size_t count);





typedef off_t (*CGDataProviderSkipForwardCallback)(void * _Nullable info,
    off_t count);




typedef void (*CGDataProviderRewindCallback)(void * _Nullable info);




typedef void (*CGDataProviderReleaseInfoCallback)(void * _Nullable info);
# 57 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGDataProvider.h" 3
struct CGDataProviderSequentialCallbacks {
    unsigned int version;
    CGDataProviderGetBytesCallback _Nullable getBytes;
    CGDataProviderSkipForwardCallback _Nullable skipForward;
    CGDataProviderRewindCallback _Nullable rewind;
    CGDataProviderReleaseInfoCallback _Nullable releaseInfo;
};
typedef struct CGDataProviderSequentialCallbacks
    CGDataProviderSequentialCallbacks;



typedef const void * _Nullable(*CGDataProviderGetBytePointerCallback)(
    void * _Nullable info);




typedef void (*CGDataProviderReleaseBytePointerCallback)(
    void * _Nullable info, const void * pointer);




typedef size_t (*CGDataProviderGetBytesAtPositionCallback)(
    void * _Nullable info, void * buffer, off_t pos, size_t cnt);
# 99 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGDataProvider.h" 3
struct CGDataProviderDirectCallbacks {
    unsigned int version;
    CGDataProviderGetBytePointerCallback _Nullable getBytePointer;
    CGDataProviderReleaseBytePointerCallback _Nullable releaseBytePointer;
    CGDataProviderGetBytesAtPositionCallback _Nullable getBytesAtPosition;
    CGDataProviderReleaseInfoCallback _Nullable releaseInfo;
};
typedef struct CGDataProviderDirectCallbacks CGDataProviderDirectCallbacks;



extern CFTypeID CGDataProviderGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));




extern CGDataProviderRef _Nullable CGDataProviderCreateSequential(
    void * _Nullable info,
    const CGDataProviderSequentialCallbacks * _Nullable callbacks)
    __attribute__((availability(ios,introduced=2.0)));





extern CGDataProviderRef _Nullable CGDataProviderCreateDirect(
    void * _Nullable info, off_t size,
    const CGDataProviderDirectCallbacks * _Nullable callbacks)
    __attribute__((availability(ios,introduced=2.0)));



typedef void (*CGDataProviderReleaseDataCallback)(void * _Nullable info,
    const void * data, size_t size);





extern CGDataProviderRef _Nullable CGDataProviderCreateWithData(
    void * _Nullable info, const void * _Nullable data, size_t size,
    CGDataProviderReleaseDataCallback _Nullable releaseData)
    __attribute__((availability(ios,introduced=2.0)));



extern CGDataProviderRef _Nullable CGDataProviderCreateWithCFData(
    CFDataRef _Nullable data)
    __attribute__((availability(ios,introduced=2.0)));



extern CGDataProviderRef _Nullable CGDataProviderCreateWithURL(
    CFURLRef _Nullable url)
    __attribute__((availability(ios,introduced=2.0)));



extern CGDataProviderRef _Nullable CGDataProviderCreateWithFilename(
    const char * _Nullable filename)
    __attribute__((availability(ios,introduced=2.0)));




extern CGDataProviderRef _Nullable CGDataProviderRetain(
    CGDataProviderRef _Nullable provider)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGDataProviderRelease(CGDataProviderRef _Nullable provider)
    __attribute__((availability(ios,introduced=2.0)));





extern CFDataRef _Nullable CGDataProviderCopyData(
    CGDataProviderRef _Nullable provider)
    __attribute__((availability(ios,introduced=2.0)));
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorSpace.h" 2 3





typedef enum CGColorRenderingIntent : int32_t CGColorRenderingIntent; enum CGColorRenderingIntent : int32_t {
    kCGRenderingIntentDefault,
    kCGRenderingIntentAbsoluteColorimetric,
    kCGRenderingIntentRelativeColorimetric,
    kCGRenderingIntentPerceptual,
    kCGRenderingIntentSaturation
};



typedef enum CGColorSpaceModel : int32_t CGColorSpaceModel; enum CGColorSpaceModel : int32_t {
    kCGColorSpaceModelUnknown = -1,
    kCGColorSpaceModelMonochrome,
    kCGColorSpaceModelRGB,
    kCGColorSpaceModelCMYK,
    kCGColorSpaceModelLab,
    kCGColorSpaceModelDeviceN,
    kCGColorSpaceModelIndexed,
    kCGColorSpaceModelPattern
};
# 51 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorSpace.h" 3
extern const CFStringRef kCGColorSpaceGenericGray
  __attribute__((availability(ios,introduced=9.0)));







extern const CFStringRef kCGColorSpaceGenericRGB
  __attribute__((availability(ios,introduced=9.0)));



extern const CFStringRef kCGColorSpaceGenericCMYK
  __attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef kCGColorSpaceDisplayP3
  __attribute__((availability(ios,introduced=9.3)));




extern const CFStringRef kCGColorSpaceGenericRGBLinear
  __attribute__((availability(ios,introduced=9.0)));





extern const CFStringRef kCGColorSpaceAdobeRGB1998
  __attribute__((availability(ios,introduced=9.0)));







extern const CFStringRef kCGColorSpaceSRGB
  __attribute__((availability(ios,introduced=9.0)));



extern const CFStringRef kCGColorSpaceGenericGrayGamma2_2
  __attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef kCGColorSpaceGenericXYZ
  __attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef kCGColorSpaceACESCGLinear
__attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef kCGColorSpaceITUR_709
__attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef kCGColorSpaceITUR_2020
__attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef kCGColorSpaceROMMRGB
__attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef kCGColorSpaceDCIP3
__attribute__((availability(ios,introduced=9.0)));
# 123 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorSpace.h" 3
extern const CFStringRef kCGColorSpaceExtendedSRGB
__attribute__((availability(ios,introduced=10.0)));



extern const CFStringRef kCGColorSpaceLinearSRGB
__attribute__((availability(ios,introduced=10.0)));



extern const CFStringRef kCGColorSpaceExtendedLinearSRGB
__attribute__((availability(ios,introduced=10.0)));





extern const CFStringRef kCGColorSpaceExtendedGray
__attribute__((availability(ios,introduced=10.0)));



extern const CFStringRef kCGColorSpaceLinearGray
__attribute__((availability(ios,introduced=10.0)));



extern const CFStringRef kCGColorSpaceExtendedLinearGray
__attribute__((availability(ios,introduced=10.0)));



extern CGColorSpaceRef _Nullable CGColorSpaceCreateDeviceGray(void)
  __attribute__((availability(ios,introduced=2.0)));



extern CGColorSpaceRef _Nullable CGColorSpaceCreateDeviceRGB(void)
  __attribute__((availability(ios,introduced=2.0)));



extern CGColorSpaceRef _Nullable CGColorSpaceCreateDeviceCMYK(void)
  __attribute__((availability(ios,introduced=2.0)));







extern CGColorSpaceRef _Nullable CGColorSpaceCreateCalibratedGray(const CGFloat
  whitePoint[3], const CGFloat blackPoint[3], CGFloat gamma)
  __attribute__((availability(ios,introduced=2.0)));
# 187 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorSpace.h" 3
extern CGColorSpaceRef _Nullable CGColorSpaceCreateCalibratedRGB(const CGFloat
  whitePoint[3], const CGFloat blackPoint[3], const CGFloat gamma[3],
  const CGFloat matrix[9]) __attribute__((availability(ios,introduced=2.0)));
# 198 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorSpace.h" 3
extern CGColorSpaceRef _Nullable CGColorSpaceCreateLab(const CGFloat whitePoint[3],
  const CGFloat blackPoint[3], const CGFloat range[4])
  __attribute__((availability(ios,introduced=2.0)));




extern CGColorSpaceRef _Nullable CGColorSpaceCreateWithICCProfile(CFDataRef _Nullable data)
  __attribute__((availability(ios,introduced=2.0)));
# 221 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorSpace.h" 3
extern CGColorSpaceRef _Nullable CGColorSpaceCreateICCBased(size_t nComponents,
  const CGFloat * _Nullable range, CGDataProviderRef _Nullable profile,
  CGColorSpaceRef _Nullable alternate)
  __attribute__((availability(ios,introduced=2.0)));
# 236 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorSpace.h" 3
extern CGColorSpaceRef _Nullable CGColorSpaceCreateIndexed(CGColorSpaceRef _Nullable baseSpace,
  size_t lastIndex, const unsigned char * _Nullable colorTable)
  __attribute__((availability(ios,introduced=2.0)));






extern CGColorSpaceRef _Nullable CGColorSpaceCreatePattern(CGColorSpaceRef _Nullable baseSpace)
  __attribute__((availability(ios,introduced=2.0)));




extern CGColorSpaceRef _Nullable
  CGColorSpaceCreateWithPlatformColorSpace(const void * _Nullable ref)
  __attribute__((availability(ios,introduced=9.0)));




extern CGColorSpaceRef _Nullable CGColorSpaceCreateWithName(CFStringRef _Nullable name)
  __attribute__((availability(ios,introduced=2.0)));




extern CGColorSpaceRef _Nullable CGColorSpaceRetain(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0)));




extern void CGColorSpaceRelease(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0)));




extern CFStringRef _Nullable CGColorSpaceCopyName(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=10.0)));



extern CFTypeID CGColorSpaceGetTypeID(void)
  __attribute__((availability(ios,introduced=2.0)));



extern size_t CGColorSpaceGetNumberOfComponents(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0)));



extern CGColorSpaceModel CGColorSpaceGetModel(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0)));





extern CGColorSpaceRef _Nullable CGColorSpaceGetBaseColorSpace(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0)));





extern size_t CGColorSpaceGetColorTableCount(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0)));
# 315 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorSpace.h" 3
extern void CGColorSpaceGetColorTable(CGColorSpaceRef _Nullable space,
  uint8_t * _Nullable table) __attribute__((availability(ios,introduced=2.0)));




extern CFDataRef _Nullable CGColorSpaceCopyICCProfile(CGColorSpaceRef _Nullable space);



extern CFDataRef _Nullable CGColorSpaceCopyICCData(CGColorSpaceRef _Nullable space)
__attribute__((availability(ios,introduced=10.0)));



extern _Bool CGColorSpaceIsWideGamutRGB(CGColorSpaceRef)
__attribute__((availability(ios,introduced=10.0)));




extern _Bool CGColorSpaceSupportsOutput(CGColorSpaceRef space)
__attribute__((availability(ios,introduced=10.0)));
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColor.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPattern.h" 1 3







typedef struct CGPattern *CGPatternRef;



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPattern.h" 2 3
# 33 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPattern.h" 3
typedef enum CGPatternTiling : int32_t CGPatternTiling; enum CGPatternTiling : int32_t {
    kCGPatternTilingNoDistortion,
    kCGPatternTilingConstantSpacingMinimalDistortion,
    kCGPatternTilingConstantSpacing
};
# 48 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPattern.h" 3
typedef void (*CGPatternDrawPatternCallback)(void * _Nullable info,
                                             CGContextRef _Nullable context);
typedef void (*CGPatternReleaseInfoCallback)(void * _Nullable info);

struct CGPatternCallbacks {
    unsigned int version;
    CGPatternDrawPatternCallback _Nullable drawPattern;
    CGPatternReleaseInfoCallback _Nullable releaseInfo;
};
typedef struct CGPatternCallbacks CGPatternCallbacks;



extern CFTypeID CGPatternGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPatternRef _Nullable CGPatternCreate(void * _Nullable info,
    CGRect bounds, CGAffineTransform matrix, CGFloat xStep, CGFloat yStep,
    CGPatternTiling tiling, _Bool isColored,
    const CGPatternCallbacks * _Nullable callbacks)
    __attribute__((availability(ios,introduced=2.0)));




extern CGPatternRef _Nullable CGPatternRetain(CGPatternRef _Nullable pattern)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGPatternRelease(CGPatternRef _Nullable pattern)
    __attribute__((availability(ios,introduced=2.0)));
# 17 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColor.h" 2 3
# 26 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColor.h" 3
extern CGColorRef _Nullable CGColorCreate(CGColorSpaceRef _Nullable space,
  const CGFloat * _Nullable components)
  __attribute__((availability(ios,introduced=2.0)));



extern CGColorRef CGColorCreateGenericGray(CGFloat gray, CGFloat alpha)
  __attribute__((availability(ios,unavailable)));



extern CGColorRef CGColorCreateGenericRGB(CGFloat red, CGFloat green,
  CGFloat blue, CGFloat alpha) __attribute__((availability(ios,unavailable)));



extern CGColorRef CGColorCreateGenericCMYK(CGFloat cyan, CGFloat magenta,
  CGFloat yellow, CGFloat black, CGFloat alpha)
  __attribute__((availability(ios,unavailable)));
# 53 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColor.h" 3
extern CGColorRef _Nullable CGColorGetConstantColor(CFStringRef _Nullable colorName)
  __attribute__((availability(ios,unavailable)));




extern CGColorRef _Nullable CGColorCreateWithPattern(CGColorSpaceRef _Nullable space,
  CGPatternRef _Nullable pattern, const CGFloat * _Nullable components)
  __attribute__((availability(ios,introduced=2.0)));



extern CGColorRef _Nullable CGColorCreateCopy(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));



extern CGColorRef _Nullable CGColorCreateCopyWithAlpha(CGColorRef _Nullable color,
  CGFloat alpha) __attribute__((availability(ios,introduced=2.0)));



extern CGColorRef _Nullable CGColorCreateCopyByMatchingToColorSpace(_Nullable CGColorSpaceRef,
  CGColorRenderingIntent intent, CGColorRef _Nullable color, _Nullable CFDictionaryRef options)
  __attribute__((availability(ios,introduced=9.0)));




extern CGColorRef _Nullable CGColorRetain(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));




extern void CGColorRelease(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGColorEqualToColor(CGColorRef _Nullable color1, CGColorRef _Nullable color2)
  __attribute__((availability(ios,introduced=2.0)));




extern size_t CGColorGetNumberOfComponents(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));



extern const CGFloat * _Nullable CGColorGetComponents(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));



extern CGFloat CGColorGetAlpha(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));



extern CGColorSpaceRef _Nullable CGColorGetColorSpace(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));




extern CGPatternRef _Nullable CGColorGetPattern(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));



extern CFTypeID CGColorGetTypeID(void)
  __attribute__((availability(ios,introduced=2.0)));





extern const CFStringRef kCGColorWhite
  __attribute__((availability(ios,unavailable)));

extern const CFStringRef kCGColorBlack
  __attribute__((availability(ios,unavailable)));

extern const CFStringRef kCGColorClear
  __attribute__((availability(ios,unavailable)));
# 17 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGFont.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGFont.h" 3
typedef struct CGFont *CGFontRef;



typedef unsigned short CGFontIndex;



typedef CGFontIndex CGGlyph;






typedef enum CGFontPostScriptFormat : int32_t CGFontPostScriptFormat; enum CGFontPostScriptFormat : int32_t {
    kCGFontPostScriptFormatType1 = 1,
    kCGFontPostScriptFormatType3 = 3,
    kCGFontPostScriptFormatType42 = 42
};
# 47 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGFont.h" 3
static const CGFontIndex kCGFontIndexMax = ((1 << 16) - 2);


static const CGFontIndex kCGFontIndexInvalid = ((1 << 16) - 1);


static const CGFontIndex kCGGlyphMax = kCGFontIndexMax;



extern CFTypeID CGFontGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));





extern CGFontRef _Nullable CGFontCreateWithPlatformFont(
    void * _Nullable platformFontReference)
    __attribute__((availability(ios,unavailable)));





extern CGFontRef _Nullable CGFontCreateWithDataProvider(
    CGDataProviderRef _Nullable provider)
    __attribute__((availability(ios,introduced=2.0)));





extern CGFontRef _Nullable CGFontCreateWithFontName(
    CFStringRef _Nullable name)
    __attribute__((availability(ios,introduced=2.0)));
# 92 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGFont.h" 3
extern CGFontRef _Nullable CGFontCreateCopyWithVariations(
    CGFontRef _Nullable font, CFDictionaryRef _Nullable variations)
    __attribute__((availability(ios,introduced=2.0)));




extern CGFontRef _Nullable CGFontRetain(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGFontRelease(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));



extern size_t CGFontGetNumberOfGlyphs(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));



extern int CGFontGetUnitsPerEm(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));



extern CFStringRef _Nullable CGFontCopyPostScriptName(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));



extern CFStringRef _Nullable CGFontCopyFullName(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));





extern int CGFontGetAscent(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));





extern int CGFontGetDescent(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));





extern int CGFontGetLeading(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));





extern int CGFontGetCapHeight(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));





extern int CGFontGetXHeight(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));





extern CGRect CGFontGetFontBBox(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));




extern CGFloat CGFontGetItalicAngle(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));




extern CGFloat CGFontGetStemV(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));






extern CFArrayRef _Nullable CGFontCopyVariationAxes(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));
# 197 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGFont.h" 3
extern CFDictionaryRef _Nullable CGFontCopyVariations(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));






extern _Bool CGFontGetGlyphAdvances(CGFontRef _Nullable font,
    const CGGlyph * glyphs, size_t count, int * advances)
    __attribute__((availability(ios,introduced=2.0)));







extern _Bool CGFontGetGlyphBBoxes(CGFontRef _Nullable font,
    const CGGlyph * glyphs, size_t count, CGRect * bboxes)
    __attribute__((availability(ios,introduced=2.0)));




extern CGGlyph CGFontGetGlyphWithGlyphName(
    CGFontRef _Nullable font, CFStringRef _Nullable name)
    __attribute__((availability(ios,introduced=2.0)));




extern CFStringRef _Nullable CGFontCopyGlyphNameForGlyph(
    CGFontRef _Nullable font, CGGlyph glyph)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGFontCanCreatePostScriptSubset(CGFontRef _Nullable font,
    CGFontPostScriptFormat format)
    __attribute__((availability(ios,introduced=2.0)));






extern CFDataRef _Nullable CGFontCreatePostScriptSubset(
    CGFontRef _Nullable font, CFStringRef _Nullable subsetName,
    CGFontPostScriptFormat format, const CGGlyph * _Nullable glyphs,
    size_t count, const CGGlyph encoding[256])
    __attribute__((availability(ios,introduced=2.0)));




extern CFDataRef _Nullable CGFontCreatePostScriptEncoding(
    CGFontRef _Nullable font, const CGGlyph encoding[256])
    __attribute__((availability(ios,introduced=2.0)));





extern CFArrayRef _Nullable CGFontCopyTableTags(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));




extern CFDataRef _Nullable CGFontCopyTableForTag(
    CGFontRef _Nullable font, uint32_t tag)
    __attribute__((availability(ios,introduced=2.0)));







extern const CFStringRef kCGFontVariationAxisName
    __attribute__((availability(ios,introduced=2.0)));





extern const CFStringRef kCGFontVariationAxisMinValue
    __attribute__((availability(ios,introduced=2.0)));





extern const CFStringRef kCGFontVariationAxisMaxValue
    __attribute__((availability(ios,introduced=2.0)));





extern const CFStringRef kCGFontVariationAxisDefaultValue
    __attribute__((availability(ios,introduced=2.0)));



typedef enum CGGlyphDeprecatedEnum : int32_t CGGlyphDeprecatedEnum; enum CGGlyphDeprecatedEnum : int32_t {
  CGGlyphMin __attribute__((deprecated)),
  CGGlyphMax __attribute__((deprecated))
};
# 19 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGGradient.h" 1 3







typedef struct CGGradient *CGGradientRef;






typedef enum CGGradientDrawingOptions : uint32_t CGGradientDrawingOptions; enum CGGradientDrawingOptions : uint32_t {
  kCGGradientDrawsBeforeStartLocation = (1 << 0),
  kCGGradientDrawsAfterEndLocation = (1 << 1)
};




# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 1 3
# 23 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGGradient.h" 2 3
# 40 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGGradient.h" 3
extern CFTypeID CGGradientGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
# 56 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGGradient.h" 3
extern CGGradientRef _Nullable CGGradientCreateWithColorComponents(
    CGColorSpaceRef _Nullable space, const CGFloat * _Nullable components,
    const CGFloat * _Nullable locations, size_t count)
    __attribute__((availability(ios,introduced=2.0)));
# 77 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGGradient.h" 3
extern CGGradientRef _Nullable CGGradientCreateWithColors(
    CGColorSpaceRef _Nullable space, CFArrayRef _Nullable colors,
    const CGFloat * _Nullable locations)
    __attribute__((availability(ios,introduced=2.0)));




extern CGGradientRef _Nullable CGGradientRetain(
    CGGradientRef _Nullable gradient)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGGradientRelease(CGGradientRef _Nullable gradient)
    __attribute__((availability(ios,introduced=2.0)));
# 20 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGImage.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGImage.h" 3
typedef struct CGImage *CGImageRef;
# 22 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGImage.h" 3
typedef enum CGImageAlphaInfo : uint32_t CGImageAlphaInfo; enum CGImageAlphaInfo : uint32_t {
    kCGImageAlphaNone,
    kCGImageAlphaPremultipliedLast,
    kCGImageAlphaPremultipliedFirst,
    kCGImageAlphaLast,
    kCGImageAlphaFirst,
    kCGImageAlphaNoneSkipLast,
    kCGImageAlphaNoneSkipFirst,
    kCGImageAlphaOnly
};

typedef enum CGImageByteOrderInfo : uint32_t CGImageByteOrderInfo; enum CGImageByteOrderInfo : uint32_t {
    kCGImageByteOrderMask = 0x7000,
    kCGImageByteOrder16Little = (1 << 12),
    kCGImageByteOrder32Little = (2 << 12),
    kCGImageByteOrder16Big = (3 << 12),
    kCGImageByteOrder32Big = (4 << 12)
} __attribute__((availability(ios,introduced=10.0)));

typedef enum CGBitmapInfo : uint32_t CGBitmapInfo; enum CGBitmapInfo : uint32_t {
    kCGBitmapAlphaInfoMask = 0x1F,

    kCGBitmapFloatInfoMask = 0xF00,
    kCGBitmapFloatComponents = (1 << 8),

    kCGBitmapByteOrderMask = kCGImageByteOrderMask,
    kCGBitmapByteOrderDefault = (0 << 12),
    kCGBitmapByteOrder16Little = kCGImageByteOrder16Little,
    kCGBitmapByteOrder32Little = kCGImageByteOrder32Little,
    kCGBitmapByteOrder16Big = kCGImageByteOrder16Big,
    kCGBitmapByteOrder32Big = kCGImageByteOrder32Big
} __attribute__((availability(ios,introduced=2.0)));
# 65 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGImage.h" 3
extern CFTypeID CGImageGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));



extern CGImageRef _Nullable CGImageCreate(size_t width, size_t height,
    size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow,
    CGColorSpaceRef _Nullable space, CGBitmapInfo bitmapInfo,
    CGDataProviderRef _Nullable provider,
    const CGFloat * _Nullable decode, _Bool shouldInterpolate,
    CGColorRenderingIntent intent)
    __attribute__((availability(ios,introduced=2.0)));



extern CGImageRef _Nullable CGImageMaskCreate(size_t width, size_t height,
    size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow,
    CGDataProviderRef _Nullable provider, const CGFloat * _Nullable decode,
    _Bool shouldInterpolate)
    __attribute__((availability(ios,introduced=2.0)));




extern CGImageRef _Nullable CGImageCreateCopy(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern CGImageRef _Nullable CGImageCreateWithJPEGDataProvider(
    CGDataProviderRef _Nullable source, const CGFloat * _Nullable decode,
    _Bool shouldInterpolate,
    CGColorRenderingIntent intent)
    __attribute__((availability(ios,introduced=2.0)));



extern CGImageRef _Nullable CGImageCreateWithPNGDataProvider(
    CGDataProviderRef _Nullable source, const CGFloat * _Nullable decode,
    _Bool shouldInterpolate,
    CGColorRenderingIntent intent)
    __attribute__((availability(ios,introduced=2.0)));
# 129 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGImage.h" 3
extern CGImageRef _Nullable CGImageCreateWithImageInRect(
    CGImageRef _Nullable image, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));
# 159 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGImage.h" 3
extern CGImageRef _Nullable CGImageCreateWithMask(
    CGImageRef _Nullable image, CGImageRef _Nullable mask)
    __attribute__((availability(ios,introduced=2.0)));
# 179 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGImage.h" 3
extern CGImageRef _Nullable CGImageCreateWithMaskingColors(
    CGImageRef _Nullable image, const CGFloat * _Nullable components)
    __attribute__((availability(ios,introduced=2.0)));






extern CGImageRef _Nullable CGImageCreateCopyWithColorSpace(
    CGImageRef _Nullable image, CGColorSpaceRef _Nullable space)
    __attribute__((availability(ios,introduced=2.0)));



extern CGImageRef _Nullable CGImageRetain(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGImageRelease(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGImageIsMask(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern size_t CGImageGetWidth(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern size_t CGImageGetHeight(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern size_t CGImageGetBitsPerComponent(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern size_t CGImageGetBitsPerPixel(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern size_t CGImageGetBytesPerRow(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));




extern CGColorSpaceRef _Nullable CGImageGetColorSpace(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern CGImageAlphaInfo CGImageGetAlphaInfo(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern CGDataProviderRef _Nullable CGImageGetDataProvider(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern const CGFloat * _Nullable CGImageGetDecode(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGImageGetShouldInterpolate(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern CGColorRenderingIntent CGImageGetRenderingIntent(_Nullable CGImageRef image)
    __attribute__((availability(ios,introduced=2.0)));



extern CGBitmapInfo CGImageGetBitmapInfo(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern CFStringRef _Nullable CGImageGetUTType(_Nullable CGImageRef image)
    __attribute__((availability(ios,introduced=9.0)));
# 21 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h" 3
typedef struct CGPath *CGMutablePathRef;
typedef const struct CGPath *CGPathRef;
# 25 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h" 3
typedef enum CGLineJoin : int32_t CGLineJoin; enum CGLineJoin : int32_t {
    kCGLineJoinMiter,
    kCGLineJoinRound,
    kCGLineJoinBevel
};



typedef enum CGLineCap : int32_t CGLineCap; enum CGLineCap : int32_t {
    kCGLineCapButt,
    kCGLineCapRound,
    kCGLineCapSquare
};



extern CFTypeID CGPathGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));



extern CGMutablePathRef CGPathCreateMutable(void)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPathRef _Nullable CGPathCreateCopy(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPathRef _Nullable CGPathCreateCopyByTransformingPath(
    CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform)
    __attribute__((availability(ios,introduced=5.0)));



extern CGMutablePathRef _Nullable CGPathCreateMutableCopy(
    CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));



extern CGMutablePathRef _Nullable CGPathCreateMutableCopyByTransformingPath(
    CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform)
    __attribute__((availability(ios,introduced=5.0)));
# 79 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h" 3
extern CGPathRef CGPathCreateWithRect(CGRect rect,
    const CGAffineTransform * _Nullable transform)
    __attribute__((availability(ios,introduced=4.0)));
# 95 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h" 3
extern CGPathRef CGPathCreateWithEllipseInRect(CGRect rect,
    const CGAffineTransform * _Nullable transform)
    __attribute__((availability(ios,introduced=5.0)));
# 108 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h" 3
extern CGPathRef CGPathCreateWithRoundedRect(CGRect rect,
    CGFloat cornerWidth, CGFloat cornerHeight,
    const CGAffineTransform * _Nullable transform)
    __attribute__((availability(ios,introduced=7.0)));
# 122 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h" 3
extern void CGPathAddRoundedRect(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable transform, CGRect rect,
    CGFloat cornerWidth, CGFloat cornerHeight)
    __attribute__((availability(ios,introduced=7.0)));







extern CGPathRef _Nullable CGPathCreateCopyByDashingPath(
    CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform,
    CGFloat phase, const CGFloat * _Nullable lengths, size_t count)
    __attribute__((availability(ios,introduced=5.0)));







extern CGPathRef _Nullable CGPathCreateCopyByStrokingPath(
    CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform,
    CGFloat lineWidth, CGLineCap lineCap,
    CGLineJoin lineJoin, CGFloat miterLimit)
    __attribute__((availability(ios,introduced=5.0)));




extern CGPathRef _Nullable CGPathRetain(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGPathRelease(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGPathEqualToPath(CGPathRef _Nullable path1,
    CGPathRef _Nullable path2)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGPathMoveToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGPathAddLineToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGPathAddQuadCurveToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform *_Nullable m, CGFloat cpx, CGFloat cpy,
    CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGPathAddCurveToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGFloat cp1x, CGFloat cp1y,
    CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGPathCloseSubpath(CGMutablePathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGPathAddRect(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGPathAddRects(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, const CGRect * _Nullable rects,
    size_t count)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGPathAddLines(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, const CGPoint * _Nullable points,
    size_t count)
    __attribute__((availability(ios,introduced=2.0)));
# 248 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h" 3
extern void CGPathAddEllipseInRect(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));
# 263 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h" 3
extern void CGPathAddRelativeArc(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable matrix, CGFloat x, CGFloat y,
    CGFloat radius, CGFloat startAngle, CGFloat delta)
    __attribute__((availability(ios,introduced=5.0)));
# 290 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h" 3
extern void CGPathAddArc(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m,
    CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat endAngle,
    _Bool clockwise)
    __attribute__((availability(ios,introduced=2.0)));
# 304 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h" 3
extern void CGPathAddArcToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGFloat x1, CGFloat y1,
    CGFloat x2, CGFloat y2, CGFloat radius)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGPathAddPath(CGMutablePathRef _Nullable path1,
    const CGAffineTransform * _Nullable m, CGPathRef _Nullable path2)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGPathIsEmpty(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGPathIsRect(CGPathRef _Nullable path, CGRect * _Nullable rect)
    __attribute__((availability(ios,introduced=2.0)));




extern CGPoint CGPathGetCurrentPoint(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));






extern CGRect CGPathGetBoundingBox(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));






extern CGRect CGPathGetPathBoundingBox(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=4.0)));
# 357 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h" 3
extern _Bool CGPathContainsPoint(CGPathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGPoint point, _Bool eoFill)
    __attribute__((availability(ios,introduced=2.0)));



typedef enum CGPathElementType : int32_t CGPathElementType; enum CGPathElementType : int32_t {
  kCGPathElementMoveToPoint,
  kCGPathElementAddLineToPoint,
  kCGPathElementAddQuadCurveToPoint,
  kCGPathElementAddCurveToPoint,
  kCGPathElementCloseSubpath
};



struct CGPathElement {
  CGPathElementType type;
  CGPoint * points;
};
typedef struct CGPathElement CGPathElement;



typedef void (*CGPathApplierFunction)(void * _Nullable info,
  const CGPathElement * element);




extern void CGPathApply(CGPathRef _Nullable path, void * _Nullable info,
    CGPathApplierFunction _Nullable function)
    __attribute__((availability(ios,introduced=2.0)));
# 22 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFDocument.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFDocument.h" 3
typedef struct CGPDFDocument *CGPDFDocumentRef;




# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFPage.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFPage.h" 3
typedef struct CGPDFPage *CGPDFPageRef;



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFDictionary.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFDictionary.h" 3
typedef struct CGPDFDictionary *CGPDFDictionaryRef;


# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFArray.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFArray.h" 3
typedef struct CGPDFArray *CGPDFArrayRef;


# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFDictionary.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFArray.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFObject.h" 1 3
# 19 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFObject.h" 3
typedef unsigned char CGPDFBoolean;



typedef long int CGPDFInteger;



typedef CGFloat CGPDFReal;



typedef struct CGPDFObject *CGPDFObjectRef;



typedef enum CGPDFObjectType : int32_t CGPDFObjectType; enum CGPDFObjectType : int32_t {
  kCGPDFObjectTypeNull = 1,
  kCGPDFObjectTypeBoolean,
  kCGPDFObjectTypeInteger,
  kCGPDFObjectTypeReal,
  kCGPDFObjectTypeName,
  kCGPDFObjectTypeString,
  kCGPDFObjectTypeArray,
  kCGPDFObjectTypeDictionary,
  kCGPDFObjectTypeStream
};



extern CGPDFObjectType CGPDFObjectGetType(CGPDFObjectRef _Nullable object)
    __attribute__((availability(ios,introduced=2.0)));
# 59 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFObject.h" 3
extern _Bool CGPDFObjectGetValue(CGPDFObjectRef _Nullable object,
    CGPDFObjectType type, void * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFArray.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFStream.h" 1 3







typedef struct CGPDFStream *CGPDFStreamRef;





typedef enum CGPDFDataFormat : int32_t CGPDFDataFormat; enum CGPDFDataFormat : int32_t {
    CGPDFDataFormatRaw, CGPDFDataFormatJPEGEncoded, CGPDFDataFormatJPEG2000
};


# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFDictionary.h" 1 3
# 19 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFStream.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFStream.h" 1 3
# 20 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFStream.h" 2 3








extern CGPDFDictionaryRef _Nullable CGPDFStreamGetDictionary(
    CGPDFStreamRef _Nullable stream)
    __attribute__((availability(ios,introduced=2.0)));



extern CFDataRef _Nullable CGPDFStreamCopyData(
    CGPDFStreamRef _Nullable stream,
    CGPDFDataFormat * _Nullable format)
    __attribute__((availability(ios,introduced=2.0)));
# 17 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFArray.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFString.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFString.h" 3
typedef struct CGPDFString *CGPDFStringRef;
# 24 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFString.h" 3
extern size_t CGPDFStringGetLength(CGPDFStringRef _Nullable string)
    __attribute__((availability(ios,introduced=2.0)));



extern const unsigned char * _Nullable CGPDFStringGetBytePtr(
    CGPDFStringRef _Nullable string)
    __attribute__((availability(ios,introduced=2.0)));





extern CFStringRef _Nullable CGPDFStringCopyTextString(
    CGPDFStringRef _Nullable string)
    __attribute__((availability(ios,introduced=2.0)));




extern CFDateRef _Nullable CGPDFStringCopyDate(
    CGPDFStringRef _Nullable string)
    __attribute__((availability(ios,introduced=2.0)));
# 18 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFArray.h" 2 3







extern size_t CGPDFArrayGetCount(CGPDFArrayRef _Nullable array)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFArrayGetObject(CGPDFArrayRef _Nullable array, size_t index,
    CGPDFObjectRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFArrayGetNull(CGPDFArrayRef _Nullable array, size_t index)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFArrayGetBoolean(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFBoolean * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFArrayGetInteger(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFInteger * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGPDFArrayGetNumber(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFReal * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFArrayGetName(CGPDFArrayRef _Nullable array,
    size_t index, const char * _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFArrayGetString(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFStringRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFArrayGetArray(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFArrayRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFArrayGetDictionary(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFDictionaryRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFArrayGetStream(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFStreamRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));
# 15 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFDictionary.h" 2 3
# 25 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFDictionary.h" 3
extern size_t CGPDFDictionaryGetCount(CGPDFDictionaryRef _Nullable dict)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFDictionaryGetObject(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFObjectRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGPDFDictionaryGetBoolean(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFBoolean * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGPDFDictionaryGetInteger(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFInteger * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGPDFDictionaryGetNumber(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFReal * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFDictionaryGetName(CGPDFDictionaryRef _Nullable dict,
    const char * key, const char * _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFDictionaryGetString(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFStringRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFDictionaryGetArray(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFArrayRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGPDFDictionaryGetDictionary(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFDictionaryRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFDictionaryGetStream(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFStreamRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





typedef void (*CGPDFDictionaryApplierFunction)(const char * key,
    CGPDFObjectRef value, void * _Nullable info);





extern void CGPDFDictionaryApplyFunction(CGPDFDictionaryRef _Nullable dict,
    CGPDFDictionaryApplierFunction _Nullable function, void * _Nullable info)
    __attribute__((availability(ios,introduced=2.0)));
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFPage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFDocument.h" 1 3
# 17 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFPage.h" 2 3





typedef enum CGPDFBox : int32_t CGPDFBox; enum CGPDFBox : int32_t {
  kCGPDFMediaBox = 0,
  kCGPDFCropBox = 1,
  kCGPDFBleedBox = 2,
  kCGPDFTrimBox = 3,
  kCGPDFArtBox = 4
};




extern CGPDFPageRef _Nullable CGPDFPageRetain(CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGPDFPageRelease(CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPDFDocumentRef _Nullable CGPDFPageGetDocument(
    CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));



extern size_t CGPDFPageGetPageNumber(CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));






extern CGRect CGPDFPageGetBoxRect(CGPDFPageRef _Nullable page, CGPDFBox box)
    __attribute__((availability(ios,introduced=2.0)));





extern int CGPDFPageGetRotationAngle(CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));
# 81 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFPage.h" 3
extern CGAffineTransform CGPDFPageGetDrawingTransform(
    CGPDFPageRef _Nullable page, CGPDFBox box, CGRect rect, int rotate,
    _Bool preserveAspectRatio)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPDFDictionaryRef _Nullable CGPDFPageGetDictionary(
    CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));



extern CFTypeID CGPDFPageGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
# 17 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFDocument.h" 2 3








extern CGPDFDocumentRef _Nullable CGPDFDocumentCreateWithProvider(
    CGDataProviderRef _Nullable provider)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPDFDocumentRef _Nullable CGPDFDocumentCreateWithURL(
    CFURLRef _Nullable url)
    __attribute__((availability(ios,introduced=2.0)));




extern CGPDFDocumentRef _Nullable CGPDFDocumentRetain(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGPDFDocumentRelease(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGPDFDocumentGetVersion(CGPDFDocumentRef _Nullable document,
  int * majorVersion, int * minorVersion)
    __attribute__((availability(ios,introduced=2.0)));






extern _Bool CGPDFDocumentIsEncrypted(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGPDFDocumentUnlockWithPassword(
    CGPDFDocumentRef _Nullable document, const char * password)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGPDFDocumentIsUnlocked(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));






extern _Bool CGPDFDocumentAllowsPrinting(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));






extern _Bool CGPDFDocumentAllowsCopying(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));



extern size_t CGPDFDocumentGetNumberOfPages(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));




extern CGPDFPageRef _Nullable CGPDFDocumentGetPage(
    CGPDFDocumentRef _Nullable document, size_t pageNumber)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPDFDictionaryRef _Nullable CGPDFDocumentGetCatalog(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPDFDictionaryRef _Nullable CGPDFDocumentGetInfo(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPDFArrayRef _Nullable CGPDFDocumentGetID(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));



extern CFTypeID CGPDFDocumentGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));






extern CGRect CGPDFDocumentGetMediaBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(ios,unavailable)));






extern CGRect CGPDFDocumentGetCropBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(ios,unavailable)));





extern CGRect CGPDFDocumentGetBleedBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(ios,unavailable)));





extern CGRect CGPDFDocumentGetTrimBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(ios,unavailable)));





extern CGRect CGPDFDocumentGetArtBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(ios,unavailable)));





extern int CGPDFDocumentGetRotationAngle(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(ios,unavailable)));
# 24 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGShading.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGShading.h" 3
typedef struct CGShading *CGShadingRef;




# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGFunction.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGFunction.h" 3
typedef struct CGFunction *CGFunctionRef;
# 27 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGFunction.h" 3
typedef void (*CGFunctionEvaluateCallback)(void * _Nullable info,
  const CGFloat * in, CGFloat * out);




typedef void (*CGFunctionReleaseInfoCallback)(void * _Nullable info);
# 43 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGFunction.h" 3
struct CGFunctionCallbacks {
    unsigned int version;
    CGFunctionEvaluateCallback _Nullable evaluate;
    CGFunctionReleaseInfoCallback _Nullable releaseInfo;
};
typedef struct CGFunctionCallbacks CGFunctionCallbacks;



extern CFTypeID CGFunctionGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
# 81 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGFunction.h" 3
extern CGFunctionRef _Nullable CGFunctionCreate(void * _Nullable info,
    size_t domainDimension, const CGFloat *_Nullable domain,
    size_t rangeDimension, const CGFloat * _Nullable range,
    const CGFunctionCallbacks * _Nullable callbacks)
    __attribute__((availability(ios,introduced=2.0)));




extern CGFunctionRef _Nullable CGFunctionRetain(
    CGFunctionRef _Nullable function)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGFunctionRelease(CGFunctionRef _Nullable function)
    __attribute__((availability(ios,introduced=2.0)));
# 17 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGShading.h" 2 3
# 26 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGShading.h" 3
extern CFTypeID CGShadingGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
# 44 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGShading.h" 3
extern CGShadingRef _Nullable CGShadingCreateAxial(
    CGColorSpaceRef _Nullable space, CGPoint start, CGPoint end,
    CGFunctionRef _Nullable function, _Bool extendStart, _Bool extendEnd)
    __attribute__((availability(ios,introduced=2.0)));
# 64 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGShading.h" 3
extern CGShadingRef _Nullable CGShadingCreateRadial(
    CGColorSpaceRef _Nullable space,
    CGPoint start, CGFloat startRadius, CGPoint end, CGFloat endRadius,
    CGFunctionRef _Nullable function, _Bool extendStart, _Bool extendEnd)
    __attribute__((availability(ios,introduced=2.0)));




extern CGShadingRef _Nullable CGShadingRetain(CGShadingRef _Nullable shading)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGShadingRelease(CGShadingRef _Nullable shading)
    __attribute__((availability(ios,introduced=2.0)));
# 25 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 2 3







typedef enum CGPathDrawingMode : int32_t CGPathDrawingMode; enum CGPathDrawingMode : int32_t {
  kCGPathFill,
  kCGPathEOFill,
  kCGPathStroke,
  kCGPathFillStroke,
  kCGPathEOFillStroke
};



typedef enum CGTextDrawingMode : int32_t CGTextDrawingMode; enum CGTextDrawingMode : int32_t {
  kCGTextFill,
  kCGTextStroke,
  kCGTextFillStroke,
  kCGTextInvisible,
  kCGTextFillClip,
  kCGTextStrokeClip,
  kCGTextFillStrokeClip,
  kCGTextClip
};



typedef enum CGTextEncoding : int32_t CGTextEncoding; enum CGTextEncoding : int32_t {
  kCGEncodingFontSpecific,
  kCGEncodingMacRoman
} __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));



typedef enum CGInterpolationQuality : int32_t CGInterpolationQuality; enum CGInterpolationQuality : int32_t {
  kCGInterpolationDefault = 0,
  kCGInterpolationNone = 1,
  kCGInterpolationLow = 2,
  kCGInterpolationMedium = 4,
  kCGInterpolationHigh = 3
};
# 83 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
typedef enum CGBlendMode : int32_t CGBlendMode; enum CGBlendMode : int32_t {

    kCGBlendModeNormal,
    kCGBlendModeMultiply,
    kCGBlendModeScreen,
    kCGBlendModeOverlay,
    kCGBlendModeDarken,
    kCGBlendModeLighten,
    kCGBlendModeColorDodge,
    kCGBlendModeColorBurn,
    kCGBlendModeSoftLight,
    kCGBlendModeHardLight,
    kCGBlendModeDifference,
    kCGBlendModeExclusion,
    kCGBlendModeHue,
    kCGBlendModeSaturation,
    kCGBlendModeColor,
    kCGBlendModeLuminosity,
# 113 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
    kCGBlendModeClear,
    kCGBlendModeCopy,
    kCGBlendModeSourceIn,
    kCGBlendModeSourceOut,
    kCGBlendModeSourceAtop,
    kCGBlendModeDestinationOver,
    kCGBlendModeDestinationIn,
    kCGBlendModeDestinationOut,
    kCGBlendModeDestinationAtop,
    kCGBlendModeXOR,
    kCGBlendModePlusDarker,
    kCGBlendModePlusLighter
};



extern CFTypeID CGContextGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));







extern void CGContextSaveGState(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextRestoreGState(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGContextScaleCTM(CGContextRef _Nullable c,
    CGFloat sx, CGFloat sy)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextTranslateCTM(CGContextRef _Nullable c,
    CGFloat tx, CGFloat ty)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextRotateCTM(CGContextRef _Nullable c, CGFloat angle)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextConcatCTM(CGContextRef _Nullable c,
    CGAffineTransform transform)
    __attribute__((availability(ios,introduced=2.0)));




extern CGAffineTransform CGContextGetCTM(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextSetLineWidth(CGContextRef _Nullable c, CGFloat width)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextSetLineCap(CGContextRef _Nullable c, CGLineCap cap)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextSetLineJoin(CGContextRef _Nullable c, CGLineJoin join)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextSetMiterLimit(CGContextRef _Nullable c, CGFloat limit)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextSetLineDash(CGContextRef _Nullable c, CGFloat phase,
    const CGFloat * _Nullable lengths, size_t count)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextSetFlatness(CGContextRef _Nullable c, CGFloat flatness)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextSetAlpha(CGContextRef _Nullable c, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextSetBlendMode(CGContextRef _Nullable c, CGBlendMode mode)
    __attribute__((availability(ios,introduced=2.0)));
# 233 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextBeginPath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextMoveToPoint(CGContextRef _Nullable c,
    CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextAddLineToPoint(CGContextRef _Nullable c,
    CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextAddCurveToPoint(CGContextRef _Nullable c, CGFloat cp1x,
    CGFloat cp1y, CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextAddQuadCurveToPoint(CGContextRef _Nullable c,
    CGFloat cpx, CGFloat cpy, CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextClosePath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextAddRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextAddRects(CGContextRef _Nullable c,
    const CGRect * _Nullable rects, size_t count)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextAddLines(CGContextRef _Nullable c,
    const CGPoint * _Nullable points, size_t count)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextAddEllipseInRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));
# 300 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextAddArc(CGContextRef _Nullable c, CGFloat x, CGFloat y,
    CGFloat radius, CGFloat startAngle, CGFloat endAngle, int clockwise)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGContextAddArcToPoint(CGContextRef _Nullable c,
    CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat radius)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextAddPath(CGContextRef _Nullable c,
    CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));
# 330 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextReplacePathWithStrokedPath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));






extern _Bool CGContextIsPathEmpty(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));




extern CGPoint CGContextGetPathCurrentPoint(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));





extern CGRect CGContextGetPathBoundingBox(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));




extern CGPathRef _Nullable CGContextCopyPath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));






extern _Bool CGContextPathContainsPoint(CGContextRef _Nullable c,
    CGPoint point, CGPathDrawingMode mode)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextDrawPath(CGContextRef _Nullable c,
    CGPathDrawingMode mode)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGContextFillPath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextEOFillPath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextStrokePath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextFillRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextFillRects(CGContextRef _Nullable c,
    const CGRect * _Nullable rects, size_t count)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextStrokeRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextStrokeRectWithWidth(CGContextRef _Nullable c,
    CGRect rect, CGFloat width)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextClearRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextFillEllipseInRect(CGContextRef _Nullable c,
    CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextStrokeEllipseInRect(CGContextRef _Nullable c,
    CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));
# 448 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextStrokeLineSegments(CGContextRef _Nullable c,
    const CGPoint * _Nullable points, size_t count)
    __attribute__((availability(ios,introduced=2.0)));







extern void CGContextClip(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextEOClip(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));
# 495 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextClipToMask(CGContextRef _Nullable c, CGRect rect,
    CGImageRef _Nullable mask)
    __attribute__((availability(ios,introduced=2.0)));





extern CGRect CGContextGetClipBoundingBox(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGContextClipToRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextClipToRects(CGContextRef _Nullable c,
    const CGRect * rects, size_t count)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextSetFillColorWithColor(CGContextRef _Nullable c,
    CGColorRef _Nullable color)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextSetStrokeColorWithColor(CGContextRef _Nullable c,
    CGColorRef _Nullable color)
    __attribute__((availability(ios,introduced=2.0)));







extern void CGContextSetFillColorSpace(CGContextRef _Nullable c,
    CGColorSpaceRef _Nullable space)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextSetStrokeColorSpace(CGContextRef _Nullable c,
    CGColorSpaceRef _Nullable space)
    __attribute__((availability(ios,introduced=2.0)));
# 562 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextSetFillColor(CGContextRef _Nullable c,
    const CGFloat * _Nullable components)
    __attribute__((availability(ios,introduced=2.0)));







extern void CGContextSetStrokeColor(CGContextRef _Nullable c,
    const CGFloat * _Nullable components)
    __attribute__((availability(ios,introduced=2.0)));
# 585 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextSetFillPattern(CGContextRef _Nullable c,
    CGPatternRef _Nullable pattern, const CGFloat * _Nullable components)
    __attribute__((availability(ios,introduced=2.0)));
# 596 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextSetStrokePattern(CGContextRef _Nullable c,
    CGPatternRef _Nullable pattern, const CGFloat * _Nullable components)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextSetPatternPhase(CGContextRef _Nullable c, CGSize phase)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGContextSetGrayFillColor(CGContextRef _Nullable c,
    CGFloat gray, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextSetGrayStrokeColor(CGContextRef _Nullable c,
    CGFloat gray, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextSetRGBFillColor(CGContextRef _Nullable c, CGFloat red,
    CGFloat green, CGFloat blue, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextSetRGBStrokeColor(CGContextRef _Nullable c,
    CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextSetCMYKFillColor(CGContextRef _Nullable c,
    CGFloat cyan, CGFloat magenta, CGFloat yellow, CGFloat black, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextSetCMYKStrokeColor(CGContextRef _Nullable c,
    CGFloat cyan, CGFloat magenta, CGFloat yellow, CGFloat black, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGContextSetRenderingIntent(CGContextRef _Nullable c,
    CGColorRenderingIntent intent)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGContextDrawImage(CGContextRef _Nullable c, CGRect rect,
    CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));
# 678 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextDrawTiledImage(CGContextRef _Nullable c, CGRect rect,
    CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));







extern CGInterpolationQuality
    CGContextGetInterpolationQuality(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextSetInterpolationQuality(CGContextRef _Nullable c,
    CGInterpolationQuality quality)
    __attribute__((availability(ios,introduced=2.0)));
# 709 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextSetShadowWithColor(CGContextRef _Nullable c,
    CGSize offset, CGFloat blur, CGColorRef _Nullable color)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGContextSetShadow(CGContextRef _Nullable c, CGSize offset,
    CGFloat blur)
    __attribute__((availability(ios,introduced=2.0)));
# 731 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextDrawLinearGradient(CGContextRef _Nullable c,
    CGGradientRef _Nullable gradient, CGPoint startPoint, CGPoint endPoint,
    CGGradientDrawingOptions options)
    __attribute__((availability(ios,introduced=2.0)));
# 745 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextDrawRadialGradient(CGContextRef _Nullable c,
    CGGradientRef _Nullable gradient, CGPoint startCenter, CGFloat startRadius,
    CGPoint endCenter, CGFloat endRadius, CGGradientDrawingOptions options)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextDrawShading(CGContextRef _Nullable c,
    _Nullable CGShadingRef shading)
    __attribute__((availability(ios,introduced=2.0)));







extern void CGContextSetCharacterSpacing(CGContextRef _Nullable c,
    CGFloat spacing)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextSetTextPosition(CGContextRef _Nullable c,
    CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPoint CGContextGetTextPosition(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextSetTextMatrix(CGContextRef _Nullable c,
    CGAffineTransform t)
    __attribute__((availability(ios,introduced=2.0)));




extern CGAffineTransform CGContextGetTextMatrix(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextSetTextDrawingMode(CGContextRef _Nullable c,
    CGTextDrawingMode mode)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextSetFont(CGContextRef _Nullable c,
    CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGContextSetFontSize(CGContextRef _Nullable c, CGFloat size)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextShowGlyphsAtPositions(CGContextRef _Nullable c,
    const CGGlyph * _Nullable glyphs, const CGPoint * _Nullable Lpositions,
    size_t count)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextDrawPDFPage(CGContextRef _Nullable c,
    CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextBeginPage(CGContextRef _Nullable c,
    const CGRect * _Nullable mediaBox)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextEndPage(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));





extern CGContextRef _Nullable CGContextRetain(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextRelease(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextFlush(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextSynchronize(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGContextSetShouldAntialias(CGContextRef _Nullable c,
    _Bool shouldAntialias)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGContextSetAllowsAntialiasing(CGContextRef _Nullable c,
    _Bool allowsAntialiasing)
    __attribute__((availability(ios,introduced=2.0)));
# 887 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextSetShouldSmoothFonts(CGContextRef _Nullable c,
    _Bool shouldSmoothFonts)
    __attribute__((availability(ios,introduced=2.0)));







extern void CGContextSetAllowsFontSmoothing(CGContextRef _Nullable c,
    _Bool allowsFontSmoothing)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGContextSetShouldSubpixelPositionFonts(
    CGContextRef _Nullable c, _Bool shouldSubpixelPositionFonts)
    __attribute__((availability(ios,introduced=2.0)));
# 917 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextSetAllowsFontSubpixelPositioning(
    CGContextRef _Nullable c, _Bool allowsFontSubpixelPositioning)
    __attribute__((availability(ios,introduced=2.0)));






extern void CGContextSetShouldSubpixelQuantizeFonts(
    CGContextRef _Nullable c, _Bool shouldSubpixelQuantizeFonts)
    __attribute__((availability(ios,introduced=2.0)));
# 937 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextSetAllowsFontSubpixelQuantization(
    CGContextRef _Nullable c, _Bool allowsFontSubpixelQuantization)
    __attribute__((availability(ios,introduced=2.0)));
# 959 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h" 3
extern void CGContextBeginTransparencyLayer(CGContextRef _Nullable c,
    CFDictionaryRef _Nullable auxiliaryInfo)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextBeginTransparencyLayerWithRect(
    CGContextRef _Nullable c, CGRect rect, CFDictionaryRef _Nullable auxInfo)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGContextEndTransparencyLayer(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));






extern CGAffineTransform
    CGContextGetUserSpaceToDeviceSpaceTransform(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPoint CGContextConvertPointToDeviceSpace(CGContextRef _Nullable c,
    CGPoint point)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPoint CGContextConvertPointToUserSpace(CGContextRef _Nullable c,
    CGPoint point)
    __attribute__((availability(ios,introduced=2.0)));



extern CGSize CGContextConvertSizeToDeviceSpace(CGContextRef _Nullable c,
    CGSize size)
    __attribute__((availability(ios,introduced=2.0)));



extern CGSize CGContextConvertSizeToUserSpace(CGContextRef _Nullable c,
    CGSize size)
    __attribute__((availability(ios,introduced=2.0)));






extern CGRect CGContextConvertRectToDeviceSpace(CGContextRef _Nullable c,
    CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));






extern CGRect CGContextConvertRectToUserSpace(CGContextRef _Nullable c,
    CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextSelectFont(CGContextRef _Nullable c,
    const char * _Nullable name, CGFloat size, CGTextEncoding textEncoding)
    __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));




extern void CGContextShowText(CGContextRef _Nullable c,
    const char * _Nullable string, size_t length)
    __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));




extern void CGContextShowTextAtPoint(CGContextRef _Nullable c,
    CGFloat x, CGFloat y, const char * _Nullable string, size_t length)
    __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));




extern void CGContextShowGlyphs(CGContextRef _Nullable c,
    const CGGlyph * _Nullable g, size_t count)
    __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));




extern void CGContextShowGlyphsAtPoint(CGContextRef _Nullable c, CGFloat x,
    CGFloat y, const CGGlyph * _Nullable glyphs, size_t count)
    __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));




extern void CGContextShowGlyphsWithAdvances(CGContextRef _Nullable c,
    const CGGlyph * _Nullable glyphs, const CGSize * _Nullable advances,
    size_t count)
    __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));




extern void CGContextDrawPDFDocument(CGContextRef _Nullable c, CGRect rect,
    CGPDFDocumentRef _Nullable document, int page)
    __attribute__((availability(ios,unavailable)));
# 10 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGBitmapContext.h" 2 3
# 21 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGBitmapContext.h" 3
typedef void (*CGBitmapContextReleaseDataCallback)(void * _Nullable releaseInfo,
    void * _Nullable data);
# 41 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGBitmapContext.h" 3
extern CGContextRef _Nullable CGBitmapContextCreateWithData(
    void * _Nullable data, size_t width, size_t height, size_t bitsPerComponent,
    size_t bytesPerRow, CGColorSpaceRef _Nullable space, uint32_t bitmapInfo,
    CGBitmapContextReleaseDataCallback _Nullable releaseCallback,
    void * _Nullable releaseInfo)
    __attribute__((availability(ios,introduced=4.0)));
# 63 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGBitmapContext.h" 3
extern CGContextRef _Nullable CGBitmapContextCreate(void * _Nullable data,
    size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow,
    CGColorSpaceRef _Nullable space, uint32_t bitmapInfo)
    __attribute__((availability(ios,introduced=2.0)));




extern void * _Nullable CGBitmapContextGetData(CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern size_t CGBitmapContextGetWidth(CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern size_t CGBitmapContextGetHeight(CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern size_t CGBitmapContextGetBitsPerComponent(CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern size_t CGBitmapContextGetBitsPerPixel(CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern size_t CGBitmapContextGetBytesPerRow(CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern CGColorSpaceRef _Nullable CGBitmapContextGetColorSpace(
    CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern CGImageAlphaInfo CGBitmapContextGetAlphaInfo(
    CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern CGBitmapInfo CGBitmapContextGetBitmapInfo(
    CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));
# 138 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGBitmapContext.h" 3
extern CGImageRef _Nullable CGBitmapContextCreateImage(
    CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CoreGraphics.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorConversionInfo.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorConversionInfo.h" 3
typedef const struct __attribute__((objc_bridge(id))) CGColorConversionInfo* CGColorConversionInfoRef;





extern CFTypeID CGColorConversionInfoGetTypeID(void);

typedef enum CGColorConversionInfoTransformType : uint32_t CGColorConversionInfoTransformType; enum CGColorConversionInfoTransformType : uint32_t {
  kCGColorConversionTransformFromSpace = 0,
  kCGColorConversionTransformToSpace,
  kCGColorConversionTransformApplySpace
};






extern CGColorConversionInfoRef _Nullable CGColorConversionInfoCreate(_Nullable CGColorSpaceRef src, _Nullable CGColorSpaceRef dst)
    __attribute__((availability(ios,introduced=10.0)));







extern CGColorConversionInfoRef _Nullable CGColorConversionInfoCreateFromList
  (CFDictionaryRef _Nullable options, _Nullable CGColorSpaceRef, CGColorConversionInfoTransformType, CGColorRenderingIntent, ...)
  __attribute__((availability(ios,introduced=10.0)));


extern const CFStringRef kCGColorConversionBlackPointCompensation __attribute__((availability(ios,introduced=10.0)));
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CoreGraphics.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGDataConsumer.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGDataConsumer.h" 3
typedef struct CGDataConsumer *CGDataConsumerRef;
# 24 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGDataConsumer.h" 3
typedef size_t (*CGDataConsumerPutBytesCallback)(void * _Nullable info,
    const void * buffer, size_t count);




typedef void (*CGDataConsumerReleaseInfoCallback)(void * _Nullable info);







struct CGDataConsumerCallbacks {
    CGDataConsumerPutBytesCallback _Nullable putBytes;
    CGDataConsumerReleaseInfoCallback _Nullable releaseConsumer;
};
typedef struct CGDataConsumerCallbacks CGDataConsumerCallbacks;



extern CFTypeID CGDataConsumerGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));




extern CGDataConsumerRef _Nullable CGDataConsumerCreate(
    void * _Nullable info, const CGDataConsumerCallbacks * _Nullable cbks)
    __attribute__((availability(ios,introduced=2.0)));



extern CGDataConsumerRef _Nullable CGDataConsumerCreateWithURL(
    CFURLRef _Nullable url)
    __attribute__((availability(ios,introduced=2.0)));



extern CGDataConsumerRef _Nullable CGDataConsumerCreateWithCFData(
    CFMutableDataRef _Nullable data)
    __attribute__((availability(ios,introduced=2.0)));



extern CGDataConsumerRef _Nullable CGDataConsumerRetain(
    CGDataConsumerRef _Nullable consumer)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGDataConsumerRelease(_Nullable CGDataConsumerRef consumer)
    __attribute__((availability(ios,introduced=2.0)));
# 17 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CoreGraphics.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGError.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGError.h" 3
typedef enum CGError : int32_t CGError; enum CGError : int32_t {
  kCGErrorSuccess = 0,
  kCGErrorFailure = 1000,
  kCGErrorIllegalArgument = 1001,
  kCGErrorInvalidConnection = 1002,
  kCGErrorInvalidContext = 1003,
  kCGErrorCannotComplete = 1004,
  kCGErrorNotImplemented = 1006,
  kCGErrorRangeCheck = 1007,
  kCGErrorTypeCheck = 1008,
  kCGErrorInvalidOperation = 1010,
  kCGErrorNoneAvailable = 1011,
};
# 19 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CoreGraphics.h" 2 3





# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGLayer.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGLayer.h" 3
typedef struct CGLayer *CGLayerRef;
# 26 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGLayer.h" 3
extern CGLayerRef _Nullable CGLayerCreateWithContext(
    CGContextRef _Nullable context,
    CGSize size, CFDictionaryRef _Nullable auxiliaryInfo)
    __attribute__((availability(ios,introduced=2.0)));




extern CGLayerRef _Nullable CGLayerRetain(CGLayerRef _Nullable layer)
    __attribute__((availability(ios,introduced=2.0)));




extern void CGLayerRelease(CGLayerRef _Nullable layer)
    __attribute__((availability(ios,introduced=2.0)));



extern CGSize CGLayerGetSize(CGLayerRef _Nullable layer)
    __attribute__((availability(ios,introduced=2.0)));



extern CGContextRef _Nullable CGLayerGetContext(CGLayerRef _Nullable layer)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextDrawLayerInRect(CGContextRef _Nullable context,
    CGRect rect, CGLayerRef _Nullable layer)
    __attribute__((availability(ios,introduced=2.0)));





extern void CGContextDrawLayerAtPoint(CGContextRef _Nullable context,
    CGPoint point, CGLayerRef _Nullable layer)
    __attribute__((availability(ios,introduced=2.0)));



extern CFTypeID CGLayerGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
# 25 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CoreGraphics.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContentStream.h" 1 3







typedef struct CGPDFContentStream *CGPDFContentStreamRef;
# 18 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContentStream.h" 3
extern CGPDFContentStreamRef CGPDFContentStreamCreateWithPage(
  CGPDFPageRef page) __attribute__((availability(ios,introduced=2.0)));



extern CGPDFContentStreamRef CGPDFContentStreamCreateWithStream(
  CGPDFStreamRef stream, CGPDFDictionaryRef streamResources,
  CGPDFContentStreamRef _Nullable parent)
  __attribute__((availability(ios,introduced=2.0)));



extern CGPDFContentStreamRef CGPDFContentStreamRetain(
  CGPDFContentStreamRef cs) __attribute__((availability(ios,introduced=2.0)));



extern void CGPDFContentStreamRelease(CGPDFContentStreamRef cs)
  __attribute__((availability(ios,introduced=2.0)));




extern CFArrayRef _Nullable CGPDFContentStreamGetStreams(CGPDFContentStreamRef cs)
  __attribute__((availability(ios,introduced=2.0)));




extern CGPDFObjectRef _Nullable CGPDFContentStreamGetResource(
  CGPDFContentStreamRef cs, const char *category, const char *name)
  __attribute__((availability(ios,introduced=2.0)));
# 27 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CoreGraphics.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContext.h" 1 3
# 30 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContext.h" 3
extern CGContextRef _Nullable CGPDFContextCreate(CGDataConsumerRef _Nullable consumer,
  const CGRect *_Nullable mediaBox, CFDictionaryRef _Nullable auxiliaryInfo)
  __attribute__((availability(ios,introduced=2.0)));





extern CGContextRef _Nullable CGPDFContextCreateWithURL(CFURLRef _Nullable url,
  const CGRect * _Nullable mediaBox, CFDictionaryRef _Nullable auxiliaryInfo)
  __attribute__((availability(ios,introduced=2.0)));






extern void CGPDFContextClose(CGContextRef _Nullable context)
  __attribute__((availability(ios,introduced=2.0)));



extern void CGPDFContextBeginPage(CGContextRef _Nullable context,
  CFDictionaryRef _Nullable pageInfo)
  __attribute__((availability(ios,introduced=2.0)));



extern void CGPDFContextEndPage(CGContextRef _Nullable context)
  __attribute__((availability(ios,introduced=2.0)));
# 68 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContext.h" 3
extern void CGPDFContextAddDocumentMetadata(CGContextRef _Nullable context,
  CFDataRef _Nullable metadata) __attribute__((availability(ios,introduced=4.0)));




extern void CGPDFContextSetURLForRect(CGContextRef _Nullable context, CFURLRef url,
  CGRect rect) __attribute__((availability(ios,introduced=2.0)));




extern void CGPDFContextAddDestinationAtPoint(CGContextRef _Nullable context,
  CFStringRef name, CGPoint point)
  __attribute__((availability(ios,introduced=2.0)));




extern void CGPDFContextSetDestinationForRect(CGContextRef _Nullable context,
  CFStringRef name, CGRect rect)
  __attribute__((availability(ios,introduced=2.0)));







extern const CFStringRef kCGPDFContextMediaBox
  __attribute__((availability(ios,introduced=2.0)));





extern const CFStringRef kCGPDFContextCropBox
  __attribute__((availability(ios,introduced=2.0)));





extern const CFStringRef kCGPDFContextBleedBox
  __attribute__((availability(ios,introduced=2.0)));





extern const CFStringRef kCGPDFContextTrimBox
  __attribute__((availability(ios,introduced=2.0)));





extern const CFStringRef kCGPDFContextArtBox
  __attribute__((availability(ios,introduced=2.0)));






extern const CFStringRef kCGPDFContextTitle
  __attribute__((availability(ios,introduced=2.0)));




extern const CFStringRef kCGPDFContextAuthor
  __attribute__((availability(ios,introduced=2.0)));




extern const CFStringRef kCGPDFContextSubject
  __attribute__((availability(ios,introduced=2.0)));
# 158 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContext.h" 3
extern const CFStringRef kCGPDFContextKeywords
  __attribute__((availability(ios,introduced=2.0)));





extern const CFStringRef kCGPDFContextCreator
  __attribute__((availability(ios,introduced=2.0)));
# 178 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContext.h" 3
extern const CFStringRef kCGPDFContextOwnerPassword
  __attribute__((availability(ios,introduced=2.0)));
# 190 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContext.h" 3
extern const CFStringRef kCGPDFContextUserPassword
  __attribute__((availability(ios,introduced=2.0)));
# 200 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContext.h" 3
extern const CFStringRef kCGPDFContextEncryptionKeyLength
  __attribute__((availability(ios,introduced=2.0)));





extern const CFStringRef kCGPDFContextAllowsPrinting
  __attribute__((availability(ios,introduced=2.0)));





extern const CFStringRef kCGPDFContextAllowsCopying
  __attribute__((availability(ios,introduced=2.0)));
# 224 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContext.h" 3
extern const CFStringRef kCGPDFContextOutputIntent
  __attribute__((availability(ios,unavailable)));







extern const CFStringRef kCGPDFXOutputIntentSubtype
  __attribute__((availability(ios,unavailable)));







extern const CFStringRef kCGPDFXOutputConditionIdentifier
  __attribute__((availability(ios,unavailable)));






extern const CFStringRef kCGPDFXOutputCondition
  __attribute__((availability(ios,unavailable)));







extern const CFStringRef kCGPDFXRegistryName
  __attribute__((availability(ios,unavailable)));







extern const CFStringRef kCGPDFXInfo
  __attribute__((availability(ios,unavailable)));
# 278 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContext.h" 3
extern const CFStringRef kCGPDFXDestinationOutputProfile
  __attribute__((availability(ios,unavailable)));
# 291 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContext.h" 3
extern const CFStringRef kCGPDFContextOutputIntents
  __attribute__((availability(ios,unavailable)));
# 28 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CoreGraphics.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFOperatorTable.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFOperatorTable.h" 3
typedef struct CGPDFOperatorTable *CGPDFOperatorTableRef;


# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFScanner.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFScanner.h" 3
typedef struct CGPDFScanner *CGPDFScannerRef;



# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFOperatorTable.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFScanner.h" 2 3







extern CGPDFScannerRef CGPDFScannerCreate(
    CGPDFContentStreamRef cs,
    CGPDFOperatorTableRef _Nullable table, void * _Nullable info)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPDFScannerRef _Nullable CGPDFScannerRetain(
    CGPDFScannerRef _Nullable scanner)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGPDFScannerRelease(CGPDFScannerRef _Nullable scanner)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGPDFScannerScan(CGPDFScannerRef _Nullable scanner)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPDFContentStreamRef CGPDFScannerGetContentStream(
    CGPDFScannerRef scanner)
    __attribute__((availability(ios,introduced=2.0)));



extern _Bool CGPDFScannerPopObject(CGPDFScannerRef scanner,
    CGPDFObjectRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFScannerPopBoolean(CGPDFScannerRef scanner,
    CGPDFBoolean * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFScannerPopInteger(CGPDFScannerRef scanner,
    CGPDFInteger * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFScannerPopNumber(CGPDFScannerRef scanner,
    CGPDFReal * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFScannerPopName(CGPDFScannerRef scanner,
    const char * _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFScannerPopString(CGPDFScannerRef scanner,
    CGPDFStringRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFScannerPopArray(CGPDFScannerRef scanner,
    CGPDFArrayRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





extern _Bool CGPDFScannerPopDictionary(CGPDFScannerRef scanner,
    CGPDFDictionaryRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern _Bool CGPDFScannerPopStream(CGPDFScannerRef scanner,
    CGPDFStreamRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));
# 15 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFOperatorTable.h" 2 3





typedef void (*CGPDFOperatorCallback)(CGPDFScannerRef scanner,
                                      void * _Nullable info);



extern CGPDFOperatorTableRef _Nullable CGPDFOperatorTableCreate(void)
    __attribute__((availability(ios,introduced=2.0)));



extern CGPDFOperatorTableRef _Nullable CGPDFOperatorTableRetain(
    CGPDFOperatorTableRef _Nullable table)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGPDFOperatorTableRelease(
    CGPDFOperatorTableRef _Nullable table)
    __attribute__((availability(ios,introduced=2.0)));



extern void CGPDFOperatorTableSetCallback(
    CGPDFOperatorTableRef _Nullable table,
    const char * _Nullable name, CGPDFOperatorCallback _Nullable callback)
    __attribute__((availability(ios,introduced=2.0)));
# 32 "APPLE_SDKROOT/System/Library/Frameworks/CoreGraphics.framework/Headers/CoreGraphics.h" 2 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIBezierPath.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIBezierPath.h" 3
typedef enum UIRectCorner : NSUInteger UIRectCorner; enum UIRectCorner : NSUInteger {
    UIRectCornerTopLeft = 1 << 0,
    UIRectCornerTopRight = 1 << 1,
    UIRectCornerBottomLeft = 1 << 2,
    UIRectCornerBottomRight = 1 << 3,
    UIRectCornerAllCorners = ~0UL
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) @interface UIBezierPath : NSObject<NSCopying, NSCoding>

+ (instancetype)bezierPath;
+ (instancetype)bezierPathWithRect:(CGRect)rect;
+ (instancetype)bezierPathWithOvalInRect:(CGRect)rect;
+ (instancetype)bezierPathWithRoundedRect:(CGRect)rect cornerRadius:(CGFloat)cornerRadius;
+ (instancetype)bezierPathWithRoundedRect:(CGRect)rect byRoundingCorners:(UIRectCorner)corners cornerRadii:(CGSize)cornerRadii;
+ (instancetype)bezierPathWithArcCenter:(CGPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise;
+ (instancetype)bezierPathWithCGPath:(CGPathRef)CGPath;

- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));



@property(nonatomic) CGPathRef CGPath;
- (CGPathRef)CGPath __attribute__((objc_returns_inner_pointer)) __attribute__((cf_returns_not_retained));



- (void)moveToPoint:(CGPoint)point;
- (void)addLineToPoint:(CGPoint)point;
- (void)addCurveToPoint:(CGPoint)endPoint controlPoint1:(CGPoint)controlPoint1 controlPoint2:(CGPoint)controlPoint2;
- (void)addQuadCurveToPoint:(CGPoint)endPoint controlPoint:(CGPoint)controlPoint;
- (void)addArcWithCenter:(CGPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise __attribute__((availability(ios,introduced=4_0)));
- (void)closePath;

- (void)removeAllPoints;



- (void)appendPath:(UIBezierPath *)bezierPath;



- (UIBezierPath *)bezierPathByReversingPath __attribute__((availability(ios,introduced=6_0)));



- (void)applyTransform:(CGAffineTransform)transform;



@property(readonly,getter=isEmpty) BOOL empty;
@property(nonatomic,readonly) CGRect bounds;
@property(nonatomic,readonly) CGPoint currentPoint;
- (BOOL)containsPoint:(CGPoint)point;



@property(nonatomic) CGFloat lineWidth;
@property(nonatomic) CGLineCap lineCapStyle;
@property(nonatomic) CGLineJoin lineJoinStyle;
@property(nonatomic) CGFloat miterLimit;
@property(nonatomic) CGFloat flatness;
@property(nonatomic) BOOL usesEvenOddFillRule;

- (void)setLineDash:(nullable const CGFloat *)pattern count:(NSInteger)count phase:(CGFloat)phase;
- (void)getLineDash:(nullable CGFloat *)pattern count:(nullable NSInteger *)count phase:(nullable CGFloat *)phase;



- (void)fill;
- (void)stroke;


- (void)fillWithBlendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;
- (void)strokeWithBlendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;

- (void)addClip;

@end
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityAdditions.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityAdditions.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPickerView.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPickerView.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/QuartzCore.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CABase.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CABase.h" 3
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stddef.h" 1 3 4
# 13 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CABase.h" 2 3
# 198 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CABase.h" 3
extern __attribute__((visibility("default"))) CFTimeInterval CACurrentMediaTime (void)
    __attribute__((availability(ios,introduced=2.0)));
# 10 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATransform3D.h" 1 3
# 17 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATransform3D.h" 3
struct CATransform3D
{
  CGFloat m11, m12, m13, m14;
  CGFloat m21, m22, m23, m24;
  CGFloat m31, m32, m33, m34;
  CGFloat m41, m42, m43, m44;
};

typedef struct CATransform3D CATransform3D;





extern __attribute__((visibility("default"))) const CATransform3D CATransform3DIdentity
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) _Bool CATransform3DIsIdentity (CATransform3D t)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) _Bool CATransform3DEqualToTransform (CATransform3D a,
    CATransform3D b)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DMakeTranslation (CGFloat tx,
    CGFloat ty, CGFloat tz)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DMakeScale (CGFloat sx, CGFloat sy,
    CGFloat sz)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));





extern __attribute__((visibility("default"))) CATransform3D CATransform3DMakeRotation (CGFloat angle, CGFloat x,
    CGFloat y, CGFloat z)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DTranslate (CATransform3D t, CGFloat tx,
    CGFloat ty, CGFloat tz)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DScale (CATransform3D t, CGFloat sx,
    CGFloat sy, CGFloat sz)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));





extern __attribute__((visibility("default"))) CATransform3D CATransform3DRotate (CATransform3D t, CGFloat angle,
    CGFloat x, CGFloat y, CGFloat z)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) CATransform3D CATransform3DConcat (CATransform3D a, CATransform3D b)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DInvert (CATransform3D t)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) CATransform3D CATransform3DMakeAffineTransform (CGAffineTransform m)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) _Bool CATransform3DIsAffine (CATransform3D t)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));





extern __attribute__((visibility("default"))) CGAffineTransform CATransform3DGetAffineTransform (CATransform3D t)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
# 125 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATransform3D.h" 3
@interface NSValue (CATransform3DAdditions)

+ (NSValue *)valueWithCATransform3D:(CATransform3D)t;

@property(readonly) CATransform3D CATransform3DValue;

@end
# 11 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAAnimation.h" 1 3





# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 1 3





# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAMediaTiming.h" 1 3
# 28 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAMediaTiming.h" 3
@class NSString;



@protocol CAMediaTiming




@property CFTimeInterval beginTime;



@property CFTimeInterval duration;





@property float speed;






@property CFTimeInterval timeOffset;



@property float repeatCount;



@property CFTimeInterval repeatDuration;




@property BOOL autoreverses;







@property(copy) NSString *fillMode;

@end



extern __attribute__((visibility("default"))) NSString * const kCAFillModeForwards
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAFillModeBackwards
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAFillModeBoth
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAFillModeRemoved
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
# 7 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 2 3






@class NSEnumerator, CAAnimation, CALayerArray;
@protocol CAAction, CALayerDelegate;





typedef enum CAEdgeAntialiasingMask : unsigned int CAEdgeAntialiasingMask; enum CAEdgeAntialiasingMask : unsigned int
{
  kCALayerLeftEdge = 1U << 0,
  kCALayerRightEdge = 1U << 1,
  kCALayerBottomEdge = 1U << 2,
  kCALayerTopEdge = 1U << 3,
};



__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CALayer : NSObject <NSCoding, CAMediaTiming>
{
@private
  struct _CALayerIvars {
    int32_t refcount;
    uint32_t magic;
    void *layer;



  } _attr;
}



+ (instancetype)layer;



- (instancetype)init;







- (instancetype)initWithLayer:(id)layer;
# 75 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
- (nullable instancetype)presentationLayer;







- (instancetype)modelLayer;
# 109 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
+ (nullable id)defaultValueForKey:(NSString *)key;
# 119 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
+ (BOOL)needsDisplayForKey:(NSString *)key;






- (BOOL)shouldArchiveValueForKey:(NSString *)key;





@property CGRect bounds;




@property CGPoint position;




@property CGFloat zPosition;






@property CGPoint anchorPoint;




@property CGFloat anchorPointZ;




@property CATransform3D transform;




- (CGAffineTransform)affineTransform;
- (void)setAffineTransform:(CGAffineTransform)m;






@property CGRect frame;




@property(getter=isHidden) BOOL hidden;




@property(getter=isDoubleSided) BOOL doubleSided;







@property(getter=isGeometryFlipped) BOOL geometryFlipped;
# 202 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
- (BOOL)contentsAreFlipped;




@property(nullable, readonly) CALayer *superlayer;




- (void)removeFromSuperlayer;







@property(nullable, copy) NSArray<CALayer *> *sublayers;




- (void)addSublayer:(CALayer *)layer;





- (void)insertSublayer:(CALayer *)layer atIndex:(unsigned)idx;





- (void)insertSublayer:(CALayer *)layer below:(nullable CALayer *)sibling;
- (void)insertSublayer:(CALayer *)layer above:(nullable CALayer *)sibling;





- (void)replaceSublayer:(CALayer *)layer with:(CALayer *)layer2;






@property CATransform3D sublayerTransform;
# 262 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property(nullable, strong) CALayer *mask;







@property BOOL masksToBounds;



- (CGPoint)convertPoint:(CGPoint)p fromLayer:(nullable CALayer *)l;
- (CGPoint)convertPoint:(CGPoint)p toLayer:(nullable CALayer *)l;
- (CGRect)convertRect:(CGRect)r fromLayer:(nullable CALayer *)l;
- (CGRect)convertRect:(CGRect)r toLayer:(nullable CALayer *)l;

- (CFTimeInterval)convertTime:(CFTimeInterval)t fromLayer:(nullable CALayer *)l;
- (CFTimeInterval)convertTime:(CFTimeInterval)t toLayer:(nullable CALayer *)l;
# 290 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
- (nullable CALayer *)hitTest:(CGPoint)p;



- (BOOL)containsPoint:(CGPoint)p;
# 303 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property(nullable, strong) id contents;
# 312 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property CGRect contentsRect;
# 321 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property(copy) NSString *contentsGravity;
# 331 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property CGFloat contentsScale
  __attribute__((availability(macosx,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
# 353 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property CGRect contentsCenter;





@property(copy) NSString *contentsFormat
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));







@property(copy) NSString *minificationFilter;
@property(copy) NSString *magnificationFilter;





@property float minificationFilterBias;





@property(getter=isOpaque) BOOL opaque;





- (void)display;





- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(CGRect)r;



- (BOOL)needsDisplay;



- (void)displayIfNeeded;




@property BOOL needsDisplayOnBoundsChange;
# 416 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property BOOL drawsAsynchronously
  __attribute__((availability(macosx,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));






- (void)drawInContext:(CGContextRef)ctx;
# 435 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
- (void)renderInContext:(CGContextRef)ctx;
# 444 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property CAEdgeAntialiasingMask edgeAntialiasingMask;
# 453 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property BOOL allowsEdgeAntialiasing;




@property(nullable) CGColorRef backgroundColor;





@property CGFloat cornerRadius;






@property CGFloat borderWidth;




@property(nullable) CGColorRef borderColor;





@property float opacity;
# 495 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property BOOL allowsGroupOpacity;
# 508 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property(nullable, strong) id compositingFilter;




@property(nullable, copy) NSArray *filters;




@property(nullable, copy) NSArray *backgroundFilters;
# 536 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property BOOL shouldRasterize;





@property CGFloat rasterizationScale;






@property(nullable) CGColorRef shadowColor;




@property float shadowOpacity;



@property CGSize shadowOffset;



@property CGFloat shadowRadius;
# 572 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property(nullable) CGPathRef shadowPath;
# 582 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
- (CGSize)preferredFrameSize;
# 595 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
- (void)setNeedsLayout;



- (BOOL)needsLayout;




- (void)layoutIfNeeded;







- (void)layoutSublayers;
# 650 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
+ (nullable id<CAAction>)defaultActionForKey:(NSString *)event;
# 665 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
- (nullable id<CAAction>)actionForKey:(NSString *)event;




@property(nullable, copy) NSDictionary<NSString *, id<CAAction>> *actions;
# 689 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
- (void)addAnimation:(CAAnimation *)anim forKey:(nullable NSString *)key;



- (void)removeAllAnimations;



- (void)removeAnimationForKey:(NSString *)key;





- (nullable NSArray<NSString *> *)animationKeys;





- (nullable CAAnimation *)animationForKey:(NSString *)key;






@property(nullable, copy) NSString *name;





@property(nullable, weak) id <CALayerDelegate> delegate;
# 734 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
@property(nullable, copy) NSDictionary *style;

@end



@protocol CAAction






- (void)runActionForKey:(NSString *)event object:(id)anObject
    arguments:(nullable NSDictionary *)dict;

@end



@interface NSNull (CAActionAdditions) <CAAction>

@end



@protocol CALayerDelegate <NSObject>
@optional





- (void)displayLayer:(CALayer *)layer;



- (void)drawLayer:(CALayer *)layer inContext:(CGContextRef)ctx;






- (void)layerWillDraw:(CALayer *)layer
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));





- (void)layoutSublayersOfLayer:(CALayer *)layer;
# 794 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CALayer.h" 3
- (nullable id<CAAction>)actionForLayer:(CALayer *)layer forKey:(NSString *)event;

@end



extern __attribute__((visibility("default"))) NSString * const kCAGravityCenter
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityTop
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityBottom
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityLeft
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityRight
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityTopLeft
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityTopRight
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityBottomLeft
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityBottomRight
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityResize
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityResizeAspect
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityResizeAspectFill
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCAContentsFormatRGBA8Uint
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern __attribute__((visibility("default"))) NSString * const kCAContentsFormatRGBA16Float
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern __attribute__((visibility("default"))) NSString * const kCAContentsFormatGray8Uint
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));



extern __attribute__((visibility("default"))) NSString * const kCAFilterNearest
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAFilterLinear
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));





extern __attribute__((visibility("default"))) NSString * const kCAFilterTrilinear
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCAOnOrderIn
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAOnOrderOut
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCATransition
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
# 7 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAAnimation.h" 2 3


@class NSArray, NSString, CAMediaTimingFunction, CAValueFunction;
@protocol CAAnimationDelegate;





__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAAnimation : NSObject
    <NSCoding, NSCopying, CAMediaTiming, CAAction>
{
@private
  void *_attr;
  uint32_t _flags;
}



+ (instancetype)animation;




+ (nullable id)defaultValueForKey:(NSString *)key;
- (BOOL)shouldArchiveValueForKey:(NSString *)key;




@property(nullable, strong) CAMediaTimingFunction *timingFunction;





@property(nullable, strong) id <CAAnimationDelegate> delegate;




@property(getter=isRemovedOnCompletion) BOOL removedOnCompletion;

@end



@protocol CAAnimationDelegate <NSObject>
@optional



- (void)animationDidStart:(CAAnimation *)anim;






- (void)animationDidStop:(CAAnimation *)anim finished:(BOOL)flag;

@end




__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAPropertyAnimation : CAAnimation




+ (instancetype)animationWithKeyPath:(nullable NSString *)path;



@property(nullable, copy) NSString *keyPath;







@property(getter=isAdditive) BOOL additive;







@property(getter=isCumulative) BOOL cumulative;





@property(nullable, strong) CAValueFunction *valueFunction;

@end




__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CABasicAnimation : CAPropertyAnimation
# 140 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAAnimation.h" 3
@property(nullable, strong) id fromValue;
@property(nullable, strong) id toValue;
@property(nullable, strong) id byValue;

@end




__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAKeyframeAnimation : CAPropertyAnimation




@property(nullable, copy) NSArray *values;
# 164 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAAnimation.h" 3
@property(nullable) CGPathRef path;







@property(nullable, copy) NSArray<NSNumber *> *keyTimes;






@property(nullable, copy) NSArray<CAMediaTimingFunction *> *timingFunctions;






@property(copy) NSString *calculationMode;
# 206 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAAnimation.h" 3
@property(nullable, copy) NSArray<NSNumber *> *tensionValues;
@property(nullable, copy) NSArray<NSNumber *> *continuityValues;
@property(nullable, copy) NSArray<NSNumber *> *biasValues;







@property(nullable, copy) NSString *rotationMode;

@end



extern __attribute__((visibility("default"))) NSString * const kCAAnimationLinear
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAnimationDiscrete
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAnimationPaced
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAnimationCubic
    __attribute__((availability(macosx,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAnimationCubicPaced
    __attribute__((availability(macosx,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCAAnimationRotateAuto
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAnimationRotateAutoReverse
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CASpringAnimation : CABasicAnimation




@property CGFloat mass;




@property CGFloat stiffness;




@property CGFloat damping;







@property CGFloat initialVelocity;





@property(readonly) CFTimeInterval settlingDuration;

@end



__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CATransition : CAAnimation




@property(copy) NSString *type;






@property(nullable, copy) NSString *subtype;






@property float startProgress;
@property float endProgress;
# 308 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAAnimation.h" 3
@property(nullable, strong) id filter;

@end



extern __attribute__((visibility("default"))) NSString * const kCATransitionFade
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransitionMoveIn
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransitionPush
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransitionReveal
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCATransitionFromRight
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransitionFromLeft
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransitionFromTop
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransitionFromBottom
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAAnimationGroup : CAAnimation





@property(nullable, copy) NSArray<CAAnimation *> *animations;

@end
# 15 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CADisplayLink.h" 1 3








@class NSString, NSRunLoop;





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3.1))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CADisplayLink : NSObject
{
@private
  void *_impl;
}





+ (CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel;






- (void)addToRunLoop:(NSRunLoop *)runloop forMode:(NSRunLoopMode)mode;





- (void)removeFromRunLoop:(NSRunLoop *)runloop forMode:(NSRunLoopMode)mode;




- (void)invalidate;






@property(readonly, nonatomic) CFTimeInterval timestamp;
@property(readonly, nonatomic) CFTimeInterval duration;



@property(readonly, nonatomic) CFTimeInterval targetTimestamp __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));




@property(getter=isPaused, nonatomic) BOOL paused;
# 70 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CADisplayLink.h" 3
@property(nonatomic) NSInteger frameInterval
  __attribute__((availability(ios,introduced=3.1))) __attribute__((availability(ios,deprecated=10.0,message="use preferredFramesPerSecond"))) __attribute__((availability(tvos,introduced=2.0))) __attribute__((availability(tvos,deprecated=3.0,message="use preferredFramesPerSecond"))) __attribute__((availability(watchos,introduced=9.0))) __attribute__((availability(watchos,deprecated=10.0,message="use preferredFramesPerSecond")));
# 80 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CADisplayLink.h" 3
@property(nonatomic) NSInteger preferredFramesPerSecond __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

@end
# 16 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEAGLLayer.h" 1 3






# 1 "APPLE_SDKROOT/System/Library/Frameworks/OpenGLES.framework/Headers/EAGLDrawable.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/OpenGLES.framework/Headers/EAGL.h" 1 3
# 30 "APPLE_SDKROOT/System/Library/Frameworks/OpenGLES.framework/Headers/EAGL.h" 3
typedef enum EAGLRenderingAPI : NSUInteger EAGLRenderingAPI; enum EAGLRenderingAPI : NSUInteger
{
 kEAGLRenderingAPIOpenGLES1 = 1,
 kEAGLRenderingAPIOpenGLES2 = 2,
 kEAGLRenderingAPIOpenGLES3 = 3,
};






extern __attribute__((visibility ("default"))) void EAGLGetVersion(unsigned int* major, unsigned int* minor);





__attribute__((visibility("default")))
@interface EAGLSharegroup : NSObject
{
@package
 struct _EAGLSharegroupPrivate *_private;
}

@property (copy, nonatomic) NSString* debugLabel __attribute__((availability(ios,introduced=6_0)));

@end





__attribute__((visibility("default")))
@interface EAGLContext : NSObject
{
@public
 struct _EAGLContextPrivate *_private;
}

- (instancetype) init __attribute__((unavailable));
- (instancetype) initWithAPI:(EAGLRenderingAPI) api;
- (instancetype) initWithAPI:(EAGLRenderingAPI) api sharegroup:(EAGLSharegroup*) sharegroup __attribute__((objc_designated_initializer));

+ (BOOL) setCurrentContext:(EAGLContext*) context;
+ (EAGLContext*) currentContext;

@property (readonly) EAGLRenderingAPI API;
@property (readonly) EAGLSharegroup* sharegroup;

@property (copy, nonatomic) NSString* debugLabel __attribute__((availability(ios,introduced=6_0)));
@property (getter=isMultiThreaded, nonatomic) BOOL multiThreaded __attribute__((availability(ios,introduced=7_1)));
@end
# 9 "APPLE_SDKROOT/System/Library/Frameworks/OpenGLES.framework/Headers/EAGLDrawable.h" 2 3
# 27 "APPLE_SDKROOT/System/Library/Frameworks/OpenGLES.framework/Headers/EAGLDrawable.h" 3
extern __attribute__((visibility ("default"))) NSString * const kEAGLDrawablePropertyRetainedBacking;
extern __attribute__((visibility ("default"))) NSString * const kEAGLDrawablePropertyColorFormat;




extern __attribute__((visibility ("default"))) NSString * const kEAGLColorFormatRGBA8;
extern __attribute__((visibility ("default"))) NSString * const kEAGLColorFormatRGB565;
extern __attribute__((visibility ("default"))) NSString * const kEAGLColorFormatSRGBA8 __attribute__((availability(ios,introduced=7_0)));




@protocol EAGLDrawable


@property(copy) NSDictionary* drawableProperties;

@end


@interface EAGLContext (EAGLContextDrawableAdditions)


- (BOOL)renderbufferStorage:(NSUInteger)target fromDrawable:(id<EAGLDrawable>)drawable;


- (BOOL)presentRenderbuffer:(NSUInteger)target;


- (BOOL)presentRenderbuffer:(NSUInteger)target atTime:(CFTimeInterval)presentationTime;

@end
# 8 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEAGLLayer.h" 2 3








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAEAGLLayer : CALayer <EAGLDrawable>
{
@private
  struct _CAEAGLNativeWindow *_win;
}






@property BOOL presentsWithTransaction __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




@end
# 17 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterBehavior.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterBehavior.h" 3
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAEmitterBehavior : NSObject <NSCoding>
{
@private
  unsigned int _type;
  NSString *_name;
  void *_attr;
  void *_cache;
  uint32_t _flags;
}

+ (NSArray<NSString *> *)behaviorTypes;

+ (CAEmitterBehavior *)behaviorWithType:(NSString *)type;
- (id)initWithType:(NSString *)type;

@property(readonly) NSString *type;

@property(nullable, copy) NSString *name;

@property(getter=isEnabled) BOOL enabled;

@end
# 45 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterBehavior.h" 3
extern __attribute__((visibility("default"))) NSString * const kCAEmitterBehaviorWave;







extern __attribute__((visibility("default"))) NSString * const kCAEmitterBehaviorDrag;
# 66 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterBehavior.h" 3
extern __attribute__((visibility("default"))) NSString * const kCAEmitterBehaviorAlignToMotion;
# 84 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterBehavior.h" 3
extern __attribute__((visibility("default"))) NSString * const kCAEmitterBehaviorValueOverLife;
# 97 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterBehavior.h" 3
extern __attribute__((visibility("default"))) NSString * const kCAEmitterBehaviorColorOverLife;
# 112 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterBehavior.h" 3
extern __attribute__((visibility("default"))) NSString * const kCAEmitterBehaviorLight;
# 125 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterBehavior.h" 3
extern __attribute__((visibility("default"))) NSString * const kCAEmitterBehaviorAttractor;
# 134 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterBehavior.h" 3
extern __attribute__((visibility("default"))) NSString * const kCAEmitterBehaviorSimpleAttractor;
# 18 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterCell.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterCell.h" 3
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAEmitterCell : NSObject <NSCoding, CAMediaTiming>
{
@private
  void *_attr[2];
  void *_state;
  uint32_t _flags;
}

+ (instancetype)emitterCell;




+ (nullable id)defaultValueForKey:(NSString *)key;
- (BOOL)shouldArchiveValueForKey:(NSString *)key;



@property(nullable, copy) NSString *name;



@property(getter=isEnabled) BOOL enabled;




@property float birthRate;





@property float lifetime;
@property float lifetimeRange;
# 56 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterCell.h" 3
@property CGFloat emissionLatitude;
@property CGFloat emissionLongitude;





@property CGFloat emissionRange;




@property CGFloat velocity;
@property CGFloat velocityRange;




@property CGFloat xAcceleration;
@property CGFloat yAcceleration;
@property CGFloat zAcceleration;





@property CGFloat scale;
@property CGFloat scaleRange;
@property CGFloat scaleSpeed;




@property CGFloat spin;
@property CGFloat spinRange;





@property(nullable) CGColorRef color;

@property float redRange;
@property float greenRange;
@property float blueRange;
@property float alphaRange;





@property float redSpeed;
@property float greenSpeed;
@property float blueSpeed;
@property float alphaSpeed;




@property(nullable, strong) id contents;





@property CGRect contentsRect;




@property CGFloat contentsScale;




@property(copy) NSString *minificationFilter;
@property(copy) NSString *magnificationFilter;
@property float minificationFilterBias;







@property(nullable, copy) NSArray<CAEmitterCell *> *emitterCells;



@property(nullable, copy) NSDictionary *style;

@end
# 19 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterLayer.h" 1 3
# 19 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAEmitterLayer.h" 3
@class CAEmitterCell;



__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAEmitterLayer : CALayer




@property(nullable, copy) NSArray<CAEmitterCell *> *emitterCells;





@property float birthRate;




@property float lifetime;



@property CGPoint emitterPosition;
@property CGFloat emitterZPosition;





@property CGSize emitterSize;
@property CGFloat emitterDepth;





@property(copy) NSString *emitterShape;





@property(copy) NSString *emitterMode;







@property(copy) NSString *renderMode;







@property BOOL preservesDepth;




@property float velocity;



@property float scale;



@property float spin;






@property unsigned int seed;

@end



extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerPoint
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerLine
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerRectangle
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerCuboid
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerCircle
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerSphere
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerPoints
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerOutline
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerSurface
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerVolume
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerUnordered
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerOldestFirst
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerOldestLast
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerBackToFront
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerAdditive
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
# 20 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAGradientLayer.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAGradientLayer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAGradientLayer : CALayer




@property(nullable, copy) NSArray *colors;
# 29 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAGradientLayer.h" 3
@property(nullable, copy) NSArray<NSNumber *> *locations;
# 39 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAGradientLayer.h" 3
@property CGPoint startPoint;
@property CGPoint endPoint;




@property(copy) NSString *type;

@end



extern __attribute__((visibility("default"))) NSString * const kCAGradientLayerAxial
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
# 21 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAMediaTimingFunction.h" 1 3








@class NSArray, NSString;
# 19 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAMediaTimingFunction.h" 3
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAMediaTimingFunction : NSObject <NSCoding>
{
@private
  struct CAMediaTimingFunctionPrivate *_priv;
}






+ (instancetype)functionWithName:(NSString *)name;






+ (instancetype)functionWithControlPoints:(float)c1x :(float)c1y :(float)c2x :(float)c2y;

- (instancetype)initWithControlPoints:(float)c1x :(float)c1y :(float)c2x :(float)c2y;



- (void)getControlPointAtIndex:(size_t)idx values:(float[2])ptr;

@end



extern __attribute__((visibility("default"))) NSString * const kCAMediaTimingFunctionLinear
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAMediaTimingFunctionEaseIn
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAMediaTimingFunctionEaseOut
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAMediaTimingFunctionEaseInEaseOut
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAMediaTimingFunctionDefault
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
# 24 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAReplicatorLayer.h" 1 3
# 18 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAReplicatorLayer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAReplicatorLayer : CALayer




@property NSInteger instanceCount;






@property BOOL preservesDepth;




@property CFTimeInterval instanceDelay;






@property CATransform3D instanceTransform;




@property(nullable) CGColorRef instanceColor;





@property float instanceRedOffset;
@property float instanceGreenOffset;
@property float instanceBlueOffset;
@property float instanceAlphaOffset;

@end
# 25 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAScrollLayer.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAScrollLayer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAScrollLayer : CALayer



- (void)scrollToPoint:(CGPoint)p;



- (void)scrollToRect:(CGRect)r;




@property(copy) NSString *scrollMode;

@end

@interface CALayer (CALayerScrolling)






- (void)scrollPoint:(CGPoint)p;

- (void)scrollRectToVisible:(CGRect)r;





@property(readonly) CGRect visibleRect;

@end



extern __attribute__((visibility("default"))) NSString * const kCAScrollNone
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAScrollVertically
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAScrollHorizontally
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAScrollBoth
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
# 26 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAShapeLayer.h" 1 3
# 33 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAShapeLayer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAShapeLayer : CALayer
# 43 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAShapeLayer.h" 3
@property(nullable) CGPathRef path;




@property(nullable) CGColorRef fillColor;




@property(copy) NSString *fillRule;




@property(nullable) CGColorRef strokeColor;
# 67 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAShapeLayer.h" 3
@property CGFloat strokeStart;
@property CGFloat strokeEnd;




@property CGFloat lineWidth;




@property CGFloat miterLimit;




@property(copy) NSString *lineCap;




@property(copy) NSString *lineJoin;




@property CGFloat lineDashPhase;




@property(nullable, copy) NSArray<NSNumber *> *lineDashPattern;

@end



extern __attribute__((visibility("default"))) NSString *const kCAFillRuleNonZero
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString *const kCAFillRuleEvenOdd
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString *const kCALineJoinMiter
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString *const kCALineJoinRound
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString *const kCALineJoinBevel
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString *const kCALineCapButt
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString *const kCALineCapRound
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString *const kCALineCapSquare
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
# 27 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATextLayer.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATextLayer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CATextLayer : CALayer
{
@private
  struct CATextLayerPrivate *_state;
}




@property(nullable, copy) id string;





@property(nullable) CFTypeRef font;




@property CGFloat fontSize;





@property(nullable) CGColorRef foregroundColor;




@property(getter=isWrapped) BOOL wrapped;





@property(copy) NSString *truncationMode;





@property(copy) NSString *alignmentMode;




@property BOOL allowsFontSubpixelQuantization;

@end



extern __attribute__((visibility("default"))) NSString * const kCATruncationNone
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATruncationStart
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATruncationEnd
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATruncationMiddle
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCAAlignmentNatural
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAlignmentLeft
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAlignmentRight
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAlignmentCenter
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAlignmentJustified
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
# 28 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATiledLayer.h" 1 3
# 29 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATiledLayer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CATiledLayer : CALayer





+ (CFTimeInterval)fadeDuration;







@property size_t levelsOfDetail;







@property size_t levelsOfDetailBias;






@property CGSize tileSize;

@end
# 29 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATransaction.h" 1 3
# 27 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATransaction.h" 3
@class CAMediaTimingFunction;



__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CATransaction : NSObject



+ (void)begin;




+ (void)commit;




+ (void)flush;






+ (void)lock;
+ (void)unlock;





+ (CFTimeInterval)animationDuration;
+ (void)setAnimationDuration:(CFTimeInterval)dur;






+ (nullable CAMediaTimingFunction *)animationTimingFunction;
+ (void)setAnimationTimingFunction:(nullable CAMediaTimingFunction *)function;






+ (BOOL)disableActions;
+ (void)setDisableActions:(BOOL)flag;
# 88 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATransaction.h" 3
+ (nullable void (^)(void))completionBlock;
+ (void)setCompletionBlock:(nullable void (^)(void))block;
# 107 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATransaction.h" 3
+ (nullable id)valueForKey:(NSString *)key;
+ (void)setValue:(nullable id)anObject forKey:(NSString *)key;

@end



extern __attribute__((visibility("default"))) NSString * const kCATransactionAnimationDuration
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransactionDisableActions
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransactionAnimationTimingFunction
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransactionCompletionBlock
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
# 30 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATransformLayer.h" 1 3
# 32 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CATransformLayer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CATransformLayer : CALayer
@end
# 32 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAValueFunction.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CAValueFunction.h" 3
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
@interface CAValueFunction : NSObject <NSCoding>
{
@protected
  NSString *_string;
  void *_impl;
}

+ (nullable instancetype)functionWithName:(NSString *)name;

@property(readonly) NSString *name;

@end







extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionRotateX
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionRotateY
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionRotateZ
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionScale
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));





extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionScaleX
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionScaleY
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionScaleZ
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionTranslate
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));





extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionTranslateX
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionTranslateY
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionTranslateZ
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
# 33 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/CoreAnimation.h" 2 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/QuartzCore.framework/Headers/QuartzCore.h" 2 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIResponder.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIResponder.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIEvent.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIEvent.h" 3
@class UIWindow, UIView, UIGestureRecognizer, UITouch;

typedef enum UIEventType : NSInteger UIEventType; enum UIEventType : NSInteger {
    UIEventTypeTouches,
    UIEventTypeMotion,
    UIEventTypeRemoteControl,
    UIEventTypePresses __attribute__((availability(ios,introduced=9_0))),
};

typedef enum UIEventSubtype : NSInteger UIEventSubtype; enum UIEventSubtype : NSInteger {

    UIEventSubtypeNone = 0,


    UIEventSubtypeMotionShake = 1,


    UIEventSubtypeRemoteControlPlay = 100,
    UIEventSubtypeRemoteControlPause = 101,
    UIEventSubtypeRemoteControlStop = 102,
    UIEventSubtypeRemoteControlTogglePlayPause = 103,
    UIEventSubtypeRemoteControlNextTrack = 104,
    UIEventSubtypeRemoteControlPreviousTrack = 105,
    UIEventSubtypeRemoteControlBeginSeekingBackward = 106,
    UIEventSubtypeRemoteControlEndSeekingBackward = 107,
    UIEventSubtypeRemoteControlBeginSeekingForward = 108,
    UIEventSubtypeRemoteControlEndSeekingForward = 109,
};


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIEvent : NSObject

@property(nonatomic,readonly) UIEventType type __attribute__((availability(ios,introduced=3_0)));
@property(nonatomic,readonly) UIEventSubtype subtype __attribute__((availability(ios,introduced=3_0)));

@property(nonatomic,readonly) NSTimeInterval timestamp;


@property(nonatomic, readonly, nullable) NSSet <UITouch *> *allTouches;



- (nullable NSSet <UITouch *> *)touchesForWindow:(UIWindow *)window;
- (nullable NSSet <UITouch *> *)touchesForView:(UIView *)view;
- (nullable NSSet <UITouch *> *)touchesForGestureRecognizer:(UIGestureRecognizer *)gesture __attribute__((availability(ios,introduced=3_2)));


- (nullable NSArray <UITouch *> *)coalescedTouchesForTouch:(UITouch *)touch __attribute__((availability(ios,introduced=9_0)));


- (nullable NSArray <UITouch *> *)predictedTouchesForTouch:(UITouch *)touch __attribute__((availability(ios,introduced=9_0)));

@end
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIResponder.h" 2 3



@class UIPress;
@class UIPressesEvent;

@protocol UIResponderStandardEditActions <NSObject>
@optional
- (void)cut:(nullable id)sender __attribute__((availability(ios,introduced=3_0)));
- (void)copy:(nullable id)sender __attribute__((availability(ios,introduced=3_0)));
- (void)paste:(nullable id)sender __attribute__((availability(ios,introduced=3_0)));
- (void)select:(nullable id)sender __attribute__((availability(ios,introduced=3_0)));
- (void)selectAll:(nullable id)sender __attribute__((availability(ios,introduced=3_0)));
- (void)delete:(nullable id)sender __attribute__((availability(ios,introduced=3_2)));
- (void)makeTextWritingDirectionLeftToRight:(nullable id)sender __attribute__((availability(ios,introduced=5_0)));
- (void)makeTextWritingDirectionRightToLeft:(nullable id)sender __attribute__((availability(ios,introduced=5_0)));
- (void)toggleBoldface:(nullable id)sender __attribute__((availability(ios,introduced=6_0)));
- (void)toggleItalics:(nullable id)sender __attribute__((availability(ios,introduced=6_0)));
- (void)toggleUnderline:(nullable id)sender __attribute__((availability(ios,introduced=6_0)));

- (void)increaseSize:(nullable id)sender __attribute__((availability(ios,introduced=7_0)));
- (void)decreaseSize:(nullable id)sender __attribute__((availability(ios,introduced=7_0)));

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIResponder : NSObject <UIResponderStandardEditActions>


@property(nonatomic, readonly, nullable) UIResponder *nextResponder;





@property(nonatomic, readonly) BOOL canBecomeFirstResponder;



- (BOOL)becomeFirstResponder;


@property(nonatomic, readonly) BOOL canResignFirstResponder;



- (BOOL)resignFirstResponder;


@property(nonatomic, readonly) BOOL isFirstResponder;
# 69 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIResponder.h" 3
- (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event;
- (void)touchesMoved:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event;
- (void)touchesEnded:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event;
- (void)touchesCancelled:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event;
- (void)touchesEstimatedPropertiesUpdated:(NSSet<UITouch *> *)touches __attribute__((availability(ios,introduced=9_1)));
# 82 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIResponder.h" 3
- (void)pressesBegan:(NSSet<UIPress *> *)presses withEvent:(nullable UIPressesEvent *)event __attribute__((availability(ios,introduced=9_0)));
- (void)pressesChanged:(NSSet<UIPress *> *)presses withEvent:(nullable UIPressesEvent *)event __attribute__((availability(ios,introduced=9_0)));
- (void)pressesEnded:(NSSet<UIPress *> *)presses withEvent:(nullable UIPressesEvent *)event __attribute__((availability(ios,introduced=9_0)));
- (void)pressesCancelled:(NSSet<UIPress *> *)presses withEvent:(nullable UIPressesEvent *)event __attribute__((availability(ios,introduced=9_0)));

- (void)motionBegan:(UIEventSubtype)motion withEvent:(nullable UIEvent *)event __attribute__((availability(ios,introduced=3_0)));
- (void)motionEnded:(UIEventSubtype)motion withEvent:(nullable UIEvent *)event __attribute__((availability(ios,introduced=3_0)));
- (void)motionCancelled:(UIEventSubtype)motion withEvent:(nullable UIEvent *)event __attribute__((availability(ios,introduced=3_0)));

- (void)remoteControlReceivedWithEvent:(nullable UIEvent *)event __attribute__((availability(ios,introduced=4_0)));

- (BOOL)canPerformAction:(SEL)action withSender:(nullable id)sender __attribute__((availability(ios,introduced=3_0)));

- (nullable id)targetForAction:(SEL)action withSender:(nullable id)sender __attribute__((availability(ios,introduced=7_0)));

@property(nullable, nonatomic,readonly) NSUndoManager *undoManager __attribute__((availability(ios,introduced=3_0)));

@end

typedef enum UIKeyModifierFlags : NSInteger UIKeyModifierFlags; enum UIKeyModifierFlags : NSInteger {
    UIKeyModifierAlphaShift = 1 << 16,
    UIKeyModifierShift = 1 << 17,
    UIKeyModifierControl = 1 << 18,
    UIKeyModifierAlternate = 1 << 19,
    UIKeyModifierCommand = 1 << 20,
    UIKeyModifierNumericPad = 1 << 21,
} __attribute__((availability(ios,introduced=7_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIKeyCommand : NSObject <NSCopying, NSSecureCoding>

- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@property (nonatomic,readonly) NSString *input;
@property (nonatomic,readonly) UIKeyModifierFlags modifierFlags;
@property (nullable,nonatomic,copy) NSString *discoverabilityTitle __attribute__((availability(ios,introduced=9_0)));




+ (UIKeyCommand *)keyCommandWithInput:(NSString *)input modifierFlags:(UIKeyModifierFlags)modifierFlags action:(SEL)action;


+ (UIKeyCommand *)keyCommandWithInput:(NSString *)input modifierFlags:(UIKeyModifierFlags)modifierFlags action:(SEL)action discoverabilityTitle:(NSString *)discoverabilityTitle __attribute__((availability(ios,introduced=9_0)));

@end

@interface UIResponder (UIResponderKeyCommands)
@property (nullable,nonatomic,readonly) NSArray<UIKeyCommand *> *keyCommands __attribute__((availability(ios,introduced=7_0)));
@end

@class UIInputViewController;
@class UITextInputMode;
@class UITextInputAssistantItem;

@interface UIResponder (UIResponderInputViewAdditions)


@property (nullable, nonatomic, readonly, strong) __kindof UIView *inputView __attribute__((availability(ios,introduced=3_2)));
@property (nullable, nonatomic, readonly, strong) __kindof UIView *inputAccessoryView __attribute__((availability(ios,introduced=3_2)));





@property (nonnull, nonatomic, readonly, strong) UITextInputAssistantItem *inputAssistantItem __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



@property (nullable, nonatomic, readonly, strong) UIInputViewController *inputViewController __attribute__((availability(ios,introduced=8_0)));
@property (nullable, nonatomic, readonly, strong) UIInputViewController *inputAccessoryViewController __attribute__((availability(ios,introduced=8_0)));




@property (nullable, nonatomic, readonly, strong) UITextInputMode *textInputMode __attribute__((availability(ios,introduced=7_0)));



@property (nullable, nonatomic, readonly, strong) NSString *textInputContextIdentifier __attribute__((availability(ios,introduced=7_0)));

+ (void)clearTextInputContextIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=7_0)));


- (void)reloadInputViews __attribute__((availability(ios,introduced=3_2)));

@end


extern __attribute__((visibility ("default"))) NSString *const UIKeyInputUpArrow __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIKeyInputDownArrow __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIKeyInputLeftArrow __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIKeyInputRightArrow __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIKeyInputEscape __attribute__((availability(ios,introduced=7_0)));

@interface UIResponder (ActivityContinuation)
@property (nullable, nonatomic, strong) NSUserActivity *userActivity __attribute__((availability(ios,introduced=8_0)));
- (void)updateUserActivityState:(NSUserActivity *)activity __attribute__((availability(ios,introduced=8_0)));
- (void)restoreUserActivityState:(NSUserActivity *)activity __attribute__((availability(ios,introduced=8_0)));
@end
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIInterface.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIInterface.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIColor.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIColor.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImageDefines.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImageDefines.h" 3
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stddef.h" 1 3 4
# 15 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImageDefines.h" 2 3
# 9 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3




# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIVector.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIVector.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface CIVector : NSObject <NSCopying, NSSecureCoding>
{
    size_t _count;

    union {
        CGFloat vec[4];
        CGFloat *ptr;
    }
    _u;
}



+ (instancetype)vectorWithValues:(const CGFloat *)values count:(size_t)count;

+ (instancetype)vectorWithX:(CGFloat)x;
+ (instancetype)vectorWithX:(CGFloat)x Y:(CGFloat)y;
+ (instancetype)vectorWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z;
+ (instancetype)vectorWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z W:(CGFloat)w;


+ (instancetype)vectorWithCGPoint:(CGPoint)p __attribute__((availability(ios,introduced=5_0)));


+ (instancetype)vectorWithCGRect:(CGRect)r __attribute__((availability(ios,introduced=5_0)));


+ (instancetype)vectorWithCGAffineTransform:(CGAffineTransform)t __attribute__((availability(ios,introduced=5_0)));

+ (instancetype)vectorWithString:(NSString *)representation;



- (instancetype)initWithValues:(const CGFloat *)values count:(size_t)count __attribute__((objc_designated_initializer));

- (instancetype)initWithX:(CGFloat)x;
- (instancetype)initWithX:(CGFloat)x Y:(CGFloat)y;
- (instancetype)initWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z;
- (instancetype)initWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z W:(CGFloat)w;
- (instancetype)initWithCGPoint:(CGPoint)p __attribute__((availability(ios,introduced=5_0)));
- (instancetype)initWithCGRect:(CGRect)r __attribute__((availability(ios,introduced=5_0)));
- (instancetype)initWithCGAffineTransform:(CGAffineTransform)r __attribute__((availability(ios,introduced=5_0)));

- (instancetype)initWithString:(NSString *)representation;




- (CGFloat)valueAtIndex:(size_t)index;


@property (readonly) size_t count;



@property (readonly) CGFloat X;
@property (readonly) CGFloat Y;
@property (readonly) CGFloat Z;
@property (readonly) CGFloat W;
@property (readonly) CGPoint CGPointValue __attribute__((availability(ios,introduced=5_0)));
@property (readonly) CGRect CGRectValue __attribute__((availability(ios,introduced=5_0)));
@property (readonly) CGAffineTransform CGAffineTransformValue __attribute__((availability(ios,introduced=5_0)));





@property (readonly) NSString *stringRepresentation;

@end
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIColor.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIColor.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface CIColor : NSObject <NSSecureCoding, NSCopying>
{
    void *_priv;
    void *_pad[3];
}


+ (instancetype)colorWithCGColor:(CGColorRef)c;




+ (instancetype)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a;
+ (instancetype)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b;



+ (nullable instancetype)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));
+ (nullable instancetype)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));



+ (instancetype)colorWithString:(NSString *)representation;



- (instancetype)initWithCGColor:(CGColorRef)c __attribute__((objc_designated_initializer));




- (instancetype)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a;
- (instancetype)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b __attribute__((availability(ios,introduced=9_0)));



- (nullable instancetype)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));
- (nullable instancetype)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));


@property (readonly) size_t numberOfComponents;


@property (readonly) const CGFloat *components __attribute__((objc_returns_inner_pointer));


@property (readonly) CGFloat alpha;


@property (readonly) CGColorSpaceRef colorSpace __attribute__((cf_returns_not_retained));


@property (readonly) CGFloat red;
@property (readonly) CGFloat green;
@property (readonly) CGFloat blue;





@property (readonly) NSString *stringRepresentation;


+ (instancetype)blackColor __attribute__((availability(ios,introduced=10_0)));
+ (instancetype)whiteColor __attribute__((availability(ios,introduced=10_0)));
+ (instancetype)grayColor __attribute__((availability(ios,introduced=10_0)));
+ (instancetype)redColor __attribute__((availability(ios,introduced=10_0)));
+ (instancetype)greenColor __attribute__((availability(ios,introduced=10_0)));
+ (instancetype)blueColor __attribute__((availability(ios,introduced=10_0)));
+ (instancetype)cyanColor __attribute__((availability(ios,introduced=10_0)));
+ (instancetype)magentaColor __attribute__((availability(ios,introduced=10_0)));
+ (instancetype)yellowColor __attribute__((availability(ios,introduced=10_0)));
+ (instancetype)clearColor __attribute__((availability(ios,introduced=10_0)));

@end
# 15 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImage.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImage.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h" 1 3
# 20 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVReturn.h" 1 3
# 21 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVReturn.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBase.h" 1 3
# 141 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBase.h" 3
typedef uint64_t CVOptionFlags;
# 165 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBase.h" 3
struct CVSMPTETime
{
    SInt16 subframes;
    SInt16 subframeDivisor;
    UInt32 counter;
    UInt32 type;
    UInt32 flags;
    SInt16 hours;
    SInt16 minutes;
    SInt16 seconds;
    SInt16 frames;
};
typedef struct CVSMPTETime CVSMPTETime;
# 199 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBase.h" 3
typedef enum CVSMPTETimeType : uint32_t CVSMPTETimeType; enum CVSMPTETimeType : uint32_t
{
    kCVSMPTETimeType24 = 0,
    kCVSMPTETimeType25 = 1,
    kCVSMPTETimeType30Drop = 2,
    kCVSMPTETimeType30 = 3,
    kCVSMPTETimeType2997 = 4,
    kCVSMPTETimeType2997Drop = 5,
    kCVSMPTETimeType60 = 6,
    kCVSMPTETimeType5994 = 7
};
# 219 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBase.h" 3
typedef enum CVSMPTETimeFlags : uint32_t CVSMPTETimeFlags; enum CVSMPTETimeFlags : uint32_t
{
    kCVSMPTETimeValid = (1L << 0),
    kCVSMPTETimeRunning = (1L << 1)
};


typedef enum CVTimeFlags : int32_t CVTimeFlags; enum CVTimeFlags : int32_t {
    kCVTimeIsIndefinite = 1 << 0
};

typedef struct
{
    int64_t timeValue;
    int32_t timeScale;
    int32_t flags;
} CVTime;
# 264 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBase.h" 3
typedef struct
{
    uint32_t version;
    int32_t videoTimeScale;
    int64_t videoTime;
    uint64_t hostTime;
    double rateScalar;
    int64_t videoRefreshPeriod;
    CVSMPTETime smpteTime;
    uint64_t flags;
    uint64_t reserved;
} CVTimeStamp;


typedef enum CVTimeStampFlags : uint64_t CVTimeStampFlags; enum CVTimeStampFlags : uint64_t
{
    kCVTimeStampVideoTimeValid = (1L << 0),
    kCVTimeStampHostTimeValid = (1L << 1),
    kCVTimeStampSMPTETimeValid = (1L << 2),
    kCVTimeStampVideoRefreshPeriodValid = (1L << 3),
    kCVTimeStampRateScalarValid = (1L << 4),


    kCVTimeStampTopField = (1L << 16),
    kCVTimeStampBottomField = (1L << 17),


    kCVTimeStampVideoHostTimeValid = (kCVTimeStampVideoTimeValid | kCVTimeStampHostTimeValid),
    kCVTimeStampIsInterlaced = (kCVTimeStampTopField | kCVTimeStampBottomField)
};

extern const CVTime kCVZeroTime;
extern const CVTime kCVIndefiniteTime;
# 22 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVReturn.h" 2 3
# 54 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVReturn.h" 3
typedef int32_t CVReturn;

enum : CVReturn



{
    kCVReturnSuccess = 0,

    kCVReturnFirst = -6660,

    kCVReturnError = kCVReturnFirst,
    kCVReturnInvalidArgument = -6661,
    kCVReturnAllocationFailed = -6662,
 kCVReturnUnsupported = -6663,


    kCVReturnInvalidDisplay = -6670,
    kCVReturnDisplayLinkAlreadyRunning = -6671,
    kCVReturnDisplayLinkNotRunning = -6672,
    kCVReturnDisplayLinkCallbacksNotSet = -6673,


    kCVReturnInvalidPixelFormat = -6680,
    kCVReturnInvalidSize = -6681,
    kCVReturnInvalidPixelBufferAttributes = -6682,
    kCVReturnPixelBufferNotOpenGLCompatible = -6683,
    kCVReturnPixelBufferNotMetalCompatible = -6684,


    kCVReturnWouldExceedAllocationThreshold = -6689,
    kCVReturnPoolAllocationFailed = -6690,
    kCVReturnInvalidPoolAttributes = -6691,
    kCVReturnRetry = -6692,

    kCVReturnLast = -6699

};
# 21 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h" 2 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBuffer.h" 1 3
# 29 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBuffer.h" 3
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stddef.h" 1 3 4
# 30 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBuffer.h" 2 3
# 41 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBuffer.h" 3
extern const CFStringRef _Nonnull kCVBufferPropagatedAttachmentsKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVBufferNonPropagatedAttachmentsKey __attribute__((availability(ios,introduced=4.0)));



extern const CFStringRef _Nonnull kCVBufferMovieTimeKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVBufferTimeValueKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVBufferTimeScaleKey __attribute__((availability(ios,introduced=4.0)));




typedef enum CVAttachmentMode : uint32_t CVAttachmentMode; enum CVAttachmentMode : uint32_t
{
 kCVAttachmentMode_ShouldNotPropagate = 0,
 kCVAttachmentMode_ShouldPropagate = 1
};






typedef struct __attribute__((objc_bridge(id))) __CVBuffer *CVBufferRef;
# 73 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBuffer.h" 3
extern CVBufferRef _Nullable CVBufferRetain( CVBufferRef _Nullable buffer ) __attribute__((availability(ios,introduced=4.0)));






extern void CVBufferRelease( __attribute__((cf_consumed)) CVBufferRef _Nullable buffer ) __attribute__((availability(ios,introduced=4.0)));
# 94 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBuffer.h" 3
extern void CVBufferSetAttachment( CVBufferRef _Nonnull buffer, CFStringRef _Nonnull key, CFTypeRef _Nonnull value, CVAttachmentMode attachmentMode ) __attribute__((availability(ios,introduced=4.0)));
# 106 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBuffer.h" 3
extern CFTypeRef _Nullable CVBufferGetAttachment( CVBufferRef _Nonnull buffer, CFStringRef _Nonnull key, CVAttachmentMode * _Nullable attachmentMode ) __attribute__((availability(ios,introduced=4.0)));
# 115 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBuffer.h" 3
extern void CVBufferRemoveAttachment( CVBufferRef _Nonnull buffer, CFStringRef _Nonnull key ) __attribute__((availability(ios,introduced=4.0)));







extern void CVBufferRemoveAllAttachments( CVBufferRef _Nonnull buffer ) __attribute__((availability(ios,introduced=4.0)));
# 133 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBuffer.h" 3
extern CFDictionaryRef __attribute__((cf_returns_not_retained)) _Nullable CVBufferGetAttachments( CVBufferRef _Nonnull buffer, CVAttachmentMode attachmentMode ) __attribute__((availability(ios,introduced=4.0)));







extern void CVBufferSetAttachments( CVBufferRef _Nonnull buffer, CFDictionaryRef _Nonnull theAttachments, CVAttachmentMode attachmentMode ) __attribute__((availability(ios,introduced=4.0)));
# 151 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVBuffer.h" 3
extern void CVBufferPropagateAttachments( CVBufferRef _Nonnull sourceBuffer, CVBufferRef _Nonnull destinationBuffer ) __attribute__((availability(ios,introduced=4.0)));
# 29 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 1 3
# 23 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVImageBuffer.h" 1 3
# 37 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVImageBuffer.h" 3
extern const CFStringRef _Nonnull kCVImageBufferCGColorSpaceKey __attribute__((availability(ios,introduced=4.0)));

extern const CFStringRef _Nonnull kCVImageBufferCleanApertureKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferCleanApertureWidthKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferCleanApertureHeightKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferCleanApertureHorizontalOffsetKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferCleanApertureVerticalOffsetKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferPreferredCleanApertureKey __attribute__((availability(ios,introduced=4.0)));

extern const CFStringRef _Nonnull kCVImageBufferFieldCountKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferFieldDetailKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferFieldDetailTemporalTopFirst __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferFieldDetailTemporalBottomFirst __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferFieldDetailSpatialFirstLineEarly __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferFieldDetailSpatialFirstLineLate __attribute__((availability(ios,introduced=4.0)));

extern const CFStringRef _Nonnull kCVImageBufferPixelAspectRatioKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferPixelAspectRatioHorizontalSpacingKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferPixelAspectRatioVerticalSpacingKey __attribute__((availability(ios,introduced=4.0)));

extern const CFStringRef _Nonnull kCVImageBufferDisplayDimensionsKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferDisplayWidthKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferDisplayHeightKey __attribute__((availability(ios,introduced=4.0)));

extern const CFStringRef _Nonnull kCVImageBufferGammaLevelKey __attribute__((availability(ios,introduced=4.0)));

extern const CFStringRef _Nonnull kCVImageBufferICCProfileKey __attribute__((availability(ios,introduced=4.0)));

extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrixKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_ITU_R_709_2 __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_ITU_R_601_4 __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_SMPTE_240M_1995 __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_DCI_P3 __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_P3_D65 __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_ITU_R_2020 __attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef _Nonnull kCVImageBufferColorPrimariesKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_ITU_R_709_2 __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_EBU_3213 __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_SMPTE_C __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_P22 __attribute__((availability(ios,introduced=6.0)));
extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_DCI_P3 __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_P3_D65 __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_ITU_R_2020 __attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef _Nonnull kCVImageBufferTransferFunctionKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_ITU_R_709_2 __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_SMPTE_240M_1995 __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_UseGamma __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_EBU_3213 __attribute__((availability(ios,unavailable)));
extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_SMPTE_C __attribute__((availability(ios,unavailable)));
extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_ITU_R_2020 __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_SMPTE_ST_428_1 __attribute__((availability(ios,introduced=10.0)));


extern const CFStringRef _Nonnull kCVImageBufferChromaLocationTopFieldKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferChromaLocationBottomFieldKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_Left __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_Center __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_TopLeft __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_Top __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_BottomLeft __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_Bottom __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_DV420 __attribute__((availability(ios,introduced=4.0)));



extern const CFStringRef _Nonnull kCVImageBufferChromaSubsamplingKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferChromaSubsampling_420 __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferChromaSubsampling_422 __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVImageBufferChromaSubsampling_411 __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef _Nonnull kCVImageBufferAlphaChannelIsOpaque __attribute__((availability(ios,introduced=8.0)));
# 119 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVImageBuffer.h" 3
typedef CVBufferRef CVImageBufferRef;
# 128 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVImageBuffer.h" 3
extern CGSize CVImageBufferGetEncodedSize( CVImageBufferRef _Nonnull imageBuffer ) __attribute__((availability(ios,introduced=4.0)));
# 138 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVImageBuffer.h" 3
extern CGSize CVImageBufferGetDisplaySize( CVImageBufferRef _Nonnull imageBuffer ) __attribute__((availability(ios,introduced=4.0)));
# 151 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVImageBuffer.h" 3
extern CGRect CVImageBufferGetCleanRect( CVImageBufferRef _Nonnull imageBuffer ) __attribute__((availability(ios,introduced=4.0)));







extern Boolean CVImageBufferIsFlipped( CVImageBufferRef _Nonnull imageBuffer ) __attribute__((availability(ios,introduced=4.0)));
# 24 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 2 3
# 35 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
enum : OSType



{
  kCVPixelFormatType_1Monochrome = 0x00000001,
  kCVPixelFormatType_2Indexed = 0x00000002,
  kCVPixelFormatType_4Indexed = 0x00000004,
  kCVPixelFormatType_8Indexed = 0x00000008,
  kCVPixelFormatType_1IndexedGray_WhiteIsZero = 0x00000021,
  kCVPixelFormatType_2IndexedGray_WhiteIsZero = 0x00000022,
  kCVPixelFormatType_4IndexedGray_WhiteIsZero = 0x00000024,
  kCVPixelFormatType_8IndexedGray_WhiteIsZero = 0x00000028,
  kCVPixelFormatType_16BE555 = 0x00000010,
  kCVPixelFormatType_16LE555 = 'L555',
  kCVPixelFormatType_16LE5551 = '5551',
  kCVPixelFormatType_16BE565 = 'B565',
  kCVPixelFormatType_16LE565 = 'L565',
  kCVPixelFormatType_24RGB = 0x00000018,
  kCVPixelFormatType_24BGR = '24BG',
  kCVPixelFormatType_32ARGB = 0x00000020,
  kCVPixelFormatType_32BGRA = 'BGRA',
  kCVPixelFormatType_32ABGR = 'ABGR',
  kCVPixelFormatType_32RGBA = 'RGBA',
  kCVPixelFormatType_64ARGB = 'b64a',
  kCVPixelFormatType_48RGB = 'b48r',
  kCVPixelFormatType_32AlphaGray = 'b32a',
  kCVPixelFormatType_16Gray = 'b16g',
  kCVPixelFormatType_30RGB = 'R10k',
  kCVPixelFormatType_422YpCbCr8 = '2vuy',
  kCVPixelFormatType_4444YpCbCrA8 = 'v408',
  kCVPixelFormatType_4444YpCbCrA8R = 'r408',
  kCVPixelFormatType_4444AYpCbCr8 = 'y408',
  kCVPixelFormatType_4444AYpCbCr16 = 'y416',
  kCVPixelFormatType_444YpCbCr8 = 'v308',
  kCVPixelFormatType_422YpCbCr16 = 'v216',
  kCVPixelFormatType_422YpCbCr10 = 'v210',
  kCVPixelFormatType_444YpCbCr10 = 'v410',
  kCVPixelFormatType_420YpCbCr8Planar = 'y420',
  kCVPixelFormatType_420YpCbCr8PlanarFullRange = 'f420',
  kCVPixelFormatType_422YpCbCr_4A_8BiPlanar = 'a2vy',
  kCVPixelFormatType_420YpCbCr8BiPlanarVideoRange = '420v',
  kCVPixelFormatType_420YpCbCr8BiPlanarFullRange = '420f',
  kCVPixelFormatType_422YpCbCr8_yuvs = 'yuvs',
  kCVPixelFormatType_422YpCbCr8FullRange = 'yuvf',
  kCVPixelFormatType_OneComponent8 = 'L008',
  kCVPixelFormatType_TwoComponent8 = '2C08',
  kCVPixelFormatType_30RGBLEPackedWideGamut = 'w30r',
  kCVPixelFormatType_OneComponent16Half = 'L00h',
  kCVPixelFormatType_OneComponent32Float = 'L00f',
  kCVPixelFormatType_TwoComponent16Half = '2C0h',
  kCVPixelFormatType_TwoComponent32Float = '2C0f',
  kCVPixelFormatType_64RGBAHalf = 'RGhA',
  kCVPixelFormatType_128RGBAFloat = 'RGfA',
  kCVPixelFormatType_14Bayer_GRBG = 'grb4',
  kCVPixelFormatType_14Bayer_RGGB = 'rgg4',
  kCVPixelFormatType_14Bayer_BGGR = 'bgg4',
  kCVPixelFormatType_14Bayer_GBRG = 'gbr4',
};
# 105 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
typedef enum CVPixelBufferLockFlags : CVOptionFlags CVPixelBufferLockFlags; enum CVPixelBufferLockFlags : CVOptionFlags
{
 kCVPixelBufferLock_ReadOnly = 0x00000001,
};






struct CVPlanarComponentInfo {
  int32_t offset;
  uint32_t rowBytes;
};
typedef struct CVPlanarComponentInfo CVPlanarComponentInfo;
struct CVPlanarPixelBufferInfo {
  CVPlanarComponentInfo componentInfo[1];
};
typedef struct CVPlanarPixelBufferInfo CVPlanarPixelBufferInfo;
struct CVPlanarPixelBufferInfo_YCbCrPlanar {
  CVPlanarComponentInfo componentInfoY;
  CVPlanarComponentInfo componentInfoCb;
  CVPlanarComponentInfo componentInfoCr;
};
typedef struct CVPlanarPixelBufferInfo_YCbCrPlanar CVPlanarPixelBufferInfo_YCbCrPlanar;
struct CVPlanarPixelBufferInfo_YCbCrBiPlanar {
  CVPlanarComponentInfo componentInfoY;
  CVPlanarComponentInfo componentInfoCbCr;
};
typedef struct CVPlanarPixelBufferInfo_YCbCrBiPlanar CVPlanarPixelBufferInfo_YCbCrBiPlanar;


extern const CFStringRef _Nonnull kCVPixelBufferPixelFormatTypeKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferMemoryAllocatorKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferWidthKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferHeightKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferExtendedPixelsLeftKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferExtendedPixelsTopKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferExtendedPixelsRightKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferExtendedPixelsBottomKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferBytesPerRowAlignmentKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferCGBitmapContextCompatibilityKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferCGImageCompatibilityKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferOpenGLCompatibilityKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferPlaneAlignmentKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferIOSurfacePropertiesKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferOpenGLESCompatibilityKey __attribute__((availability(ios,introduced=6.0)));
extern const CFStringRef _Nonnull kCVPixelBufferMetalCompatibilityKey __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef _Nonnull kCVPixelBufferOpenGLTextureCacheCompatibilityKey __attribute__((availability(ios,unavailable)));
extern const CFStringRef _Nonnull kCVPixelBufferOpenGLESTextureCacheCompatibilityKey __attribute__((availability(ios,introduced=9.0)));






typedef CVImageBufferRef CVPixelBufferRef;

extern CFTypeID CVPixelBufferGetTypeID(void) __attribute__((availability(ios,introduced=4.0)));
# 172 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern CVPixelBufferRef _Nullable CVPixelBufferRetain( CVPixelBufferRef _Nullable texture ) __attribute__((availability(ios,introduced=4.0)));







extern void CVPixelBufferRelease( __attribute__((cf_consumed)) CVPixelBufferRef _Nullable texture ) __attribute__((availability(ios,introduced=4.0)));
# 191 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern CVReturn CVPixelBufferCreateResolvedAttributesDictionary(
    CFAllocatorRef _Nullable allocator,
    CFArrayRef _Nullable attributes,
    __attribute__((cf_returns_retained)) CFDictionaryRef _Nullable * _Nonnull resolvedDictionaryOut) __attribute__((availability(ios,introduced=4.0)));
# 208 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern CVReturn CVPixelBufferCreate(
    CFAllocatorRef _Nullable allocator,
    size_t width,
    size_t height,
    OSType pixelFormatType,
    CFDictionaryRef _Nullable pixelBufferAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut) __attribute__((availability(ios,introduced=4.0)));

typedef void (*CVPixelBufferReleaseBytesCallback)( void * _Nullable releaseRefCon, const void * _Nullable baseAddress );
# 233 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern CVReturn CVPixelBufferCreateWithBytes(
    CFAllocatorRef _Nullable allocator,
    size_t width,
    size_t height,
    OSType pixelFormatType,
    void * _Nonnull baseAddress,
    size_t bytesPerRow,
    CVPixelBufferReleaseBytesCallback _Nullable releaseCallback,
    void * _Nullable releaseRefCon,
    CFDictionaryRef _Nullable pixelBufferAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut) __attribute__((availability(ios,introduced=4.0)));

typedef void (*CVPixelBufferReleasePlanarBytesCallback)( void * _Nullable releaseRefCon, const void * _Nullable dataPtr, size_t dataSize, size_t numberOfPlanes, const void * _Nullable planeAddresses[] );
# 267 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern CVReturn CVPixelBufferCreateWithPlanarBytes(
    CFAllocatorRef _Nullable allocator,
    size_t width,
    size_t height,
    OSType pixelFormatType,
    void * _Nullable dataPtr,
    size_t dataSize,
    size_t numberOfPlanes,
    void * _Nullable planeBaseAddress[],
    size_t planeWidth[],
    size_t planeHeight[],
    size_t planeBytesPerRow[],
    CVPixelBufferReleasePlanarBytesCallback _Nullable releaseCallback,
    void * _Nullable releaseRefCon,
    CFDictionaryRef _Nullable pixelBufferAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut) __attribute__((availability(ios,introduced=4.0)));
# 293 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern CVReturn CVPixelBufferLockBaseAddress( CVPixelBufferRef _Nonnull pixelBuffer, CVPixelBufferLockFlags lockFlags ) __attribute__((availability(ios,introduced=4.0)));
# 302 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern CVReturn CVPixelBufferUnlockBaseAddress( CVPixelBufferRef _Nonnull pixelBuffer, CVPixelBufferLockFlags unlockFlags ) __attribute__((availability(ios,introduced=4.0)));







extern size_t CVPixelBufferGetWidth( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







extern size_t CVPixelBufferGetHeight( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







extern OSType CVPixelBufferGetPixelFormatType( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));
# 338 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern void * _Nullable CVPixelBufferGetBaseAddress( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));
# 347 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern size_t CVPixelBufferGetBytesPerRow( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







extern size_t CVPixelBufferGetDataSize( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







extern Boolean CVPixelBufferIsPlanar( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







extern size_t CVPixelBufferGetPlaneCount( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));
# 382 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern size_t CVPixelBufferGetWidthOfPlane( CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex ) __attribute__((availability(ios,introduced=4.0)));
# 393 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern size_t CVPixelBufferGetHeightOfPlane( CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex ) __attribute__((availability(ios,introduced=4.0)));
# 405 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern void * _Nullable CVPixelBufferGetBaseAddressOfPlane( CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex ) __attribute__((availability(ios,introduced=4.0)));
# 416 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern size_t CVPixelBufferGetBytesPerRowOfPlane( CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex ) __attribute__((availability(ios,introduced=4.0)));
# 429 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h" 3
extern void CVPixelBufferGetExtendedPixels(
        CVPixelBufferRef _Nonnull pixelBuffer,
        size_t * _Nullable extraColumnsOnLeft,
        size_t * _Nullable extraColumnsOnRight,
        size_t * _Nullable extraRowsOnTop,
        size_t * _Nullable extraRowsOnBottom ) __attribute__((availability(ios,introduced=4.0)));






extern CVReturn CVPixelBufferFillExtendedPixels( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));
# 30 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBufferPool.h" 1 3
# 31 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBufferPool.h" 3
typedef struct __attribute__((objc_bridge(id))) __CVPixelBufferPool *CVPixelBufferPoolRef;




extern const CFStringRef _Nonnull kCVPixelBufferPoolMinimumBufferCountKey __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelBufferPoolMaximumBufferAgeKey __attribute__((availability(ios,introduced=4.0)));


extern CFTypeID CVPixelBufferPoolGetTypeID(void) __attribute__((availability(ios,introduced=4.0)));
# 49 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBufferPool.h" 3
extern CVPixelBufferPoolRef _Nullable CVPixelBufferPoolRetain( CVPixelBufferPoolRef _Nullable pixelBufferPool ) __attribute__((availability(ios,introduced=4.0)));







extern void CVPixelBufferPoolRelease( __attribute__((cf_consumed)) CVPixelBufferPoolRef _Nullable pixelBufferPool ) __attribute__((availability(ios,introduced=4.0)));
# 67 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBufferPool.h" 3
extern CVReturn CVPixelBufferPoolCreate(
    CFAllocatorRef _Nullable allocator,
    CFDictionaryRef _Nullable poolAttributes,
    CFDictionaryRef _Nullable pixelBufferAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferPoolRef _Nullable * _Nonnull poolOut ) __attribute__((availability(ios,introduced=4.0)));







extern CFDictionaryRef __attribute__((cf_returns_not_retained)) _Nullable CVPixelBufferPoolGetAttributes( CVPixelBufferPoolRef _Nonnull pool ) __attribute__((availability(ios,introduced=4.0)));
# 89 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBufferPool.h" 3
extern CFDictionaryRef __attribute__((cf_returns_not_retained)) _Nullable CVPixelBufferPoolGetPixelBufferAttributes( CVPixelBufferPoolRef _Nonnull pool ) __attribute__((availability(ios,introduced=4.0)));
# 100 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBufferPool.h" 3
extern CVReturn CVPixelBufferPoolCreatePixelBuffer(
    CFAllocatorRef _Nullable allocator,
    CVPixelBufferPoolRef _Nonnull pixelBufferPool,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut ) __attribute__((availability(ios,introduced=4.0)));
# 116 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBufferPool.h" 3
extern CVReturn CVPixelBufferPoolCreatePixelBufferWithAuxAttributes(
    CFAllocatorRef _Nullable allocator,
    CVPixelBufferPoolRef _Nonnull pixelBufferPool,
    CFDictionaryRef _Nullable auxAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut ) __attribute__((availability(ios,introduced=4.0)));
# 129 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBufferPool.h" 3
extern const CFStringRef _Nonnull kCVPixelBufferPoolAllocationThresholdKey __attribute__((availability(ios,introduced=4.0)));





extern const CFStringRef _Nonnull kCVPixelBufferPoolFreeBufferNotification __attribute__((availability(ios,introduced=4.0)));
# 145 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBufferPool.h" 3
typedef enum CVPixelBufferPoolFlushFlags : CVOptionFlags CVPixelBufferPoolFlushFlags; enum CVPixelBufferPoolFlushFlags : CVOptionFlags
{
 kCVPixelBufferPoolFlushExcessBuffers = 1,
};
# 160 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBufferPool.h" 3
extern void CVPixelBufferPoolFlush( CVPixelBufferPoolRef _Nonnull pool, CVPixelBufferPoolFlushFlags options );
# 31 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h" 2 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTexture.h" 1 3
# 23 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTexture.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/OpenGLES.framework/Headers/gltypes.h" 1 3








typedef uint32_t GLbitfield;
typedef uint8_t GLboolean;
typedef int8_t GLbyte;
typedef float GLclampf;
typedef uint32_t GLenum;
typedef float GLfloat;
typedef int32_t GLint;
typedef int16_t GLshort;
typedef int32_t GLsizei;
typedef uint8_t GLubyte;
typedef uint32_t GLuint;
typedef uint16_t GLushort;
typedef void GLvoid;


typedef char GLchar;

typedef int32_t GLclampx;
typedef int32_t GLfixed;

typedef uint16_t GLhalf;


typedef int64_t GLint64;
typedef struct __GLsync *GLsync;
typedef uint64_t GLuint64;

typedef intptr_t GLintptr;
typedef intptr_t GLsizeiptr;
# 24 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTexture.h" 2 3
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stddef.h" 1 3 4
# 25 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTexture.h" 2 3
# 38 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTexture.h" 3
typedef CVImageBufferRef CVOpenGLESTextureRef;

extern CFTypeID CVOpenGLESTextureGetTypeID(void) __attribute__((availability(ios,introduced=5.0)));







extern GLenum CVOpenGLESTextureGetTarget( CVOpenGLESTextureRef _Nonnull image ) __attribute__((availability(ios,introduced=5.0)));







extern GLuint CVOpenGLESTextureGetName( CVOpenGLESTextureRef _Nonnull image ) __attribute__((availability(ios,introduced=5.0)));







extern Boolean CVOpenGLESTextureIsFlipped( CVOpenGLESTextureRef _Nonnull image ) __attribute__((availability(ios,introduced=5.0)));
# 76 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTexture.h" 3
extern void CVOpenGLESTextureGetCleanTexCoords( CVOpenGLESTextureRef _Nonnull image,
                                                   GLfloat lowerLeft[2],
                                                   GLfloat lowerRight[2],
                                                   GLfloat upperRight[2],
                                                   GLfloat upperLeft[2] ) __attribute__((availability(ios,introduced=5.0)));
# 40 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTextureCache.h" 1 3
# 33 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTextureCache.h" 3
typedef struct __attribute__((objc_bridge(id))) __CVOpenGLESTextureCache *CVOpenGLESTextureCacheRef;






@class EAGLContext;
typedef EAGLContext *CVEAGLContext;
# 53 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTextureCache.h" 3
extern const CFStringRef _Nonnull kCVOpenGLESTextureCacheMaximumTextureAgeKey __attribute__((availability(ios,introduced=5.0)));




extern CFTypeID CVOpenGLESTextureCacheGetTypeID(void) __attribute__((availability(ios,introduced=5.0)));
# 70 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTextureCache.h" 3
extern CVReturn CVOpenGLESTextureCacheCreate(
    CFAllocatorRef _Nullable allocator,
    CFDictionaryRef _Nullable cacheAttributes,
    CVEAGLContext _Nonnull eaglContext,
    CFDictionaryRef _Nullable textureAttributes,
    __attribute__((cf_returns_retained)) CVOpenGLESTextureCacheRef _Nullable * _Nonnull cacheOut) __attribute__((availability(ios,introduced=5.0)));
# 117 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTextureCache.h" 3
extern CVReturn CVOpenGLESTextureCacheCreateTextureFromImage(
    CFAllocatorRef _Nullable allocator,
    CVOpenGLESTextureCacheRef _Nonnull textureCache,
    CVImageBufferRef _Nonnull sourceImage,
    CFDictionaryRef _Nullable textureAttributes,
    GLenum target,
    GLint internalFormat,
    GLsizei width,
    GLsizei height,
    GLenum format,
    GLenum type,
    size_t planeIndex,
    __attribute__((cf_returns_retained)) CVOpenGLESTextureRef _Nullable * _Nonnull textureOut ) __attribute__((availability(ios,introduced=5.0)));
# 140 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTextureCache.h" 3
extern void CVOpenGLESTextureCacheFlush( CVOpenGLESTextureCacheRef _Nonnull textureCache, CVOptionFlags options ) __attribute__((availability(ios,introduced=5.0)));
# 41 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelFormatDescription.h" 1 3
# 27 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelFormatDescription.h" 3
extern const CFStringRef _Nonnull kCVPixelFormatName __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef _Nonnull kCVPixelFormatConstant __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef _Nonnull kCVPixelFormatCodecType __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef _Nonnull kCVPixelFormatFourCC __attribute__((availability(ios,introduced=4.0)));



extern const CFStringRef _Nonnull kCVPixelFormatContainsAlpha __attribute__((availability(ios,introduced=4.3)));


extern const CFStringRef _Nonnull kCVPixelFormatContainsYCbCr __attribute__((availability(ios,introduced=8.0)));


extern const CFStringRef _Nonnull kCVPixelFormatContainsRGB __attribute__((availability(ios,introduced=8.0)));

extern const CFStringRef _Nonnull kCVPixelFormatComponentRange __attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef _Nonnull kCVPixelFormatComponentRange_VideoRange __attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef _Nonnull kCVPixelFormatComponentRange_FullRange __attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef _Nonnull kCVPixelFormatComponentRange_WideRange __attribute__((availability(ios,introduced=9.0)));




extern const CFStringRef _Nonnull kCVPixelFormatPlanes __attribute__((availability(ios,introduced=4.0)));
# 75 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelFormatDescription.h" 3
extern const CFStringRef _Nonnull kCVPixelFormatBlockWidth __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelFormatBlockHeight __attribute__((availability(ios,introduced=4.0)));



extern const CFStringRef _Nonnull kCVPixelFormatBitsPerBlock __attribute__((availability(ios,introduced=4.0)));




extern const CFStringRef _Nonnull kCVPixelFormatBlockHorizontalAlignment __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelFormatBlockVerticalAlignment __attribute__((availability(ios,introduced=4.0)));




extern const CFStringRef _Nonnull kCVPixelFormatBlackBlock __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef _Nonnull kCVPixelFormatHorizontalSubsampling __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelFormatVerticalSubsampling __attribute__((availability(ios,introduced=4.0)));



extern const CFStringRef _Nonnull kCVPixelFormatOpenGLFormat __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelFormatOpenGLType __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelFormatOpenGLInternalFormat __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef _Nonnull kCVPixelFormatCGBitmapInfo __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef _Nonnull kCVPixelFormatQDCompatibility __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelFormatCGBitmapContextCompatibility __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelFormatCGImageCompatibility __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelFormatOpenGLCompatibility __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef _Nonnull kCVPixelFormatOpenGLESCompatibility __attribute__((availability(ios,introduced=5.0)));



typedef Boolean (*CVFillExtendedPixelsCallBack)(CVPixelBufferRef _Nonnull pixelBuffer, void * _Nullable refCon);
typedef struct {
    CFIndex version;
    CVFillExtendedPixelsCallBack _Nullable fillCallBack;
    void * _Nullable refCon;
} CVFillExtendedPixelsCallBackData;


extern const CFStringRef _Nonnull kCVPixelFormatFillExtendedPixelsCallback __attribute__((availability(ios,introduced=4.0)));


extern CFDictionaryRef __attribute__((cf_returns_retained)) _Nullable CVPixelFormatDescriptionCreateWithPixelFormatType(CFAllocatorRef _Nullable allocator, OSType pixelFormat) __attribute__((availability(ios,introduced=4.0)));


extern CFArrayRef __attribute__((cf_returns_retained)) _Nullable CVPixelFormatDescriptionArrayCreateWithAllPixelFormatTypes(CFAllocatorRef _Nullable allocator) __attribute__((availability(ios,introduced=4.0)));


extern void CVPixelFormatDescriptionRegisterDescriptionWithPixelFormatType(CFDictionaryRef _Nonnull description, OSType pixelFormat) __attribute__((availability(ios,introduced=4.0)));
# 43 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h" 2 3
# 52 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVMetalTexture.h" 1 3
# 23 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVMetalTexture.h" 3
# 1 "APPLE_DEVELOPER_DIR/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/8.0.0/include/stddef.h" 1 3 4
# 24 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVMetalTexture.h" 2 3
# 53 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVMetalTextureCache.h" 1 3
# 35 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CVMetalTextureCache.h" 3
extern const CFStringRef _Nonnull kCVMetalTextureCacheMaximumTextureAgeKey __attribute__((availability(ios,introduced=8.0)));
# 54 "APPLE_SDKROOT/System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h" 2 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImage.h" 2 3






@class CIContext, CIFilterShape, CIColor, CIFilter;

@protocol MTLTexture;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface CIImage : NSObject <NSSecureCoding, NSCopying>
{



 void *_priv;
}



typedef int CIFormat;

extern __attribute__((visibility("default"))) CIFormat kCIFormatARGB8 __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility("default"))) CIFormat kCIFormatBGRA8;
extern __attribute__((visibility("default"))) CIFormat kCIFormatRGBA8;
extern __attribute__((visibility("default"))) CIFormat kCIFormatABGR8 __attribute__((availability(ios,introduced=9_0)));

extern __attribute__((visibility("default"))) CIFormat kCIFormatRGBA16 __attribute__((availability(ios,unavailable)));
extern __attribute__((visibility("default"))) CIFormat kCIFormatRGBAf __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility("default"))) CIFormat kCIFormatRGBAh __attribute__((availability(ios,introduced=6_0)));


extern __attribute__((visibility("default"))) CIFormat kCIFormatA8 __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) CIFormat kCIFormatA16 __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) CIFormat kCIFormatAh __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) CIFormat kCIFormatAf __attribute__((availability(ios,introduced=9_0)));

extern __attribute__((visibility("default"))) CIFormat kCIFormatR8 __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) CIFormat kCIFormatR16 __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) CIFormat kCIFormatRh __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) CIFormat kCIFormatRf __attribute__((availability(ios,introduced=9_0)));

extern __attribute__((visibility("default"))) CIFormat kCIFormatRG8 __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) CIFormat kCIFormatRG16 __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) CIFormat kCIFormatRGh __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) CIFormat kCIFormatRGf __attribute__((availability(ios,introduced=9_0)));
# 72 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImage.h" 3
extern __attribute__((visibility("default"))) NSString * const kCIImageColorSpace;







extern __attribute__((visibility("default"))) NSString * const kCIImageProperties __attribute__((availability(ios,introduced=5_0)));

extern __attribute__((visibility("default"))) NSString * const kCIImageTextureTarget __attribute__((availability(ios,unavailable)));
extern __attribute__((visibility("default"))) NSString * const kCIImageTextureFormat __attribute__((availability(ios,unavailable)));



+ (CIImage *)imageWithCGImage:(CGImageRef)image;
+ (CIImage *)imageWithCGImage:(CGImageRef)image
                      options:(nullable NSDictionary<NSString *,id> *)options;


+ (CIImage *)imageWithCGLayer:(CGLayerRef)layer __attribute__((availability(ios,unavailable)));
+ (CIImage *)imageWithCGLayer:(CGLayerRef)layer
                      options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,unavailable)));





+ (CIImage *)imageWithBitmapData:(NSData *)data
                     bytesPerRow:(size_t)bytesPerRow
                            size:(CGSize)size
                          format:(CIFormat)format
                      colorSpace:(nullable CGColorSpaceRef)colorSpace;






+ (CIImage *)imageWithTexture:(unsigned int)name
                         size:(CGSize)size
                      flipped:(BOOL)flipped
                   colorSpace:(nullable CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=6_0)));






+ (CIImage *)imageWithTexture:(unsigned int)name
                         size:(CGSize)size
                      flipped:(BOOL)flipped
                      options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,unavailable)));



+ (nullable CIImage *)imageWithMTLTexture:(id<MTLTexture>)texture
                                  options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=9_0)));





+ (nullable CIImage *)imageWithContentsOfURL:(NSURL *)url;
+ (nullable CIImage *)imageWithContentsOfURL:(NSURL *)url
                                     options:(nullable NSDictionary<NSString *,id> *)options;

+ (nullable CIImage *)imageWithData:(NSData *)data;
+ (nullable CIImage *)imageWithData:(NSData *)data
                            options:(nullable NSDictionary<NSString *,id> *)options;


+ (CIImage *)imageWithCVImageBuffer:(CVImageBufferRef)imageBuffer __attribute__((availability(ios,introduced=9_0)));
+ (CIImage *)imageWithCVImageBuffer:(CVImageBufferRef)imageBuffer
                            options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=9_0)));


+ (CIImage *)imageWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer __attribute__((availability(ios,introduced=5_0)));
+ (CIImage *)imageWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer
                            options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=5_0)));
# 162 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImage.h" 3
+ (CIImage *)imageWithColor:(CIColor *)color;


+ (CIImage *)emptyImage;



- (instancetype)initWithCGImage:(CGImageRef)image;
- (instancetype)initWithCGImage:(CGImageRef)image
                        options:(nullable NSDictionary<NSString *,id> *)options;

- (instancetype)initWithCGLayer:(CGLayerRef)layer
    __attribute__((availability(ios,unavailable)));
- (instancetype)initWithCGLayer:(CGLayerRef)layer
                        options:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,unavailable)));

- (nullable instancetype)initWithData:(NSData *)data;
- (nullable instancetype)initWithData:(NSData *)data
                              options:(nullable NSDictionary<NSString *,id> *)options;

- (instancetype)initWithBitmapData:(NSData *)data
                       bytesPerRow:(size_t)bytesPerRow
                              size:(CGSize)size
                            format:(CIFormat)format
                        colorSpace:(nullable CGColorSpaceRef)colorSpace;

- (instancetype)initWithTexture:(unsigned int)name
                           size:(CGSize)size
                        flipped:(BOOL)flipped
                     colorSpace:(nullable CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=6_0)));

- (instancetype)initWithTexture:(unsigned int)name
                           size:(CGSize)size
                        flipped:(BOOL)flipped
                        options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,unavailable)));



- (nullable instancetype)initWithMTLTexture:(id<MTLTexture>)texture
                                    options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=9_0)));





- (nullable instancetype)initWithContentsOfURL:(NSURL *)url;
- (nullable instancetype)initWithContentsOfURL:(NSURL *)url
                                       options:(nullable NSDictionary<NSString *,id> *)options;
# 224 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImage.h" 3
- (instancetype)initWithCVImageBuffer:(CVImageBufferRef)imageBuffer __attribute__((availability(ios,introduced=9_0)));
- (instancetype)initWithCVImageBuffer:(CVImageBufferRef)imageBuffer
                              options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=9_0)));

- (instancetype)initWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer __attribute__((availability(ios,introduced=5_0)));
- (instancetype)initWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer
                              options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=5_0)));

- (instancetype)initWithColor:(CIColor *)color;



- (CIImage *)imageByApplyingTransform:(CGAffineTransform)matrix;






- (CIImage *)imageByApplyingOrientation:(int)orientation __attribute__((availability(ios,introduced=8_0)));





- (CGAffineTransform)imageTransformForOrientation:(int)orientation __attribute__((availability(ios,introduced=8_0)));



- (CIImage *)imageByCompositingOverImage:(CIImage *)dest __attribute__((availability(ios,introduced=8_0)));


- (CIImage *)imageByCroppingToRect:(CGRect)rect;


- (CIImage *)imageByClampingToExtent __attribute__((availability(ios,introduced=8_0)));



- (CIImage *)imageByClampingToRect:(CGRect)rect __attribute__((availability(ios,introduced=10_0)));





- (CIImage *)imageByApplyingFilter:(NSString *)filterName
               withInputParameters:(nullable NSDictionary<NSString *,id> *)params __attribute__((availability(ios,introduced=8_0)));




- (nullable CIImage *)imageByColorMatchingColorSpaceToWorkingSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)))
  __attribute__((swift_name("matchedToWorkingSpace(from:)")));



- (nullable CIImage *)imageByColorMatchingWorkingSpaceToColorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)))
  __attribute__((swift_name("matchedFromWorkingSpace(to:)")));


- (CIImage *)imageByPremultiplyingAlpha __attribute__((availability(ios,introduced=10_0)));


- (CIImage *)imageByUnpremultiplyingAlpha __attribute__((availability(ios,introduced=10_0)));


- (CIImage *)imageBySettingAlphaOneInExtent:(CGRect)extent __attribute__((availability(ios,introduced=10_0)));


- (CIImage *)imageByApplyingGaussianBlurWithSigma:(double)sigma __attribute__((availability(ios,introduced=10_0)));


- (CIImage *)imageBySettingProperties:(NSDictionary*)properties __attribute__((availability(ios,introduced=10_0)));



@property (nonatomic, readonly) CGRect extent;




@property (atomic, readonly) NSDictionary<NSString *,id> *properties __attribute__((availability(ios,introduced=5_0)));


@property (atomic, readonly) CIFilterShape *definition __attribute__((availability(ios,unavailable)));



@property (atomic, readonly, nullable) NSURL *url __attribute__((availability(ios,introduced=9_0)));



@property (atomic, readonly, nullable) CGColorSpaceRef colorSpace __attribute__((availability(ios,introduced=9_0))) __attribute__((cf_returns_not_retained));




@property (nonatomic, readonly, nullable) CVPixelBufferRef pixelBuffer __attribute__((availability(ios,introduced=10_0)));



@property (nonatomic, readonly, nullable) CGImageRef CGImage __attribute__((availability(ios,introduced=10_0)));



- (CGRect)regionOfInterestForImage:(CIImage *)image
                            inRect:(CGRect)rect __attribute__((availability(ios,introduced=6_0)));

@end


@interface CIImage (AutoAdjustment)
# 346 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImage.h" 3
extern __attribute__((visibility("default"))) NSString * const kCIImageAutoAdjustEnhance __attribute__((availability(ios,introduced=5_0)));




extern __attribute__((visibility("default"))) NSString * const kCIImageAutoAdjustRedEye __attribute__((availability(ios,introduced=5_0)));





extern __attribute__((visibility("default"))) NSString * const kCIImageAutoAdjustFeatures __attribute__((availability(ios,introduced=5_0)));




extern __attribute__((visibility("default"))) NSString * const kCIImageAutoAdjustCrop __attribute__((availability(ios,introduced=8_0)));




extern __attribute__((visibility("default"))) NSString * const kCIImageAutoAdjustLevel __attribute__((availability(ios,introduced=8_0)));
# 379 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImage.h" 3
- (NSArray<CIFilter *> *)autoAdjustmentFilters __attribute__((availability(ios,introduced=5_0)));
- (NSArray<CIFilter *> *)autoAdjustmentFiltersWithOptions:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,introduced=5_0)));

@end
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
@class CIFilter;

@protocol MTLDevice, MTLTexture, MTLCommandBuffer;




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface CIContext : NSObject
{
    void *_priv;
}





extern __attribute__((visibility("default"))) NSString * const kCIContextOutputColorSpace;



extern __attribute__((visibility("default"))) NSString * const kCIContextWorkingColorSpace;






extern __attribute__((visibility("default"))) NSString * const kCIContextWorkingFormat __attribute__((availability(ios,introduced=8_0)));





extern __attribute__((visibility("default"))) NSString * const kCIContextHighQualityDownsample __attribute__((availability(ios,introduced=9_0)));



extern __attribute__((visibility("default"))) NSString * const kCIContextOutputPremultiplied __attribute__((availability(ios,introduced=7_0)));




extern __attribute__((visibility("default"))) NSString * const kCIContextCacheIntermediates __attribute__((availability(ios,introduced=10_0)));



extern __attribute__((visibility("default"))) NSString * const kCIContextUseSoftwareRenderer;



extern __attribute__((visibility("default"))) NSString * const kCIContextPriorityRequestLow __attribute__((availability(ios,introduced=8_0)));
# 106 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
+ (CIContext *)contextWithCGContext:(CGContextRef)cgctx
                            options:(nullable NSDictionary<NSString*,id> *)options
    __attribute__((availability(ios,introduced=9_0)));
# 122 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
+ (CIContext *)contextWithOptions:(nullable NSDictionary<NSString*,id> *)options
    __attribute__((availability(ios,introduced=5_0)));

+ (CIContext *)context __attribute__((availability(ios,introduced=5_0)));

- (instancetype)initWithOptions:(nullable NSDictionary<NSString*,id> *)options
__attribute__((availability(ios,introduced=5_0)));

- (instancetype)init __attribute__((availability(ios,introduced=5_0)));
# 143 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
+ (CIContext *)contextWithEAGLContext:(EAGLContext *)eaglContext
    __attribute__((availability(ios,introduced=5_0)));

+ (CIContext *)contextWithEAGLContext:(EAGLContext *)eaglContext
                              options:(nullable NSDictionary<NSString*,id> *)options
    __attribute__((availability(ios,introduced=5_0)));
# 157 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
+ (CIContext *)contextWithMTLDevice:(id<MTLDevice>)device __attribute__((availability(ios,introduced=9_0)));

+ (CIContext *)contextWithMTLDevice:(id<MTLDevice>)device
                            options:(nullable NSDictionary<NSString*,id> *)options
    __attribute__((availability(ios,introduced=9_0)));







@property (nullable, nonatomic, readonly) CGColorSpaceRef workingColorSpace __attribute__((availability(ios,introduced=9_0)));





@property (nonatomic, readonly) CIFormat workingFormat __attribute__((availability(ios,introduced=9_0)));






- (void)drawImage:(CIImage *)image
          atPoint:(CGPoint)atPoint
         fromRect:(CGRect)fromRect __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" )));



- (void)drawImage:(CIImage *)image
           inRect:(CGRect)inRect
         fromRect:(CGRect)fromRect;






- (nullable CGImageRef)createCGImage:(CIImage *)image
                            fromRect:(CGRect)fromRect
__attribute__((cf_returns_retained));
# 213 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
- (nullable CGImageRef)createCGImage:(CIImage *)image
                            fromRect:(CGRect)fromRect
                              format:(CIFormat)format
                          colorSpace:(nullable CGColorSpaceRef)colorSpace
__attribute__((cf_returns_retained));
# 236 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
- (nullable CGImageRef)createCGImage:(CIImage *)image
                            fromRect:(CGRect)fromRect
                              format:(CIFormat)format
                          colorSpace:(nullable CGColorSpaceRef)colorSpace
                            deferred:(BOOL)deferred
__attribute__((cf_returns_retained)) __attribute__((availability(ios,introduced=10_0)));
# 256 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
- (nullable CGLayerRef)createCGLayerWithSize:(CGSize)size
                                        info:(nullable CFDictionaryRef)info
__attribute__((cf_returns_retained)) __attribute__((availability(ios,unavailable)));
# 271 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
- (void)render:(CIImage *)image
   toBitmap:(void *)data
   rowBytes:(ptrdiff_t)rowBytes
  bounds:(CGRect)bounds
  format:(CIFormat)format
 colorSpace:(nullable CGColorSpaceRef)colorSpace;
# 297 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
- (void)render:(CIImage *)image
toCVPixelBuffer:(CVPixelBufferRef)buffer __attribute__((availability(ios,introduced=5_0)));
# 309 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
- (void)render:(CIImage *)image
toCVPixelBuffer:(CVPixelBufferRef)buffer
        bounds:(CGRect)bounds
    colorSpace:(nullable CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=5_0)));




- (void)render:(CIImage *)image
  toMTLTexture:(id<MTLTexture>)texture
 commandBuffer:(nullable id<MTLCommandBuffer>)commandBuffer
        bounds:(CGRect)bounds
    colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=9_0)));
# 330 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
- (void)reclaimResources __attribute__((availability(ios,unavailable)));



- (void)clearCaches __attribute__((availability(ios,introduced=10_0)));



- (CGSize)inputImageMaximumSize __attribute__((availability(ios,introduced=5_0)));



- (CGSize)outputImageMaximumSize __attribute__((availability(ios,introduced=5_0)));

@end


@interface CIContext (OfflineGPUSupport)




+(unsigned int)offlineGPUCount __attribute__((availability(ios,unavailable)));
# 377 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIContext.h" 3
@end

@interface CIContext (ImageRepresentation)





- (nullable NSData*) TIFFRepresentationOfImage:(CIImage*)image
                                        format:(CIFormat)format
                                    colorSpace:(CGColorSpaceRef)colorSpace
                                       options:(NSDictionary*)options __attribute__((availability(ios,introduced=10_0)));




- (nullable NSData*) JPEGRepresentationOfImage:(CIImage*)image
                                    colorSpace:(CGColorSpaceRef)colorSpace
                                       options:(NSDictionary*)options __attribute__((availability(ios,introduced=10_0)));





- (BOOL) writeTIFFRepresentationOfImage:(CIImage*)image
                                  toURL:(NSURL*)url
                                 format:(CIFormat)format
                             colorSpace:(CGColorSpaceRef)colorSpace
                                options:(NSDictionary*)options
                                  error:(NSError **)errorPtr __attribute__((availability(ios,introduced=10_0)));




- (BOOL) writeJPEGRepresentationOfImage:(CIImage*)image
                                  toURL:(NSURL*)url
                             colorSpace:(CGColorSpaceRef)colorSpace
                                options:(NSDictionary*)options
                                  error:(NSError **)errorPtr __attribute__((availability(ios,introduced=10_0)));


@end
# 17 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFilter.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFilter.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFilterConstructor.h" 1 3






@class NSString;
@class CIFilter;





@protocol CIFilterConstructor
- (nullable CIFilter *)filterWithName:(NSString *)name;
@end
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFilter.h" 2 3






extern __attribute__((visibility("default"))) NSString * const kCIAttributeFilterName;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeFilterDisplayName;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeDescription __attribute__((availability(ios,introduced=9_0)));


extern __attribute__((visibility("default"))) NSString * const kCIAttributeFilterAvailable_Mac __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString * const kCIAttributeFilterAvailable_iOS __attribute__((availability(ios,introduced=9_0)));


extern __attribute__((visibility("default"))) NSString * const kCIAttributeReferenceDocumentation __attribute__((availability(ios,introduced=9_0)));


extern __attribute__((visibility("default"))) NSString * const kCIAttributeFilterCategories;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeClass;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeType;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeMin;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeMax;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeSliderMin;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeSliderMax;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeDefault;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeIdentity;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeName;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeDisplayName;




extern __attribute__((visibility("default"))) NSString * const kCIUIParameterSet __attribute__((availability(ios,introduced=9_0)));


extern __attribute__((visibility("default"))) NSString * const kCIUISetBasic __attribute__((availability(ios,introduced=9_0)));


extern __attribute__((visibility("default"))) NSString * const kCIUISetIntermediate __attribute__((availability(ios,introduced=9_0)));


extern __attribute__((visibility("default"))) NSString * const kCIUISetAdvanced __attribute__((availability(ios,introduced=9_0)));


extern __attribute__((visibility("default"))) NSString * const kCIUISetDevelopment __attribute__((availability(ios,introduced=9_0)));



extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeTime;
extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeScalar;
extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeDistance;
extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeAngle;
extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeBoolean;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeInteger __attribute__((availability(ios,introduced=5_0)));


extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeCount __attribute__((availability(ios,introduced=5_0)));


extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypePosition;
extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeOffset;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypePosition3;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeRectangle;


extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeOpaqueColor __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeColor __attribute__((availability(ios,introduced=5_0)));


extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeGradient __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeImage __attribute__((availability(ios,introduced=5_0)));


extern __attribute__((visibility("default"))) NSString * const kCIAttributeTypeTransform __attribute__((availability(ios,introduced=5_0)));



extern __attribute__((visibility("default"))) NSString * const kCICategoryDistortionEffect;
extern __attribute__((visibility("default"))) NSString * const kCICategoryGeometryAdjustment;
extern __attribute__((visibility("default"))) NSString * const kCICategoryCompositeOperation;
extern __attribute__((visibility("default"))) NSString * const kCICategoryHalftoneEffect;
extern __attribute__((visibility("default"))) NSString * const kCICategoryColorAdjustment;
extern __attribute__((visibility("default"))) NSString * const kCICategoryColorEffect;
extern __attribute__((visibility("default"))) NSString * const kCICategoryTransition;
extern __attribute__((visibility("default"))) NSString * const kCICategoryTileEffect;
extern __attribute__((visibility("default"))) NSString * const kCICategoryGenerator;
extern __attribute__((visibility("default"))) NSString * const kCICategoryReduction __attribute__((availability(ios,introduced=5_0)));
extern __attribute__((visibility("default"))) NSString * const kCICategoryGradient;
extern __attribute__((visibility("default"))) NSString * const kCICategoryStylize;
extern __attribute__((visibility("default"))) NSString * const kCICategorySharpen;
extern __attribute__((visibility("default"))) NSString * const kCICategoryBlur;
extern __attribute__((visibility("default"))) NSString * const kCICategoryVideo;
extern __attribute__((visibility("default"))) NSString * const kCICategoryStillImage;
extern __attribute__((visibility("default"))) NSString * const kCICategoryInterlaced;
extern __attribute__((visibility("default"))) NSString * const kCICategoryNonSquarePixels;
extern __attribute__((visibility("default"))) NSString * const kCICategoryHighDynamicRange;
extern __attribute__((visibility("default"))) NSString * const kCICategoryBuiltIn;
extern __attribute__((visibility("default"))) NSString * const kCICategoryFilterGenerator __attribute__((availability(ios,introduced=9_0)));




extern __attribute__((visibility("default"))) NSString * const kCIApplyOptionExtent __attribute__((availability(ios,unavailable)));
extern __attribute__((visibility("default"))) NSString * const kCIApplyOptionDefinition __attribute__((availability(ios,unavailable)));
extern __attribute__((visibility("default"))) NSString * const kCIApplyOptionUserInfo __attribute__((availability(ios,unavailable)));




extern __attribute__((visibility("default"))) NSString * const kCIApplyOptionColorSpace __attribute__((availability(ios,unavailable)));




extern __attribute__((visibility("default"))) NSString * const kCIOutputImageKey __attribute__((availability(ios,introduced=5_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputBackgroundImageKey __attribute__((availability(ios,introduced=5_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputImageKey __attribute__((availability(ios,introduced=5_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputTimeKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputTransformKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputScaleKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputAspectRatioKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputCenterKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputRadiusKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputAngleKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputRefractionKey __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputWidthKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputSharpnessKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputIntensityKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputEVKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputSaturationKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputColorKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputBrightnessKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputContrastKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputBiasKey __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputWeightsKey __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputGradientImageKey __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputMaskImageKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputShadingImageKey __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputTargetImageKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputExtentKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility("default"))) NSString * const kCIInputVersionKey __attribute__((availability(ios,introduced=6_0)));


@class CIKernel, CIImage;
@protocol CIFilterConstructor;





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface CIFilter : NSObject <NSSecureCoding, NSCopying>
{
    void *_priv[8];
}

@property (readonly, nonatomic, nullable) CIImage *outputImage __attribute__((availability(ios,introduced=5_0)));






@property (nonatomic, copy) NSString *name;
- (NSString *)name __attribute__((availability(ios,introduced=5_0)));
- (void)setName:(NSString *)aString __attribute__((availability(ios,introduced=10_0)));




@property (getter=isEnabled) BOOL enabled __attribute__((availability(ios,unavailable)));



@property (nonatomic, readonly) NSArray<NSString *> *inputKeys;


@property (nonatomic, readonly) NSArray<NSString *> *outputKeys;


- (void)setDefaults;


@property (nonatomic, readonly) NSDictionary<NSString *,id> *attributes;
# 238 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFilter.h" 3
- (nullable CIImage *)apply:(CIKernel *)k
      arguments:(nullable NSArray *)args
           options:(nullable NSDictionary<NSString *,id> *)dict __attribute__((availability(ios,unavailable)));


- (nullable CIImage *)apply:(CIKernel *)k, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios,unavailable))) __attribute__((availability(swift, unavailable, message="")));

@end




@interface CIFilter (CIFilterRegistry)




+ (nullable CIFilter *) filterWithName:(NSString *) name;





+ (nullable CIFilter *)filterWithName:(NSString *)name
                        keysAndValues:key0, ... __attribute__((sentinel(0,1))) __attribute__((availability(swift, unavailable, message="")));





+ (nullable CIFilter *)filterWithName:(NSString *)name
                  withInputParameters:(nullable NSDictionary<NSString *,id> *)params __attribute__((availability(ios,introduced=8_0)));


+ (NSArray<NSString *> *)filterNamesInCategory:(nullable NSString *)category;


+ (NSArray<NSString *> *)filterNamesInCategories:(nullable NSArray<NSString *> *)categories;
# 285 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFilter.h" 3
+ (void)registerFilterName:(NSString *)name
               constructor:(id<CIFilterConstructor>)anObject
           classAttributes:(NSDictionary<NSString *,id> *)attributes __attribute__((availability(ios,introduced=9_0)));


+ (nullable NSString *)localizedNameForFilterName:(NSString *)filterName __attribute__((availability(ios,introduced=9_0)));


+ (NSString *)localizedNameForCategory:(NSString *)category __attribute__((availability(ios,introduced=9_0)));


+ (nullable NSString *)localizedDescriptionForFilterName:(NSString *)filterName __attribute__((availability(ios,introduced=9_0)));




+ (nullable NSURL *)localizedReferenceDocumentationForFilterName:(NSString *)filterName __attribute__((availability(ios,introduced=9_0)));

@end



@interface CIFilter (CIFilterXMPSerialization)
# 318 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFilter.h" 3
+ (nullable NSData*)serializedXMPFromFilters:(NSArray<CIFilter *> *)filters
                            inputImageExtent:(CGRect)extent
    __attribute__((availability(ios,introduced=6_0)));
# 329 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFilter.h" 3
+ (NSArray<CIFilter *> *)filterArrayFromSerializedXMP:(NSData *)xmpData
                                     inputImageExtent:(CGRect)extent
                                                error:(NSError **)outError
    __attribute__((availability(ios,introduced=6_0)));

@end
# 18 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIKernel.h" 1 3
# 21 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIKernel.h" 3
typedef CGRect (^CIKernelROICallback)(int index, CGRect destRect);


@class CIImage;
# 41 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIKernel.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface CIKernel : NSObject
{
    void *_priv;
}
# 54 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIKernel.h" 3
+ (nullable NSArray<CIKernel *> *)kernelsWithString:(NSString *)string __attribute__((availability(ios,introduced=8_0)));






+ (nullable instancetype)kernelWithString:(NSString *)string __attribute__((availability(ios,introduced=8_0)));


@property (atomic, readonly) NSString *name __attribute__((availability(ios,introduced=8_0)));
# 84 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIKernel.h" 3
- (void)setROISelector:(SEL)method __attribute__((availability(ios,introduced=9_0)));
# 99 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIKernel.h" 3
- (nullable CIImage *)applyWithExtent:(CGRect)extent
                          roiCallback:(CIKernelROICallback)callback
                            arguments:(nullable NSArray<id> *)args __attribute__((availability(ios,introduced=8_0)));
@end
# 119 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIKernel.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface CIColorKernel : CIKernel
{
}






+ (nullable instancetype)kernelWithString:(NSString *)string;
# 140 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIKernel.h" 3
- (nullable CIImage *)applyWithExtent:(CGRect)extent
                            arguments:(nullable NSArray<id> *)args;
@end
# 157 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIKernel.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface CIWarpKernel : CIKernel
{
}






+ (nullable instancetype)kernelWithString:(NSString *)string;
# 185 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIKernel.h" 3
- (nullable CIImage *)applyWithExtent:(CGRect)extent
                          roiCallback:(CIKernelROICallback)callback
                           inputImage:(CIImage*)image
                            arguments:(nullable NSArray<id> *)args;
@end
# 19 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIDetector.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIDetector.h" 3
@class CIImage;
@class CIContext;
@class CIFeature;





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface CIDetector : NSObject {}
# 36 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIDetector.h" 3
+ (nullable CIDetector *)detectorOfType:(NSString*)type
                                context:(nullable CIContext *)context
                                options:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,introduced=5_0)));
# 49 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIDetector.h" 3
- (NSArray<CIFeature *> *)featuresInImage:(CIImage *)image
    __attribute__((availability(ios,introduced=5_0)));




- (NSArray<CIFeature *> *)featuresInImage:(CIImage *)image
                                  options:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,introduced=5_0)));

@end





extern __attribute__((visibility("default"))) NSString* const CIDetectorTypeFace __attribute__((availability(ios,introduced=5_0)));


extern __attribute__((visibility("default"))) NSString* const CIDetectorTypeRectangle __attribute__((availability(ios,introduced=8_0)));


extern __attribute__((visibility("default"))) NSString* const CIDetectorTypeQRCode __attribute__((availability(ios,introduced=8_0)));



extern __attribute__((visibility("default"))) NSString* const CIDetectorTypeText __attribute__((availability(ios,introduced=9_0)));





extern __attribute__((visibility("default"))) NSString* const CIDetectorAccuracy __attribute__((availability(ios,introduced=5_0)));





extern __attribute__((visibility("default"))) NSString* const CIDetectorAccuracyLow __attribute__((availability(ios,introduced=5_0)));
extern __attribute__((visibility("default"))) NSString* const CIDetectorAccuracyHigh __attribute__((availability(ios,introduced=5_0)));


extern __attribute__((visibility("default"))) NSString* const CIDetectorTracking __attribute__((availability(ios,introduced=6_0)));
# 108 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIDetector.h" 3
extern __attribute__((visibility("default"))) NSString* const CIDetectorMinFeatureSize __attribute__((availability(ios,introduced=6_0)));





extern __attribute__((visibility("default"))) NSString* const CIDetectorMaxFeatureCount __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString* const CIDetectorNumberOfAngles __attribute__((availability(ios,introduced=9_0)));







extern __attribute__((visibility("default"))) NSString *const CIDetectorImageOrientation __attribute__((availability(ios,introduced=5_0)));


extern __attribute__((visibility("default"))) NSString *const CIDetectorEyeBlink __attribute__((availability(ios,introduced=7_0)));



extern __attribute__((visibility("default"))) NSString *const CIDetectorSmile __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility("default"))) NSString* const CIDetectorFocalLength __attribute__((availability(ios,introduced=8_0)));


extern __attribute__((visibility("default"))) NSString* const CIDetectorAspectRatio __attribute__((availability(ios,introduced=8_0)));



extern __attribute__((visibility("default"))) NSString* const CIDetectorReturnSubFeatures __attribute__((availability(ios,introduced=9.0)));
# 20 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFeature.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFeature.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface CIFeature : NSObject {}


@property (readonly, retain) NSString *type;

@property (readonly, assign) CGRect bounds;

@end



extern __attribute__((visibility("default"))) NSString* const CIFeatureTypeFace;

extern __attribute__((visibility("default"))) NSString* const CIFeatureTypeRectangle;

extern __attribute__((visibility("default"))) NSString* const CIFeatureTypeQRCode;

extern __attribute__((visibility("default"))) NSString* const CIFeatureTypeText;




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface CIFaceFeature : CIFeature
{
 CGRect bounds;
 BOOL hasLeftEyePosition;
 CGPoint leftEyePosition;
 BOOL hasRightEyePosition;
 CGPoint rightEyePosition;
 BOOL hasMouthPosition;
 CGPoint mouthPosition;


 BOOL hasTrackingID;
 int trackingID;
 BOOL hasTrackingFrameCount;
 int trackingFrameCount;

 BOOL hasFaceAngle;
 float faceAngle;

 BOOL hasSmile;
 BOOL leftEyeClosed;
 BOOL rightEyeClosed;
}







@property (readonly, assign) CGRect bounds;
@property (readonly, assign) BOOL hasLeftEyePosition;
@property (readonly, assign) CGPoint leftEyePosition;
@property (readonly, assign) BOOL hasRightEyePosition;
@property (readonly, assign) CGPoint rightEyePosition;
@property (readonly, assign) BOOL hasMouthPosition;
@property (readonly, assign) CGPoint mouthPosition;

@property (readonly, assign) BOOL hasTrackingID;
@property (readonly, assign) int trackingID;
@property (readonly, assign) BOOL hasTrackingFrameCount;
@property (readonly, assign) int trackingFrameCount;

@property (readonly, assign) BOOL hasFaceAngle;
@property (readonly, assign) float faceAngle;

@property (readonly, assign) BOOL hasSmile;
@property (readonly, assign) BOOL leftEyeClosed;
@property (readonly, assign) BOOL rightEyeClosed;

@end




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface CIRectangleFeature : CIFeature
{
    CGRect bounds;
    CGPoint topLeft;
    CGPoint topRight;
    CGPoint bottomLeft;
    CGPoint bottomRight;
}

@property (readonly) CGRect bounds;
@property (readonly) CGPoint topLeft;
@property (readonly) CGPoint topRight;
@property (readonly) CGPoint bottomLeft;
@property (readonly) CGPoint bottomRight;

@end




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
@interface CIQRCodeFeature : CIFeature
{
    CGRect bounds;
    CGPoint topLeft;
    CGPoint topRight;
    CGPoint bottomLeft;
    CGPoint bottomRight;
    NSString* messageString;
}

@property (readonly) CGRect bounds;
@property (readonly) CGPoint topLeft;
@property (readonly) CGPoint topRight;
@property (readonly) CGPoint bottomLeft;
@property (readonly) CGPoint bottomRight;

@property (nullable, readonly) NSString* messageString;





@end





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface CITextFeature : CIFeature
{
}

@property (readonly) CGRect bounds;
@property (readonly) CGPoint topLeft;
@property (readonly) CGPoint topRight;
@property (readonly) CGPoint bottomLeft;
@property (readonly) CGPoint bottomRight;

@property (nullable, readonly) NSArray *subFeatures;





@end
# 21 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProvider.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProvider.h" 3
@interface CIImage (CIImageProvider)






+ (CIImage *)imageWithImageProvider:(id)p
          size:(size_t)width
                                   :(size_t)height
        format:(CIFormat)f
       colorSpace:(nullable CGColorSpaceRef)cs
                            options:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,introduced=9_0)));

- (instancetype)initWithImageProvider:(id)p
                                 size:(size_t)width
                                     :(size_t)height
                               format:(CIFormat)f
                           colorSpace:(nullable CGColorSpaceRef)cs
                              options:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,introduced=9_0)));

@end


@interface NSObject (CIImageProvider)
# 55 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProvider.h" 3
- (void)provideImageData:(void *)data
    bytesPerRow:(size_t)rowbytes
      origin:(size_t)x
                        :(size_t)y
     size:(size_t)width
                        :(size_t)height
    userInfo:(nullable id)info;

@end
# 77 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProvider.h" 3
extern __attribute__((visibility("default"))) NSString * const kCIImageProviderTileSize __attribute__((availability(ios,introduced=9_0)));




extern __attribute__((visibility("default"))) NSString * const kCIImageProviderUserInfo __attribute__((availability(ios,introduced=9_0)));
# 22 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProcessor.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProcessor.h" 3
@protocol MTLTexture, MTLCommandBuffer;

@protocol CIImageProcessorInput;
@protocol CIImageProcessorOutput;






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))
@interface CIImageProcessorKernel : NSObject
# 40 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProcessor.h" 3
+ (BOOL)processWithInputs:(nullable NSArray<id<CIImageProcessorInput>> *)inputs
                arguments:(nullable NSDictionary<NSString*,id> *)arguments
                   output:(id <CIImageProcessorOutput>)output
                    error:(NSError **)error;
# 53 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProcessor.h" 3
+ (CGRect)roiForInput:(int)input
            arguments:(nullable NSDictionary<NSString*,id> *)arguments
           outputRect:(CGRect)outputRect;
# 67 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProcessor.h" 3
+ (CIFormat)formatForInputAtIndex:(int)input;
# 80 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProcessor.h" 3
@property (class, readonly) CIFormat outputFormat;
# 92 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProcessor.h" 3
@property (class, readonly) _Bool synchronizeInputs;
# 110 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProcessor.h" 3
+ (nullable CIImage *)applyWithExtent:(CGRect)extent
                               inputs:(nullable NSArray<CIImage*> *)inputs
                            arguments:(nullable NSDictionary<NSString*,id> *)args
                                error:(NSError **)error;
@end


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))
@protocol CIImageProcessorInput



@property (nonatomic, readonly) CGRect region;



@property (nonatomic, readonly) size_t bytesPerRow;


@property (nonatomic, readonly) CIFormat format;



@property (readonly, nonatomic) const void *baseAddress __attribute__((objc_returns_inner_pointer));
# 144 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProcessor.h" 3
@property (nonatomic, readonly, nullable) CVPixelBufferRef pixelBuffer;




@property (nonatomic, readonly, nullable) id<MTLTexture> metalTexture;

@end


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))
@protocol CIImageProcessorOutput


@property (nonatomic, readonly) CGRect region;



@property (nonatomic, readonly) size_t bytesPerRow;


@property (nonatomic, readonly) CIFormat format;


@property (readonly, nonatomic) void *baseAddress __attribute__((objc_returns_inner_pointer));
# 177 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageProcessor.h" 3
@property (nonatomic, readonly, nullable) CVPixelBufferRef pixelBuffer;



@property (nonatomic, readonly, nullable) id<MTLTexture> metalTexture;


@property (nonatomic, readonly, nullable) id<MTLCommandBuffer> metalCommandBuffer;

@end
# 23 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageAccumulator.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageAccumulator.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface CIImageAccumulator : NSObject
{
    void *_state;
}
# 24 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageAccumulator.h" 3
+ (nullable instancetype)imageAccumulatorWithExtent:(CGRect)extent
                                             format:(CIFormat)format;

+ (nullable instancetype)imageAccumulatorWithExtent:(CGRect)extent
                                             format:(CIFormat)format
                                         colorSpace:(CGColorSpaceRef)colorSpace
__attribute__((availability(ios,introduced=9_0)));

- (nullable instancetype)initWithExtent:(CGRect)extent
                                 format:(CIFormat)format;

- (nullable instancetype)initWithExtent:(CGRect)extent
                                 format:(CIFormat)format
                             colorSpace:(CGColorSpaceRef)colorSpace
__attribute__((availability(ios,introduced=9_0)));
# 58 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIImageAccumulator.h" 3
@property (readonly) CGRect extent;


@property (readonly) CIFormat format;




- (CIImage *)image;


- (void)setImage:(CIImage *)image;




- (void)setImage:(CIImage *)image dirtyRect:(CGRect)dirtyRect;


- (void)clear;

@end
# 24 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFilterShape.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFilterShape.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface CIFilterShape : NSObject <NSCopying>
{
    @public
    uint32_t _pad;
    void *_priv;
}


+ (instancetype)shapeWithRect:(CGRect)r;



- (instancetype)initWithRect:(CGRect)r;
# 35 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIFilterShape.h" 3
- (CIFilterShape *)transformBy:(CGAffineTransform)m interior:(BOOL)flag;


- (CIFilterShape *)insetByX:(int)dx Y:(int)dy;


- (CIFilterShape *)unionWith:(CIFilterShape *)s2;



- (CIFilterShape *)unionWithRect:(CGRect)r;


- (CIFilterShape *)intersectWith:(CIFilterShape *)s2;



- (CIFilterShape *)intersectWithRect:(CGRect)r;



@property (readonly) CGRect extent;

@end
# 26 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CISampler.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CISampler.h" 3
@class CIFilterShape, CIImage;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface CISampler : NSObject <NSCopying>
{
    void *_priv;
}


+ (instancetype)samplerWithImage:(CIImage *)im;
# 39 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CISampler.h" 3
+ (instancetype)samplerWithImage:(CIImage *)im keysAndValues:key0, ... __attribute__((sentinel(0,1)));
+ (instancetype)samplerWithImage:(CIImage *)im options:(nullable NSDictionary *)dict;



- (instancetype)initWithImage:(CIImage *)im;
- (instancetype)initWithImage:(CIImage *)im keysAndValues:key0, ...;
- (instancetype)initWithImage:(CIImage *)im options:(nullable NSDictionary *)dict __attribute__((objc_designated_initializer));






@property (readonly) CIFilterShape * definition;




@property (readonly) CGRect extent;

@end




extern __attribute__((visibility("default"))) NSString *const kCISamplerAffineMatrix __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString *const kCISamplerWrapMode __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString *const kCISamplerFilterMode __attribute__((availability(ios,introduced=9_0)));

extern __attribute__((visibility("default"))) NSString *const kCISamplerWrapBlack __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString *const kCISamplerWrapClamp __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString *const kCISamplerFilterNearest __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility("default"))) NSString *const kCISamplerFilterLinear __attribute__((availability(ios,introduced=9_0)));




extern __attribute__((visibility("default"))) NSString *const kCISamplerColorSpace __attribute__((availability(ios,introduced=9_0)));
# 27 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIRAWFilter.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIRAWFilter.h" 3
@class NSURL;
@class NSDictionary;
@class NSData;



@interface CIFilter (CIRAWFilter)


+ (CIFilter *)filterWithImageURL:(NSURL *)url options:(NSDictionary *)options __attribute__((availability(ios,introduced=10_0)));




+ (CIFilter *)filterWithImageData:(NSData *)data options:(NSDictionary *)options __attribute__((availability(ios,introduced=10_0)));






+ (CIFilter *)filterWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer properties:(NSDictionary *)properties options:(NSDictionary *)options __attribute__((availability(ios,introduced=10_0)));



extern __attribute__((visibility("default"))) NSString *const kCIInputAllowDraftModeKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputDecoderVersionKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCISupportedDecoderVersionsKey __attribute__((availability(ios,introduced=10_0)));
# 52 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CIRAWFilter.h" 3
extern __attribute__((visibility("default"))) NSString *const kCIInputBaselineExposureKey __attribute__((availability(ios,introduced=10_0)));



extern __attribute__((visibility("default"))) NSString *const kCIInputBoostKey __attribute__((availability(ios,introduced=10_0)));



extern __attribute__((visibility("default"))) NSString *const kCIInputBoostShadowAmountKey __attribute__((availability(ios,introduced=10_0)));



extern __attribute__((visibility("default"))) NSString *const kCIInputDisableGamutMapKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputNeutralChromaticityXKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputNeutralChromaticityYKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputNeutralTemperatureKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputNeutralTintKey __attribute__((availability(ios,introduced=10_0)));



extern __attribute__((visibility("default"))) NSString *const kCIInputNeutralLocationKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputScaleFactorKey __attribute__((availability(ios,introduced=10_0)));





extern __attribute__((visibility("default"))) NSString *const kCIInputIgnoreImageOrientationKey __attribute__((availability(ios,introduced=10_0)));




extern __attribute__((visibility("default"))) NSString *const kCIInputImageOrientationKey __attribute__((availability(ios,introduced=10_0)));




extern __attribute__((visibility("default"))) NSString *const kCIInputEnableSharpeningKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputEnableChromaticNoiseTrackingKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputNoiseReductionAmountKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputEnableVendorLensCorrectionKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputLuminanceNoiseReductionAmountKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputColorNoiseReductionAmountKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputNoiseReductionSharpnessAmountKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputNoiseReductionContrastAmountKey __attribute__((availability(ios,introduced=10_0)));


extern __attribute__((visibility("default"))) NSString *const kCIInputNoiseReductionDetailAmountKey __attribute__((availability(ios,introduced=10_0)));




extern __attribute__((visibility("default"))) NSString *const kCIInputLinearSpaceFilter __attribute__((availability(ios,introduced=10_0)));



extern __attribute__((visibility("default"))) NSString *const kCIOutputNativeSizeKey __attribute__((availability(ios,introduced=10_0)));




extern __attribute__((visibility("default"))) NSString *const kCIActiveKeys __attribute__((availability(ios,introduced=10_0)));

@end
# 28 "APPLE_SDKROOT/System/Library/Frameworks/CoreImage.framework/Headers/CoreImage.h" 2 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIColor.h" 2 3





@class UIImage;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIColor : NSObject <NSSecureCoding, NSCopying>


+ (UIColor *)colorWithWhite:(CGFloat)white alpha:(CGFloat)alpha;
+ (UIColor *)colorWithHue:(CGFloat)hue saturation:(CGFloat)saturation brightness:(CGFloat)brightness alpha:(CGFloat)alpha;
+ (UIColor *)colorWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha;
+ (UIColor *)colorWithDisplayP3Red:(CGFloat)displayP3Red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha __attribute__((availability(ios,introduced=10_0)));
+ (UIColor *)colorWithCGColor:(CGColorRef)cgColor;
+ (UIColor *)colorWithPatternImage:(UIImage *)image;

+ (UIColor *)colorWithCIColor:(CIColor *)ciColor __attribute__((availability(ios,introduced=5_0)));



- (UIColor *)initWithWhite:(CGFloat)white alpha:(CGFloat)alpha;
- (UIColor *)initWithHue:(CGFloat)hue saturation:(CGFloat)saturation brightness:(CGFloat)brightness alpha:(CGFloat)alpha;
- (UIColor *)initWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha;
- (UIColor *)initWithDisplayP3Red:(CGFloat)displayP3Red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha __attribute__((availability(ios,introduced=10_0)));
- (UIColor *)initWithCGColor:(CGColorRef)cgColor;
- (UIColor *)initWithPatternImage:(UIImage*)image;

- (UIColor *)initWithCIColor:(CIColor *)ciColor __attribute__((availability(ios,introduced=5_0)));





@property(class, nonatomic, readonly) UIColor *blackColor;
@property(class, nonatomic, readonly) UIColor *darkGrayColor;
@property(class, nonatomic, readonly) UIColor *lightGrayColor;
@property(class, nonatomic, readonly) UIColor *whiteColor;
@property(class, nonatomic, readonly) UIColor *grayColor;
@property(class, nonatomic, readonly) UIColor *redColor;
@property(class, nonatomic, readonly) UIColor *greenColor;
@property(class, nonatomic, readonly) UIColor *blueColor;
@property(class, nonatomic, readonly) UIColor *cyanColor;
@property(class, nonatomic, readonly) UIColor *yellowColor;
@property(class, nonatomic, readonly) UIColor *magentaColor;
@property(class, nonatomic, readonly) UIColor *orangeColor;
@property(class, nonatomic, readonly) UIColor *purpleColor;
@property(class, nonatomic, readonly) UIColor *brownColor;
@property(class, nonatomic, readonly) UIColor *clearColor;
# 80 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIColor.h" 3
- (void)set;


- (void)setFill;
- (void)setStroke;



- (BOOL)getWhite:(nullable CGFloat *)white alpha:(nullable CGFloat *)alpha __attribute__((availability(ios,introduced=5_0)));
- (BOOL)getHue:(nullable CGFloat *)hue saturation:(nullable CGFloat *)saturation brightness:(nullable CGFloat *)brightness alpha:(nullable CGFloat *)alpha __attribute__((availability(ios,introduced=5_0)));
- (BOOL)getRed:(nullable CGFloat *)red green:(nullable CGFloat *)green blue:(nullable CGFloat *)blue alpha:(nullable CGFloat *)alpha __attribute__((availability(ios,introduced=5_0)));


- (UIColor *)colorWithAlphaComponent:(CGFloat)alpha;


@property(nonatomic,readonly) CGColorRef CGColor;
- (CGColorRef)CGColor __attribute__((objc_returns_inner_pointer)) __attribute__((cf_returns_not_retained));

@property(nonatomic,readonly) CIColor *CIColor __attribute__((availability(ios,introduced=5_0)));


@end


@interface CIColor(UIKitAdditions)

- (instancetype)initWithColor:(UIColor *)color __attribute__((availability(ios,introduced=5_0)));

@end
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIInterface.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFont.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFont.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFontDescriptor.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFontDescriptor.h" 3
typedef enum UIFontDescriptorSymbolicTraits : uint32_t UIFontDescriptorSymbolicTraits; enum UIFontDescriptorSymbolicTraits : uint32_t {




    UIFontDescriptorTraitItalic = 1u << 0,
    UIFontDescriptorTraitBold = 1u << 1,
    UIFontDescriptorTraitExpanded = 1u << 5,
    UIFontDescriptorTraitCondensed = 1u << 6,
    UIFontDescriptorTraitMonoSpace = 1u << 10,
    UIFontDescriptorTraitVertical = 1u << 11,
    UIFontDescriptorTraitUIOptimized = 1u << 12,
    UIFontDescriptorTraitTightLeading = 1u << 15,
    UIFontDescriptorTraitLooseLeading = 1u << 16,




    UIFontDescriptorClassMask = 0xF0000000,

    UIFontDescriptorClassUnknown = 0u << 28,
    UIFontDescriptorClassOldStyleSerifs = 1u << 28,
    UIFontDescriptorClassTransitionalSerifs = 2u << 28,
    UIFontDescriptorClassModernSerifs = 3u << 28,
    UIFontDescriptorClassClarendonSerifs = 4u << 28,
    UIFontDescriptorClassSlabSerifs = 5u << 28,
    UIFontDescriptorClassFreeformSerifs = 7u << 28,
    UIFontDescriptorClassSansSerif = 8u << 28,
    UIFontDescriptorClassOrnamentals = 9u << 28,
    UIFontDescriptorClassScripts = 10u << 28,
    UIFontDescriptorClassSymbolic = 12u << 28
} __attribute__((availability(ios,introduced=7_0)));

typedef NSUInteger UIFontDescriptorClass;



typedef NSString * UIFontTextStyle;


@class NSMutableDictionary, NSDictionary, NSArray, NSSet, UITraitCollection;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIFontDescriptor : NSObject <NSCopying, NSSecureCoding>

- (instancetype)init;
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));


@property(nonatomic, readonly) NSString *postscriptName;
@property(nonatomic, readonly) CGFloat pointSize;
@property(nonatomic, readonly) CGAffineTransform matrix;
@property(nonatomic, readonly) UIFontDescriptorSymbolicTraits symbolicTraits;

- (nullable id)objectForKey:(NSString *)anAttribute;


@property(nonatomic, readonly) NSDictionary<NSString *, id> *fontAttributes;






- (NSArray<UIFontDescriptor *> *)matchingFontDescriptorsWithMandatoryKeys:(nullable NSSet<NSString *> *)mandatoryKeys;


+ (UIFontDescriptor *)fontDescriptorWithFontAttributes:(NSDictionary<NSString *, id> *)attributes;
+ (UIFontDescriptor *)fontDescriptorWithName:(NSString *)fontName size:(CGFloat)size;
+ (UIFontDescriptor *)fontDescriptorWithName:(NSString *)fontName matrix:(CGAffineTransform)matrix;


+ (UIFontDescriptor *)preferredFontDescriptorWithTextStyle:(UIFontTextStyle)style;

+ (UIFontDescriptor *)preferredFontDescriptorWithTextStyle:(UIFontTextStyle)style compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=10_0)));

- (instancetype)initWithFontAttributes:(NSDictionary<NSString *, id> *)attributes __attribute__((objc_designated_initializer));

- (UIFontDescriptor *)fontDescriptorByAddingAttributes:(NSDictionary<NSString *, id> *)attributes;
- (UIFontDescriptor *)fontDescriptorWithSize:(CGFloat)newPointSize;
- (UIFontDescriptor *)fontDescriptorWithMatrix:(CGAffineTransform)matrix;
- (UIFontDescriptor *)fontDescriptorWithFace:(NSString *)newFace;
- (UIFontDescriptor *)fontDescriptorWithFamily:(NSString *)newFamily;

- (nullable UIFontDescriptor *)fontDescriptorWithSymbolicTraits:(UIFontDescriptorSymbolicTraits)symbolicTraits;


@end



extern __attribute__((visibility ("default"))) NSString *const UIFontDescriptorFamilyAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIFontDescriptorNameAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIFontDescriptorFaceAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIFontDescriptorSizeAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIFontDescriptorVisibleNameAttribute __attribute__((availability(ios,introduced=7_0)));

extern __attribute__((visibility ("default"))) NSString *const UIFontDescriptorMatrixAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIFontDescriptorCharacterSetAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIFontDescriptorCascadeListAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIFontDescriptorTraitsAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIFontDescriptorFixedAdvanceAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIFontDescriptorFeatureSettingsAttribute __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility ("default"))) NSString *const UIFontDescriptorTextStyleAttribute __attribute__((availability(ios,introduced=7_0)));



extern __attribute__((visibility ("default"))) NSString *const UIFontSymbolicTrait __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility ("default"))) NSString *const UIFontWeightTrait __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility ("default"))) NSString *const UIFontWidthTrait __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility ("default"))) NSString *const UIFontSlantTrait __attribute__((availability(ios,introduced=7_0)));



extern __attribute__((visibility ("default"))) const CGFloat UIFontWeightUltraLight __attribute__((availability(ios,introduced=8_2)));
extern __attribute__((visibility ("default"))) const CGFloat UIFontWeightThin __attribute__((availability(ios,introduced=8_2)));
extern __attribute__((visibility ("default"))) const CGFloat UIFontWeightLight __attribute__((availability(ios,introduced=8_2)));
extern __attribute__((visibility ("default"))) const CGFloat UIFontWeightRegular __attribute__((availability(ios,introduced=8_2)));
extern __attribute__((visibility ("default"))) const CGFloat UIFontWeightMedium __attribute__((availability(ios,introduced=8_2)));
extern __attribute__((visibility ("default"))) const CGFloat UIFontWeightSemibold __attribute__((availability(ios,introduced=8_2)));
extern __attribute__((visibility ("default"))) const CGFloat UIFontWeightBold __attribute__((availability(ios,introduced=8_2)));
extern __attribute__((visibility ("default"))) const CGFloat UIFontWeightHeavy __attribute__((availability(ios,introduced=8_2)));
extern __attribute__((visibility ("default"))) const CGFloat UIFontWeightBlack __attribute__((availability(ios,introduced=8_2)));



extern __attribute__((visibility ("default"))) NSString *const UIFontFeatureTypeIdentifierKey __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility ("default"))) NSString *const UIFontFeatureSelectorIdentifierKey __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleTitle1 __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleTitle2 __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleTitle3 __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleHeadline __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleSubheadline __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleBody __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleCallout __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleFootnote __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleCaption1 __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleCaption2 __attribute__((availability(ios,introduced=7_0)));
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFont.h" 2 3

@class UITraitCollection;



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIFont : NSObject <NSCopying>


+ (UIFont *)preferredFontForTextStyle:(UIFontTextStyle)style __attribute__((availability(ios,introduced=7_0)));

+ (UIFont *)preferredFontForTextStyle:(UIFontTextStyle)style compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=10_0)));


+ (nullable UIFont *)fontWithName:(NSString *)fontName size:(CGFloat)fontSize;



@property(class, nonatomic, readonly) NSArray<NSString *> *familyNames;





+ (NSArray<NSString *> *)fontNamesForFamilyName:(NSString *)familyName;





+ (UIFont *)systemFontOfSize:(CGFloat)fontSize;
+ (UIFont *)boldSystemFontOfSize:(CGFloat)fontSize;
+ (UIFont *)italicSystemFontOfSize:(CGFloat)fontSize;




+ (UIFont *)systemFontOfSize:(CGFloat)fontSize weight:(CGFloat)weight __attribute__((availability(ios,introduced=8_2)));
+ (UIFont *)monospacedDigitSystemFontOfSize:(CGFloat)fontSize weight:(CGFloat)weight __attribute__((availability(ios,introduced=9_0)));



@property(nonatomic,readonly,strong) NSString *familyName;
@property(nonatomic,readonly,strong) NSString *fontName;
@property(nonatomic,readonly) CGFloat pointSize;
@property(nonatomic,readonly) CGFloat ascender;
@property(nonatomic,readonly) CGFloat descender;
@property(nonatomic,readonly) CGFloat capHeight;
@property(nonatomic,readonly) CGFloat xHeight;
@property(nonatomic,readonly) CGFloat lineHeight __attribute__((availability(ios,introduced=4_0)));
@property(nonatomic,readonly) CGFloat leading;


- (UIFont *)fontWithSize:(CGFloat)fontSize;


+ (UIFont *)fontWithDescriptor:(UIFontDescriptor *)descriptor size:(CGFloat)pointSize __attribute__((availability(ios,introduced=7_0)));



@property(nonatomic, readonly) UIFontDescriptor *fontDescriptor __attribute__((availability(ios,introduced=7_0)));




@end
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIInterface.h" 2 3





typedef enum UIBarStyle : NSInteger UIBarStyle; enum UIBarStyle : NSInteger {
    UIBarStyleDefault = 0,
    UIBarStyleBlack = 1,

    UIBarStyleBlackOpaque = 1,
    UIBarStyleBlackTranslucent = 2,
} __attribute__((availability(tvos,unavailable)));

typedef enum UIUserInterfaceSizeClass : NSInteger UIUserInterfaceSizeClass; enum UIUserInterfaceSizeClass : NSInteger {
    UIUserInterfaceSizeClassUnspecified = 0,
    UIUserInterfaceSizeClassCompact = 1,
    UIUserInterfaceSizeClassRegular = 2,
} __attribute__((availability(ios,introduced=8_0)));

typedef enum UIUserInterfaceStyle : NSInteger UIUserInterfaceStyle; enum UIUserInterfaceStyle : NSInteger {
    UIUserInterfaceStyleUnspecified,
    UIUserInterfaceStyleLight,
    UIUserInterfaceStyleDark,
} __attribute__((availability(tvos,introduced=10_0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));

typedef enum UIUserInterfaceLayoutDirection : NSInteger UIUserInterfaceLayoutDirection; enum UIUserInterfaceLayoutDirection : NSInteger {
    UIUserInterfaceLayoutDirectionLeftToRight,
    UIUserInterfaceLayoutDirectionRightToLeft,
} __attribute__((availability(ios,introduced=5_0)));


typedef enum UITraitEnvironmentLayoutDirection : NSInteger UITraitEnvironmentLayoutDirection; enum UITraitEnvironmentLayoutDirection : NSInteger {
    UITraitEnvironmentLayoutDirectionUnspecified = -1,
    UITraitEnvironmentLayoutDirectionLeftToRight = UIUserInterfaceLayoutDirectionLeftToRight,
    UITraitEnvironmentLayoutDirectionRightToLeft = UIUserInterfaceLayoutDirectionRightToLeft,
} __attribute__((availability(ios,introduced=10_0)));

typedef enum UIDisplayGamut : NSInteger UIDisplayGamut; enum UIDisplayGamut : NSInteger {
    UIDisplayGamutUnspecified = -1,
    UIDisplayGamutSRGB,
    UIDisplayGamutP3
} __attribute__((availability(ios,introduced=10_0)));




@interface UIColor (UIColorSystemColors)

@property(class, nonatomic, readonly) UIColor *lightTextColor __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) UIColor *darkTextColor __attribute__((availability(tvos,unavailable)));

@property(class, nonatomic, readonly) UIColor *groupTableViewBackgroundColor __attribute__((availability(tvos,unavailable)));

@property(class, nonatomic, readonly) UIColor *viewFlipsideBackgroundColor __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) UIColor *scrollViewTexturedBackgroundColor __attribute__((availability(ios,introduced=3_2,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) UIColor *underPageBackgroundColor __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));
# 78 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIInterface.h" 3
@end



@interface UIFont (UIFontSystemFonts)

@property(class, nonatomic, readonly) CGFloat labelFontSize __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) CGFloat buttonFontSize __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) CGFloat smallSystemFontSize __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) CGFloat systemFontSize __attribute__((availability(tvos,unavailable)));






@end
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAppearance.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAppearance.h" 3
@class UITraitCollection;
# 23 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAppearance.h" 3
@protocol UIAppearanceContainer <NSObject> @end

@protocol UIAppearance <NSObject>






+ (instancetype)appearance;
# 43 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAppearance.h" 3
+ (instancetype)appearanceWhenContainedIn:(nullable Class <UIAppearanceContainer>)ContainerClass, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios,introduced=5_0,deprecated=9_0,message="" "Use +appearanceWhenContainedInInstancesOfClasses: instead"))) __attribute__((availability(tvos,unavailable)));
+ (instancetype)appearanceWhenContainedInInstancesOfClasses:(NSArray<Class <UIAppearanceContainer>> *)containerTypes __attribute__((availability(ios,introduced=9_0)));

+ (instancetype)appearanceForTraitCollection:(UITraitCollection *)trait __attribute__((availability(ios,introduced=8_0)));
+ (instancetype)appearanceForTraitCollection:(UITraitCollection *)trait whenContainedIn:(nullable Class <UIAppearanceContainer>)ContainerClass, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios,introduced=8_0,deprecated=9_0,message="" "Use +appearanceForTraitCollection:whenContainedInInstancesOfClasses: instead"))) __attribute__((availability(tvos,unavailable)));
+ (instancetype)appearanceForTraitCollection:(UITraitCollection *)trait whenContainedInInstancesOfClasses:(NSArray<Class <UIAppearanceContainer>> *)containerTypes __attribute__((availability(ios,introduced=9_0)));

@end
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDynamicBehavior.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGeometry.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGeometry.h" 3
typedef struct UIEdgeInsets {
    CGFloat top, left, bottom, right;
} UIEdgeInsets;

typedef struct UIOffset {
    CGFloat horizontal, vertical;
} UIOffset;

typedef enum UIRectEdge : NSUInteger UIRectEdge; enum UIRectEdge : NSUInteger {
    UIRectEdgeNone = 0,
    UIRectEdgeTop = 1 << 0,
    UIRectEdgeLeft = 1 << 1,
    UIRectEdgeBottom = 1 << 2,
    UIRectEdgeRight = 1 << 3,
    UIRectEdgeAll = UIRectEdgeTop | UIRectEdgeLeft | UIRectEdgeBottom | UIRectEdgeRight
} __attribute__((availability(ios,introduced=7_0)));

static inline UIEdgeInsets UIEdgeInsetsMake(CGFloat top, CGFloat left, CGFloat bottom, CGFloat right) {
    UIEdgeInsets insets = {top, left, bottom, right};
    return insets;
}

static inline CGRect UIEdgeInsetsInsetRect(CGRect rect, UIEdgeInsets insets) {
    rect.origin.x += insets.left;
    rect.origin.y += insets.top;
    rect.size.width -= (insets.left + insets.right);
    rect.size.height -= (insets.top + insets.bottom);
    return rect;
}

static inline UIOffset UIOffsetMake(CGFloat horizontal, CGFloat vertical) {
    UIOffset offset = {horizontal, vertical};
    return offset;
}

static inline BOOL UIEdgeInsetsEqualToEdgeInsets(UIEdgeInsets insets1, UIEdgeInsets insets2) {
    return insets1.left == insets2.left && insets1.top == insets2.top && insets1.right == insets2.right && insets1.bottom == insets2.bottom;
}

static inline BOOL UIOffsetEqualToOffset(UIOffset offset1, UIOffset offset2) {
    return offset1.horizontal == offset2.horizontal && offset1.vertical == offset2.vertical;
}


extern __attribute__((visibility ("default"))) const UIEdgeInsets UIEdgeInsetsZero __attribute__((availability(swift, unavailable, message="Use UIEdgeInsets.zero instead")));
extern __attribute__((visibility ("default"))) const UIOffset UIOffsetZero __attribute__((availability(swift, unavailable, message="Use UIOffset.zero instead")));





extern __attribute__((visibility ("default"))) NSString *NSStringFromCGPoint(CGPoint point);
extern __attribute__((visibility ("default"))) NSString *NSStringFromCGVector(CGVector vector);
extern __attribute__((visibility ("default"))) NSString *NSStringFromCGSize(CGSize size);
extern __attribute__((visibility ("default"))) NSString *NSStringFromCGRect(CGRect rect);
extern __attribute__((visibility ("default"))) NSString *NSStringFromCGAffineTransform(CGAffineTransform transform);
extern __attribute__((visibility ("default"))) NSString *NSStringFromUIEdgeInsets(UIEdgeInsets insets);
extern __attribute__((visibility ("default"))) NSString *NSStringFromUIOffset(UIOffset offset);

extern __attribute__((visibility ("default"))) CGPoint CGPointFromString(NSString *string);
extern __attribute__((visibility ("default"))) CGVector CGVectorFromString(NSString *string);
extern __attribute__((visibility ("default"))) CGSize CGSizeFromString(NSString *string);
extern __attribute__((visibility ("default"))) CGRect CGRectFromString(NSString *string);
extern __attribute__((visibility ("default"))) CGAffineTransform CGAffineTransformFromString(NSString *string);
extern __attribute__((visibility ("default"))) UIEdgeInsets UIEdgeInsetsFromString(NSString *string);
extern __attribute__((visibility ("default"))) UIOffset UIOffsetFromString(NSString *string);

@interface NSValue (NSValueUIGeometryExtensions)

+ (NSValue *)valueWithCGPoint:(CGPoint)point;
+ (NSValue *)valueWithCGVector:(CGVector)vector;
+ (NSValue *)valueWithCGSize:(CGSize)size;
+ (NSValue *)valueWithCGRect:(CGRect)rect;
+ (NSValue *)valueWithCGAffineTransform:(CGAffineTransform)transform;
+ (NSValue *)valueWithUIEdgeInsets:(UIEdgeInsets)insets;
+ (NSValue *)valueWithUIOffset:(UIOffset)insets __attribute__((availability(ios,introduced=5_0)));


@property(nonatomic, readonly) CGPoint CGPointValue;
@property(nonatomic, readonly) CGVector CGVectorValue;
@property(nonatomic, readonly) CGSize CGSizeValue;
@property(nonatomic, readonly) CGRect CGRectValue;
@property(nonatomic, readonly) CGAffineTransform CGAffineTransformValue;
@property(nonatomic, readonly) UIEdgeInsets UIEdgeInsetsValue;
@property(nonatomic, readonly) UIOffset UIOffsetValue __attribute__((availability(ios,introduced=5_0)));
# 110 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGeometry.h" 3
@end

@interface NSCoder (UIGeometryKeyedCoding)

- (void)encodeCGPoint:(CGPoint)point forKey:(NSString *)key;
- (void)encodeCGVector:(CGVector)vector forKey:(NSString *)key;
- (void)encodeCGSize:(CGSize)size forKey:(NSString *)key;
- (void)encodeCGRect:(CGRect)rect forKey:(NSString *)key;
- (void)encodeCGAffineTransform:(CGAffineTransform)transform forKey:(NSString *)key;
- (void)encodeUIEdgeInsets:(UIEdgeInsets)insets forKey:(NSString *)key;
- (void)encodeUIOffset:(UIOffset)offset forKey:(NSString *)key __attribute__((availability(ios,introduced=5_0)));

- (CGPoint)decodeCGPointForKey:(NSString *)key;
- (CGVector)decodeCGVectorForKey:(NSString *)key;
- (CGSize)decodeCGSizeForKey:(NSString *)key;
- (CGRect)decodeCGRectForKey:(NSString *)key;
- (CGAffineTransform)decodeCGAffineTransformForKey:(NSString *)key;
- (UIEdgeInsets)decodeUIEdgeInsetsForKey:(NSString *)key;
- (UIOffset)decodeUIOffsetForKey:(NSString *)key __attribute__((availability(ios,introduced=5_0)));

@end
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDynamicBehavior.h" 2 3



@class UIDynamicAnimator;
@class UIBezierPath;

typedef enum UIDynamicItemCollisionBoundsType : NSUInteger UIDynamicItemCollisionBoundsType; enum UIDynamicItemCollisionBoundsType : NSUInteger {
    UIDynamicItemCollisionBoundsTypeRectangle,
    UIDynamicItemCollisionBoundsTypeEllipse,
    UIDynamicItemCollisionBoundsTypePath
} __attribute__((availability(ios,introduced=9_0)));

@protocol UIDynamicItem <NSObject>

@property (nonatomic, readwrite) CGPoint center;
@property (nonatomic, readonly) CGRect bounds;
@property (nonatomic, readwrite) CGAffineTransform transform;

@optional




@property (nonatomic, readonly) UIDynamicItemCollisionBoundsType collisionBoundsType __attribute__((availability(ios,introduced=9_0)));





@property (nonatomic, readonly) UIBezierPath *collisionBoundingPath __attribute__((availability(ios,introduced=9_0)));

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UIDynamicItemGroup : NSObject <UIDynamicItem>

- (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items;

@property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIDynamicBehavior : NSObject

- (void)addChildBehavior:(UIDynamicBehavior *)behavior;
- (void)removeChildBehavior:(UIDynamicBehavior *)behavior;

@property (nonatomic, readonly, copy) NSArray<__kindof UIDynamicBehavior *> *childBehaviors;


@property (nullable, nonatomic,copy) void (^action)(void);

- (void)willMoveToAnimator:(nullable UIDynamicAnimator *)dynamicAnimator;

@property (nullable, nonatomic, readonly) UIDynamicAnimator *dynamicAnimator;


@end
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSLayoutConstraint.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSLayoutConstraint.h" 3
@class NSArray, NSDictionary, NSLayoutAnchor;


typedef enum NSLayoutRelation : NSInteger NSLayoutRelation; enum NSLayoutRelation : NSInteger {
    NSLayoutRelationLessThanOrEqual = -1,
    NSLayoutRelationEqual = 0,
    NSLayoutRelationGreaterThanOrEqual = 1,
};

typedef enum NSLayoutAttribute : NSInteger NSLayoutAttribute; enum NSLayoutAttribute : NSInteger {
    NSLayoutAttributeLeft = 1,
    NSLayoutAttributeRight,
    NSLayoutAttributeTop,
    NSLayoutAttributeBottom,
    NSLayoutAttributeLeading,
    NSLayoutAttributeTrailing,
    NSLayoutAttributeWidth,
    NSLayoutAttributeHeight,
    NSLayoutAttributeCenterX,
    NSLayoutAttributeCenterY,
    NSLayoutAttributeLastBaseline,
    NSLayoutAttributeBaseline __attribute__((availability(swift, unavailable, message="Use 'lastBaseline' instead"))) = NSLayoutAttributeLastBaseline,
    NSLayoutAttributeFirstBaseline __attribute__((availability(ios,introduced=8_0))),


    NSLayoutAttributeLeftMargin __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeRightMargin __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeTopMargin __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeBottomMargin __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeLeadingMargin __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeTrailingMargin __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeCenterXWithinMargins __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeCenterYWithinMargins __attribute__((availability(ios,introduced=8_0))),

    NSLayoutAttributeNotAnAttribute = 0
};

typedef enum NSLayoutFormatOptions : NSUInteger NSLayoutFormatOptions; enum NSLayoutFormatOptions : NSUInteger {
    NSLayoutFormatAlignAllLeft = (1 << NSLayoutAttributeLeft),
    NSLayoutFormatAlignAllRight = (1 << NSLayoutAttributeRight),
    NSLayoutFormatAlignAllTop = (1 << NSLayoutAttributeTop),
    NSLayoutFormatAlignAllBottom = (1 << NSLayoutAttributeBottom),
    NSLayoutFormatAlignAllLeading = (1 << NSLayoutAttributeLeading),
    NSLayoutFormatAlignAllTrailing = (1 << NSLayoutAttributeTrailing),
    NSLayoutFormatAlignAllCenterX = (1 << NSLayoutAttributeCenterX),
    NSLayoutFormatAlignAllCenterY = (1 << NSLayoutAttributeCenterY),
    NSLayoutFormatAlignAllLastBaseline = (1 << NSLayoutAttributeLastBaseline),
    NSLayoutFormatAlignAllBaseline __attribute__((availability(swift, unavailable, message="Use 'alignAllLastBaseline' instead"))) = NSLayoutFormatAlignAllLastBaseline,
    NSLayoutFormatAlignAllFirstBaseline __attribute__((availability(ios,introduced=8_0))) = (1 << NSLayoutAttributeFirstBaseline),

    NSLayoutFormatAlignmentMask = 0xFFFF,



    NSLayoutFormatDirectionLeadingToTrailing = 0 << 16,
    NSLayoutFormatDirectionLeftToRight = 1 << 16,
    NSLayoutFormatDirectionRightToLeft = 2 << 16,

    NSLayoutFormatDirectionMask = 0x3 << 16,
};

typedef float UILayoutPriority;
static const UILayoutPriority UILayoutPriorityRequired __attribute__((availability(ios,introduced=6_0))) = 1000;
static const UILayoutPriority UILayoutPriorityDefaultHigh __attribute__((availability(ios,introduced=6_0))) = 750;
static const UILayoutPriority UILayoutPriorityDefaultLow __attribute__((availability(ios,introduced=6_0))) = 250;
static const UILayoutPriority UILayoutPriorityFittingSizeLevel __attribute__((availability(ios,introduced=6_0))) = 50;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))
@interface NSLayoutConstraint : NSObject



+ (NSArray<__kindof NSLayoutConstraint *> *)constraintsWithVisualFormat:(NSString *)format options:(NSLayoutFormatOptions)opts metrics:(nullable NSDictionary<NSString *,id> *)metrics views:(NSDictionary<NSString *, id> *)views;





extern __attribute__((visibility ("default"))) NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, _Nullable id firstValue, ...) __attribute__((availability(ios,introduced=6_0)));





+(instancetype)constraintWithItem:(id)view1 attribute:(NSLayoutAttribute)attr1 relatedBy:(NSLayoutRelation)relation toItem:(nullable id)view2 attribute:(NSLayoutAttribute)attr2 multiplier:(CGFloat)multiplier constant:(CGFloat)c;





@property UILayoutPriority priority;




@property BOOL shouldBeArchived;





@property (readonly, assign) id firstItem;
@property (readonly) NSLayoutAttribute firstAttribute;
@property (nullable, readonly, assign) id secondItem;
@property (readonly) NSLayoutAttribute secondAttribute;




@property (readonly, copy) NSLayoutAnchor *firstAnchor __attribute__((availability(ios,introduced=10_0)));
@property (readonly, copy, nullable) NSLayoutAnchor *secondAnchor __attribute__((availability(ios,introduced=10_0)));
@property (readonly) NSLayoutRelation relation;
@property (readonly) CGFloat multiplier;



@property CGFloat constant;


@property (getter=isActive) BOOL active __attribute__((availability(ios,introduced=8_0)));


+ (void)activateConstraints:(NSArray<NSLayoutConstraint *> *)constraints __attribute__((availability(ios,introduced=8_0)));


+ (void)deactivateConstraints:(NSArray<NSLayoutConstraint *> *)constraints __attribute__((availability(ios,introduced=8_0)));
@end

@interface NSLayoutConstraint (NSIdentifier)



@property (nullable, copy) NSString *identifier __attribute__((availability(ios,introduced=7_0)));

@end







@class NSLayoutYAxisAnchor, NSLayoutDimension;
@protocol UILayoutSupport <NSObject>
@property(nonatomic,readonly) CGFloat length;



@property(readonly, strong) NSLayoutYAxisAnchor *topAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutYAxisAnchor *bottomAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutDimension *heightAnchor __attribute__((availability(ios,introduced=9_0)));
@end
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITraitCollection.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITraitCollection.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDevice.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDevice.h" 3
typedef enum UIDeviceOrientation : NSInteger UIDeviceOrientation; enum UIDeviceOrientation : NSInteger {
    UIDeviceOrientationUnknown,
    UIDeviceOrientationPortrait,
    UIDeviceOrientationPortraitUpsideDown,
    UIDeviceOrientationLandscapeLeft,
    UIDeviceOrientationLandscapeRight,
    UIDeviceOrientationFaceUp,
    UIDeviceOrientationFaceDown
} __attribute__((availability(tvos,unavailable)));

typedef enum UIDeviceBatteryState : NSInteger UIDeviceBatteryState; enum UIDeviceBatteryState : NSInteger {
    UIDeviceBatteryStateUnknown,
    UIDeviceBatteryStateUnplugged,
    UIDeviceBatteryStateCharging,
    UIDeviceBatteryStateFull,
} __attribute__((availability(tvos,unavailable)));

typedef enum UIUserInterfaceIdiom : NSInteger UIUserInterfaceIdiom; enum UIUserInterfaceIdiom : NSInteger {
    UIUserInterfaceIdiomUnspecified = -1,
    UIUserInterfaceIdiomPhone __attribute__((availability(ios,introduced=3_2))),
    UIUserInterfaceIdiomPad __attribute__((availability(ios,introduced=3_2))),
    UIUserInterfaceIdiomTV __attribute__((availability(ios,introduced=9_0))),
    UIUserInterfaceIdiomCarPlay __attribute__((availability(ios,introduced=9_0))),
};

static inline BOOL UIDeviceOrientationIsPortrait(UIDeviceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIDeviceOrientationPortrait || (orientation) == UIDeviceOrientationPortraitUpsideDown);
}

static inline BOOL UIDeviceOrientationIsLandscape(UIDeviceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIDeviceOrientationLandscapeLeft || (orientation) == UIDeviceOrientationLandscapeRight);
}

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIDevice : NSObject


@property(class, nonatomic, readonly) UIDevice *currentDevice;




@property(nonatomic,readonly,strong) NSString *name;
@property(nonatomic,readonly,strong) NSString *model;
@property(nonatomic,readonly,strong) NSString *localizedModel;
@property(nonatomic,readonly,strong) NSString *systemName;
@property(nonatomic,readonly,strong) NSString *systemVersion;
@property(nonatomic,readonly) UIDeviceOrientation orientation __attribute__((availability(tvos,unavailable)));

@property(nullable, nonatomic,readonly,strong) NSUUID *identifierForVendor __attribute__((availability(ios,introduced=6_0)));

@property(nonatomic,readonly,getter=isGeneratingDeviceOrientationNotifications) BOOL generatesDeviceOrientationNotifications __attribute__((availability(tvos,unavailable)));
- (void)beginGeneratingDeviceOrientationNotifications __attribute__((availability(tvos,unavailable)));
- (void)endGeneratingDeviceOrientationNotifications __attribute__((availability(tvos,unavailable)));

@property(nonatomic,getter=isBatteryMonitoringEnabled) BOOL batteryMonitoringEnabled __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic,readonly) UIDeviceBatteryState batteryState __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic,readonly) float batteryLevel __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));

@property(nonatomic,getter=isProximityMonitoringEnabled) BOOL proximityMonitoringEnabled __attribute__((availability(ios,introduced=3_0)));
@property(nonatomic,readonly) BOOL proximityState __attribute__((availability(ios,introduced=3_0)));

@property(nonatomic,readonly,getter=isMultitaskingSupported) BOOL multitaskingSupported __attribute__((availability(ios,introduced=4_0)));

@property(nonatomic,readonly) UIUserInterfaceIdiom userInterfaceIdiom __attribute__((availability(ios,introduced=3_2)));

- (void)playInputClick __attribute__((availability(ios,introduced=4_2)));

@end

@protocol UIInputViewAudioFeedback <NSObject>
@optional

@property (nonatomic, readonly) BOOL enableInputClicksWhenVisible;

@end



static inline UIUserInterfaceIdiom UI_USER_INTERFACE_IDIOM() {
    return ([[UIDevice currentDevice] respondsToSelector:@selector(userInterfaceIdiom)] ?
            [[UIDevice currentDevice] userInterfaceIdiom] :
            UIUserInterfaceIdiomPhone);
}

extern __attribute__((visibility ("default"))) NSNotificationName const UIDeviceOrientationDidChangeNotification __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIDeviceBatteryStateDidChangeNotification __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIDeviceBatteryLevelDidChangeNotification __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIDeviceProximityStateDidChangeNotification __attribute__((availability(ios,introduced=3_0)));
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITraitCollection.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITouch.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITouch.h" 3
@class UIWindow, UIView, UIGestureRecognizer;

typedef enum UITouchPhase : NSInteger UITouchPhase; enum UITouchPhase : NSInteger {
    UITouchPhaseBegan,
    UITouchPhaseMoved,
    UITouchPhaseStationary,
    UITouchPhaseEnded,
    UITouchPhaseCancelled,
};

typedef enum UIForceTouchCapability : NSInteger UIForceTouchCapability; enum UIForceTouchCapability : NSInteger {
    UIForceTouchCapabilityUnknown = 0,
    UIForceTouchCapabilityUnavailable = 1,
    UIForceTouchCapabilityAvailable = 2
};

typedef enum UITouchType : NSInteger UITouchType; enum UITouchType : NSInteger {
    UITouchTypeDirect,
    UITouchTypeIndirect,
    UITouchTypeStylus __attribute__((availability(ios,introduced=9_1))),
} __attribute__((availability(ios,introduced=9_0)));

typedef enum UITouchProperties : NSInteger UITouchProperties; enum UITouchProperties : NSInteger {
    UITouchPropertyForce = (1UL << 0),
    UITouchPropertyAzimuth = (1UL << 1),
    UITouchPropertyAltitude = (1UL << 2),
    UITouchPropertyLocation = (1UL << 3),
} __attribute__((availability(ios,introduced=9_1)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UITouch : NSObject

@property(nonatomic,readonly) NSTimeInterval timestamp;
@property(nonatomic,readonly) UITouchPhase phase;
@property(nonatomic,readonly) NSUInteger tapCount;
@property(nonatomic,readonly) UITouchType type __attribute__((availability(ios,introduced=9_0)));



@property(nonatomic,readonly) CGFloat majorRadius __attribute__((availability(ios,introduced=8_0)));
@property(nonatomic,readonly) CGFloat majorRadiusTolerance __attribute__((availability(ios,introduced=8_0)));

@property(nullable,nonatomic,readonly,strong) UIWindow *window;
@property(nullable,nonatomic,readonly,strong) UIView *view;
@property(nullable,nonatomic,readonly,copy) NSArray <UIGestureRecognizer *> *gestureRecognizers __attribute__((availability(ios,introduced=3_2)));

- (CGPoint)locationInView:(nullable UIView *)view;
- (CGPoint)previousLocationInView:(nullable UIView *)view;



- (CGPoint)preciseLocationInView:(nullable UIView *)view __attribute__((availability(ios,introduced=9_1)));
- (CGPoint)precisePreviousLocationInView:(nullable UIView *)view __attribute__((availability(ios,introduced=9_1)));


@property(nonatomic,readonly) CGFloat force __attribute__((availability(ios,introduced=9_0)));

@property(nonatomic,readonly) CGFloat maximumPossibleForce __attribute__((availability(ios,introduced=9_0)));



- (CGFloat)azimuthAngleInView:(nullable UIView *)view __attribute__((availability(ios,introduced=9_1)));


- (CGVector)azimuthUnitVectorInView:(nullable UIView *)view __attribute__((availability(ios,introduced=9_1)));




@property(nonatomic,readonly) CGFloat altitudeAngle __attribute__((availability(ios,introduced=9_1)));



@property(nonatomic,readonly) NSNumber * _Nullable estimationUpdateIndex __attribute__((availability(ios,introduced=9_1)));


@property(nonatomic,readonly) UITouchProperties estimatedProperties __attribute__((availability(ios,introduced=9_1)));



@property(nonatomic,readonly) UITouchProperties estimatedPropertiesExpectingUpdates __attribute__((availability(ios,introduced=9_1)));


@end
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITraitCollection.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIContentSizeCategory.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIContentSizeCategory.h" 3
typedef NSString * UIContentSizeCategory __attribute__((swift_wrapper(enum))) __attribute__((availability(ios,introduced=7_0)));



extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryUnspecified __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryExtraSmall __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategorySmall __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryMedium __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryLarge __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryExtraLarge __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryExtraExtraLarge __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryExtraExtraExtraLarge __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityMedium __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityLarge __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityExtraLarge __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityExtraExtraLarge __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityExtraExtraExtraLarge __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility ("default"))) NSNotificationName const UIContentSizeCategoryDidChangeNotification __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString *const UIContentSizeCategoryNewValueKey __attribute__((availability(ios,introduced=7_0)));
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITraitCollection.h" 2 3




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) @interface UITraitCollection : NSObject <NSCopying, NSSecureCoding>

- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

- (BOOL)containsTraitsInCollection:(nullable UITraitCollection *)trait;



+ (UITraitCollection *)traitCollectionWithTraitsFromCollections:(NSArray<UITraitCollection *> *)traitCollections;


+ (UITraitCollection *)traitCollectionWithUserInterfaceIdiom:(UIUserInterfaceIdiom)idiom;
@property (nonatomic, readonly) UIUserInterfaceIdiom userInterfaceIdiom;

+ (UITraitCollection *)traitCollectionWithUserInterfaceStyle:(UIUserInterfaceStyle)userInterfaceStyle __attribute__((availability(tvos,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,unavailable)));
@property (nonatomic, readonly) UIUserInterfaceStyle userInterfaceStyle __attribute__((availability(tvos,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,unavailable)));

+ (UITraitCollection *)traitCollectionWithLayoutDirection:(UITraitEnvironmentLayoutDirection)layoutDirection __attribute__((availability(ios,introduced=10_0)));
@property (nonatomic, readonly) UITraitEnvironmentLayoutDirection layoutDirection __attribute__((availability(ios,introduced=10_0)));

+ (UITraitCollection *)traitCollectionWithDisplayScale:(CGFloat)scale;
@property (nonatomic, readonly) CGFloat displayScale;

+ (UITraitCollection *)traitCollectionWithHorizontalSizeClass:(UIUserInterfaceSizeClass)horizontalSizeClass;
@property (nonatomic, readonly) UIUserInterfaceSizeClass horizontalSizeClass;

+ (UITraitCollection *)traitCollectionWithVerticalSizeClass:(UIUserInterfaceSizeClass)verticalSizeClass;
@property (nonatomic, readonly) UIUserInterfaceSizeClass verticalSizeClass;

+ (UITraitCollection *)traitCollectionWithForceTouchCapability:(UIForceTouchCapability)capability __attribute__((availability(ios,introduced=9_0)));
@property (nonatomic, readonly) UIForceTouchCapability forceTouchCapability __attribute__((availability(ios,introduced=9_0)));

+ (UITraitCollection *)traitCollectionWithPreferredContentSizeCategory:(UIContentSizeCategory)preferredContentSizeCategory __attribute__((availability(ios,introduced=10_0)));
@property (nonatomic, copy, readonly) UIContentSizeCategory preferredContentSizeCategory __attribute__((availability(ios,introduced=10_0)));

+ (UITraitCollection *)traitCollectionWithDisplayGamut:(UIDisplayGamut)displayGamut __attribute__((availability(ios,introduced=10_0)));
@property (nonatomic, readonly) UIDisplayGamut displayGamut __attribute__((availability(ios,introduced=10_0)));

@end


@protocol UITraitEnvironment <NSObject>
@property (nonatomic, readonly) UITraitCollection *traitCollection __attribute__((availability(ios,introduced=8_0)));


- (void)traitCollectionDidChange:(nullable UITraitCollection *)previousTraitCollection __attribute__((availability(ios,introduced=8_0)));
@end
# 17 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFocus.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFocusGuide.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UILayoutGuide.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UILayoutGuide.h" 3
@class NSLayoutXAxisAnchor, NSLayoutYAxisAnchor, NSLayoutDimension;


@class UIView;






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface UILayoutGuide : NSObject <NSCoding>




@property(nonatomic,readonly) CGRect layoutFrame;






@property(nonatomic,weak,nullable) UIView *owningView;




@property(nonatomic,copy) NSString *identifier;




@property(readonly, strong) NSLayoutXAxisAnchor *leadingAnchor;
@property(readonly, strong) NSLayoutXAxisAnchor *trailingAnchor;
@property(readonly, strong) NSLayoutXAxisAnchor *leftAnchor;
@property(readonly, strong) NSLayoutXAxisAnchor *rightAnchor;
@property(readonly, strong) NSLayoutYAxisAnchor *topAnchor;
@property(readonly, strong) NSLayoutYAxisAnchor *bottomAnchor;
@property(readonly, strong) NSLayoutDimension *widthAnchor;
@property(readonly, strong) NSLayoutDimension *heightAnchor;
@property(readonly, strong) NSLayoutXAxisAnchor *centerXAnchor;
@property(readonly, strong) NSLayoutYAxisAnchor *centerYAnchor;

@end
# 9 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFocusGuide.h" 2 3

@protocol UIFocusEnvironment;




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UIFocusGuide : UILayoutGuide


@property (nonatomic, getter=isEnabled) BOOL enabled;



@property (nonatomic, copy, null_resettable) NSArray<id<UIFocusEnvironment>> *preferredFocusEnvironments __attribute__((availability(ios,introduced=10_0)));


@property (nonatomic, weak, nullable) UIView *preferredFocusedView __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use -preferredFocusEnvironments instead.")));

@end
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFocus.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFocusAnimationCoordinator.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFocusAnimationCoordinator.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UIFocusAnimationCoordinator : NSObject
# 23 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFocusAnimationCoordinator.h" 3
- (void)addCoordinatedAnimations:(nullable void (^)(void))animations completion:(nullable void (^)(void))completion;

@end
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFocus.h" 2 3

@class UIView, UIFocusUpdateContext;

typedef enum UIFocusHeading : NSUInteger UIFocusHeading; enum UIFocusHeading : NSUInteger {
    UIFocusHeadingNone = 0,
    UIFocusHeadingUp = 1 << 0,
    UIFocusHeadingDown = 1 << 1,
    UIFocusHeadingLeft = 1 << 2,
    UIFocusHeadingRight = 1 << 3,
    UIFocusHeadingNext = 1 << 4,
    UIFocusHeadingPrevious = 1 << 5,
} __attribute__((availability(ios,introduced=9_0)));





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @protocol UIFocusEnvironment <NSObject>




@property (nonatomic, copy, readonly) NSArray<id<UIFocusEnvironment>> *preferredFocusEnvironments;


- (void)setNeedsFocusUpdate;


- (void)updateFocusIfNeeded;


- (BOOL)shouldUpdateFocusInContext:(UIFocusUpdateContext *)context;


- (void)didUpdateFocusInContext:(UIFocusUpdateContext *)context withAnimationCoordinator:(UIFocusAnimationCoordinator *)coordinator;

@optional

@property (nonatomic, weak, readonly, nullable) UIView *preferredFocusedView __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use -preferredFocusEnvironments instead.")));

@end




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @protocol UIFocusItem <UIFocusEnvironment>




@property(nonatomic, readonly) BOOL canBecomeFocused;




@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UIFocusUpdateContext : NSObject


@property (nonatomic, weak, readonly, nullable) id<UIFocusItem> previouslyFocusedItem __attribute__((availability(ios,introduced=10_0)));


@property (nonatomic, weak, readonly, nullable) id<UIFocusItem> nextFocusedItem __attribute__((availability(ios,introduced=10_0)));



@property (nonatomic, weak, readonly, nullable) UIView *previouslyFocusedView;



@property (nonatomic, weak, readonly, nullable) UIView *nextFocusedView;


@property (nonatomic, assign, readonly) UIFocusHeading focusHeading;

@end
# 18 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 2 3



typedef enum UIViewAnimationCurve : NSInteger UIViewAnimationCurve; enum UIViewAnimationCurve : NSInteger {
    UIViewAnimationCurveEaseInOut,
    UIViewAnimationCurveEaseIn,
    UIViewAnimationCurveEaseOut,
    UIViewAnimationCurveLinear,
};

typedef enum UIViewContentMode : NSInteger UIViewContentMode; enum UIViewContentMode : NSInteger {
    UIViewContentModeScaleToFill,
    UIViewContentModeScaleAspectFit,
    UIViewContentModeScaleAspectFill,
    UIViewContentModeRedraw,
    UIViewContentModeCenter,
    UIViewContentModeTop,
    UIViewContentModeBottom,
    UIViewContentModeLeft,
    UIViewContentModeRight,
    UIViewContentModeTopLeft,
    UIViewContentModeTopRight,
    UIViewContentModeBottomLeft,
    UIViewContentModeBottomRight,
};

typedef enum UIViewAnimationTransition : NSInteger UIViewAnimationTransition; enum UIViewAnimationTransition : NSInteger {
    UIViewAnimationTransitionNone,
    UIViewAnimationTransitionFlipFromLeft,
    UIViewAnimationTransitionFlipFromRight,
    UIViewAnimationTransitionCurlUp,
    UIViewAnimationTransitionCurlDown,
};

typedef enum UIViewAutoresizing : NSUInteger UIViewAutoresizing; enum UIViewAutoresizing : NSUInteger {
    UIViewAutoresizingNone = 0,
    UIViewAutoresizingFlexibleLeftMargin = 1 << 0,
    UIViewAutoresizingFlexibleWidth = 1 << 1,
    UIViewAutoresizingFlexibleRightMargin = 1 << 2,
    UIViewAutoresizingFlexibleTopMargin = 1 << 3,
    UIViewAutoresizingFlexibleHeight = 1 << 4,
    UIViewAutoresizingFlexibleBottomMargin = 1 << 5
};

typedef enum UIViewAnimationOptions : NSUInteger UIViewAnimationOptions; enum UIViewAnimationOptions : NSUInteger {
    UIViewAnimationOptionLayoutSubviews = 1 << 0,
    UIViewAnimationOptionAllowUserInteraction = 1 << 1,
    UIViewAnimationOptionBeginFromCurrentState = 1 << 2,
    UIViewAnimationOptionRepeat = 1 << 3,
    UIViewAnimationOptionAutoreverse = 1 << 4,
    UIViewAnimationOptionOverrideInheritedDuration = 1 << 5,
    UIViewAnimationOptionOverrideInheritedCurve = 1 << 6,
    UIViewAnimationOptionAllowAnimatedContent = 1 << 7,
    UIViewAnimationOptionShowHideTransitionViews = 1 << 8,
    UIViewAnimationOptionOverrideInheritedOptions = 1 << 9,

    UIViewAnimationOptionCurveEaseInOut = 0 << 16,
    UIViewAnimationOptionCurveEaseIn = 1 << 16,
    UIViewAnimationOptionCurveEaseOut = 2 << 16,
    UIViewAnimationOptionCurveLinear = 3 << 16,

    UIViewAnimationOptionTransitionNone = 0 << 20,
    UIViewAnimationOptionTransitionFlipFromLeft = 1 << 20,
    UIViewAnimationOptionTransitionFlipFromRight = 2 << 20,
    UIViewAnimationOptionTransitionCurlUp = 3 << 20,
    UIViewAnimationOptionTransitionCurlDown = 4 << 20,
    UIViewAnimationOptionTransitionCrossDissolve = 5 << 20,
    UIViewAnimationOptionTransitionFlipFromTop = 6 << 20,
    UIViewAnimationOptionTransitionFlipFromBottom = 7 << 20,
} __attribute__((availability(ios,introduced=4_0)));

typedef enum UIViewKeyframeAnimationOptions : NSUInteger UIViewKeyframeAnimationOptions; enum UIViewKeyframeAnimationOptions : NSUInteger {
    UIViewKeyframeAnimationOptionLayoutSubviews = UIViewAnimationOptionLayoutSubviews,
    UIViewKeyframeAnimationOptionAllowUserInteraction = UIViewAnimationOptionAllowUserInteraction,
    UIViewKeyframeAnimationOptionBeginFromCurrentState = UIViewAnimationOptionBeginFromCurrentState,
    UIViewKeyframeAnimationOptionRepeat = UIViewAnimationOptionRepeat,
    UIViewKeyframeAnimationOptionAutoreverse = UIViewAnimationOptionAutoreverse,
    UIViewKeyframeAnimationOptionOverrideInheritedDuration = UIViewAnimationOptionOverrideInheritedDuration,
    UIViewKeyframeAnimationOptionOverrideInheritedOptions = UIViewAnimationOptionOverrideInheritedOptions,

    UIViewKeyframeAnimationOptionCalculationModeLinear = 0 << 10,
    UIViewKeyframeAnimationOptionCalculationModeDiscrete = 1 << 10,
    UIViewKeyframeAnimationOptionCalculationModePaced = 2 << 10,
    UIViewKeyframeAnimationOptionCalculationModeCubic = 3 << 10,
    UIViewKeyframeAnimationOptionCalculationModeCubicPaced = 4 << 10
} __attribute__((availability(ios,introduced=7_0)));

typedef enum UISystemAnimation : NSUInteger UISystemAnimation; enum UISystemAnimation : NSUInteger {
    UISystemAnimationDelete,
} __attribute__((availability(ios,introduced=7_0)));

typedef enum UIViewTintAdjustmentMode : NSInteger UIViewTintAdjustmentMode; enum UIViewTintAdjustmentMode : NSInteger {
    UIViewTintAdjustmentModeAutomatic,

    UIViewTintAdjustmentModeNormal,
    UIViewTintAdjustmentModeDimmed,
} __attribute__((availability(ios,introduced=7_0)));

typedef enum UISemanticContentAttribute : NSInteger UISemanticContentAttribute; enum UISemanticContentAttribute : NSInteger {
    UISemanticContentAttributeUnspecified = 0,
    UISemanticContentAttributePlayback,
    UISemanticContentAttributeSpatial,
    UISemanticContentAttributeForceLeftToRight,
    UISemanticContentAttributeForceRightToLeft
} __attribute__((availability(ios,introduced=9_0)));

@protocol UICoordinateSpace <NSObject>

- (CGPoint)convertPoint:(CGPoint)point toCoordinateSpace:(id <UICoordinateSpace>)coordinateSpace __attribute__((availability(ios,introduced=8_0)));
- (CGPoint)convertPoint:(CGPoint)point fromCoordinateSpace:(id <UICoordinateSpace>)coordinateSpace __attribute__((availability(ios,introduced=8_0)));
- (CGRect)convertRect:(CGRect)rect toCoordinateSpace:(id <UICoordinateSpace>)coordinateSpace __attribute__((availability(ios,introduced=8_0)));
- (CGRect)convertRect:(CGRect)rect fromCoordinateSpace:(id <UICoordinateSpace>)coordinateSpace __attribute__((availability(ios,introduced=8_0)));

@property (readonly, nonatomic) CGRect bounds __attribute__((availability(ios,introduced=8_0)));

@end

@class UIBezierPath, UIEvent, UIWindow, UIViewController, UIColor, UIGestureRecognizer, UIMotionEffect, CALayer, UILayoutGuide;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIView : UIResponder <NSCoding, UIAppearance, UIAppearanceContainer, UIDynamicItem, UITraitEnvironment, UICoordinateSpace, UIFocusItem, CALayerDelegate>


@property(class, nonatomic, readonly) Class layerClass;




- (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@property(nonatomic,getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
@property(nonatomic) NSInteger tag;
@property(nonatomic,readonly,strong) CALayer *layer;


@property(nonatomic,readonly) BOOL canBecomeFocused __attribute__((availability(ios,introduced=9_0)));



@property (readonly, nonatomic, getter=isFocused) BOOL focused __attribute__((availability(ios,introduced=9_0)));

@property (nonatomic) UISemanticContentAttribute semanticContentAttribute __attribute__((availability(ios,introduced=9_0)));


+ (UIUserInterfaceLayoutDirection)userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute)attribute __attribute__((availability(ios,introduced=9_0)));


+ (UIUserInterfaceLayoutDirection)userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute)semanticContentAttribute relativeToLayoutDirection:(UIUserInterfaceLayoutDirection)layoutDirection __attribute__((availability(ios,introduced=10_0)));


@property (readonly, nonatomic) UIUserInterfaceLayoutDirection effectiveUserInterfaceLayoutDirection __attribute__((availability(ios,introduced=10_0)));

@end

@interface UIView(UIViewGeometry)


@property(nonatomic) CGRect frame;


@property(nonatomic) CGRect bounds;
@property(nonatomic) CGPoint center;
@property(nonatomic) CGAffineTransform transform;
@property(nonatomic) CGFloat contentScaleFactor __attribute__((availability(ios,introduced=4_0)));

@property(nonatomic,getter=isMultipleTouchEnabled) BOOL multipleTouchEnabled __attribute__((availability(tvos,unavailable)));
@property(nonatomic,getter=isExclusiveTouch) BOOL exclusiveTouch __attribute__((availability(tvos,unavailable)));

- (nullable UIView *)hitTest:(CGPoint)point withEvent:(nullable UIEvent *)event;
- (BOOL)pointInside:(CGPoint)point withEvent:(nullable UIEvent *)event;

- (CGPoint)convertPoint:(CGPoint)point toView:(nullable UIView *)view;
- (CGPoint)convertPoint:(CGPoint)point fromView:(nullable UIView *)view;
- (CGRect)convertRect:(CGRect)rect toView:(nullable UIView *)view;
- (CGRect)convertRect:(CGRect)rect fromView:(nullable UIView *)view;

@property(nonatomic) BOOL autoresizesSubviews;
@property(nonatomic) UIViewAutoresizing autoresizingMask;

- (CGSize)sizeThatFits:(CGSize)size;
- (void)sizeToFit;

@end

@interface UIView(UIViewHierarchy)

@property(nullable, nonatomic,readonly) UIView *superview;
@property(nonatomic,readonly,copy) NSArray<__kindof UIView *> *subviews;
@property(nullable, nonatomic,readonly) UIWindow *window;

- (void)removeFromSuperview;
- (void)insertSubview:(UIView *)view atIndex:(NSInteger)index;
- (void)exchangeSubviewAtIndex:(NSInteger)index1 withSubviewAtIndex:(NSInteger)index2;

- (void)addSubview:(UIView *)view;
- (void)insertSubview:(UIView *)view belowSubview:(UIView *)siblingSubview;
- (void)insertSubview:(UIView *)view aboveSubview:(UIView *)siblingSubview;

- (void)bringSubviewToFront:(UIView *)view;
- (void)sendSubviewToBack:(UIView *)view;

- (void)didAddSubview:(UIView *)subview;
- (void)willRemoveSubview:(UIView *)subview;

- (void)willMoveToSuperview:(nullable UIView *)newSuperview;
- (void)didMoveToSuperview;
- (void)willMoveToWindow:(nullable UIWindow *)newWindow;
- (void)didMoveToWindow;

- (BOOL)isDescendantOfView:(UIView *)view;
- (nullable __kindof UIView *)viewWithTag:(NSInteger)tag;


- (void)setNeedsLayout;
- (void)layoutIfNeeded;

- (void)layoutSubviews;






@property (nonatomic) UIEdgeInsets layoutMargins __attribute__((availability(ios,introduced=8_0)));
@property (nonatomic) BOOL preservesSuperviewLayoutMargins __attribute__((availability(ios,introduced=8_0)));
- (void)layoutMarginsDidChange __attribute__((availability(ios,introduced=8_0)));



@property(readonly,strong) UILayoutGuide *layoutMarginsGuide __attribute__((availability(ios,introduced=9_0)));


@property (nonatomic, readonly, strong) UILayoutGuide *readableContentGuide __attribute__((availability(ios,introduced=9_0)));
@end

@interface UIView(UIViewRendering)

- (void)drawRect:(CGRect)rect;

- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(CGRect)rect;

@property(nonatomic) BOOL clipsToBounds;
@property(nullable, nonatomic,copy) UIColor *backgroundColor __attribute__((annotate("ui_appearance_selector")));
@property(nonatomic) CGFloat alpha;
@property(nonatomic,getter=isOpaque) BOOL opaque;
@property(nonatomic) BOOL clearsContextBeforeDrawing;
@property(nonatomic,getter=isHidden) BOOL hidden;
@property(nonatomic) UIViewContentMode contentMode;
@property(nonatomic) CGRect contentStretch __attribute__((availability(ios,introduced=3_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));

@property(nullable, nonatomic,strong) UIView *maskView __attribute__((availability(ios,introduced=8_0)));







@property(null_resettable, nonatomic, strong) UIColor *tintColor __attribute__((availability(ios,introduced=7_0)));







@property(nonatomic) UIViewTintAdjustmentMode tintAdjustmentMode __attribute__((availability(ios,introduced=7_0)));




- (void)tintColorDidChange __attribute__((availability(ios,introduced=7_0)));

@end

@interface UIView(UIViewAnimation)

+ (void)beginAnimations:(nullable NSString *)animationID context:(nullable void *)context;
+ (void)commitAnimations;


+ (void)setAnimationDelegate:(nullable id)delegate;
+ (void)setAnimationWillStartSelector:(nullable SEL)selector;
+ (void)setAnimationDidStopSelector:(nullable SEL)selector;
+ (void)setAnimationDuration:(NSTimeInterval)duration;
+ (void)setAnimationDelay:(NSTimeInterval)delay;
+ (void)setAnimationStartDate:(NSDate *)startDate;
+ (void)setAnimationCurve:(UIViewAnimationCurve)curve;
+ (void)setAnimationRepeatCount:(float)repeatCount;
+ (void)setAnimationRepeatAutoreverses:(BOOL)repeatAutoreverses;
+ (void)setAnimationBeginsFromCurrentState:(BOOL)fromCurrentState;

+ (void)setAnimationTransition:(UIViewAnimationTransition)transition forView:(UIView *)view cache:(BOOL)cache;

+ (void)setAnimationsEnabled:(BOOL)enabled;

@property(class, nonatomic, readonly) BOOL areAnimationsEnabled;



+ (void)performWithoutAnimation:(void (__attribute__((noescape)) ^)(void))actionsWithoutAnimation __attribute__((availability(ios,introduced=7_0)));


@property(class, nonatomic, readonly) NSTimeInterval inheritedAnimationDuration __attribute__((availability(ios,introduced=9_0)));




@end

@interface UIView(UIViewAnimationWithBlocks)

+ (void)animateWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewAnimationOptions)options animations:(void (^)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=4_0)));

+ (void)animateWithDuration:(NSTimeInterval)duration animations:(void (^)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=4_0)));

+ (void)animateWithDuration:(NSTimeInterval)duration animations:(void (^)(void))animations __attribute__((availability(ios,introduced=4_0)));


+ (void)animateWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay usingSpringWithDamping:(CGFloat)dampingRatio initialSpringVelocity:(CGFloat)velocity options:(UIViewAnimationOptions)options animations:(void (^)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=7_0)));

+ (void)transitionWithView:(UIView *)view duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=4_0)));

+ (void)transitionFromView:(UIView *)fromView toView:(UIView *)toView duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=4_0)));



+ (void)performSystemAnimation:(UISystemAnimation)animation onViews:(NSArray<__kindof UIView *> *)views options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))parallelAnimations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=7_0)));

@end

@interface UIView (UIViewKeyframeAnimations)

+ (void)animateKeyframesWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewKeyframeAnimationOptions)options animations:(void (^)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=7_0)));
+ (void)addKeyframeWithRelativeStartTime:(double)frameStartTime relativeDuration:(double)frameDuration animations:(void (^)(void))animations __attribute__((availability(ios,introduced=7_0)));

@end

@interface UIView (UIViewGestureRecognizers)

@property(nullable, nonatomic,copy) NSArray<__kindof UIGestureRecognizer *> *gestureRecognizers __attribute__((availability(ios,introduced=3_2)));

- (void)addGestureRecognizer:(UIGestureRecognizer*)gestureRecognizer __attribute__((availability(ios,introduced=3_2)));
- (void)removeGestureRecognizer:(UIGestureRecognizer*)gestureRecognizer __attribute__((availability(ios,introduced=3_2)));




- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer __attribute__((availability(ios,introduced=6_0)));

@end

@interface UIView (UIViewMotionEffects)






- (void)addMotionEffect:(UIMotionEffect *)effect __attribute__((availability(ios,introduced=7_0)));



- (void)removeMotionEffect:(UIMotionEffect *)effect __attribute__((availability(ios,introduced=7_0)));

@property (copy, nonatomic) NSArray<__kindof UIMotionEffect *> *motionEffects __attribute__((availability(ios,introduced=7_0)));

@end






typedef enum UILayoutConstraintAxis : NSInteger UILayoutConstraintAxis; enum UILayoutConstraintAxis : NSInteger {
    UILayoutConstraintAxisHorizontal = 0,
    UILayoutConstraintAxisVertical = 1
};






@interface UIView (UIConstraintBasedLayoutInstallingConstraints)

@property(nonatomic,readonly) NSArray<__kindof NSLayoutConstraint *> *constraints __attribute__((availability(ios,introduced=6_0)));

- (void)addConstraint:(NSLayoutConstraint *)constraint __attribute__((availability(ios,introduced=6_0)));
- (void)addConstraints:(NSArray<__kindof NSLayoutConstraint *> *)constraints __attribute__((availability(ios,introduced=6_0)));
- (void)removeConstraint:(NSLayoutConstraint *)constraint __attribute__((availability(ios,introduced=6_0)));
- (void)removeConstraints:(NSArray<__kindof NSLayoutConstraint *> *)constraints __attribute__((availability(ios,introduced=6_0)));
@end
# 424 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 3
@interface UIView (UIConstraintBasedLayoutCoreMethods)
- (void)updateConstraintsIfNeeded __attribute__((availability(ios,introduced=6_0)));
- (void)updateConstraints __attribute__((availability(ios,introduced=6_0))) __attribute__((objc_requires_super));
- (BOOL)needsUpdateConstraints __attribute__((availability(ios,introduced=6_0)));
- (void)setNeedsUpdateConstraints __attribute__((availability(ios,introduced=6_0)));
@end



@interface UIView (UIConstraintBasedCompatibility)







@property(nonatomic) BOOL translatesAutoresizingMaskIntoConstraints __attribute__((availability(ios,introduced=6_0)));




@property(class, nonatomic, readonly) BOOL requiresConstraintBasedLayout __attribute__((availability(ios,introduced=6_0)));




@end



@interface UIView (UIConstraintBasedLayoutLayering)
# 466 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 3
- (CGRect)alignmentRectForFrame:(CGRect)frame __attribute__((availability(ios,introduced=6_0)));
- (CGRect)frameForAlignmentRect:(CGRect)alignmentRect __attribute__((availability(ios,introduced=6_0)));




@property(nonatomic, readonly) UIEdgeInsets alignmentRectInsets __attribute__((availability(ios,introduced=6_0)));




- (UIView *)viewForBaselineLayout __attribute__((availability(ios,introduced=6_0,deprecated=9_0,message="" "Override -viewForFirstBaselineLayout or -viewForLastBaselineLayout as appropriate, instead"))) __attribute__((availability(tvos,unavailable)));
# 488 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 3
@property(readonly,strong) UIView *viewForFirstBaselineLayout __attribute__((availability(ios,introduced=9_0)));
# 497 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 3
@property(readonly,strong) UIView *viewForLastBaselineLayout __attribute__((availability(ios,introduced=9_0)));
# 514 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 3
extern __attribute__((visibility ("default"))) const CGFloat UIViewNoIntrinsicMetric __attribute__((availability(ios,introduced=6_0)));

@property(nonatomic, readonly) CGSize intrinsicContentSize __attribute__((availability(ios,introduced=6_0)));



- (void)invalidateIntrinsicContentSize __attribute__((availability(ios,introduced=6_0)));

- (UILayoutPriority)contentHuggingPriorityForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6_0)));
- (void)setContentHuggingPriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6_0)));

- (UILayoutPriority)contentCompressionResistancePriorityForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6_0)));
- (void)setContentCompressionResistancePriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6_0)));
@end



extern __attribute__((visibility ("default"))) const CGSize UILayoutFittingCompressedSize __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) const CGSize UILayoutFittingExpandedSize __attribute__((availability(ios,introduced=6_0)));

@interface UIView (UIConstraintBasedLayoutFittingSize)



- (CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize __attribute__((availability(ios,introduced=6_0)));
- (CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize withHorizontalFittingPriority:(UILayoutPriority)horizontalFittingPriority verticalFittingPriority:(UILayoutPriority)verticalFittingPriority __attribute__((availability(ios,introduced=8_0)));
@end

@interface UIView (UILayoutGuideSupport)



@property(nonatomic,readonly,copy) NSArray<__kindof UILayoutGuide *> *layoutGuides __attribute__((availability(ios,introduced=9_0)));



- (void)addLayoutGuide:(UILayoutGuide *)layoutGuide __attribute__((availability(ios,introduced=9_0)));



- (void)removeLayoutGuide:(UILayoutGuide *)layoutGuide __attribute__((availability(ios,introduced=9_0)));
@end

@class NSLayoutXAxisAnchor,NSLayoutYAxisAnchor,NSLayoutDimension;
@interface UIView (UIViewLayoutConstraintCreation)


@property(readonly, strong) NSLayoutXAxisAnchor *leadingAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutXAxisAnchor *trailingAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutXAxisAnchor *leftAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutXAxisAnchor *rightAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutYAxisAnchor *topAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutYAxisAnchor *bottomAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutDimension *widthAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutDimension *heightAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutXAxisAnchor *centerXAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutYAxisAnchor *centerYAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutYAxisAnchor *firstBaselineAnchor __attribute__((availability(ios,introduced=9_0)));
@property(readonly, strong) NSLayoutYAxisAnchor *lastBaselineAnchor __attribute__((availability(ios,introduced=9_0)));

@end





@interface UIView (UIConstraintBasedLayoutDebugging)




- (NSArray<__kindof NSLayoutConstraint *> *)constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6_0)));







@property(nonatomic, readonly) BOOL hasAmbiguousLayout __attribute__((availability(ios,introduced=6_0)));




- (void)exerciseAmbiguityInLayout __attribute__((availability(ios,introduced=6_0)));
@end



@interface UILayoutGuide (UIConstraintBasedLayoutDebugging)




- (NSArray<__kindof NSLayoutConstraint *> *)constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=10_0)));






@property(nonatomic, readonly) BOOL hasAmbiguousLayout __attribute__((availability(ios,introduced=10_0)));



@end

@interface UIView (UIStateRestoration)
@property (nullable, nonatomic, copy) NSString *restorationIdentifier __attribute__((availability(ios,introduced=6_0)));
- (void) encodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
- (void) decodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
@end

@interface UIView (UISnapshotting)
# 642 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIView.h" 3
- (nullable UIView *)snapshotViewAfterScreenUpdates:(BOOL)afterUpdates __attribute__((availability(ios,introduced=7_0)));
- (nullable UIView *)resizableSnapshotViewFromRect:(CGRect)rect afterScreenUpdates:(BOOL)afterUpdates withCapInsets:(UIEdgeInsets)capInsets __attribute__((availability(ios,introduced=7_0)));

- (BOOL)drawViewHierarchyInRect:(CGRect)rect afterScreenUpdates:(BOOL)afterUpdates __attribute__((availability(ios,introduced=7_0)));
@end
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPickerView.h" 2 3




@protocol UIPickerViewDataSource, UIPickerViewDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) @interface UIPickerView : UIView <NSCoding>

@property(nullable,nonatomic,weak) id<UIPickerViewDataSource> dataSource;
@property(nullable,nonatomic,weak) id<UIPickerViewDelegate> delegate;
@property(nonatomic) BOOL showsSelectionIndicator;


@property(nonatomic,readonly) NSInteger numberOfComponents;
- (NSInteger)numberOfRowsInComponent:(NSInteger)component;
- (CGSize)rowSizeForComponent:(NSInteger)component;




- (nullable UIView *)viewForRow:(NSInteger)row forComponent:(NSInteger)component;


- (void)reloadAllComponents;
- (void)reloadComponent:(NSInteger)component;


- (void)selectRow:(NSInteger)row inComponent:(NSInteger)component animated:(BOOL)animated;

- (NSInteger)selectedRowInComponent:(NSInteger)component;

@end


__attribute__((availability(tvos,unavailable)))
@protocol UIPickerViewDataSource<NSObject>
@required


- (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView;


- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component;
@end

__attribute__((availability(tvos,unavailable)))
@protocol UIPickerViewDelegate<NSObject>
@optional


- (CGFloat)pickerView:(UIPickerView *)pickerView widthForComponent:(NSInteger)component __attribute__((availability(tvos,unavailable)));
- (CGFloat)pickerView:(UIPickerView *)pickerView rowHeightForComponent:(NSInteger)component __attribute__((availability(tvos,unavailable)));




- (nullable NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component __attribute__((availability(tvos,unavailable)));
- (nullable NSAttributedString *)pickerView:(UIPickerView *)pickerView attributedTitleForRow:(NSInteger)row forComponent:(NSInteger)component __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
- (UIView *)pickerView:(UIPickerView *)pickerView viewForRow:(NSInteger)row forComponent:(NSInteger)component reusingView:(nullable UIView *)view __attribute__((availability(tvos,unavailable)));

- (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component __attribute__((availability(tvos,unavailable)));

@end
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityAdditions.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIScrollView.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIScrollView.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIRefreshControl.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIControl.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIControl.h" 3
typedef enum UIControlEvents : NSUInteger UIControlEvents; enum UIControlEvents : NSUInteger {
    UIControlEventTouchDown = 1 << 0,
    UIControlEventTouchDownRepeat = 1 << 1,
    UIControlEventTouchDragInside = 1 << 2,
    UIControlEventTouchDragOutside = 1 << 3,
    UIControlEventTouchDragEnter = 1 << 4,
    UIControlEventTouchDragExit = 1 << 5,
    UIControlEventTouchUpInside = 1 << 6,
    UIControlEventTouchUpOutside = 1 << 7,
    UIControlEventTouchCancel = 1 << 8,

    UIControlEventValueChanged = 1 << 12,
    UIControlEventPrimaryActionTriggered __attribute__((availability(ios,introduced=9_0))) = 1 << 13,

    UIControlEventEditingDidBegin = 1 << 16,
    UIControlEventEditingChanged = 1 << 17,
    UIControlEventEditingDidEnd = 1 << 18,
    UIControlEventEditingDidEndOnExit = 1 << 19,

    UIControlEventAllTouchEvents = 0x00000FFF,
    UIControlEventAllEditingEvents = 0x000F0000,
    UIControlEventApplicationReserved = 0x0F000000,
    UIControlEventSystemReserved = 0xF0000000,
    UIControlEventAllEvents = 0xFFFFFFFF
};

typedef enum UIControlContentVerticalAlignment : NSInteger UIControlContentVerticalAlignment; enum UIControlContentVerticalAlignment : NSInteger {
    UIControlContentVerticalAlignmentCenter = 0,
    UIControlContentVerticalAlignmentTop = 1,
    UIControlContentVerticalAlignmentBottom = 2,
    UIControlContentVerticalAlignmentFill = 3,
};

typedef enum UIControlContentHorizontalAlignment : NSInteger UIControlContentHorizontalAlignment; enum UIControlContentHorizontalAlignment : NSInteger {
    UIControlContentHorizontalAlignmentCenter = 0,
    UIControlContentHorizontalAlignmentLeft = 1,
    UIControlContentHorizontalAlignmentRight = 2,
    UIControlContentHorizontalAlignmentFill = 3,
};

typedef enum UIControlState : NSUInteger UIControlState; enum UIControlState : NSUInteger {
    UIControlStateNormal = 0,
    UIControlStateHighlighted = 1 << 0,
    UIControlStateDisabled = 1 << 1,
    UIControlStateSelected = 1 << 2,
    UIControlStateFocused __attribute__((availability(ios,introduced=9_0))) = 1 << 3,
    UIControlStateApplication = 0x00FF0000,
    UIControlStateReserved = 0xFF000000
};

@class UITouch;
@class UIEvent;



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIControl : UIView


@property(nonatomic,getter=isEnabled) BOOL enabled;
@property(nonatomic,getter=isSelected) BOOL selected;
@property(nonatomic,getter=isHighlighted) BOOL highlighted;
@property(nonatomic) UIControlContentVerticalAlignment contentVerticalAlignment;
@property(nonatomic) UIControlContentHorizontalAlignment contentHorizontalAlignment;

@property(nonatomic,readonly) UIControlState state;
@property(nonatomic,readonly,getter=isTracking) BOOL tracking;
@property(nonatomic,readonly,getter=isTouchInside) BOOL touchInside;

- (BOOL)beginTrackingWithTouch:(UITouch *)touch withEvent:(nullable UIEvent *)event;
- (BOOL)continueTrackingWithTouch:(UITouch *)touch withEvent:(nullable UIEvent *)event;
- (void)endTrackingWithTouch:(nullable UITouch *)touch withEvent:(nullable UIEvent *)event;
- (void)cancelTrackingWithEvent:(nullable UIEvent *)event;




- (void)addTarget:(nullable id)target action:(SEL)action forControlEvents:(UIControlEvents)controlEvents;


- (void)removeTarget:(nullable id)target action:(nullable SEL)action forControlEvents:(UIControlEvents)controlEvents;



@property(nonatomic,readonly) NSSet *allTargets;
@property(nonatomic,readonly) UIControlEvents allControlEvents;





- (nullable NSArray<NSString *> *)actionsForTarget:(nullable id)target forControlEvent:(UIControlEvents)controlEvent;


- (void)sendAction:(SEL)action to:(nullable id)target forEvent:(nullable UIEvent *)event;
- (void)sendActionsForControlEvents:(UIControlEvents)controlEvents;

@end
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIRefreshControl.h" 2 3




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable))) @interface UIRefreshControl : UIControl







- (instancetype)init;

@property (nonatomic, readonly, getter=isRefreshing) BOOL refreshing;

@property (null_resettable, nonatomic, strong) UIColor *tintColor;
@property (nullable, nonatomic, strong) NSAttributedString *attributedTitle __attribute__((annotate("ui_appearance_selector")));


- (void)beginRefreshing __attribute__((availability(ios,introduced=6_0)));

- (void)endRefreshing __attribute__((availability(ios,introduced=6_0)));

@end
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIScrollView.h" 2 3



typedef enum UIScrollViewIndicatorStyle : NSInteger UIScrollViewIndicatorStyle; enum UIScrollViewIndicatorStyle : NSInteger {
    UIScrollViewIndicatorStyleDefault,
    UIScrollViewIndicatorStyleBlack,
    UIScrollViewIndicatorStyleWhite
};

typedef enum UIScrollViewKeyboardDismissMode : NSInteger UIScrollViewKeyboardDismissMode; enum UIScrollViewKeyboardDismissMode : NSInteger {
    UIScrollViewKeyboardDismissModeNone,
    UIScrollViewKeyboardDismissModeOnDrag,
    UIScrollViewKeyboardDismissModeInteractive,
} __attribute__((availability(ios,introduced=7_0)));

extern __attribute__((visibility ("default"))) const CGFloat UIScrollViewDecelerationRateNormal __attribute__((availability(ios,introduced=3_0)));
extern __attribute__((visibility ("default"))) const CGFloat UIScrollViewDecelerationRateFast __attribute__((availability(ios,introduced=3_0)));

@class UIEvent, UIImageView, UIPanGestureRecognizer, UIPinchGestureRecognizer;
@protocol UIScrollViewDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIScrollView : UIView <NSCoding>

@property(nonatomic) CGPoint contentOffset;
@property(nonatomic) CGSize contentSize;
@property(nonatomic) UIEdgeInsets contentInset;
@property(nullable,nonatomic,weak) id<UIScrollViewDelegate> delegate;
@property(nonatomic,getter=isDirectionalLockEnabled) BOOL directionalLockEnabled;
@property(nonatomic) BOOL bounces;
@property(nonatomic) BOOL alwaysBounceVertical;
@property(nonatomic) BOOL alwaysBounceHorizontal;
@property(nonatomic,getter=isPagingEnabled) BOOL pagingEnabled __attribute__((availability(tvos,unavailable)));
@property(nonatomic,getter=isScrollEnabled) BOOL scrollEnabled;
@property(nonatomic) BOOL showsHorizontalScrollIndicator;
@property(nonatomic) BOOL showsVerticalScrollIndicator;
@property(nonatomic) UIEdgeInsets scrollIndicatorInsets;
@property(nonatomic) UIScrollViewIndicatorStyle indicatorStyle;
@property(nonatomic) CGFloat decelerationRate __attribute__((availability(ios,introduced=3_0)));

- (void)setContentOffset:(CGPoint)contentOffset animated:(BOOL)animated;
- (void)scrollRectToVisible:(CGRect)rect animated:(BOOL)animated;

- (void)flashScrollIndicators;
# 66 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIScrollView.h" 3
@property(nonatomic,readonly,getter=isTracking) BOOL tracking;
@property(nonatomic,readonly,getter=isDragging) BOOL dragging;
@property(nonatomic,readonly,getter=isDecelerating) BOOL decelerating;

@property(nonatomic) BOOL delaysContentTouches;
@property(nonatomic) BOOL canCancelContentTouches;





- (BOOL)touchesShouldBegin:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event inContentView:(UIView *)view;



- (BOOL)touchesShouldCancelInContentView:(UIView *)view;
# 90 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIScrollView.h" 3
@property(nonatomic) CGFloat minimumZoomScale;
@property(nonatomic) CGFloat maximumZoomScale;

@property(nonatomic) CGFloat zoomScale __attribute__((availability(ios,introduced=3_0)));
- (void)setZoomScale:(CGFloat)scale animated:(BOOL)animated __attribute__((availability(ios,introduced=3_0)));
- (void)zoomToRect:(CGRect)rect animated:(BOOL)animated __attribute__((availability(ios,introduced=3_0)));

@property(nonatomic) BOOL bouncesZoom;

@property(nonatomic,readonly,getter=isZooming) BOOL zooming;
@property(nonatomic,readonly,getter=isZoomBouncing) BOOL zoomBouncing;



@property(nonatomic) BOOL scrollsToTop __attribute__((availability(tvos,unavailable)));





@property(nonatomic, readonly) UIPanGestureRecognizer *panGestureRecognizer __attribute__((availability(ios,introduced=5_0)));

@property(nullable, nonatomic, readonly) UIPinchGestureRecognizer *pinchGestureRecognizer __attribute__((availability(ios,introduced=5_0)));

@property(nonatomic, readonly) UIGestureRecognizer *directionalPressGestureRecognizer __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0)));

@property(nonatomic) UIScrollViewKeyboardDismissMode keyboardDismissMode __attribute__((availability(ios,introduced=7_0)));

@property (nonatomic, strong, nullable) UIRefreshControl *refreshControl __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));

@end

@protocol UIScrollViewDelegate<NSObject>

@optional

- (void)scrollViewDidScroll:(UIScrollView *)scrollView;
- (void)scrollViewDidZoom:(UIScrollView *)scrollView __attribute__((availability(ios,introduced=3_2)));


- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView;

- (void)scrollViewWillEndDragging:(UIScrollView *)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint *)targetContentOffset __attribute__((availability(ios,introduced=5_0)));

- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate;

- (void)scrollViewWillBeginDecelerating:(UIScrollView *)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView;

- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)scrollView;

- (nullable UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView;
- (void)scrollViewWillBeginZooming:(UIScrollView *)scrollView withView:(nullable UIView *)view __attribute__((availability(ios,introduced=3_2)));
- (void)scrollViewDidEndZooming:(UIScrollView *)scrollView withView:(nullable UIView *)view atScale:(CGFloat)scale;

- (BOOL)scrollViewShouldScrollToTop:(UIScrollView *)scrollView;
- (void)scrollViewDidScrollToTop:(UIScrollView *)scrollView;

@end
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityAdditions.h" 2 3
# 21 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityAdditions.h" 3
__attribute__((availability(tvos,unavailable)))
@protocol UIPickerViewAccessibilityDelegate <UIPickerViewDelegate>

@optional
- (nullable NSString *)pickerView:(UIPickerView *)pickerView accessibilityLabelForComponent:(NSInteger)component;
- (nullable NSString *)pickerView:(UIPickerView *)pickerView accessibilityHintForComponent:(NSInteger)component;

@end







@protocol UIScrollViewAccessibilityDelegate <UIScrollViewDelegate>

@optional
- (nullable NSString *)accessibilityScrollStatusForScrollView:(UIScrollView *)scrollView;

@end
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityConstants.h" 1 3
# 27 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityConstants.h" 3
typedef uint64_t UIAccessibilityTraits;


extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitNone;


extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitButton;


extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitLink;


extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitHeader __attribute__((availability(ios,introduced=6_0)));


extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitSearchField;


extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitImage;





extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitSelected;


extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitPlaysSound;


extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitKeyboardKey;


extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitStaticText;







extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitSummaryElement;


extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitNotEnabled;





extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitUpdatesFrequently;





extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitStartsMediaSession __attribute__((availability(ios,introduced=4_0)));





extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitAdjustable __attribute__((availability(ios,introduced=4_0)));


extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitAllowsDirectInteraction __attribute__((availability(ios,introduced=5_0)));






extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitCausesPageTurn __attribute__((availability(ios,introduced=5_0)));





extern __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitTabBar __attribute__((availability(ios,introduced=10_0)));
# 114 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityConstants.h" 3
typedef uint32_t UIAccessibilityNotifications;





extern __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityScreenChangedNotification;






extern __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityLayoutChangedNotification;






extern __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityAnnouncementNotification __attribute__((availability(ios,introduced=4_0)));





extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityAnnouncementDidFinishNotification __attribute__((availability(ios,introduced=6_0)));


extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityAnnouncementKeyStringValue __attribute__((availability(ios,introduced=6_0)));


extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityAnnouncementKeyWasSuccessful __attribute__((availability(ios,introduced=6_0)));




extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityElementFocusedNotification __attribute__((availability(ios,introduced=9_0)));


extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityFocusedElementKey __attribute__((availability(ios,introduced=9_0)));


extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityUnfocusedElementKey __attribute__((availability(ios,introduced=9_0)));


extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityAssistiveTechnologyKey __attribute__((availability(ios,introduced=9_0)));
# 169 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityConstants.h" 3
extern __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityPageScrolledNotification __attribute__((availability(ios,introduced=4_2)));
# 182 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityConstants.h" 3
extern __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityPauseAssistiveTechnologyNotification __attribute__((availability(ios,introduced=8_0)));
extern __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityResumeAssistiveTechnologyNotification __attribute__((availability(ios,introduced=8_0)));





extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityNotificationSwitchControlIdentifier __attribute__((availability(ios,introduced=8_0)));


extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityNotificationVoiceOverIdentifier __attribute__((availability(ios,introduced=9_0)));





typedef enum UIAccessibilityNavigationStyle : NSInteger UIAccessibilityNavigationStyle; enum UIAccessibilityNavigationStyle : NSInteger {




    UIAccessibilityNavigationStyleAutomatic = 0,




    UIAccessibilityNavigationStyleSeparate = 1,





    UIAccessibilityNavigationStyleCombined = 2,
} __attribute__((availability(ios,introduced=8_0)));
# 228 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityConstants.h" 3
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilitySpeechAttributePunctuation __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility ("default"))) NSString *const UIAccessibilitySpeechAttributeLanguage __attribute__((availability(ios,introduced=7_0)));




extern __attribute__((visibility ("default"))) NSString *const UIAccessibilitySpeechAttributePitch __attribute__((availability(ios,introduced=7_0)));
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityCustomAction.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityCustomAction.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) @interface UIAccessibilityCustomAction : NSObject

- (instancetype)initWithName:(NSString *)name target:(nullable id)target selector:(SEL)selector;




@property (nonatomic, copy) NSString *name;




@property (nullable, nonatomic, weak) id target;







@property (nonatomic, assign) SEL selector;

@end
# 17 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityCustomRotor.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextInput.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextInput.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextInputTraits.h" 1 3
# 18 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextInputTraits.h" 3
typedef enum UITextAutocapitalizationType : NSInteger UITextAutocapitalizationType; enum UITextAutocapitalizationType : NSInteger {
    UITextAutocapitalizationTypeNone,
    UITextAutocapitalizationTypeWords,
    UITextAutocapitalizationTypeSentences,
    UITextAutocapitalizationTypeAllCharacters,
};
# 33 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextInputTraits.h" 3
typedef enum UITextAutocorrectionType : NSInteger UITextAutocorrectionType; enum UITextAutocorrectionType : NSInteger {
    UITextAutocorrectionTypeDefault,
    UITextAutocorrectionTypeNo,
    UITextAutocorrectionTypeYes,
};






typedef enum UITextSpellCheckingType : NSInteger UITextSpellCheckingType; enum UITextSpellCheckingType : NSInteger {
    UITextSpellCheckingTypeDefault,
    UITextSpellCheckingTypeNo,
    UITextSpellCheckingTypeYes,
} __attribute__((availability(ios,introduced=5_0)));
# 60 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextInputTraits.h" 3
typedef enum UIKeyboardType : NSInteger UIKeyboardType; enum UIKeyboardType : NSInteger {
    UIKeyboardTypeDefault,
    UIKeyboardTypeASCIICapable,
    UIKeyboardTypeNumbersAndPunctuation,
    UIKeyboardTypeURL,
    UIKeyboardTypeNumberPad,
    UIKeyboardTypePhonePad,
    UIKeyboardTypeNamePhonePad,
    UIKeyboardTypeEmailAddress,
    UIKeyboardTypeDecimalPad __attribute__((availability(ios,introduced=4_1))),
    UIKeyboardTypeTwitter __attribute__((availability(ios,introduced=5_0))),
    UIKeyboardTypeWebSearch __attribute__((availability(ios,introduced=7_0))),
    UIKeyboardTypeASCIICapableNumberPad __attribute__((availability(ios,introduced=10_0))),

    UIKeyboardTypeAlphabet = UIKeyboardTypeASCIICapable,

};
# 87 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextInputTraits.h" 3
typedef enum UIKeyboardAppearance : NSInteger UIKeyboardAppearance; enum UIKeyboardAppearance : NSInteger {
    UIKeyboardAppearanceDefault,
    UIKeyboardAppearanceDark __attribute__((availability(ios,introduced=7_0))),
    UIKeyboardAppearanceLight __attribute__((availability(ios,introduced=7_0))),
    UIKeyboardAppearanceAlert = UIKeyboardAppearanceDark,
};
# 102 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextInputTraits.h" 3
typedef enum UIReturnKeyType : NSInteger UIReturnKeyType; enum UIReturnKeyType : NSInteger {
    UIReturnKeyDefault,
    UIReturnKeyGo,
    UIReturnKeyGoogle,
    UIReturnKeyJoin,
    UIReturnKeyNext,
    UIReturnKeyRoute,
    UIReturnKeySearch,
    UIReturnKeySend,
    UIReturnKeyYahoo,
    UIReturnKeyDone,
    UIReturnKeyEmergencyCall,
    UIReturnKeyContinue __attribute__((availability(ios,introduced=9_0))),
};




typedef NSString * UITextContentType;
# 129 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextInputTraits.h" 3
@protocol UITextInputTraits <NSObject>

@optional

@property(nonatomic) UITextAutocapitalizationType autocapitalizationType;
@property(nonatomic) UITextAutocorrectionType autocorrectionType;
@property(nonatomic) UITextSpellCheckingType spellCheckingType __attribute__((availability(ios,introduced=5_0)));
@property(nonatomic) UIKeyboardType keyboardType;
@property(nonatomic) UIKeyboardAppearance keyboardAppearance;
@property(nonatomic) UIReturnKeyType returnKeyType;
@property(nonatomic) BOOL enablesReturnKeyAutomatically;
@property(nonatomic,getter=isSecureTextEntry) BOOL secureTextEntry;


@property(nonatomic,copy) UITextContentType textContentType __attribute__((availability(ios,introduced=10_0)));

@end


extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeName __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeNamePrefix __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeGivenName __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeMiddleName __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeFamilyName __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeNameSuffix __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeNickname __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeJobTitle __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeOrganizationName __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeLocation __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeFullStreetAddress __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeStreetAddressLine1 __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeStreetAddressLine2 __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeAddressCity __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeAddressState __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeAddressCityAndState __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeSublocality __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeCountryName __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypePostalCode __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeTelephoneNumber __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeEmailAddress __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeURL __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeCreditCardNumber __attribute__((availability(ios,introduced=10_0)));
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextInput.h" 2 3








@protocol UIKeyInput <UITextInputTraits>


@property(nonatomic, readonly) BOOL hasText;



- (void)insertText:(NSString *)text;
- (void)deleteBackward;

@end





@class NSTextAlternatives;
@class UITextPosition;
@class UITextRange;
@class UITextSelectionRect;
@class UIBarButtonItemGroup;

@protocol UITextInputTokenizer;
@protocol UITextInputDelegate;

typedef enum UITextStorageDirection : NSInteger UITextStorageDirection; enum UITextStorageDirection : NSInteger {
    UITextStorageDirectionForward = 0,
    UITextStorageDirectionBackward
};

typedef enum UITextLayoutDirection : NSInteger UITextLayoutDirection; enum UITextLayoutDirection : NSInteger {
    UITextLayoutDirectionRight = 2,
    UITextLayoutDirectionLeft,
    UITextLayoutDirectionUp,
    UITextLayoutDirectionDown
};

typedef NSInteger UITextDirection;

typedef enum UITextWritingDirection : NSInteger UITextWritingDirection; enum UITextWritingDirection : NSInteger {
    UITextWritingDirectionNatural = -1,
    UITextWritingDirectionLeftToRight = 0,
    UITextWritingDirectionRightToLeft,
};

typedef enum UITextGranularity : NSInteger UITextGranularity; enum UITextGranularity : NSInteger {
    UITextGranularityCharacter,
    UITextGranularityWord,
    UITextGranularitySentence,
    UITextGranularityParagraph,
    UITextGranularityLine,
    UITextGranularityDocument
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_1))) @interface UIDictationPhrase : NSObject {
    @private
        NSString *_text;
        NSArray * _Nullable _alternativeInterpretations;
}




@property (nonatomic, readonly) NSString *text;
@property (nullable, nonatomic, readonly) NSArray<NSString *> *alternativeInterpretations;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) @interface UITextInputAssistantItem : NSObject


@property (nonatomic, readwrite, assign) BOOL allowsHidingShortcuts;

@property (nonatomic, readwrite, copy) NSArray<UIBarButtonItemGroup *> *leadingBarButtonGroups;

@property (nonatomic, readwrite, copy) NSArray<UIBarButtonItemGroup *> *trailingBarButtonGroups;

@end

@protocol UITextInput <UIKeyInput>
@required


- (nullable NSString *)textInRange:(UITextRange *)range;
- (void)replaceRange:(UITextRange *)range withText:(NSString *)text;




@property (nullable, readwrite, copy) UITextRange *selectedTextRange;
# 118 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextInput.h" 3
@property (nullable, nonatomic, readonly) UITextRange *markedTextRange;
@property (nullable, nonatomic, copy) NSDictionary *markedTextStyle;
- (void)setMarkedText:(nullable NSString *)markedText selectedRange:(NSRange)selectedRange;
- (void)unmarkText;


@property (nonatomic, readonly) UITextPosition *beginningOfDocument;
@property (nonatomic, readonly) UITextPosition *endOfDocument;


- (nullable UITextRange *)textRangeFromPosition:(UITextPosition *)fromPosition toPosition:(UITextPosition *)toPosition;
- (nullable UITextPosition *)positionFromPosition:(UITextPosition *)position offset:(NSInteger)offset;
- (nullable UITextPosition *)positionFromPosition:(UITextPosition *)position inDirection:(UITextLayoutDirection)direction offset:(NSInteger)offset;


- (NSComparisonResult)comparePosition:(UITextPosition *)position toPosition:(UITextPosition *)other;
- (NSInteger)offsetFromPosition:(UITextPosition *)from toPosition:(UITextPosition *)toPosition;


@property (nullable, nonatomic, weak) id <UITextInputDelegate> inputDelegate;


@property (nonatomic, readonly) id <UITextInputTokenizer> tokenizer;


- (nullable UITextPosition *)positionWithinRange:(UITextRange *)range farthestInDirection:(UITextLayoutDirection)direction;
- (nullable UITextRange *)characterRangeByExtendingPosition:(UITextPosition *)position inDirection:(UITextLayoutDirection)direction;


- (UITextWritingDirection)baseWritingDirectionForPosition:(UITextPosition *)position inDirection:(UITextStorageDirection)direction;
- (void)setBaseWritingDirection:(UITextWritingDirection)writingDirection forRange:(UITextRange *)range;


- (CGRect)firstRectForRange:(UITextRange *)range;
- (CGRect)caretRectForPosition:(UITextPosition *)position;
- (NSArray *)selectionRectsForRange:(UITextRange *)range __attribute__((availability(ios,introduced=6_0)));


- (nullable UITextPosition *)closestPositionToPoint:(CGPoint)point;
- (nullable UITextPosition *)closestPositionToPoint:(CGPoint)point withinRange:(UITextRange *)range;
- (nullable UITextRange *)characterRangeAtPoint:(CGPoint)point;

@optional

- (BOOL)shouldChangeTextInRange:(UITextRange *)range replacementText:(NSString *)text __attribute__((availability(ios,introduced=6_0)));



- (nullable NSDictionary<NSString *,id> *)textStylingAtPosition:(UITextPosition *)position inDirection:(UITextStorageDirection)direction;


- (nullable UITextPosition *)positionWithinRange:(UITextRange *)range atCharacterOffset:(NSInteger)offset;
- (NSInteger)characterOffsetOfPosition:(UITextPosition *)position withinRange:(UITextRange *)range;



@property (nonatomic, readonly) __kindof UIView *textInputView;




@property (nonatomic) UITextStorageDirection selectionAffinity;





- (void)insertDictationResult:(NSArray<UIDictationPhrase *> *)dictationResult;


- (void)dictationRecordingDidEnd;
- (void)dictationRecognitionFailed;






@property(nonatomic, readonly) id insertDictationResultPlaceholder;



- (CGRect)frameForDictationResultPlaceholder:(id)placeholder;

- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)willInsertResult;





- (void)beginFloatingCursorAtPoint:(CGPoint)point __attribute__((availability(ios,introduced=9_0)));
- (void)updateFloatingCursorAtPoint:(CGPoint)point __attribute__((availability(ios,introduced=9_0)));
- (void)endFloatingCursor __attribute__((availability(ios,introduced=9_0)));

@end




extern __attribute__((visibility ("default"))) NSString *const UITextInputTextBackgroundColorKey __attribute__((availability(ios,introduced=3_2,deprecated=8_0,message="" "Use NSBackgroundColorAttributeName instead"))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UITextInputTextColorKey __attribute__((availability(ios,introduced=3_2,deprecated=8_0,message="" "Use NSForegroundColorAttributeName instead"))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UITextInputTextFontKey __attribute__((availability(ios,introduced=3_2,deprecated=8_0,message="" "Use NSFontAttributeName instead"))) __attribute__((availability(tvos,unavailable)));





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) @interface UITextPosition : NSObject

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) @interface UITextRange : NSObject

@property (nonatomic, readonly, getter=isEmpty) BOOL empty;
@property (nonatomic, readonly) UITextPosition *start;
@property (nonatomic, readonly) UITextPosition *end;

@end




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface UITextSelectionRect : NSObject

@property (nonatomic, readonly) CGRect rect;
@property (nonatomic, readonly) UITextWritingDirection writingDirection;
@property (nonatomic, readonly) BOOL containsStart;
@property (nonatomic, readonly) BOOL containsEnd;
@property (nonatomic, readonly) BOOL isVertical;

@end


@protocol UITextInputDelegate <NSObject>

- (void)selectionWillChange:(nullable id <UITextInput>)textInput;
- (void)selectionDidChange:(nullable id <UITextInput>)textInput;
- (void)textWillChange:(nullable id <UITextInput>)textInput;
- (void)textDidChange:(nullable id <UITextInput>)textInput;

@end



@protocol UITextInputTokenizer <NSObject>

@required

- (nullable UITextRange *)rangeEnclosingPosition:(UITextPosition *)position withGranularity:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
- (BOOL)isPosition:(UITextPosition *)position atBoundary:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
- (nullable UITextPosition *)positionFromPosition:(UITextPosition *)position toBoundary:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
- (BOOL)isPosition:(UITextPosition *)position withinTextUnit:(UITextGranularity)granularity inDirection:(UITextDirection)direction;

@end




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) @interface UITextInputStringTokenizer : NSObject <UITextInputTokenizer>

- (instancetype)initWithTextInput:(UIResponder <UITextInput> *)textInput;

@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) @interface UITextInputMode : NSObject <NSSecureCoding>

@property (nullable, nonatomic, readonly, strong) NSString *primaryLanguage;


+ (nullable UITextInputMode *)currentInputMode __attribute__((availability(ios,introduced=4_2,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));

@property(class, nonatomic, readonly) NSArray<UITextInputMode *> *activeInputModes;




@end

extern __attribute__((visibility ("default"))) NSNotificationName const UITextInputCurrentInputModeDidChangeNotification __attribute__((availability(ios,introduced=4_2)));
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityCustomRotor.h" 2 3
# 27 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityCustomRotor.h" 3
@class UIAccessibilityCustomRotor, UIAccessibilityCustomRotorItemResult, UIAccessibilityCustomRotorSearchPredicate;

typedef enum UIAccessibilityCustomRotorDirection : NSInteger UIAccessibilityCustomRotorDirection; enum UIAccessibilityCustomRotorDirection : NSInteger {
    UIAccessibilityCustomRotorDirectionPrevious __attribute__((availability(ios,introduced=10_0))),
    UIAccessibilityCustomRotorDirectionNext __attribute__((availability(ios,introduced=10_0))),
};

typedef UIAccessibilityCustomRotorItemResult *_Nullable(^UIAccessibilityCustomRotorSearch)(UIAccessibilityCustomRotorSearchPredicate *predicate);


@interface NSObject (UIAccessibilityCustomRotor)
@property (nonatomic, retain, nullable) NSArray<UIAccessibilityCustomRotor *> *accessibilityCustomRotors __attribute__((availability(ios,introduced=10_0)));
@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIAccessibilityCustomRotorSearchPredicate : NSObject
@property (nonatomic, retain) UIAccessibilityCustomRotorItemResult *currentItem;
@property (nonatomic) UIAccessibilityCustomRotorDirection searchDirection;
@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIAccessibilityCustomRotor : NSObject

- (instancetype)initWithName:(NSString *)name itemSearchBlock:(UIAccessibilityCustomRotorSearch)itemSearchBlock;


@property (nonatomic, copy) NSString *name;



@property (nonatomic, copy) UIAccessibilityCustomRotorSearch itemSearchBlock;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIAccessibilityCustomRotorItemResult : NSObject

- (instancetype)initWithTargetElement:(id<NSObject>)targetElement targetRange:(nullable UITextRange *)targetRange;


@property (nonatomic, weak) id<NSObject> targetElement;



@property (nullable, nonatomic, retain) UITextRange *targetRange;

@end
# 18 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityElement.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityElement.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityIdentification.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityIdentification.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIImage.h" 1 3
# 20 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIImage.h" 3
@class UITraitCollection, UIImageAsset;



@class UIGraphicsImageRendererFormat;


typedef enum UIImageOrientation : NSInteger UIImageOrientation; enum UIImageOrientation : NSInteger {
    UIImageOrientationUp,
    UIImageOrientationDown,
    UIImageOrientationLeft,
    UIImageOrientationRight,
    UIImageOrientationUpMirrored,
    UIImageOrientationDownMirrored,
    UIImageOrientationLeftMirrored,
    UIImageOrientationRightMirrored,
};






typedef enum UIImageResizingMode : NSInteger UIImageResizingMode; enum UIImageResizingMode : NSInteger {
    UIImageResizingModeTile,
    UIImageResizingModeStretch,
};



typedef enum UIImageRenderingMode : NSInteger UIImageRenderingMode; enum UIImageRenderingMode : NSInteger {
    UIImageRenderingModeAutomatic,

    UIImageRenderingModeAlwaysOriginal,
    UIImageRenderingModeAlwaysTemplate,
} __attribute__((availability(ios,introduced=7_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIImage : NSObject <NSSecureCoding>

+ (nullable UIImage *)imageNamed:(NSString *)name;

+ (nullable UIImage *)imageNamed:(NSString *)name inBundle:(nullable NSBundle *)bundle compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=8_0)));


+ (nullable UIImage *)imageWithContentsOfFile:(NSString *)path;
+ (nullable UIImage *)imageWithData:(NSData *)data;
+ (nullable UIImage *)imageWithData:(NSData *)data scale:(CGFloat)scale __attribute__((availability(ios,introduced=6_0)));
+ (UIImage *)imageWithCGImage:(CGImageRef)cgImage;
+ (UIImage *)imageWithCGImage:(CGImageRef)cgImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios,introduced=4_0)));

+ (UIImage *)imageWithCIImage:(CIImage *)ciImage __attribute__((availability(ios,introduced=5_0)));
+ (UIImage *)imageWithCIImage:(CIImage *)ciImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios,introduced=6_0)));


- (nullable instancetype)initWithContentsOfFile:(NSString *)path;
- (nullable instancetype)initWithData:(NSData *)data;
- (nullable instancetype)initWithData:(NSData *)data scale:(CGFloat)scale __attribute__((availability(ios,introduced=6_0)));
- (instancetype)initWithCGImage:(CGImageRef)cgImage;
- (instancetype)initWithCGImage:(CGImageRef)cgImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios,introduced=4_0)));

- (instancetype)initWithCIImage:(CIImage *)ciImage __attribute__((availability(ios,introduced=5_0)));
- (instancetype)initWithCIImage:(CIImage *)ciImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios,introduced=6_0)));


@property(nonatomic,readonly) CGSize size;
@property(nullable, nonatomic,readonly) CGImageRef CGImage;
- (nullable CGImageRef)CGImage __attribute__((objc_returns_inner_pointer)) __attribute__((cf_returns_not_retained));

@property(nullable,nonatomic,readonly) CIImage *CIImage __attribute__((availability(ios,introduced=5_0)));

@property(nonatomic,readonly) UIImageOrientation imageOrientation;
@property(nonatomic,readonly) CGFloat scale __attribute__((availability(ios,introduced=4_0)));



+ (nullable UIImage *)animatedImageNamed:(NSString *)name duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=5_0)));
+ (nullable UIImage *)animatedResizableImageNamed:(NSString *)name capInsets:(UIEdgeInsets)capInsets duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=5_0)));
+ (nullable UIImage *)animatedResizableImageNamed:(NSString *)name capInsets:(UIEdgeInsets)capInsets resizingMode:(UIImageResizingMode)resizingMode duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=6_0)));
+ (nullable UIImage *)animatedImageWithImages:(NSArray<UIImage *> *)images duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=5_0)));

@property(nullable, nonatomic,readonly) NSArray<UIImage *> *images __attribute__((availability(ios,introduced=5_0)));
@property(nonatomic,readonly) NSTimeInterval duration __attribute__((availability(ios,introduced=5_0)));



- (void)drawAtPoint:(CGPoint)point;
- (void)drawAtPoint:(CGPoint)point blendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;
- (void)drawInRect:(CGRect)rect;
- (void)drawInRect:(CGRect)rect blendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;

- (void)drawAsPatternInRect:(CGRect)rect;

- (UIImage *)resizableImageWithCapInsets:(UIEdgeInsets)capInsets __attribute__((availability(ios,introduced=5_0)));
- (UIImage *)resizableImageWithCapInsets:(UIEdgeInsets)capInsets resizingMode:(UIImageResizingMode)resizingMode __attribute__((availability(ios,introduced=6_0)));

@property(nonatomic,readonly) UIEdgeInsets capInsets __attribute__((availability(ios,introduced=5_0)));
@property(nonatomic,readonly) UIImageResizingMode resizingMode __attribute__((availability(ios,introduced=6_0)));






- (UIImage *)imageWithAlignmentRectInsets:(UIEdgeInsets)alignmentInsets __attribute__((availability(ios,introduced=6_0)));
@property(nonatomic,readonly) UIEdgeInsets alignmentRectInsets __attribute__((availability(ios,introduced=6_0)));


- (UIImage *)imageWithRenderingMode:(UIImageRenderingMode)renderingMode __attribute__((availability(ios,introduced=7_0)));
@property(nonatomic, readonly) UIImageRenderingMode renderingMode __attribute__((availability(ios,introduced=7_0)));



@property (nonatomic, readonly) UIGraphicsImageRendererFormat *imageRendererFormat __attribute__((availability(ios,introduced=10_0)));



@property (nonatomic, readonly, copy) UITraitCollection *traitCollection __attribute__((availability(ios,introduced=8_0)));
@property (nullable, nonatomic, readonly) UIImageAsset *imageAsset __attribute__((availability(ios,introduced=8_0)));




- (UIImage *)imageFlippedForRightToLeftLayoutDirection __attribute__((availability(ios,introduced=9_0)));
@property (nonatomic, readonly) BOOL flipsForRightToLeftLayoutDirection __attribute__((availability(ios,introduced=9_0)));


- (UIImage *)imageWithHorizontallyFlippedOrientation __attribute__((availability(ios,introduced=10_0)));

@end

@interface UIImage(UIImageDeprecated)



- (UIImage *)stretchableImageWithLeftCapWidth:(NSInteger)leftCapWidth topCapHeight:(NSInteger)topCapHeight __attribute__((availability(tvos,unavailable)));
@property(nonatomic,readonly) NSInteger leftCapWidth __attribute__((availability(tvos,unavailable)));
@property(nonatomic,readonly) NSInteger topCapHeight __attribute__((availability(tvos,unavailable)));

@end



@interface CIImage(UIKitAdditions)

- (nullable instancetype)initWithImage:(UIImage *)image __attribute__((availability(ios,introduced=5_0)));
- (nullable instancetype)initWithImage:(UIImage *)image options:(nullable NSDictionary *)options __attribute__((availability(ios,introduced=5_0)));

@end


extern __attribute__((visibility ("default"))) NSData * _Nullable UIImagePNGRepresentation(UIImage * _Nonnull image);
extern __attribute__((visibility ("default"))) NSData * _Nullable UIImageJPEGRepresentation(UIImage * _Nonnull image, CGFloat compressionQuality);
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityIdentification.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIBarItem.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIBarItem.h" 3
@class UIImage;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIBarItem : NSObject <NSCoding, UIAppearance>

- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@property(nonatomic,getter=isEnabled) BOOL enabled;
@property(nullable, nonatomic,copy) NSString *title;
@property(nullable, nonatomic,strong) UIImage *image;
@property(nullable, nonatomic,strong) UIImage *landscapeImagePhone __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic) UIEdgeInsets imageInsets;
@property(nonatomic) UIEdgeInsets landscapeImagePhoneInsets __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic) NSInteger tag;



- (void)setTitleTextAttributes:(nullable NSDictionary<NSString *,id> *)attributes forState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable NSDictionary<NSString *,id> *)titleTextAttributesForState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

@end
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityIdentification.h" 2 3



@protocol UIAccessibilityIdentification <NSObject>
@required





@property(nullable, nonatomic, copy) NSString *accessibilityIdentifier __attribute__((availability(ios,introduced=5_0)));

@end

@interface UIView (UIAccessibility) <UIAccessibilityIdentification>
@end

@interface UIBarItem (UIAccessibility) <UIAccessibilityIdentification>
@end





@interface UIImage (UIAccessibility) <UIAccessibilityIdentification>
@end
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityElement.h" 2 3
# 23 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityElement.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0))) @interface UIAccessibilityElement : NSObject<UIAccessibilityIdentification>


- (instancetype)initWithAccessibilityContainer:(id)container;

@property (nullable, nonatomic, assign) id accessibilityContainer;
@property (nonatomic, assign) BOOL isAccessibilityElement;
@property (nullable, nonatomic, strong) NSString *accessibilityLabel;
@property (nullable, nonatomic, strong) NSString *accessibilityHint;
@property (nullable, nonatomic, strong) NSString *accessibilityValue;
@property (nonatomic, assign) CGRect accessibilityFrame;
@property (nonatomic, assign) UIAccessibilityTraits accessibilityTraits;



@property (nonatomic, assign) CGRect accessibilityFrameInContainerSpace __attribute__((availability(ios,introduced=10_0)));

@end
# 19 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityZoom.h" 1 3
# 17 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityZoom.h" 3
typedef enum UIAccessibilityZoomType : NSInteger UIAccessibilityZoomType; enum UIAccessibilityZoomType : NSInteger {
    UIAccessibilityZoomTypeInsertionPoint,
} __attribute__((availability(ios,introduced=5_0)));

extern __attribute__((visibility ("default"))) void UIAccessibilityZoomFocusChanged(UIAccessibilityZoomType type, CGRect frame, UIView * _Nonnull view) __attribute__((availability(ios,introduced=5_0)));





extern __attribute__((visibility ("default"))) void UIAccessibilityRegisterGestureConflictWithZoom(void) __attribute__((availability(ios,introduced=5_0)));
# 21 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGuidedAccessRestrictions.h" 1 3
# 27 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGuidedAccessRestrictions.h" 3
typedef enum UIGuidedAccessRestrictionState : NSInteger UIGuidedAccessRestrictionState; enum UIGuidedAccessRestrictionState : NSInteger {
    UIGuidedAccessRestrictionStateAllow,
    UIGuidedAccessRestrictionStateDeny
};
# 39 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGuidedAccessRestrictions.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @protocol UIGuidedAccessRestrictionDelegate <NSObject>

@required







@property(nonatomic, readonly, nullable) NSArray<NSString *> *guidedAccessRestrictionIdentifiers;





- (void)guidedAccessRestrictionWithIdentifier:(NSString *)restrictionIdentifier didChangeState:(UIGuidedAccessRestrictionState)newRestrictionState;


- (nullable NSString *)textForGuidedAccessRestrictionWithIdentifier:(NSString *)restrictionIdentifier;

@optional


- (nullable NSString *)detailTextForGuidedAccessRestrictionWithIdentifier:(NSString *)restrictionIdentifier;

@end


extern __attribute__((visibility ("default"))) UIGuidedAccessRestrictionState UIGuidedAccessRestrictionStateForIdentifier(NSString *restrictionIdentifier) __attribute__((availability(ios,introduced=7_0)));
# 22 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 2 3
# 41 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
@interface NSObject (UIAccessibility)







@property (nonatomic) BOOL isAccessibilityElement;
# 61 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
@property (nullable, nonatomic, copy) NSString *accessibilityLabel;
# 70 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
@property (nullable, nonatomic, copy) NSString *accessibilityHint;
# 80 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
@property (nullable, nonatomic, copy) NSString *accessibilityValue;
# 92 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
@property (nonatomic) UIAccessibilityTraits accessibilityTraits;







@property (nonatomic) CGRect accessibilityFrame;




extern __attribute__((visibility ("default"))) CGRect UIAccessibilityConvertFrameToScreenCoordinates(CGRect rect, UIView *view) __attribute__((availability(ios,introduced=7_0)));







@property (nullable, nonatomic, copy) UIBezierPath *accessibilityPath __attribute__((availability(ios,introduced=7_0)));




extern __attribute__((visibility ("default"))) UIBezierPath *UIAccessibilityConvertPathToScreenCoordinates(UIBezierPath *path, UIView *view) __attribute__((availability(ios,introduced=7_0)));





@property (nonatomic) CGPoint accessibilityActivationPoint __attribute__((availability(ios,introduced=5_0)));
# 133 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
@property (nullable, nonatomic, strong) NSString *accessibilityLanguage;





@property (nonatomic) BOOL accessibilityElementsHidden __attribute__((availability(ios,introduced=5_0)));






@property (nonatomic) BOOL accessibilityViewIsModal __attribute__((availability(ios,introduced=5_0)));
# 155 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
@property (nonatomic) BOOL shouldGroupAccessibilityChildren __attribute__((availability(ios,introduced=6_0)));
# 164 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
@property (nonatomic) UIAccessibilityNavigationStyle accessibilityNavigationStyle __attribute__((availability(ios,introduced=8_0)));







@property(nullable, nonatomic, copy) NSArray *accessibilityHeaderElements __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0)));

@end
# 193 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
@interface NSObject (UIAccessibilityContainer)




- (NSInteger)accessibilityElementCount;





- (nullable id)accessibilityElementAtIndex:(NSInteger)index;





- (NSInteger)indexOfAccessibilityElement:(id)element;




@property (nullable, nonatomic, strong) NSArray *accessibilityElements __attribute__((availability(ios,introduced=8_0)));

@end







@interface NSObject (UIAccessibilityFocus)


- (void)accessibilityElementDidBecomeFocused __attribute__((availability(ios,introduced=4_0)));
- (void)accessibilityElementDidLoseFocus __attribute__((availability(ios,introduced=4_0)));


- (BOOL)accessibilityElementIsFocused __attribute__((availability(ios,introduced=4_0)));


- (nullable NSSet<NSString *> *)accessibilityAssistiveTechnologyFocusedIdentifiers __attribute__((availability(ios,introduced=9_0)));





extern __attribute__((visibility ("default"))) _Nullable id UIAccessibilityFocusedElement(NSString * _Nullable assistiveTechnologyIdentifier) __attribute__((availability(ios,introduced=9_0)));

@end






@interface NSObject (UIAccessibilityAction)
# 259 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
- (BOOL)accessibilityActivate __attribute__((availability(ios,introduced=7_0)));







- (void)accessibilityIncrement __attribute__((availability(ios,introduced=4_0)));
- (void)accessibilityDecrement __attribute__((availability(ios,introduced=4_0)));
# 278 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
typedef enum UIAccessibilityScrollDirection : NSInteger UIAccessibilityScrollDirection; enum UIAccessibilityScrollDirection : NSInteger {
    UIAccessibilityScrollDirectionRight = 1,
    UIAccessibilityScrollDirectionLeft,
    UIAccessibilityScrollDirectionUp,
    UIAccessibilityScrollDirectionDown,
    UIAccessibilityScrollDirectionNext __attribute__((availability(ios,introduced=5_0))),
    UIAccessibilityScrollDirectionPrevious __attribute__((availability(ios,introduced=5_0))),
};

- (BOOL)accessibilityScroll:(UIAccessibilityScrollDirection)direction __attribute__((availability(ios,introduced=4_2)));
# 296 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
- (BOOL)accessibilityPerformEscape __attribute__((availability(ios,introduced=5_0)));







- (BOOL)accessibilityPerformMagicTap __attribute__((availability(ios,introduced=6_0)));







@property (nullable, nonatomic, strong) NSArray <UIAccessibilityCustomAction *> *accessibilityCustomActions __attribute__((availability(ios,introduced=8_0)));
@end







@protocol UIAccessibilityReadingContent
@required


- (NSInteger)accessibilityLineNumberForPoint:(CGPoint)point __attribute__((availability(ios,introduced=5_0)));


- (nullable NSString *)accessibilityContentForLineNumber:(NSInteger)lineNumber __attribute__((availability(ios,introduced=5_0)));


- (CGRect)accessibilityFrameForLineNumber:(NSInteger)lineNumber __attribute__((availability(ios,introduced=5_0)));


- (nullable NSString *)accessibilityPageContent __attribute__((availability(ios,introduced=5_0)));

@end
# 346 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h" 3
extern __attribute__((visibility ("default"))) void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, _Nullable id argument);







extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsVoiceOverRunning(void) __attribute__((availability(ios,introduced=4_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityVoiceOverStatusChanged __attribute__((availability(ios,introduced=4_0)));


extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsMonoAudioEnabled(void) __attribute__((availability(ios,introduced=5_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityMonoAudioStatusDidChangeNotification __attribute__((availability(ios,introduced=5_0)));


extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsClosedCaptioningEnabled(void) __attribute__((availability(ios,introduced=5_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityClosedCaptioningStatusDidChangeNotification __attribute__((availability(ios,introduced=5_0)));


extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsInvertColorsEnabled(void) __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityInvertColorsStatusDidChangeNotification __attribute__((availability(ios,introduced=6_0)));


extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsGuidedAccessEnabled(void) __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityGuidedAccessStatusDidChangeNotification __attribute__((availability(ios,introduced=6_0)));


extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsBoldTextEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityBoldTextStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsGrayscaleEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityGrayscaleStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsReduceTransparencyEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityReduceTransparencyStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsReduceMotionEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityReduceMotionStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern __attribute__((visibility ("default"))) BOOL UIAccessibilityDarkerSystemColorsEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityDarkerSystemColorsStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));





extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsSwitchControlRunning(void) __attribute__((availability(ios,introduced=8_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilitySwitchControlStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsSpeakSelectionEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilitySpeakSelectionStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsSpeakScreenEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilitySpeakScreenStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsShakeToUndoEnabled(void) __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityShakeToUndoDidChangeNotification __attribute__((availability(ios,introduced=9_0)));



extern __attribute__((visibility ("default"))) BOOL UIAccessibilityIsAssistiveTouchRunning(void) __attribute__((availability(ios,introduced=10_0)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityAssistiveTouchStatusDidChangeNotification __attribute__((availability(ios,introduced=10_0)));







extern __attribute__((visibility ("default"))) void UIAccessibilityRequestGuidedAccessSession(BOOL enable, void(^completionHandler)(BOOL didSucceed)) __attribute__((availability(ios,introduced=7_0)));

typedef enum UIAccessibilityHearingDeviceEar : NSUInteger UIAccessibilityHearingDeviceEar; enum UIAccessibilityHearingDeviceEar : NSUInteger {
    UIAccessibilityHearingDeviceEarNone = 0,
    UIAccessibilityHearingDeviceEarLeft = 1 << 1,
    UIAccessibilityHearingDeviceEarRight = 1 << 2,
    UIAccessibilityHearingDeviceEarBoth = UIAccessibilityHearingDeviceEarLeft | UIAccessibilityHearingDeviceEarRight,
} __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));


extern __attribute__((visibility ("default"))) UIAccessibilityHearingDeviceEar UIAccessibilityHearingDevicePairedEar(void) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIAccessibilityHearingDevicePairedEarDidChangeNotification __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3





# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIActivityIndicatorView.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIActivityIndicatorView.h" 3
typedef enum UIActivityIndicatorViewStyle : NSInteger UIActivityIndicatorViewStyle; enum UIActivityIndicatorViewStyle : NSInteger {
    UIActivityIndicatorViewStyleWhiteLarge,
    UIActivityIndicatorViewStyleWhite,
    UIActivityIndicatorViewStyleGray __attribute__((availability(tvos,unavailable))),
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIActivityIndicatorView : UIView <NSCoding>

- (instancetype)initWithActivityIndicatorStyle:(UIActivityIndicatorViewStyle)style __attribute__((objc_designated_initializer));
- (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
- (instancetype) initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

@property(nonatomic) UIActivityIndicatorViewStyle activityIndicatorViewStyle;
@property(nonatomic) BOOL hidesWhenStopped;

@property (nullable, readwrite, nonatomic, strong) UIColor *color __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

- (void)startAnimating;
- (void)stopAnimating;

@property(nonatomic, readonly, getter=isAnimating) BOOL animating;




@end
# 19 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIActivity.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIActivity.h" 3
@class UIImage, UIViewController;




typedef NSString * UIActivityType;


extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToFacebook __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToTwitter __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToWeibo __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeMessage __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeMail __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePrint __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeCopyToPasteboard __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeAssignToContact __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeSaveToCameraRoll __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeAddToReadingList __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToFlickr __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToVimeo __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToTencentWeibo __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeAirDrop __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeOpenInIBooks __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));

typedef enum UIActivityCategory : NSInteger UIActivityCategory; enum UIActivityCategory : NSInteger {
    UIActivityCategoryAction,
    UIActivityCategoryShare,
} __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable))) @interface UIActivity : NSObject



@property(class, nonatomic, readonly) UIActivityCategory activityCategory __attribute__((availability(ios,introduced=7_0)));





@property(nonatomic, readonly, nullable) UIActivityType activityType;
@property(nonatomic, readonly, nullable) NSString *activityTitle;
@property(nonatomic, readonly, nullable) UIImage *activityImage;






- (BOOL)canPerformWithActivityItems:(NSArray *)activityItems;
- (void)prepareWithActivityItems:(NSArray *)activityItems;


@property(nonatomic, readonly, nullable) UIViewController *activityViewController;



- (void)performActivity;



- (void)activityDidFinish:(BOOL)completed;
@end
# 20 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIActivityItemProvider.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIActivityItemProvider.h" 3
@class UIActivityViewController, UIImage;

@protocol UIActivityItemSource <NSObject>

@required

- (id)activityViewControllerPlaceholderItem:(UIActivityViewController *)activityViewController;
- (nullable id)activityViewController:(UIActivityViewController *)activityViewController itemForActivityType:(UIActivityType)activityType;

@optional

- (NSString *)activityViewController:(UIActivityViewController *)activityViewController subjectForActivityType:(nullable UIActivityType)activityType;
- (NSString *)activityViewController:(UIActivityViewController *)activityViewController dataTypeIdentifierForActivityType:(nullable UIActivityType)activityType;
- (nullable UIImage *)activityViewController:(UIActivityViewController *)activityViewController thumbnailImageForActivityType:(nullable UIActivityType)activityType suggestedSize:(CGSize)size;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable))) @interface UIActivityItemProvider : NSOperation <UIActivityItemSource>

- (instancetype)init __attribute__((unavailable));
- (instancetype)initWithPlaceholderItem:(id)placeholderItem __attribute__((objc_designated_initializer));

@property(nullable,nonatomic,strong,readonly) id placeholderItem;
@property(nullable,nonatomic,copy,readonly) UIActivityType activityType;


@property(nonnull, nonatomic, readonly) id item;




@end
# 21 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIActivityViewController.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIApplication.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIApplication.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAlert.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIActionSheet.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIActionSheet.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextField.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextField.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStringDrawing.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStringDrawing.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSParagraphStyle.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSParagraphStyle.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSText.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSText.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h" 1 3
# 20 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTDefines.h" 1 3
# 57 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTDefines.h" 3
@class UIFont;
@class UIFontDescriptor;







@class NSParagraphStyle;
@class NSTextTab;
# 21 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h" 2 3
# 32 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h" 3
typedef const struct __attribute__((objc_bridge_related(NSParagraphStyle,,))) __CTParagraphStyle * CTParagraphStyleRef;







CFTypeID CTParagraphStyleGetTypeID( void ) __attribute__((availability(ios,introduced=3.2)));
# 68 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h" 3
typedef enum CTTextAlignment : uint8_t CTTextAlignment; enum CTTextAlignment : uint8_t {
    kCTTextAlignmentLeft __attribute__((availability(ios,introduced=6.0))) = 0,
    kCTTextAlignmentRight __attribute__((availability(ios,introduced=6.0))) = 1,
    kCTTextAlignmentCenter __attribute__((availability(ios,introduced=6.0))) = 2,
    kCTTextAlignmentJustified __attribute__((availability(ios,introduced=6.0))) = 3,
    kCTTextAlignmentNatural __attribute__((availability(ios,introduced=6.0))) = 4,

    kCTLeftTextAlignment __attribute__((availability(ios,introduced=3.2,deprecated=9.0))) = kCTTextAlignmentLeft,
    kCTRightTextAlignment __attribute__((availability(ios,introduced=3.2,deprecated=9.0))) = kCTTextAlignmentRight,
    kCTCenterTextAlignment __attribute__((availability(ios,introduced=3.2,deprecated=9.0))) = kCTTextAlignmentCenter,
    kCTJustifiedTextAlignment __attribute__((availability(ios,introduced=3.2,deprecated=9.0))) = kCTTextAlignmentJustified,
    kCTNaturalTextAlignment __attribute__((availability(ios,introduced=3.2,deprecated=9.0))) = kCTTextAlignmentNatural
};
# 113 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h" 3
typedef enum CTLineBreakMode : uint8_t CTLineBreakMode; enum CTLineBreakMode : uint8_t {
    kCTLineBreakByWordWrapping = 0,
    kCTLineBreakByCharWrapping = 1,
    kCTLineBreakByClipping = 2,
    kCTLineBreakByTruncatingHead = 3,
    kCTLineBreakByTruncatingTail = 4,
    kCTLineBreakByTruncatingMiddle = 5
};
# 138 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h" 3
typedef enum CTWritingDirection : int8_t CTWritingDirection; enum CTWritingDirection : int8_t {
    kCTWritingDirectionNatural = -1,
    kCTWritingDirectionLeftToRight = 0,
    kCTWritingDirectionRightToLeft = 1
};
# 331 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h" 3
typedef enum CTParagraphStyleSpecifier : uint32_t CTParagraphStyleSpecifier; enum CTParagraphStyleSpecifier : uint32_t {
    kCTParagraphStyleSpecifierAlignment = 0,
    kCTParagraphStyleSpecifierFirstLineHeadIndent = 1,
    kCTParagraphStyleSpecifierHeadIndent = 2,
    kCTParagraphStyleSpecifierTailIndent = 3,
    kCTParagraphStyleSpecifierTabStops = 4,
    kCTParagraphStyleSpecifierDefaultTabInterval = 5,
    kCTParagraphStyleSpecifierLineBreakMode = 6,
    kCTParagraphStyleSpecifierLineHeightMultiple = 7,
    kCTParagraphStyleSpecifierMaximumLineHeight = 8,
    kCTParagraphStyleSpecifierMinimumLineHeight = 9,
    kCTParagraphStyleSpecifierLineSpacing __attribute__((availability(ios,introduced=3.2,deprecated=6.0))) = 10,
    kCTParagraphStyleSpecifierParagraphSpacing = 11,
    kCTParagraphStyleSpecifierParagraphSpacingBefore = 12,
    kCTParagraphStyleSpecifierBaseWritingDirection = 13,
    kCTParagraphStyleSpecifierMaximumLineSpacing = 14,
    kCTParagraphStyleSpecifierMinimumLineSpacing = 15,
    kCTParagraphStyleSpecifierLineSpacingAdjustment = 16,
    kCTParagraphStyleSpecifierLineBoundsOptions = 17,

    kCTParagraphStyleSpecifierCount
};
# 372 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h" 3
typedef struct CTParagraphStyleSetting
{
    CTParagraphStyleSpecifier spec;
    size_t valueSize;
    const void * value;

} CTParagraphStyleSetting;
# 414 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h" 3
CTParagraphStyleRef CTParagraphStyleCreate(
    const CTParagraphStyleSetting * _Nullable settings,
    size_t settingCount ) __attribute__((availability(ios,introduced=3.2)));
# 432 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h" 3
CTParagraphStyleRef CTParagraphStyleCreateCopy(
    CTParagraphStyleRef paragraphStyle ) __attribute__((availability(ios,introduced=3.2)));
# 475 "APPLE_SDKROOT/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h" 3
_Bool CTParagraphStyleGetValueForSpecifier(
    CTParagraphStyleRef paragraphStyle,
    CTParagraphStyleSpecifier spec,
    size_t valueBufferSize,
    void * valueBuffer ) __attribute__((availability(ios,introduced=3.2)));
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSText.h" 2 3






typedef enum NSTextAlignment : NSInteger NSTextAlignment; enum NSTextAlignment : NSInteger {
    NSTextAlignmentLeft = 0,

    NSTextAlignmentCenter = 1,
    NSTextAlignmentRight = 2,




    NSTextAlignmentJustified = 3,
    NSTextAlignmentNatural = 4,
} __attribute__((availability(ios,introduced=6_0)));


extern __attribute__((visibility ("default"))) CTTextAlignment NSTextAlignmentToCTTextAlignment(NSTextAlignment nsTextAlignment) __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSTextAlignment NSTextAlignmentFromCTTextAlignment(CTTextAlignment ctTextAlignment) __attribute__((availability(ios,introduced=6_0)));



typedef enum NSWritingDirection : NSInteger NSWritingDirection; enum NSWritingDirection : NSInteger {
    NSWritingDirectionNatural = -1,
    NSWritingDirectionLeftToRight = 0,
    NSWritingDirectionRightToLeft = 1
} __attribute__((availability(ios,introduced=6_0)));
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSParagraphStyle.h" 2 3





extern __attribute__((visibility ("default"))) NSString *const NSTabColumnTerminatorsAttributeName __attribute__((availability(ios,introduced=7_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface NSTextTab : NSObject <NSCopying, NSCoding, NSSecureCoding>

+ (NSCharacterSet *)columnTerminatorsForLocale:(nullable NSLocale *)aLocale __attribute__((availability(ios,introduced=7_0)));

- (instancetype)initWithTextAlignment:(NSTextAlignment)alignment location:(CGFloat)loc options:(NSDictionary<NSString *, id> *)options __attribute__((objc_designated_initializer));


@property(readonly, nonatomic) NSTextAlignment alignment;
@property(readonly, nonatomic) CGFloat location;
@property(readonly, nonatomic) NSDictionary<NSString *, id> *options;
@end



typedef enum NSLineBreakMode : NSInteger NSLineBreakMode; enum NSLineBreakMode : NSInteger {
    NSLineBreakByWordWrapping = 0,
    NSLineBreakByCharWrapping,
    NSLineBreakByClipping,
    NSLineBreakByTruncatingHead,
    NSLineBreakByTruncatingTail,
    NSLineBreakByTruncatingMiddle
} __attribute__((availability(ios,introduced=6_0)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface NSParagraphStyle : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>


@property(class, nonatomic, readonly) NSParagraphStyle *defaultParagraphStyle;




+ (NSWritingDirection)defaultWritingDirectionForLanguage:(nullable NSString *)languageName;

@property(readonly, nonatomic) CGFloat lineSpacing;
@property(readonly, nonatomic) CGFloat paragraphSpacing;
@property(readonly, nonatomic) NSTextAlignment alignment;



@property(readonly, nonatomic) CGFloat headIndent;
@property(readonly, nonatomic) CGFloat tailIndent;
@property(readonly, nonatomic) CGFloat firstLineHeadIndent;

@property(readonly, nonatomic) CGFloat minimumLineHeight;
@property(readonly, nonatomic) CGFloat maximumLineHeight;

@property(readonly, nonatomic) NSLineBreakMode lineBreakMode;

@property(readonly, nonatomic) NSWritingDirection baseWritingDirection;

@property(readonly, nonatomic) CGFloat lineHeightMultiple;
@property(readonly, nonatomic) CGFloat paragraphSpacingBefore;


@property(readonly, nonatomic) float hyphenationFactor;

@property(readonly,copy, nonatomic) NSArray<NSTextTab *> *tabStops __attribute__((availability(ios,introduced=7_0)));
@property(readonly, nonatomic) CGFloat defaultTabInterval __attribute__((availability(ios,introduced=7_0)));

@property(readonly, nonatomic) BOOL allowsDefaultTighteningForTruncation __attribute__((availability(ios,introduced=9_0)));
@end


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface NSMutableParagraphStyle : NSParagraphStyle

@property(nonatomic) CGFloat lineSpacing;
@property(nonatomic) CGFloat paragraphSpacing;
@property(nonatomic) NSTextAlignment alignment;
@property(nonatomic) CGFloat firstLineHeadIndent;
@property(nonatomic) CGFloat headIndent;
@property(nonatomic) CGFloat tailIndent;
@property(nonatomic) NSLineBreakMode lineBreakMode;
@property(nonatomic) CGFloat minimumLineHeight;
@property(nonatomic) CGFloat maximumLineHeight;
@property(nonatomic) NSWritingDirection baseWritingDirection;
@property(nonatomic) CGFloat lineHeightMultiple;
@property(nonatomic) CGFloat paragraphSpacingBefore;
@property(nonatomic) float hyphenationFactor;
@property(null_resettable, copy, nonatomic) NSArray<NSTextTab *> *tabStops __attribute__((availability(ios,introduced=7_0)));
@property(nonatomic) CGFloat defaultTabInterval __attribute__((availability(ios,introduced=7_0)));
@property(nonatomic) BOOL allowsDefaultTighteningForTruncation __attribute__((availability(ios,introduced=9_0)));

- (void)addTabStop:(NSTextTab *)anObject __attribute__((availability(ios,introduced=9_0)));
- (void)removeTabStop:(NSTextTab *)anObject __attribute__((availability(ios,introduced=9_0)));

- (void)setParagraphStyle:(NSParagraphStyle *)obj __attribute__((availability(ios,introduced=9_0)));

@end
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStringDrawing.h" 2 3







extern __attribute__((visibility ("default"))) NSString *const UITextAttributeFont __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use NSFontAttributeName"))) __attribute__((availability(tvos,unavailable)));

extern __attribute__((visibility ("default"))) NSString *const UITextAttributeTextColor __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use NSForegroundColorAttributeName"))) __attribute__((availability(tvos,unavailable)));

extern __attribute__((visibility ("default"))) NSString *const UITextAttributeTextShadowColor __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use NSShadowAttributeName with an NSShadow instance as the value"))) __attribute__((availability(tvos,unavailable)));

extern __attribute__((visibility ("default"))) NSString *const UITextAttributeTextShadowOffset __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use NSShadowAttributeName with an NSShadow instance as the value"))) __attribute__((availability(tvos,unavailable)));


typedef enum UILineBreakMode : NSInteger UILineBreakMode; enum UILineBreakMode : NSInteger {
    UILineBreakModeWordWrap = 0,
    UILineBreakModeCharacterWrap,
    UILineBreakModeClip,
    UILineBreakModeHeadTruncation,
    UILineBreakModeTailTruncation,
    UILineBreakModeMiddleTruncation,
} __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));


typedef enum UITextAlignment : NSInteger UITextAlignment; enum UITextAlignment : NSInteger {
    UITextAlignmentLeft = 0,
    UITextAlignmentCenter,
    UITextAlignmentRight,
} __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));

typedef enum UIBaselineAdjustment : NSInteger UIBaselineAdjustment; enum UIBaselineAdjustment : NSInteger {
    UIBaselineAdjustmentAlignBaselines = 0,
    UIBaselineAdjustmentAlignCenters,
    UIBaselineAdjustmentNone,
};

@class UIFont;



@interface NSString(UIStringDrawing)


- (CGSize)sizeWithFont:(UIFont *)font __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -sizeWithAttributes:"))) __attribute__((availability(tvos,unavailable)));
- (CGSize)sizeWithFont:(UIFont *)font forWidth:(CGFloat)width lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -boundingRectWithSize:options:attributes:context:"))) __attribute__((availability(tvos,unavailable)));


- (CGSize)drawAtPoint:(CGPoint)point withFont:(UIFont *)font __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawAtPoint:withAttributes:"))) __attribute__((availability(tvos,unavailable)));
- (CGSize)drawAtPoint:(CGPoint)point forWidth:(CGFloat)width withFont:(UIFont *)font lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));




- (CGSize)sizeWithFont:(UIFont *)font constrainedToSize:(CGSize)size __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -boundingRectWithSize:options:attributes:context:"))) __attribute__((availability(tvos,unavailable)));
- (CGSize)sizeWithFont:(UIFont *)font constrainedToSize:(CGSize)size lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -boundingRectWithSize:options:attributes:context:"))) __attribute__((availability(tvos,unavailable)));


- (CGSize)drawInRect:(CGRect)rect withFont:(UIFont *)font __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));
- (CGSize)drawInRect:(CGRect)rect withFont:(UIFont *)font lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));
- (CGSize)drawInRect:(CGRect)rect withFont:(UIFont *)font lineBreakMode:(NSLineBreakMode)lineBreakMode alignment:(NSTextAlignment)alignment __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));






- (CGSize)sizeWithFont:(UIFont *)font minFontSize:(CGFloat)minFontSize actualFontSize:(CGFloat *)actualFontSize forWidth:(CGFloat)width lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));

- (CGSize)drawAtPoint:(CGPoint)point forWidth:(CGFloat)width withFont:(UIFont *)font fontSize:(CGFloat)fontSize lineBreakMode:(NSLineBreakMode)lineBreakMode baselineAdjustment:(UIBaselineAdjustment)baselineAdjustment __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));

- (CGSize)drawAtPoint:(CGPoint)point forWidth:(CGFloat)width withFont:(UIFont *)font minFontSize:(CGFloat)minFontSize actualFontSize:(CGFloat *)actualFontSize lineBreakMode:(NSLineBreakMode)lineBreakMode baselineAdjustment:(UIBaselineAdjustment)baselineAdjustment __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));

@end
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextField.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIContentSizeCategoryAdjusting.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIContentSizeCategoryAdjusting.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @protocol UIContentSizeCategoryAdjusting <NSObject>





@property (nonatomic) BOOL adjustsFontForContentSizeCategory;

@end
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextField.h" 2 3



@class UIImage, UIImageView, UILabel, UIColor, UIButton;
@class UITextFieldAtomBackgroundView;
@class UITextFieldBackgroundView;
@class UITextFieldBorderView;
@class UITextFieldLabel;
@class UITextInputTraits;
@class UITextSelectionView;
@class UITextInteractionAssistant;
@class UIPopoverController;
@protocol UITextFieldDelegate;
@protocol UITextSelecting;

typedef enum UITextBorderStyle : NSInteger UITextBorderStyle; enum UITextBorderStyle : NSInteger {
    UITextBorderStyleNone,
    UITextBorderStyleLine,
    UITextBorderStyleBezel,
    UITextBorderStyleRoundedRect
};

typedef enum UITextFieldViewMode : NSInteger UITextFieldViewMode; enum UITextFieldViewMode : NSInteger {
    UITextFieldViewModeNever,
    UITextFieldViewModeWhileEditing,
    UITextFieldViewModeUnlessEditing,
    UITextFieldViewModeAlways
};

typedef enum UITextFieldDidEndEditingReason : NSInteger UITextFieldDidEndEditingReason; enum UITextFieldDidEndEditingReason : NSInteger {
    UITextFieldDidEndEditingReasonCommitted,
    UITextFieldDidEndEditingReasonCancelled __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=10_0)))
} __attribute__((availability(ios,introduced=10_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UITextField : UIControl <UITextInput, NSCoding, UIContentSizeCategoryAdjusting>

@property(nullable, nonatomic,copy) NSString *text;
@property(nullable, nonatomic,copy) NSAttributedString *attributedText __attribute__((availability(ios,introduced=6_0)));
@property(nullable, nonatomic,strong) UIColor *textColor;
@property(nullable, nonatomic,strong) UIFont *font;
@property(nonatomic) NSTextAlignment textAlignment;
@property(nonatomic) UITextBorderStyle borderStyle;
@property(nonatomic,copy) NSDictionary<NSString *, id> *defaultTextAttributes __attribute__((availability(ios,introduced=7_0)));

@property(nullable, nonatomic,copy) NSString *placeholder;
@property(nullable, nonatomic,copy) NSAttributedString *attributedPlaceholder __attribute__((availability(ios,introduced=6_0)));
@property(nonatomic) BOOL clearsOnBeginEditing;
@property(nonatomic) BOOL adjustsFontSizeToFitWidth;
@property(nonatomic) CGFloat minimumFontSize;
@property(nullable, nonatomic,weak) id<UITextFieldDelegate> delegate;
@property(nullable, nonatomic,strong) UIImage *background;
@property(nullable, nonatomic,strong) UIImage *disabledBackground;

@property(nonatomic,readonly,getter=isEditing) BOOL editing;
@property(nonatomic) BOOL allowsEditingTextAttributes __attribute__((availability(ios,introduced=6_0)));
@property(nullable, nonatomic,copy) NSDictionary<NSString *, id> *typingAttributes __attribute__((availability(ios,introduced=6_0)));
# 81 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextField.h" 3
@property(nonatomic) UITextFieldViewMode clearButtonMode;

@property(nullable, nonatomic,strong) UIView *leftView;
@property(nonatomic) UITextFieldViewMode leftViewMode;

@property(nullable, nonatomic,strong) UIView *rightView;
@property(nonatomic) UITextFieldViewMode rightViewMode;



- (CGRect)borderRectForBounds:(CGRect)bounds;
- (CGRect)textRectForBounds:(CGRect)bounds;
- (CGRect)placeholderRectForBounds:(CGRect)bounds;
- (CGRect)editingRectForBounds:(CGRect)bounds;
- (CGRect)clearButtonRectForBounds:(CGRect)bounds;
- (CGRect)leftViewRectForBounds:(CGRect)bounds;
- (CGRect)rightViewRectForBounds:(CGRect)bounds;

- (void)drawTextInRect:(CGRect)rect;
- (void)drawPlaceholderInRect:(CGRect)rect;



@property (nullable, readwrite, strong) UIView *inputView;
@property (nullable, readwrite, strong) UIView *inputAccessoryView;

@property(nonatomic) BOOL clearsOnInsertion __attribute__((availability(ios,introduced=6_0)));

@end

@interface UIView (UITextField)
- (BOOL)endEditing:(BOOL)force;
@end

@protocol UITextFieldDelegate <NSObject>

@optional

- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField;
- (void)textFieldDidBeginEditing:(UITextField *)textField;
- (BOOL)textFieldShouldEndEditing:(UITextField *)textField;
- (void)textFieldDidEndEditing:(UITextField *)textField;
- (void)textFieldDidEndEditing:(UITextField *)textField reason:(UITextFieldDidEndEditingReason)reason __attribute__((availability(ios,introduced=10_0)));

- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string;

- (BOOL)textFieldShouldClear:(UITextField *)textField;
- (BOOL)textFieldShouldReturn:(UITextField *)textField;

@end

extern __attribute__((visibility ("default"))) NSNotificationName const UITextFieldTextDidBeginEditingNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UITextFieldTextDidEndEditingNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UITextFieldTextDidChangeNotification;

extern __attribute__((visibility ("default"))) NSString *const UITextFieldDidEndEditingReasonKey __attribute__((availability(ios,introduced=10_0)));
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIActionSheet.h" 2 3




@protocol UIActionSheetDelegate;
@class UILabel, UIToolbar, UITabBar, UIWindow, UIBarButtonItem, UIPopoverController;

typedef enum UIActionSheetStyle : NSInteger UIActionSheetStyle; enum UIActionSheetStyle : NSInteger {
    UIActionSheetStyleAutomatic = -1,
    UIActionSheetStyleDefault = UIBarStyleDefault,
    UIActionSheetStyleBlackTranslucent = UIBarStyleBlackTranslucent,
    UIActionSheetStyleBlackOpaque = UIBarStyleBlackOpaque ,
} __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" "UIActionSheet is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleActionSheet instead"))) __attribute__((availability(tvos,unavailable)))
@interface UIActionSheet : UIView

- (instancetype)initWithTitle:(nullable NSString *)title delegate:(nullable id<UIActionSheetDelegate>)delegate cancelButtonTitle:(nullable NSString *)cancelButtonTitle destructiveButtonTitle:(nullable NSString *)destructiveButtonTitle otherButtonTitles:(nullable NSString *)otherButtonTitles, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios_app_extension,unavailable,message="Use UIAlertController instead.")));

@property(nullable,nonatomic,weak) id<UIActionSheetDelegate> delegate;
@property(nonatomic,copy) NSString *title;
@property(nonatomic) UIActionSheetStyle actionSheetStyle;



- (NSInteger)addButtonWithTitle:(nullable NSString *)title;
- (nullable NSString *)buttonTitleAtIndex:(NSInteger)buttonIndex;
@property(nonatomic,readonly) NSInteger numberOfButtons;
@property(nonatomic) NSInteger cancelButtonIndex;
@property(nonatomic) NSInteger destructiveButtonIndex;

@property(nonatomic,readonly) NSInteger firstOtherButtonIndex;
@property(nonatomic,readonly,getter=isVisible) BOOL visible;




- (void)showFromToolbar:(UIToolbar *)view;
- (void)showFromTabBar:(UITabBar *)view;
- (void)showFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated __attribute__((availability(ios,introduced=3_2)));
- (void)showFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated __attribute__((availability(ios,introduced=3_2)));
- (void)showInView:(UIView *)view;



- (void)dismissWithClickedButtonIndex:(NSInteger)buttonIndex animated:(BOOL)animated;

@end


__attribute__((availability(tvos,unavailable)))
@protocol UIActionSheetDelegate <NSObject>
@optional


- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" ))) __attribute__((availability(tvos,unavailable)));



- (void)actionSheetCancel:(UIActionSheet *)actionSheet __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" ))) __attribute__((availability(tvos,unavailable)));

- (void)willPresentActionSheet:(UIActionSheet *)actionSheet __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" )))__attribute__((availability(tvos,unavailable)));
- (void)didPresentActionSheet:(UIActionSheet *)actionSheet __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" ))) __attribute__((availability(tvos,unavailable)));

- (void)actionSheet:(UIActionSheet *)actionSheet willDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" ))) __attribute__((availability(tvos,unavailable)));
- (void)actionSheet:(UIActionSheet *)actionSheet didDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" ))) __attribute__((availability(tvos,unavailable)));

@end
# 9 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAlert.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAlertView.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAlertView.h" 3
typedef enum UIAlertViewStyle : NSInteger UIAlertViewStyle; enum UIAlertViewStyle : NSInteger {
    UIAlertViewStyleDefault = 0,
    UIAlertViewStyleSecureTextInput,
    UIAlertViewStylePlainTextInput,
    UIAlertViewStyleLoginAndPasswordInput
} __attribute__((availability(tvos,unavailable)));

@protocol UIAlertViewDelegate;
@class UILabel, UIToolbar, UITabBar, UIWindow, UIBarButtonItem, UIPopoverController;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "UIAlertView is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleAlert instead"))) __attribute__((availability(tvos,unavailable)))
@interface UIAlertView : UIView

- (instancetype)initWithTitle:(nullable NSString *)title message:(nullable NSString *)message delegate:(nullable id )delegate cancelButtonTitle:(nullable NSString *)cancelButtonTitle otherButtonTitles:(nullable NSString *)otherButtonTitles, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios_app_extension,unavailable,message="Use UIAlertController instead.")));

- (id)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
- (nullable instancetype) initWithCoder:(nonnull NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@property(nullable,nonatomic,weak) id delegate;
@property(nonatomic,copy) NSString *title;
@property(nullable,nonatomic,copy) NSString *message;




- (NSInteger)addButtonWithTitle:(nullable NSString *)title;
- (nullable NSString *)buttonTitleAtIndex:(NSInteger)buttonIndex;
@property(nonatomic,readonly) NSInteger numberOfButtons;
@property(nonatomic) NSInteger cancelButtonIndex;

@property(nonatomic,readonly) NSInteger firstOtherButtonIndex;
@property(nonatomic,readonly,getter=isVisible) BOOL visible;


- (void)show;



- (void)dismissWithClickedButtonIndex:(NSInteger)buttonIndex animated:(BOOL)animated;


@property(nonatomic,assign) UIAlertViewStyle alertViewStyle __attribute__((availability(ios,introduced=5_0)));



- (nullable UITextField *)textFieldAtIndex:(NSInteger)textFieldIndex __attribute__((availability(ios,introduced=5_0)));


@end

__attribute__((availability(tvos,unavailable)))
@protocol UIAlertViewDelegate <NSObject>
@optional


- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));



- (void)alertViewCancel:(UIAlertView *)alertView __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));

- (void)willPresentAlertView:(UIAlertView *)alertView __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));
- (void)didPresentAlertView:(UIAlertView *)alertView __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));

- (void)alertView:(UIAlertView *)alertView willDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));
- (void)alertView:(UIAlertView *)alertView didDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));


- (BOOL)alertViewShouldEnableFirstOtherButton:(UIAlertView *)alertView __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));

@end
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAlert.h" 2 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIApplication.h" 2 3




typedef enum UIStatusBarStyle : NSInteger UIStatusBarStyle; enum UIStatusBarStyle : NSInteger {
    UIStatusBarStyleDefault = 0,
    UIStatusBarStyleLightContent __attribute__((availability(ios,introduced=7_0))) = 1,

    UIStatusBarStyleBlackTranslucent __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use UIStatusBarStyleLightContent"))) = 1,
    UIStatusBarStyleBlackOpaque __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use UIStatusBarStyleLightContent"))) = 2,
} __attribute__((availability(tvos,unavailable)));

typedef enum UIStatusBarAnimation : NSInteger UIStatusBarAnimation; enum UIStatusBarAnimation : NSInteger {
    UIStatusBarAnimationNone,
    UIStatusBarAnimationFade __attribute__((availability(ios,introduced=3_2))),
    UIStatusBarAnimationSlide __attribute__((availability(ios,introduced=3_2))),
} __attribute__((availability(tvos,unavailable)));



typedef enum UIInterfaceOrientation : NSInteger UIInterfaceOrientation; enum UIInterfaceOrientation : NSInteger {
    UIInterfaceOrientationUnknown = UIDeviceOrientationUnknown,
    UIInterfaceOrientationPortrait = UIDeviceOrientationPortrait,
    UIInterfaceOrientationPortraitUpsideDown = UIDeviceOrientationPortraitUpsideDown,
    UIInterfaceOrientationLandscapeLeft = UIDeviceOrientationLandscapeRight,
    UIInterfaceOrientationLandscapeRight = UIDeviceOrientationLandscapeLeft
} __attribute__((availability(tvos,unavailable)));




extern __attribute__((visibility ("default"))) NSExceptionName const UIApplicationInvalidInterfaceOrientationException __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));

typedef enum UIInterfaceOrientationMask : NSUInteger UIInterfaceOrientationMask; enum UIInterfaceOrientationMask : NSUInteger {
    UIInterfaceOrientationMaskPortrait = (1 << UIInterfaceOrientationPortrait),
    UIInterfaceOrientationMaskLandscapeLeft = (1 << UIInterfaceOrientationLandscapeLeft),
    UIInterfaceOrientationMaskLandscapeRight = (1 << UIInterfaceOrientationLandscapeRight),
    UIInterfaceOrientationMaskPortraitUpsideDown = (1 << UIInterfaceOrientationPortraitUpsideDown),
    UIInterfaceOrientationMaskLandscape = (UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight),
    UIInterfaceOrientationMaskAll = (UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight | UIInterfaceOrientationMaskPortraitUpsideDown),
    UIInterfaceOrientationMaskAllButUpsideDown = (UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight),
} __attribute__((availability(tvos,unavailable)));



static inline BOOL UIInterfaceOrientationIsPortrait(UIInterfaceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIInterfaceOrientationPortrait || (orientation) == UIInterfaceOrientationPortraitUpsideDown);
}

static inline BOOL UIInterfaceOrientationIsLandscape(UIInterfaceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIInterfaceOrientationLandscapeLeft || (orientation) == UIInterfaceOrientationLandscapeRight);
}

typedef enum UIRemoteNotificationType : NSUInteger UIRemoteNotificationType; enum UIRemoteNotificationType : NSUInteger {
    UIRemoteNotificationTypeNone = 0,
    UIRemoteNotificationTypeBadge = 1 << 0,
    UIRemoteNotificationTypeSound = 1 << 1,
    UIRemoteNotificationTypeAlert = 1 << 2,
    UIRemoteNotificationTypeNewsstandContentAvailability = 1 << 3,
} __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" "Use UserNotifications Framework's UNAuthorizationOptions for user notifications and registerForRemoteNotifications for receiving remote notifications instead."))) __attribute__((availability(tvos,unavailable)));

typedef enum UIBackgroundFetchResult : NSUInteger UIBackgroundFetchResult; enum UIBackgroundFetchResult : NSUInteger {
    UIBackgroundFetchResultNewData,
    UIBackgroundFetchResultNoData,
    UIBackgroundFetchResultFailed
} __attribute__((availability(ios,introduced=7_0)));

typedef enum UIBackgroundRefreshStatus : NSInteger UIBackgroundRefreshStatus; enum UIBackgroundRefreshStatus : NSInteger {
    UIBackgroundRefreshStatusRestricted,
    UIBackgroundRefreshStatusDenied,
    UIBackgroundRefreshStatusAvailable
} __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

typedef enum UIApplicationState : NSInteger UIApplicationState; enum UIApplicationState : NSInteger {
    UIApplicationStateActive,
    UIApplicationStateInactive,
    UIApplicationStateBackground
} __attribute__((availability(ios,introduced=4_0)));

typedef NSUInteger UIBackgroundTaskIdentifier;
extern __attribute__((visibility ("default"))) const UIBackgroundTaskIdentifier UIBackgroundTaskInvalid __attribute__((availability(ios,introduced=4_0)));
extern __attribute__((visibility ("default"))) const NSTimeInterval UIMinimumKeepAliveTimeout __attribute__((availability(ios,introduced=4_0)));
extern __attribute__((visibility ("default"))) const NSTimeInterval UIApplicationBackgroundFetchIntervalMinimum __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) const NSTimeInterval UIApplicationBackgroundFetchIntervalNever __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

@class CKShareMetadata;
@class UIView, UIWindow;
@class UIStatusBar, UIStatusBarWindow, UILocalNotification;
@protocol UIApplicationDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIApplication : UIResponder


@property(class, nonatomic, readonly) UIApplication *sharedApplication __attribute__((availability(ios_app_extension,unavailable,message="Use view controller based solutions where appropriate instead.")));




@property(nullable, nonatomic, assign) id<UIApplicationDelegate> delegate;

- (void)beginIgnoringInteractionEvents __attribute__((availability(ios_app_extension,unavailable,message="")));
- (void)endIgnoringInteractionEvents __attribute__((availability(ios_app_extension,unavailable,message="")));

@property(nonatomic, readonly, getter=isIgnoringInteractionEvents) BOOL ignoringInteractionEvents;




@property(nonatomic,getter=isIdleTimerDisabled) BOOL idleTimerDisabled;

- (BOOL)openURL:(NSURL*)url __attribute__((availability(ios,introduced=2_0,deprecated=10_0,message="" "Please use openURL:options:completionHandler: instead"))) __attribute__((availability(ios_app_extension,unavailable,message="")));
- (BOOL)canOpenURL:(NSURL *)url __attribute__((availability(ios,introduced=3_0)));





- (void)openURL:(NSURL*)url options:(NSDictionary<NSString *, id> *)options completionHandler:(void (^ _Nullable)(BOOL success))completion __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(ios_app_extension,unavailable,message="")));

- (void)sendEvent:(UIEvent *)event;

@property(nullable, nonatomic,readonly) UIWindow *keyWindow;
@property(nonatomic,readonly) NSArray<__kindof UIWindow *> *windows;

- (BOOL)sendAction:(SEL)action to:(nullable id)target from:(nullable id)sender forEvent:(nullable UIEvent *)event;

@property(nonatomic,getter=isNetworkActivityIndicatorVisible) BOOL networkActivityIndicatorVisible __attribute__((availability(tvos,unavailable)));

@property(readonly, nonatomic) UIStatusBarStyle statusBarStyle __attribute__((availability(tvos,unavailable)));

@property(readonly, nonatomic,getter=isStatusBarHidden) BOOL statusBarHidden __attribute__((availability(tvos,unavailable)));

@property(readonly, nonatomic) UIInterfaceOrientation statusBarOrientation __attribute__((availability(tvos,unavailable)));
# 156 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIApplication.h" 3
- (UIInterfaceOrientationMask)supportedInterfaceOrientationsForWindow:(nullable UIWindow *)window __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));

@property(nonatomic,readonly) NSTimeInterval statusBarOrientationAnimationDuration __attribute__((availability(tvos,unavailable)));
@property(nonatomic,readonly) CGRect statusBarFrame __attribute__((availability(tvos,unavailable)));

@property(nonatomic) NSInteger applicationIconBadgeNumber;

@property(nonatomic) BOOL applicationSupportsShakeToEdit __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));

@property(nonatomic,readonly) UIApplicationState applicationState __attribute__((availability(ios,introduced=4_0)));
@property(nonatomic,readonly) NSTimeInterval backgroundTimeRemaining __attribute__((availability(ios,introduced=4_0)));

- (UIBackgroundTaskIdentifier)beginBackgroundTaskWithExpirationHandler:(void(^ _Nullable)(void))handler __attribute__((availability(ios,introduced=4_0))) __attribute__((objc_requires_super));
- (UIBackgroundTaskIdentifier)beginBackgroundTaskWithName:(nullable NSString *)taskName expirationHandler:(void(^ _Nullable)(void))handler __attribute__((availability(ios,introduced=7_0))) __attribute__((objc_requires_super));
- (void)endBackgroundTask:(UIBackgroundTaskIdentifier)identifier __attribute__((availability(ios,introduced=4_0))) __attribute__((objc_requires_super));
# 180 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIApplication.h" 3
- (void)setMinimumBackgroundFetchInterval:(NSTimeInterval)minimumBackgroundFetchInterval __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));




@property (nonatomic, readonly) UIBackgroundRefreshStatus backgroundRefreshStatus __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

@property(nonatomic,readonly,getter=isProtectedDataAvailable) BOOL protectedDataAvailable __attribute__((availability(ios,introduced=4_0)));

@property(nonatomic,readonly) UIUserInterfaceLayoutDirection userInterfaceLayoutDirection __attribute__((availability(ios,introduced=5_0)));


@property(nonatomic,readonly) UIContentSizeCategory preferredContentSizeCategory __attribute__((availability(ios,introduced=7_0)));

@end

@interface UIApplication (UIRemoteNotifications)


- (void)registerForRemoteNotifications __attribute__((availability(ios,introduced=8_0)));

- (void)unregisterForRemoteNotifications __attribute__((availability(ios,introduced=3_0)));



@property(nonatomic, readonly, getter=isRegisteredForRemoteNotifications) BOOL registeredForRemoteNotifications __attribute__((availability(ios,introduced=8_0)));




- (void)registerForRemoteNotificationTypes:(UIRemoteNotificationType)types __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" "Use -[UIApplication registerForRemoteNotifications] and UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:]"))) __attribute__((availability(tvos,unavailable)));


- (UIRemoteNotificationType)enabledRemoteNotificationTypes __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" "Use -[UIApplication isRegisteredForRemoteNotifications] and UserNotifications Framework's -[UNUserNotificationCenter getNotificationSettingsWithCompletionHandler:] to retrieve user-enabled remote notification and user notification settings"))) __attribute__((availability(tvos,unavailable)));

@end


@interface UIApplication (UILocalNotifications)

- (void)presentLocalNotificationNow:(UILocalNotification *)notification __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter addNotificationRequest:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

- (void)scheduleLocalNotification:(UILocalNotification *)notification __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter addNotificationRequest:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));
- (void)cancelLocalNotification:(UILocalNotification *)notification __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter removePendingNotificationRequestsWithIdentifiers:]"))) __attribute__((availability(tvos,unavailable)));
- (void)cancelAllLocalNotifications __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter removeAllPendingNotificationRequests]"))) __attribute__((availability(tvos,unavailable)));

@property(nullable,nonatomic,copy) NSArray<UILocalNotification *> *scheduledLocalNotifications __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter getPendingNotificationRequestsWithCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

@end

@class UIUserNotificationSettings;
@interface UIApplication (UIUserNotificationSettings)


- (void)registerUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));



@property(nonatomic, readonly, nullable) UIUserNotificationSettings *currentUserNotificationSettings __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));




@end

@interface UIApplication (UIRemoteControlEvents)

- (void)beginReceivingRemoteControlEvents __attribute__((availability(ios,introduced=4_0)));
- (void)endReceivingRemoteControlEvents __attribute__((availability(ios,introduced=4_0)));

@end

@interface UIApplication (UINewsstand)
- (void)setNewsstandIconImage:(nullable UIImage *)image __attribute__((availability(ios,introduced=5_0,deprecated=9_0,message="" "Newsstand apps now behave like normal apps on SpringBoard"))) __attribute__((availability(tvos,unavailable)));
@end

@class UIApplicationShortcutItem;
@interface UIApplication (UIShortcutItems)

@property (nullable, nonatomic, copy) NSArray<UIApplicationShortcutItem *> *shortcutItems __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));
@end

@protocol UIStateRestoring;
@interface UIApplication (UIStateRestoration)



- (void)extendStateRestoration __attribute__((availability(ios,introduced=6_0)));
- (void)completeStateRestoration __attribute__((availability(ios,introduced=6_0)));



- (void)ignoreSnapshotOnNextApplicationLaunch __attribute__((availability(ios,introduced=7_0)));





+ (void)registerObjectForStateRestoration:(id<UIStateRestoring>)object restorationIdentifier:(NSString *)restorationIdentifier __attribute__((availability(ios,introduced=7_0)));
@end





typedef NSString * UIApplicationLaunchOptionsKey;


@protocol UIApplicationDelegate<NSObject>

@optional

- (void)applicationDidFinishLaunching:(UIApplication *)application;




- (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(nullable NSDictionary *)launchOptions __attribute__((availability(ios,introduced=6_0)));
- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(nullable NSDictionary *)launchOptions __attribute__((availability(ios,introduced=3_0)));


- (void)applicationDidBecomeActive:(UIApplication *)application;
- (void)applicationWillResignActive:(UIApplication *)application;
- (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Please use application:openURL:options:"))) __attribute__((availability(tvos,unavailable)));
- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(nullable NSString *)sourceApplication annotation:(id)annotation __attribute__((availability(ios,introduced=4_2,deprecated=9_0,message="" "Please use application:openURL:options:"))) __attribute__((availability(tvos,unavailable)));





typedef NSString * UIApplicationOpenURLOptionsKey;


- (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> *)options __attribute__((availability(ios,introduced=9_0)));

- (void)applicationDidReceiveMemoryWarning:(UIApplication *)application;
- (void)applicationWillTerminate:(UIApplication *)application;
- (void)applicationSignificantTimeChange:(UIApplication *)application;

- (void)application:(UIApplication *)application willChangeStatusBarOrientation:(UIInterfaceOrientation)newStatusBarOrientation duration:(NSTimeInterval)duration __attribute__((availability(tvos,unavailable)));
- (void)application:(UIApplication *)application didChangeStatusBarOrientation:(UIInterfaceOrientation)oldStatusBarOrientation __attribute__((availability(tvos,unavailable)));

- (void)application:(UIApplication *)application willChangeStatusBarFrame:(CGRect)newStatusBarFrame __attribute__((availability(tvos,unavailable)));
- (void)application:(UIApplication *)application didChangeStatusBarFrame:(CGRect)oldStatusBarFrame __attribute__((availability(tvos,unavailable)));


 - (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken __attribute__((availability(ios,introduced=3_0)));

- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error __attribute__((availability(ios,introduced=3_0)));

- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo __attribute__((availability(ios,introduced=3_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate willPresentNotification:withCompletionHandler:] or -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:] for user visible notifications and -[UIApplicationDelegate application:didReceiveRemoteNotification:fetchCompletionHandler:] for silent remote notifications")));

- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate willPresentNotification:withCompletionHandler:] or -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));




- (void)application:(UIApplication *)application handleActionWithIdentifier:(nullable NSString *)identifier forLocalNotification:(UILocalNotification *)notification completionHandler:(void(^)())completionHandler __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

- (void)application:(UIApplication *)application handleActionWithIdentifier:(nullable NSString *)identifier forRemoteNotification:(NSDictionary *)userInfo withResponseInfo:(NSDictionary *)responseInfo completionHandler:(void(^)())completionHandler __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));




- (void)application:(UIApplication *)application handleActionWithIdentifier:(nullable NSString *)identifier forRemoteNotification:(NSDictionary *)userInfo completionHandler:(void(^)())completionHandler __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

- (void)application:(UIApplication *)application handleActionWithIdentifier:(nullable NSString *)identifier forLocalNotification:(UILocalNotification *)notification withResponseInfo:(NSDictionary *)responseInfo completionHandler:(void(^)())completionHandler __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));




- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult result))completionHandler __attribute__((availability(ios,introduced=7_0)));


- (void)application:(UIApplication *)application performFetchWithCompletionHandler:(void (^)(UIBackgroundFetchResult result))completionHandler __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));



- (void)application:(UIApplication *)application performActionForShortcutItem:(UIApplicationShortcutItem *)shortcutItem completionHandler:(void(^)(BOOL succeeded))completionHandler __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));






- (void)application:(UIApplication *)application handleEventsForBackgroundURLSession:(NSString *)identifier completionHandler:(void (^)())completionHandler __attribute__((availability(ios,introduced=7_0)));

- (void)application:(UIApplication *)application handleWatchKitExtensionRequest:(nullable NSDictionary *)userInfo reply:(void(^)(NSDictionary * _Nullable replyInfo))reply __attribute__((availability(ios,introduced=8_2)));

- (void)applicationShouldRequestHealthAuthorization:(UIApplication *)application __attribute__((availability(ios,introduced=9_0)));

- (void)applicationDidEnterBackground:(UIApplication *)application __attribute__((availability(ios,introduced=4_0)));
- (void)applicationWillEnterForeground:(UIApplication *)application __attribute__((availability(ios,introduced=4_0)));

- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)application __attribute__((availability(ios,introduced=4_0)));
- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)application __attribute__((availability(ios,introduced=4_0)));

@property (nullable, nonatomic, strong) UIWindow *window __attribute__((availability(ios,introduced=5_0)));

- (UIInterfaceOrientationMask)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(nullable UIWindow *)window __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));




typedef NSString * UIApplicationExtensionPointIdentifier;





- (BOOL)application:(UIApplication *)application shouldAllowExtensionPointIdentifier:(UIApplicationExtensionPointIdentifier)extensionPointIdentifier __attribute__((availability(ios,introduced=8_0)));



- (nullable UIViewController *) application:(UIApplication *)application viewControllerWithRestorationIdentifierPath:(NSArray *)identifierComponents coder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
- (BOOL) application:(UIApplication *)application shouldSaveApplicationState:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
- (BOOL) application:(UIApplication *)application shouldRestoreApplicationState:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
- (void) application:(UIApplication *)application willEncodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
- (void) application:(UIApplication *)application didDecodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));







- (BOOL)application:(UIApplication *)application willContinueUserActivityWithType:(NSString *)userActivityType __attribute__((availability(ios,introduced=8_0)));





- (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity restorationHandler:(void(^)(NSArray * _Nullable restorableObjects))restorationHandler __attribute__((availability(ios,introduced=8_0)));


- (void)application:(UIApplication *)application didFailToContinueUserActivityWithType:(NSString *)userActivityType error:(NSError *)error __attribute__((availability(ios,introduced=8_0)));


- (void)application:(UIApplication *)application didUpdateUserActivity:(NSUserActivity *)userActivity __attribute__((availability(ios,introduced=8_0)));





- (void) application:(UIApplication *)application userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)cloudKitShareMetadata __attribute__((availability(ios,introduced=10_0)));

@end

@interface UIApplication(UIApplicationDeprecated)

@property(nonatomic,getter=isProximitySensingEnabled) BOOL proximitySensingEnabled __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
- (void)setStatusBarHidden:(BOOL)hidden animated:(BOOL)animated __attribute__((availability(ios,introduced=2_0,deprecated=3_2,message="" ))) __attribute__((availability(tvos,unavailable)));


@property(readwrite, nonatomic) UIInterfaceOrientation statusBarOrientation __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Explicit setting of the status bar orientation is more limited in iOS 6.0 and later"))) __attribute__((availability(tvos,unavailable)));
- (void)setStatusBarOrientation:(UIInterfaceOrientation)interfaceOrientation animated:(BOOL)animated __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Explicit setting of the status bar orientation is more limited in iOS 6.0 and later"))) __attribute__((availability(tvos,unavailable)));


@property(readwrite, nonatomic) UIStatusBarStyle statusBarStyle __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use -[UIViewController preferredStatusBarStyle]"))) __attribute__((availability(tvos,unavailable)));
- (void)setStatusBarStyle:(UIStatusBarStyle)statusBarStyle animated:(BOOL)animated __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use -[UIViewController preferredStatusBarStyle]"))) __attribute__((availability(tvos,unavailable)));


@property(readwrite, nonatomic,getter=isStatusBarHidden) BOOL statusBarHidden __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use -[UIViewController prefersStatusBarHidden]"))) __attribute__((availability(tvos,unavailable)));
- (void)setStatusBarHidden:(BOOL)hidden withAnimation:(UIStatusBarAnimation)animation __attribute__((availability(ios,introduced=3_2,deprecated=9_0,message="" "Use -[UIViewController prefersStatusBarHidden]"))) __attribute__((availability(tvos,unavailable)));

- (BOOL)setKeepAliveTimeout:(NSTimeInterval)timeout handler:(void(^ _Nullable)(void))keepAliveHandler __attribute__((availability(ios,introduced=4_0,deprecated=9_0,message="" "Please use UIRemoteNotificationTypeVoIP remote notifications for VoIP applications"))) __attribute__((availability(tvos,unavailable)));
- (void)clearKeepAliveTimeout __attribute__((availability(ios,introduced=4_0,deprecated=9_0,message="" "Please use UIRemoteNotificationTypeVoIP remote notifications for VoIP applications"))) __attribute__((availability(tvos,unavailable)));

@end



extern __attribute__((visibility ("default"))) int UIApplicationMain(int argc, char *argv[], NSString * _Nullable principalClassName, NSString * _Nullable delegateClassName);

extern __attribute__((visibility ("default"))) NSRunLoopMode const UITrackingRunLoopMode;


extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidEnterBackgroundNotification __attribute__((availability(ios,introduced=4_0)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillEnterForegroundNotification __attribute__((availability(ios,introduced=4_0)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidFinishLaunchingNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidBecomeActiveNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillResignActiveNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidReceiveMemoryWarningNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillTerminateNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationSignificantTimeChangeNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillChangeStatusBarOrientationNotification __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidChangeStatusBarOrientationNotification __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIApplicationStatusBarOrientationUserInfoKey __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillChangeStatusBarFrameNotification __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidChangeStatusBarFrameNotification __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIApplicationStatusBarFrameUserInfoKey __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationBackgroundRefreshStatusDidChangeNotification __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationProtectedDataWillBecomeUnavailable __attribute__((availability(ios,introduced=4_0)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationProtectedDataDidBecomeAvailable __attribute__((availability(ios,introduced=4_0)));
# 495 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIApplication.h" 3
extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsURLKey __attribute__((availability(ios,introduced=3_0)));
extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsSourceApplicationKey __attribute__((availability(ios,introduced=3_0)));
extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsRemoteNotificationKey __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsLocalNotificationKey __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsAnnotationKey __attribute__((availability(ios,introduced=3_2)));
extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsLocationKey __attribute__((availability(ios,introduced=4_0)));
extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsNewsstandDownloadsKey __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsBluetoothCentralsKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsBluetoothPeripheralsKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsShortcutItemKey __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));

extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsUserActivityDictionaryKey __attribute__((availability(ios,introduced=8_0)));
extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsUserActivityTypeKey __attribute__((availability(ios,introduced=8_0)));
extern __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsCloudKitShareMetadataKey __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));


extern __attribute__((visibility ("default"))) NSString *const UIApplicationOpenSettingsURLString __attribute__((availability(ios,introduced=8_0)));







extern __attribute__((visibility ("default"))) UIApplicationOpenURLOptionsKey const UIApplicationOpenURLOptionsSourceApplicationKey __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility ("default"))) UIApplicationOpenURLOptionsKey const UIApplicationOpenURLOptionsAnnotationKey __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility ("default"))) UIApplicationOpenURLOptionsKey const UIApplicationOpenURLOptionsOpenInPlaceKey __attribute__((availability(ios,introduced=9_0)));



extern __attribute__((visibility ("default"))) NSNotificationName const UIApplicationUserDidTakeScreenshotNotification __attribute__((availability(ios,introduced=7_0)));





extern __attribute__((visibility ("default"))) UIApplicationExtensionPointIdentifier const UIApplicationKeyboardExtensionPointIdentifier __attribute__((availability(ios,introduced=8_0)));






extern __attribute__((visibility ("default"))) NSString *const UIApplicationOpenURLOptionUniversalLinksOnly __attribute__((availability(ios,introduced=10_0)));
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStateRestoration.h" 1 3
# 18 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStateRestoration.h" 3
extern __attribute__((visibility ("default"))) NSString *const UIStateRestorationViewControllerStoryboardKey __attribute__((availability(ios,introduced=6_0)));


extern __attribute__((visibility ("default"))) NSString *const UIApplicationStateRestorationBundleVersionKey __attribute__((availability(ios,introduced=6_0)));


extern __attribute__((visibility ("default"))) NSString *const UIApplicationStateRestorationUserInterfaceIdiomKey __attribute__((availability(ios,introduced=6_0)));


extern __attribute__((visibility ("default"))) NSString *const UIApplicationStateRestorationTimestampKey __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility ("default"))) NSString *const UIApplicationStateRestorationSystemVersionKey __attribute__((availability(ios,introduced=7_0)));

@class UIView;
@class UIViewController;




@protocol UIViewControllerRestoration
+ (nullable UIViewController *) viewControllerWithRestorationIdentifierPath:(NSArray *)identifierComponents coder:(NSCoder *)coder;
@end

@protocol UIDataSourceModelAssociation
- (nullable NSString *) modelIdentifierForElementAtIndexPath:(NSIndexPath *)idx inView:(UIView *)view;
- (nullable NSIndexPath *) indexPathForElementWithModelIdentifier:(NSString *)identifier inView:(UIView *)view;
@end



@protocol UIObjectRestoration;




@protocol UIStateRestoring <NSObject>
@optional



@property (nonatomic, readonly, nullable) id<UIStateRestoring> restorationParent;



@property (nonatomic, readonly, nullable) Class<UIObjectRestoration> objectRestorationClass;




- (void) encodeRestorableStateWithCoder:(NSCoder *)coder;
- (void) decodeRestorableStateWithCoder:(NSCoder *)coder;





- (void) applicationFinishedRestoringState;
@end



@protocol UIObjectRestoration
+ (nullable id<UIStateRestoring>) objectWithRestorationIdentifierPath:(NSArray<NSString *> *)identifierComponents coder:(NSCoder *)coder;
@end
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 2 3
# 27 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 3
@class UIView;
@class UINavigationItem, UIBarButtonItem, UITabBarItem;
@class UISearchDisplayController;
@class UIPopoverController;
@class UIStoryboard, UIStoryboardSegue, UIStoryboardUnwindSegueSource;
@class UIScrollView;
@protocol UIViewControllerTransitionCoordinator;

typedef enum UIModalTransitionStyle : NSInteger UIModalTransitionStyle; enum UIModalTransitionStyle : NSInteger {
    UIModalTransitionStyleCoverVertical = 0,
    UIModalTransitionStyleFlipHorizontal __attribute__((availability(tvos,unavailable))),
    UIModalTransitionStyleCrossDissolve,
    UIModalTransitionStylePartialCurl __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))),
};

typedef enum UIModalPresentationStyle : NSInteger UIModalPresentationStyle; enum UIModalPresentationStyle : NSInteger {
        UIModalPresentationFullScreen = 0,
        UIModalPresentationPageSheet __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))),
        UIModalPresentationFormSheet __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))),
        UIModalPresentationCurrentContext __attribute__((availability(ios,introduced=3_2))),
        UIModalPresentationCustom __attribute__((availability(ios,introduced=7_0))),
        UIModalPresentationOverFullScreen __attribute__((availability(ios,introduced=8_0))),
        UIModalPresentationOverCurrentContext __attribute__((availability(ios,introduced=8_0))),
        UIModalPresentationPopover __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))),
        UIModalPresentationNone __attribute__((availability(ios,introduced=7_0))) = -1,
};

@protocol UIContentContainer <NSObject>

@property (nonatomic, readonly) CGSize preferredContentSize __attribute__((availability(ios,introduced=8_0)));
- (void)preferredContentSizeDidChangeForChildContentContainer:(id <UIContentContainer>)container __attribute__((availability(ios,introduced=8_0)));







- (void)systemLayoutFittingSizeDidChangeForChildContentContainer:(id <UIContentContainer>)container __attribute__((availability(ios,introduced=8_0)));






- (CGSize)sizeForChildContentContainer:(id <UIContentContainer>)container withParentContainerSize:(CGSize)parentSize __attribute__((availability(ios,introduced=8_0)));






- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator>)coordinator __attribute__((availability(ios,introduced=8_0)));






- (void)willTransitionToTraitCollection:(UITraitCollection *)newCollection withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator>)coordinator __attribute__((availability(ios,introduced=8_0)));

@end


extern __attribute__((visibility ("default"))) NSNotificationName const UIViewControllerShowDetailTargetDidChangeNotification __attribute__((availability(ios,introduced=8_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIViewController : UIResponder <NSCoding, UIAppearanceContainer, UITraitEnvironment, UIContentContainer, UIFocusEnvironment>
# 104 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 3
- (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@property(null_resettable, nonatomic,strong) UIView *view;
- (void)loadView;
- (void)loadViewIfNeeded __attribute__((availability(ios,introduced=9_0)));
@property(nullable, nonatomic, readonly, strong) UIView *viewIfLoaded __attribute__((availability(ios,introduced=9_0)));

- (void)viewWillUnload __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));
- (void)viewDidUnload __attribute__((availability(ios,introduced=3_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));

- (void)viewDidLoad;

@property(nonatomic, readonly, getter=isViewLoaded) BOOL viewLoaded __attribute__((availability(ios,introduced=3_0)));




@property(nullable, nonatomic, readonly, copy) NSString *nibName;
@property(nullable, nonatomic, readonly, strong) NSBundle *nibBundle;
@property(nullable, nonatomic, readonly, strong) UIStoryboard *storyboard __attribute__((availability(ios,introduced=5_0)));

- (void)performSegueWithIdentifier:(NSString *)identifier sender:(nullable id)sender __attribute__((availability(ios,introduced=5_0)));
- (BOOL)shouldPerformSegueWithIdentifier:(NSString *)identifier sender:(nullable id)sender __attribute__((availability(ios,introduced=6_0)));
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(nullable id)sender __attribute__((availability(ios,introduced=5_0)));


- (BOOL)canPerformUnwindSegueAction:(SEL)action fromViewController:(UIViewController *)fromViewController withSender:(id)sender __attribute__((availability(ios,introduced=6_0)));





- (NSArray<UIViewController *> *)allowedChildViewControllersForUnwindingFromSource:(UIStoryboardUnwindSegueSource *)source __attribute__((availability(ios,introduced=9_0)));




- (nullable UIViewController *)childViewControllerContainingSegueSource:(UIStoryboardUnwindSegueSource *)source __attribute__((availability(ios,introduced=9_0)));


- (nullable UIViewController *)viewControllerForUnwindSegueAction:(SEL)action fromViewController:(UIViewController *)fromViewController withSender:(nullable id)sender __attribute__((availability(ios,introduced=6_0,deprecated=9_0,message="" )));


- (void)unwindForSegue:(UIStoryboardSegue *)unwindSegue towardsViewController:(UIViewController *)subsequentVC __attribute__((availability(ios,introduced=9_0)));


- (nullable UIStoryboardSegue *)segueForUnwindingToViewController:(UIViewController *)toViewController fromViewController:(UIViewController *)fromViewController identifier:(nullable NSString *)identifier __attribute__((availability(ios,introduced=6_0,deprecated=9_0,message="" )));

- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;


- (void)viewWillLayoutSubviews __attribute__((availability(ios,introduced=5_0)));

- (void)viewDidLayoutSubviews __attribute__((availability(ios,introduced=5_0)));

@property(nullable, nonatomic,copy) NSString *title;

- (void)didReceiveMemoryWarning;






@property(nullable,nonatomic,weak,readonly) UIViewController *parentViewController;


@property(nullable, nonatomic,readonly) UIViewController *modalViewController __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));


@property(nullable, nonatomic,readonly) UIViewController *presentedViewController __attribute__((availability(ios,introduced=5_0)));


@property(nullable, nonatomic,readonly) UIViewController *presentingViewController __attribute__((availability(ios,introduced=5_0)));






@property(nonatomic,assign) BOOL definesPresentationContext __attribute__((availability(ios,introduced=5_0)));


@property(nonatomic,assign) BOOL providesPresentationContextTransitionStyle __attribute__((availability(ios,introduced=5_0)));


@property (nonatomic) BOOL restoresFocusAfterTransition __attribute__((availability(ios,introduced=10_0)));
# 204 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 3
@property(nonatomic, readonly, getter=isBeingPresented) BOOL beingPresented __attribute__((availability(ios,introduced=5_0)));
@property(nonatomic, readonly, getter=isBeingDismissed) BOOL beingDismissed __attribute__((availability(ios,introduced=5_0)));

@property(nonatomic, readonly, getter=isMovingToParentViewController) BOOL movingToParentViewController __attribute__((availability(ios,introduced=5_0)));
@property(nonatomic, readonly, getter=isMovingFromParentViewController) BOOL movingFromParentViewController __attribute__((availability(ios,introduced=5_0)));
# 222 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 3
- (void)presentViewController:(UIViewController *)viewControllerToPresent animated: (BOOL)flag completion:(void (^ _Nullable)(void))completion __attribute__((availability(ios,introduced=5_0)));

- (void)dismissViewControllerAnimated: (BOOL)flag completion: (void (^ _Nullable)(void))completion __attribute__((availability(ios,introduced=5_0)));


- (void)presentModalViewController:(UIViewController *)modalViewController animated:(BOOL)animated __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));


- (void)dismissModalViewControllerAnimated:(BOOL)animated __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));






@property(nonatomic,assign) UIModalTransitionStyle modalTransitionStyle __attribute__((availability(ios,introduced=3_0)));
@property(nonatomic,assign) UIModalPresentationStyle modalPresentationStyle __attribute__((availability(ios,introduced=3_2)));

@property(nonatomic,assign) BOOL modalPresentationCapturesStatusBarAppearance __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));



@property(nonatomic,assign) BOOL disablesAutomaticKeyboardDismissal __attribute__((availability(ios,introduced=4_3)));




@property(nonatomic,assign) BOOL wantsFullScreenLayout __attribute__((availability(ios,introduced=3_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));

@property(nonatomic,assign) UIRectEdge edgesForExtendedLayout __attribute__((availability(ios,introduced=7_0)));
@property(nonatomic,assign) BOOL extendedLayoutIncludesOpaqueBars __attribute__((availability(ios,introduced=7_0)));
@property(nonatomic,assign) BOOL automaticallyAdjustsScrollViewInsets __attribute__((availability(ios,introduced=7_0)));



@property (nonatomic) CGSize preferredContentSize __attribute__((availability(ios,introduced=7_0)));



@property(nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic, readonly) BOOL prefersStatusBarHidden __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

@property(nonatomic, readonly) UIStatusBarAnimation preferredStatusBarUpdateAnimation __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
# 273 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 3
- (void)setNeedsStatusBarAppearanceUpdate __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));


- (nullable UIViewController *)targetViewControllerForAction:(SEL)action sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));



- (void)showViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));


- (void)showDetailViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));

@end


@interface UIViewController (UIViewControllerRotation)



+ (void)attemptRotationToDeviceOrientation __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));


- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));



@property(nonatomic, readonly) BOOL shouldAutorotate __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));

@property(nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
# 311 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 3
- (nullable UIView *)rotatingHeaderView __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Header views are animated along with the rest of the view hierarchy"))) __attribute__((availability(tvos,unavailable)));
- (nullable UIView *)rotatingFooterView __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Footer views are animated along with the rest of the view hierarchy"))) __attribute__((availability(tvos,unavailable)));

@property(nonatomic,readonly) UIInterfaceOrientation interfaceOrientation __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" ))) __attribute__((availability(tvos,unavailable)));


- (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Implement viewWillTransitionToSize:withTransitionCoordinator: instead"))) __attribute__((availability(tvos,unavailable)));
- (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" ))) __attribute__((availability(tvos,unavailable)));

- (void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" "Implement viewWillTransitionToSize:withTransitionCoordinator: instead"))) __attribute__((availability(tvos,unavailable)));

- (void)willAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" ))) __attribute__((availability(tvos,unavailable)));
- (void)didAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" ))) __attribute__((availability(tvos,unavailable)));
- (void)willAnimateSecondHalfOfRotationFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" ))) __attribute__((availability(tvos,unavailable)));

@end



@interface UIViewController (UIViewControllerEditing)

@property(nonatomic,getter=isEditing) BOOL editing;
- (void)setEditing:(BOOL)editing animated:(BOOL)animated;


@property(nonatomic, readonly) UIBarButtonItem *editButtonItem;




@end

@interface UIViewController (UISearchDisplayControllerSupport)

@property(nullable, nonatomic, readonly, strong) UISearchDisplayController *searchDisplayController __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" ))) __attribute__((availability(tvos,unavailable)));

@end







extern __attribute__((visibility ("default"))) NSExceptionName const UIViewControllerHierarchyInconsistencyException __attribute__((availability(ios,introduced=5_0)));






@interface UIViewController (UIContainerViewControllerProtectedMethods)


@property(nonatomic,readonly) NSArray<__kindof UIViewController *> *childViewControllers __attribute__((availability(ios,introduced=5_0)));






- (void)addChildViewController:(UIViewController *)childController __attribute__((availability(ios,introduced=5_0)));





- (void)removeFromParentViewController __attribute__((availability(ios,introduced=5_0)));
# 393 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 3
- (void)transitionFromViewController:(UIViewController *)fromViewController toViewController:(UIViewController *)toViewController duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=5_0)));






- (void)beginAppearanceTransition:(BOOL)isAppearing animated:(BOOL)animated __attribute__((availability(ios,introduced=5.0)));
- (void)endAppearanceTransition __attribute__((availability(ios,introduced=5.0)));



@property(nonatomic, readonly, nullable) UIViewController *childViewControllerForStatusBarStyle __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic, readonly, nullable) UIViewController *childViewControllerForStatusBarHidden __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));






- (void)setOverrideTraitCollection:(nullable UITraitCollection *)collection forChildViewController:(UIViewController *)childViewController __attribute__((availability(ios,introduced=8_0)));
- (nullable UITraitCollection *)overrideTraitCollectionForChildViewController:(UIViewController *)childViewController __attribute__((availability(ios,introduced=8_0)));

@end

@interface UIViewController (UIContainerViewControllerCallbacks)
# 429 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 3
- (BOOL)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));
- (BOOL)shouldAutomaticallyForwardRotationMethods __attribute__((availability(ios,introduced=6_0,deprecated=8_0,message="" "Manually forward viewWillTransitionToSize:withTransitionCoordinator: if necessary"))) __attribute__((availability(tvos,unavailable)));


@property(nonatomic, readonly) BOOL shouldAutomaticallyForwardAppearanceMethods __attribute__((availability(ios,introduced=6_0)));
# 456 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 3
- (void)willMoveToParentViewController:(nullable UIViewController *)parent __attribute__((availability(ios,introduced=5_0)));
- (void)didMoveToParentViewController:(nullable UIViewController *)parent __attribute__((availability(ios,introduced=5_0)));

@end

@interface UIViewController (UIStateRestoration) <UIStateRestoring>
@property (nullable, nonatomic, copy) NSString *restorationIdentifier __attribute__((availability(ios,introduced=6_0)));
@property (nullable, nonatomic, readwrite, assign) Class<UIViewControllerRestoration> restorationClass __attribute__((availability(ios,introduced=6_0)));
- (void) encodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
- (void) decodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
- (void) applicationFinishedRestoringState __attribute__((availability(ios,introduced=7_0)));
@end

@interface UIViewController (UIConstraintBasedLayoutCoreMethods)
# 478 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewController.h" 3
- (void)updateViewConstraints __attribute__((availability(ios,introduced=6_0)));
@end

@protocol UIViewControllerTransitioningDelegate;

@interface UIViewController(UIViewControllerTransitioning)

@property (nullable, nonatomic, weak) id <UIViewControllerTransitioningDelegate> transitioningDelegate __attribute__((availability(ios,introduced=7_0)));

@end

@interface UIViewController (UILayoutSupport)

@property(nonatomic,readonly,strong) id<UILayoutSupport> topLayoutGuide __attribute__((availability(ios,introduced=7_0)));
@property(nonatomic,readonly,strong) id<UILayoutSupport> bottomLayoutGuide __attribute__((availability(ios,introduced=7_0)));
@end

@interface UIViewController (UIKeyCommand)

- (void)addKeyCommand:(UIKeyCommand *)keyCommand __attribute__((availability(ios,introduced=9_0)));
- (void)removeKeyCommand:(UIKeyCommand *)keyCommand __attribute__((availability(ios,introduced=9_0)));

@end

@class NSExtensionContext;

@interface UIViewController(NSExtensionAdditions) <NSExtensionRequestHandling>


@property (nullable, nonatomic,readonly,strong) NSExtensionContext *extensionContext __attribute__((availability(ios,introduced=8_0)));

@end

@class UIPresentationController, UIPopoverPresentationController;

@interface UIViewController (UIAdaptivePresentations)
@property (nullable, nonatomic,readonly) UIPresentationController *presentationController __attribute__((availability(ios,introduced=8_0)));
@property (nullable, nonatomic,readonly) UIPopoverPresentationController *popoverPresentationController __attribute__((availability(ios,introduced=8_0)));
@end


@protocol UIViewControllerPreviewingDelegate;

@protocol UIViewControllerPreviewing <NSObject>


@property (nonatomic, readonly) UIGestureRecognizer *previewingGestureRecognizerForFailureRelationship __attribute__((availability(ios,introduced=9_0)));

@property (nonatomic, readonly) id<UIViewControllerPreviewingDelegate> delegate __attribute__((availability(ios,introduced=9_0)));
@property (nonatomic, readonly) UIView *sourceView __attribute__((availability(ios,introduced=9_0)));




@property (nonatomic) CGRect sourceRect __attribute__((availability(ios,introduced=9_0)));

@end


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @protocol UIViewControllerPreviewingDelegate <NSObject>


- (nullable UIViewController *)previewingContext:(id <UIViewControllerPreviewing>)previewingContext viewControllerForLocation:(CGPoint)location __attribute__((availability(ios,introduced=9_0)));
- (void)previewingContext:(id <UIViewControllerPreviewing>)previewingContext commitViewController:(UIViewController *)viewControllerToCommit __attribute__((availability(ios,introduced=9_0)));

@end

@interface UIViewController (UIViewControllerPreviewingRegistration)


- (id <UIViewControllerPreviewing>)registerForPreviewingWithDelegate:(id<UIViewControllerPreviewingDelegate>)delegate sourceView:(UIView *)sourceView __attribute__((availability(ios,introduced=9_0)));
- (void)unregisterForPreviewingWithContext:(id <UIViewControllerPreviewing>)previewing __attribute__((availability(ios,introduced=9_0)));

@end

@protocol UIPreviewActionItem;

@interface UIViewController ()


@property(nonatomic, readonly) NSArray <id <UIPreviewActionItem>> *previewActionItems __attribute__((availability(ios,introduced=9_0)));




@end


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @protocol UIPreviewActionItem <NSObject>
@property(nonatomic, copy, readonly) NSString *title;
@end

typedef enum UIPreviewActionStyle : NSInteger UIPreviewActionStyle; enum UIPreviewActionStyle : NSInteger {
    UIPreviewActionStyleDefault=0,
    UIPreviewActionStyleSelected,
    UIPreviewActionStyleDestructive,
} __attribute__((availability(ios,introduced=9_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UIPreviewAction : NSObject <NSCopying,UIPreviewActionItem>

@property(nonatomic, copy, readonly) void (^handler)(id<UIPreviewActionItem> action, UIViewController *previewViewController);

+ (instancetype)actionWithTitle:(NSString *)title style:(UIPreviewActionStyle)style handler:(void (^)(UIPreviewAction *action, UIViewController *previewViewController))handler;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UIPreviewActionGroup : NSObject <NSCopying,UIPreviewActionItem>
+ (instancetype)actionGroupWithTitle:(NSString *)title style:(UIPreviewActionStyle)style actions:(NSArray<UIPreviewAction *> *)actions;
@end
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIActivityViewController.h" 2 3





typedef void (^UIActivityViewControllerCompletionHandler)(UIActivityType _Nullable activityType, BOOL completed);
typedef void (^UIActivityViewControllerCompletionWithItemsHandler)(UIActivityType _Nullable activityType, BOOL completed, NSArray * _Nullable returnedItems, NSError * _Nullable activityError);

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable))) @interface UIActivityViewController : UIViewController

- (instancetype)init __attribute__((unavailable));
- (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((unavailable));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((unavailable));
- (instancetype)initWithActivityItems:(NSArray *)activityItems applicationActivities:(nullable NSArray<__kindof UIActivity *> *)applicationActivities __attribute__((objc_designated_initializer));

@property(nullable, nonatomic, copy) UIActivityViewControllerCompletionHandler completionHandler __attribute__((availability(ios,introduced=6_0,deprecated=8_0,message="" "Use completionWithItemsHandler instead.")));
@property(nullable, nonatomic, copy) UIActivityViewControllerCompletionWithItemsHandler completionWithItemsHandler __attribute__((availability(ios,introduced=8_0)));

@property(nullable, nonatomic, copy) NSArray<UIActivityType> *excludedActivityTypes;

@end
# 22 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAlertController.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAlertController.h" 3
typedef enum UIAlertActionStyle : NSInteger UIAlertActionStyle; enum UIAlertActionStyle : NSInteger {
    UIAlertActionStyleDefault = 0,
    UIAlertActionStyleCancel,
    UIAlertActionStyleDestructive
} __attribute__((availability(ios,introduced=8_0)));

typedef enum UIAlertControllerStyle : NSInteger UIAlertControllerStyle; enum UIAlertControllerStyle : NSInteger {
    UIAlertControllerStyleActionSheet = 0,
    UIAlertControllerStyleAlert
} __attribute__((availability(ios,introduced=8_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) @interface UIAlertAction : NSObject <NSCopying>

+ (instancetype)actionWithTitle:(nullable NSString *)title style:(UIAlertActionStyle)style handler:(void (^ _Nullable)(UIAlertAction *action))handler;

@property (nullable, nonatomic, readonly) NSString *title;
@property (nonatomic, readonly) UIAlertActionStyle style;
@property (nonatomic, getter=isEnabled) BOOL enabled;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) @interface UIAlertController : UIViewController

+ (instancetype)alertControllerWithTitle:(nullable NSString *)title message:(nullable NSString *)message preferredStyle:(UIAlertControllerStyle)preferredStyle;

- (void)addAction:(UIAlertAction *)action;
@property (nonatomic, readonly) NSArray<UIAlertAction *> *actions;

@property (nonatomic, strong, nullable) UIAlertAction *preferredAction __attribute__((availability(ios,introduced=9_0)));

- (void)addTextFieldWithConfigurationHandler:(void (^ _Nullable)(UITextField *textField))configurationHandler;
@property (nullable, nonatomic, readonly) NSArray<UITextField *> *textFields;

@property (nullable, nonatomic, copy) NSString *title;
@property (nullable, nonatomic, copy) NSString *message;

@property (nonatomic, readonly) UIAlertControllerStyle preferredStyle;

@end
# 24 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIBarButtonItem.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIBarButtonItem.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIBarCommon.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIBarCommon.h" 3
typedef enum UIBarMetrics : NSInteger UIBarMetrics; enum UIBarMetrics : NSInteger {
    UIBarMetricsDefault,
    UIBarMetricsCompact,
    UIBarMetricsDefaultPrompt = 101,
    UIBarMetricsCompactPrompt,

    UIBarMetricsLandscapePhone __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use UIBarMetricsCompact instead"))) = UIBarMetricsCompact,
    UIBarMetricsLandscapePhonePrompt __attribute__((availability(ios,introduced=7_0,deprecated=8_0,message="" "Use UIBarMetricsCompactPrompt"))) = UIBarMetricsCompactPrompt,
};

typedef enum UIBarPosition : NSInteger UIBarPosition; enum UIBarPosition : NSInteger {
    UIBarPositionAny = 0,
    UIBarPositionBottom = 1,
    UIBarPositionTop = 2,
    UIBarPositionTopAttached = 3,
} __attribute__((availability(ios,introduced=7_0)));







@protocol UIBarPositioning <NSObject>
@property(nonatomic,readonly) UIBarPosition barPosition;
@end

@protocol UIBarPositioningDelegate <NSObject>
@optional




- (UIBarPosition)positionForBar:(id <UIBarPositioning>)bar;
@end
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIBarButtonItem.h" 2 3



typedef enum UIBarButtonItemStyle : NSInteger UIBarButtonItemStyle; enum UIBarButtonItemStyle : NSInteger {
    UIBarButtonItemStylePlain,
    UIBarButtonItemStyleBordered __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use UIBarButtonItemStylePlain when minimum deployment target is iOS7 or later"))),
    UIBarButtonItemStyleDone,
};

typedef enum UIBarButtonSystemItem : NSInteger UIBarButtonSystemItem; enum UIBarButtonSystemItem : NSInteger {
    UIBarButtonSystemItemDone,
    UIBarButtonSystemItemCancel,
    UIBarButtonSystemItemEdit,
    UIBarButtonSystemItemSave,
    UIBarButtonSystemItemAdd,
    UIBarButtonSystemItemFlexibleSpace,
    UIBarButtonSystemItemFixedSpace,
    UIBarButtonSystemItemCompose,
    UIBarButtonSystemItemReply,
    UIBarButtonSystemItemAction,
    UIBarButtonSystemItemOrganize,
    UIBarButtonSystemItemBookmarks,
    UIBarButtonSystemItemSearch,
    UIBarButtonSystemItemRefresh,
    UIBarButtonSystemItemStop,
    UIBarButtonSystemItemCamera,
    UIBarButtonSystemItemTrash,
    UIBarButtonSystemItemPlay,
    UIBarButtonSystemItemPause,
    UIBarButtonSystemItemRewind,
    UIBarButtonSystemItemFastForward,
    UIBarButtonSystemItemUndo __attribute__((availability(ios,introduced=3_0))),
    UIBarButtonSystemItemRedo __attribute__((availability(ios,introduced=3_0))),
    UIBarButtonSystemItemPageCurl __attribute__((availability(ios,introduced=4_0))),
};

@class UIImage, UIView;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIBarButtonItem : UIBarItem <NSCoding>

- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
- (instancetype)initWithImage:(nullable UIImage *)image style:(UIBarButtonItemStyle)style target:(nullable id)target action:(nullable SEL)action;
- (instancetype)initWithImage:(nullable UIImage *)image landscapeImagePhone:(nullable UIImage *)landscapeImagePhone style:(UIBarButtonItemStyle)style target:(nullable id)target action:(nullable SEL)action __attribute__((availability(ios,introduced=5_0)));
- (instancetype)initWithTitle:(nullable NSString *)title style:(UIBarButtonItemStyle)style target:(nullable id)target action:(nullable SEL)action;
- (instancetype)initWithBarButtonSystemItem:(UIBarButtonSystemItem)systemItem target:(nullable id)target action:(nullable SEL)action;
- (instancetype)initWithCustomView:(UIView *)customView;

@property(nonatomic) UIBarButtonItemStyle style;
@property(nonatomic) CGFloat width;
@property(nullable, nonatomic,copy) NSSet<NSString *> *possibleTitles;
@property(nullable, nonatomic,strong) __kindof UIView *customView;
@property(nullable, nonatomic) SEL action;
@property(nullable, nonatomic,weak) id target;
# 83 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIBarButtonItem.h" 3
- (void)setBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)backgroundImageForState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



- (void)setBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state style:(UIBarButtonItemStyle)style barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)backgroundImageForState:(UIControlState)state style:(UIBarButtonItemStyle)style barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

@property(nullable, nonatomic,strong) UIColor *tintColor __attribute__((availability(ios,introduced=5_0)));



- (void)setBackgroundVerticalPositionAdjustment:(CGFloat)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (CGFloat)backgroundVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



- (void)setTitlePositionAdjustment:(UIOffset)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (UIOffset)titlePositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));






- (void)setBackButtonBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
- (nullable UIImage *)backButtonBackgroundImageForState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

- (void)setBackButtonTitlePositionAdjustment:(UIOffset)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
- (UIOffset)backButtonTitlePositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));



- (void)setBackButtonBackgroundVerticalPositionAdjustment:(CGFloat)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
- (CGFloat)backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

@end
# 28 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIBarButtonItemGroup.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIBarButtonItemGroup.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UIBarButtonItemGroup : NSObject<NSCoding>


- (instancetype)initWithBarButtonItems:(NSArray<UIBarButtonItem *> *)barButtonItems representativeItem:(nullable UIBarButtonItem *)representativeItem __attribute__((objc_designated_initializer));

- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));


@property (nonatomic, readwrite, copy) NSArray<UIBarButtonItem *> *barButtonItems;





@property (nonatomic, readwrite, strong, nullable) UIBarButtonItem *representativeItem;


@property (nonatomic, readonly, assign, getter = isDisplayingRepresentativeItem) BOOL displayingRepresentativeItem;

@end

@interface UIBarButtonItem (UIBarButtonItemGroup)


@property (nonatomic, readonly, weak, nullable) UIBarButtonItemGroup *buttonGroup __attribute__((availability(ios,introduced=9_0)));

@end
# 29 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIButton.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIButton.h" 3
@class UIImage, UIFont, UIColor, UIImageView, UILabel;

typedef enum UIButtonType : NSInteger UIButtonType; enum UIButtonType : NSInteger {
    UIButtonTypeCustom = 0,
    UIButtonTypeSystem __attribute__((availability(ios,introduced=7_0))),

    UIButtonTypeDetailDisclosure,
    UIButtonTypeInfoLight,
    UIButtonTypeInfoDark,
    UIButtonTypeContactAdd,

    UIButtonTypeRoundedRect = UIButtonTypeSystem,
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIButton : UIControl <NSCoding>

+ (instancetype)buttonWithType:(UIButtonType)buttonType;

@property(nonatomic) UIEdgeInsets contentEdgeInsets __attribute__((annotate("ui_appearance_selector")));
@property(nonatomic) UIEdgeInsets titleEdgeInsets;
@property(nonatomic) BOOL reversesTitleShadowWhenHighlighted;
@property(nonatomic) UIEdgeInsets imageEdgeInsets;
@property(nonatomic) BOOL adjustsImageWhenHighlighted;
@property(nonatomic) BOOL adjustsImageWhenDisabled;
@property(nonatomic) BOOL showsTouchWhenHighlighted __attribute__((availability(tvos,unavailable)));
@property(null_resettable, nonatomic,strong) UIColor *tintColor __attribute__((availability(ios,introduced=5_0)));
@property(nonatomic,readonly) UIButtonType buttonType;





- (void)setTitle:(nullable NSString *)title forState:(UIControlState)state;
- (void)setTitleColor:(nullable UIColor *)color forState:(UIControlState)state __attribute__((annotate("ui_appearance_selector")));
- (void)setTitleShadowColor:(nullable UIColor *)color forState:(UIControlState)state __attribute__((annotate("ui_appearance_selector")));
- (void)setImage:(nullable UIImage *)image forState:(UIControlState)state;
- (void)setBackgroundImage:(nullable UIImage *)image forState:(UIControlState)state __attribute__((annotate("ui_appearance_selector")));
- (void)setAttributedTitle:(nullable NSAttributedString *)title forState:(UIControlState)state __attribute__((availability(ios,introduced=6_0)));

- (nullable NSString *)titleForState:(UIControlState)state;
- (nullable UIColor *)titleColorForState:(UIControlState)state;
- (nullable UIColor *)titleShadowColorForState:(UIControlState)state;
- (nullable UIImage *)imageForState:(UIControlState)state;
- (nullable UIImage *)backgroundImageForState:(UIControlState)state;
- (nullable NSAttributedString *)attributedTitleForState:(UIControlState)state __attribute__((availability(ios,introduced=6_0)));





@property(nullable, nonatomic,readonly,strong) NSString *currentTitle;
@property(nonatomic,readonly,strong) UIColor *currentTitleColor;
@property(nullable, nonatomic,readonly,strong) UIColor *currentTitleShadowColor;
@property(nullable, nonatomic,readonly,strong) UIImage *currentImage;
@property(nullable, nonatomic,readonly,strong) UIImage *currentBackgroundImage;
@property(nullable, nonatomic,readonly,strong) NSAttributedString *currentAttributedTitle __attribute__((availability(ios,introduced=6_0)));


@property(nullable, nonatomic,readonly,strong) UILabel *titleLabel __attribute__((availability(ios,introduced=3_0)));
@property(nullable, nonatomic,readonly,strong) UIImageView *imageView __attribute__((availability(ios,introduced=3_0)));





- (CGRect)backgroundRectForBounds:(CGRect)bounds;
- (CGRect)contentRectForBounds:(CGRect)bounds;
- (CGRect)titleRectForContentRect:(CGRect)contentRect;
- (CGRect)imageRectForContentRect:(CGRect)contentRect;
@end

@interface UIButton(UIButtonDeprecated)

@property(nonatomic,strong) UIFont *font __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic) NSLineBreakMode lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic) CGSize titleShadowOffset __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));

@end
# 37 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionView.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionView.h" 3
typedef enum UICollectionViewScrollPosition : NSUInteger UICollectionViewScrollPosition; enum UICollectionViewScrollPosition : NSUInteger {
    UICollectionViewScrollPositionNone = 0,



    UICollectionViewScrollPositionTop = 1 << 0,
    UICollectionViewScrollPositionCenteredVertically = 1 << 1,
    UICollectionViewScrollPositionBottom = 1 << 2,


    UICollectionViewScrollPositionLeft = 1 << 3,
    UICollectionViewScrollPositionCenteredHorizontally = 1 << 4,
    UICollectionViewScrollPositionRight = 1 << 5
};

@class UICollectionView;
@class UICollectionViewCell;
@class UICollectionViewLayout;
@class UICollectionViewTransitionLayout;
@class UICollectionViewLayoutAttributes;
@class UITouch;
@class UINib;
@class UICollectionReusableView;


typedef void (^UICollectionViewLayoutInteractiveTransitionCompletion)(BOOL completed, BOOL finished);

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UICollectionViewFocusUpdateContext : UIFocusUpdateContext

@property (nonatomic, strong, readonly, nullable) NSIndexPath *previouslyFocusedIndexPath;
@property (nonatomic, strong, readonly, nullable) NSIndexPath *nextFocusedIndexPath;

@end

@protocol UICollectionViewDataSource <NSObject>
@required

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section;


- (__kindof UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath;

@optional

- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView;


- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath;

- (BOOL)collectionView:(UICollectionView *)collectionView canMoveItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9_0)));
- (void)collectionView:(UICollectionView *)collectionView moveItemAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath*)destinationIndexPath __attribute__((availability(ios,introduced=9_0)));

@end

@protocol UICollectionViewDataSourcePrefetching <NSObject>
@required

- (void)collectionView:(UICollectionView *)collectionView prefetchItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=10_0)));

@optional

- (void)collectionView:(UICollectionView *)collectionView cancelPrefetchingForItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=10_0)));

@end


@protocol UICollectionViewDelegate <UIScrollViewDelegate>
@optional
# 94 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionView.h" 3
- (BOOL)collectionView:(UICollectionView *)collectionView shouldHighlightItemAtIndexPath:(NSIndexPath *)indexPath;
- (void)collectionView:(UICollectionView *)collectionView didHighlightItemAtIndexPath:(NSIndexPath *)indexPath;
- (void)collectionView:(UICollectionView *)collectionView didUnhighlightItemAtIndexPath:(NSIndexPath *)indexPath;
- (BOOL)collectionView:(UICollectionView *)collectionView shouldSelectItemAtIndexPath:(NSIndexPath *)indexPath;
- (BOOL)collectionView:(UICollectionView *)collectionView shouldDeselectItemAtIndexPath:(NSIndexPath *)indexPath;
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath;
- (void)collectionView:(UICollectionView *)collectionView didDeselectItemAtIndexPath:(NSIndexPath *)indexPath;

- (void)collectionView:(UICollectionView *)collectionView willDisplayCell:(UICollectionViewCell *)cell forItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=8_0)));
- (void)collectionView:(UICollectionView *)collectionView willDisplaySupplementaryView:(UICollectionReusableView *)view forElementKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=8_0)));
- (void)collectionView:(UICollectionView *)collectionView didEndDisplayingCell:(UICollectionViewCell *)cell forItemAtIndexPath:(NSIndexPath *)indexPath;
- (void)collectionView:(UICollectionView *)collectionView didEndDisplayingSupplementaryView:(UICollectionReusableView *)view forElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)indexPath;



- (BOOL)collectionView:(UICollectionView *)collectionView shouldShowMenuForItemAtIndexPath:(NSIndexPath *)indexPath;
- (BOOL)collectionView:(UICollectionView *)collectionView canPerformAction:(SEL)action forItemAtIndexPath:(NSIndexPath *)indexPath withSender:(nullable id)sender;
- (void)collectionView:(UICollectionView *)collectionView performAction:(SEL)action forItemAtIndexPath:(NSIndexPath *)indexPath withSender:(nullable id)sender;


- (nonnull UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)collectionView transitionLayoutForOldLayout:(UICollectionViewLayout *)fromLayout newLayout:(UICollectionViewLayout *)toLayout;


- (BOOL)collectionView:(UICollectionView *)collectionView canFocusItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9_0)));
- (BOOL)collectionView:(UICollectionView *)collectionView shouldUpdateFocusInContext:(UICollectionViewFocusUpdateContext *)context __attribute__((availability(ios,introduced=9_0)));
- (void)collectionView:(UICollectionView *)collectionView didUpdateFocusInContext:(UICollectionViewFocusUpdateContext *)context withAnimationCoordinator:(UIFocusAnimationCoordinator *)coordinator __attribute__((availability(ios,introduced=9_0)));
- (nullable NSIndexPath *)indexPathForPreferredFocusedViewInCollectionView:(UICollectionView *)collectionView __attribute__((availability(ios,introduced=9_0)));

- (NSIndexPath *)collectionView:(UICollectionView *)collectionView targetIndexPathForMoveFromItemAtIndexPath:(NSIndexPath *)originalIndexPath toProposedIndexPath:(NSIndexPath *)proposedIndexPath __attribute__((availability(ios,introduced=9_0)));

- (CGPoint)collectionView:(UICollectionView *)collectionView targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset __attribute__((availability(ios,introduced=9_0)));

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface UICollectionView : UIScrollView

- (instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout *)layout __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@property (nonatomic, strong) UICollectionViewLayout *collectionViewLayout;
@property (nonatomic, weak, nullable) id <UICollectionViewDelegate> delegate;
@property (nonatomic, weak, nullable) id <UICollectionViewDataSource> dataSource;

@property (nonatomic, weak, nullable) id<UICollectionViewDataSourcePrefetching> prefetchDataSource __attribute__((availability(ios,introduced=10_0)));
@property (nonatomic, getter=isPrefetchingEnabled) BOOL prefetchingEnabled __attribute__((availability(ios,introduced=10_0)));

@property (nonatomic, strong, nullable) UIView *backgroundView;




- (void)registerClass:(nullable Class)cellClass forCellWithReuseIdentifier:(NSString *)identifier;
- (void)registerNib:(nullable UINib *)nib forCellWithReuseIdentifier:(NSString *)identifier;

- (void)registerClass:(nullable Class)viewClass forSupplementaryViewOfKind:(NSString *)elementKind withReuseIdentifier:(NSString *)identifier;
- (void)registerNib:(nullable UINib *)nib forSupplementaryViewOfKind:(NSString *)kind withReuseIdentifier:(NSString *)identifier;

- (__kindof UICollectionViewCell *)dequeueReusableCellWithReuseIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath;
- (__kindof UICollectionReusableView *)dequeueReusableSupplementaryViewOfKind:(NSString *)elementKind withReuseIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath;


@property (nonatomic) BOOL allowsSelection;
@property (nonatomic) BOOL allowsMultipleSelection;


@property (nonatomic, readonly, nullable) NSArray<NSIndexPath *> *indexPathsForSelectedItems;



- (void)selectItemAtIndexPath:(nullable NSIndexPath *)indexPath animated:(BOOL)animated scrollPosition:(UICollectionViewScrollPosition)scrollPosition;
- (void)deselectItemAtIndexPath:(NSIndexPath *)indexPath animated:(BOOL)animated;

- (void)reloadData;

- (void)setCollectionViewLayout:(UICollectionViewLayout *)layout animated:(BOOL)animated;
- (void)setCollectionViewLayout:(UICollectionViewLayout *)layout animated:(BOOL)animated completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=7_0)));

- (UICollectionViewTransitionLayout *)startInteractiveTransitionToCollectionViewLayout:(UICollectionViewLayout *)layout completion:(nullable UICollectionViewLayoutInteractiveTransitionCompletion)completion __attribute__((availability(ios,introduced=7_0)));
- (void)finishInteractiveTransition __attribute__((availability(ios,introduced=7_0)));
- (void)cancelInteractiveTransition __attribute__((availability(ios,introduced=7_0)));




@property (nonatomic, readonly) NSInteger numberOfSections;



- (NSInteger)numberOfItemsInSection:(NSInteger)section;

- (nullable UICollectionViewLayoutAttributes *)layoutAttributesForItemAtIndexPath:(NSIndexPath *)indexPath;
- (nullable UICollectionViewLayoutAttributes *)layoutAttributesForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath;

- (nullable NSIndexPath *)indexPathForItemAtPoint:(CGPoint)point;
- (nullable NSIndexPath *)indexPathForCell:(UICollectionViewCell *)cell;

- (nullable UICollectionViewCell *)cellForItemAtIndexPath:(NSIndexPath *)indexPath;

@property (nonatomic, readonly) NSArray<__kindof UICollectionViewCell *> *visibleCells;
@property (nonatomic, readonly) NSArray<NSIndexPath *> *indexPathsForVisibleItems;





- (nullable UICollectionReusableView *)supplementaryViewForElementKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9_0)));
- (NSArray<UICollectionReusableView *> *)visibleSupplementaryViewsOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=9_0)));
- (NSArray<NSIndexPath *> *)indexPathsForVisibleSupplementaryElementsOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=9_0)));



- (void)scrollToItemAtIndexPath:(NSIndexPath *)indexPath atScrollPosition:(UICollectionViewScrollPosition)scrollPosition animated:(BOOL)animated;


- (void)insertSections:(NSIndexSet *)sections;
- (void)deleteSections:(NSIndexSet *)sections;
- (void)reloadSections:(NSIndexSet *)sections;
- (void)moveSection:(NSInteger)section toSection:(NSInteger)newSection;

- (void)insertItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;
- (void)deleteItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;
- (void)reloadItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;
- (void)moveItemAtIndexPath:(NSIndexPath *)indexPath toIndexPath:(NSIndexPath *)newIndexPath;

- (void)performBatchUpdates:(void (^ _Nullable)(void))updates completion:(void (^ _Nullable)(BOOL finished))completion;


- (BOOL)beginInteractiveMovementForItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9_0)));
- (void)updateInteractiveMovementTargetPosition:(CGPoint)targetPosition __attribute__((availability(ios,introduced=9_0)));
- (void)endInteractiveMovement __attribute__((availability(ios,introduced=9_0)));
- (void)cancelInteractiveMovement __attribute__((availability(ios,introduced=9_0)));


@property (nonatomic) BOOL remembersLastFocusedIndexPath __attribute__((availability(ios,introduced=9_0)));

@end

@interface NSIndexPath (UICollectionViewAdditions)

+ (instancetype)indexPathForItem:(NSInteger)item inSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));

@property (nonatomic, readonly) NSInteger item __attribute__((availability(ios,introduced=6_0)));

@end
# 38 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionViewCell.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionViewCell.h" 3
@class UICollectionViewLayout;
@class UICollectionView;
@class UICollectionViewLayoutAttributes;
@class UILongPressGestureRecognizer;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface UICollectionReusableView : UIView

@property (nonatomic, readonly, copy, nullable) NSString *reuseIdentifier;




- (void)prepareForReuse;





- (void)applyLayoutAttributes:(UICollectionViewLayoutAttributes *)layoutAttributes;


- (void)willTransitionFromLayout:(UICollectionViewLayout *)oldLayout toLayout:(UICollectionViewLayout *)newLayout;
- (void)didTransitionFromLayout:(UICollectionViewLayout *)oldLayout toLayout:(UICollectionViewLayout *)newLayout;

- (UICollectionViewLayoutAttributes *)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes *)layoutAttributes __attribute__((availability(ios,introduced=8_0)));

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface UICollectionViewCell : UICollectionReusableView

@property (nonatomic, readonly) UIView *contentView;





@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;



@property (nonatomic, strong, nullable) UIView *backgroundView;
@property (nonatomic, strong, nullable) UIView *selectedBackgroundView;

@end
# 39 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionViewController.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionViewController.h" 3
@class UICollectionViewLayout;
@class UICollectionViewController;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface UICollectionViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource>

- (instancetype)initWithCollectionViewLayout:(UICollectionViewLayout *)layout __attribute__((objc_designated_initializer));
- (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@property (nullable, nonatomic, strong) __kindof UICollectionView *collectionView;



@property (nonatomic) BOOL clearsSelectionOnViewWillAppear;






@property (nonatomic, assign) BOOL useLayoutToLayoutNavigationTransitions __attribute__((availability(ios,introduced=7_0)));


@property (nonatomic, readonly) UICollectionViewLayout *collectionViewLayout __attribute__((availability(ios,introduced=7_0)));


@property (nonatomic) BOOL installsStandardGestureForInteractiveMovement __attribute__((availability(ios,introduced=9_0)));

@end
# 40 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionViewFlowLayout.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionViewLayout.h" 1 3
# 19 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionViewLayout.h" 3
typedef enum UICollectionElementCategory : NSUInteger UICollectionElementCategory; enum UICollectionElementCategory : NSUInteger {
    UICollectionElementCategoryCell,
    UICollectionElementCategorySupplementaryView,
    UICollectionElementCategoryDecorationView
};

@class UICollectionViewLayoutAttributes;
@class UICollectionView;
@class UINib;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface UICollectionViewLayoutAttributes : NSObject <NSCopying, UIDynamicItem>

@property (nonatomic) CGRect frame;
@property (nonatomic) CGPoint center;
@property (nonatomic) CGSize size;
@property (nonatomic) CATransform3D transform3D;
@property (nonatomic) CGRect bounds __attribute__((availability(ios,introduced=7_0)));
@property (nonatomic) CGAffineTransform transform __attribute__((availability(ios,introduced=7_0)));
@property (nonatomic) CGFloat alpha;
@property (nonatomic) NSInteger zIndex;
@property (nonatomic, getter=isHidden) BOOL hidden;
@property (nonatomic, strong) NSIndexPath *indexPath;

@property (nonatomic, readonly) UICollectionElementCategory representedElementCategory;
@property (nonatomic, readonly, nullable) NSString *representedElementKind;

+ (instancetype)layoutAttributesForCellWithIndexPath:(NSIndexPath *)indexPath;
+ (instancetype)layoutAttributesForSupplementaryViewOfKind:(NSString *)elementKind withIndexPath:(NSIndexPath *)indexPath;
+ (instancetype)layoutAttributesForDecorationViewOfKind:(NSString *)decorationViewKind withIndexPath:(NSIndexPath *)indexPath;

@end

typedef enum UICollectionUpdateAction : NSInteger UICollectionUpdateAction; enum UICollectionUpdateAction : NSInteger {
    UICollectionUpdateActionInsert,
    UICollectionUpdateActionDelete,
    UICollectionUpdateActionReload,
    UICollectionUpdateActionMove,
    UICollectionUpdateActionNone
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface UICollectionViewUpdateItem : NSObject

@property (nonatomic, readonly, nullable) NSIndexPath *indexPathBeforeUpdate;
@property (nonatomic, readonly, nullable) NSIndexPath *indexPathAfterUpdate;
@property (nonatomic, readonly) UICollectionUpdateAction updateAction;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UICollectionViewLayoutInvalidationContext : NSObject

@property (nonatomic, readonly) BOOL invalidateEverything;
@property (nonatomic, readonly) BOOL invalidateDataSourceCounts;

- (void)invalidateItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=8_0)));
- (void)invalidateSupplementaryElementsOfKind:(NSString *)elementKind atIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=8_0)));
- (void)invalidateDecorationElementsOfKind:(NSString *)elementKind atIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=8_0)));
@property (nonatomic, readonly, nullable) NSArray<NSIndexPath *> *invalidatedItemIndexPaths __attribute__((availability(ios,introduced=8_0)));
@property (nonatomic, readonly, nullable) NSDictionary<NSString *, NSArray<NSIndexPath *> *> *invalidatedSupplementaryIndexPaths __attribute__((availability(ios,introduced=8_0)));
@property (nonatomic, readonly, nullable) NSDictionary<NSString *, NSArray<NSIndexPath *> *> *invalidatedDecorationIndexPaths __attribute__((availability(ios,introduced=8_0)));

@property (nonatomic) CGPoint contentOffsetAdjustment __attribute__((availability(ios,introduced=8_0)));
@property (nonatomic) CGSize contentSizeAdjustment __attribute__((availability(ios,introduced=8_0)));


@property (nonatomic, readonly, copy, nullable) NSArray<NSIndexPath *> *previousIndexPathsForInteractivelyMovingItems __attribute__((availability(ios,introduced=9_0)));
@property (nonatomic, readonly, copy, nullable) NSArray<NSIndexPath *> *targetIndexPathsForInteractivelyMovingItems __attribute__((availability(ios,introduced=9_0)));
@property (nonatomic, readonly) CGPoint interactiveMovementTarget __attribute__((availability(ios,introduced=9_0)));

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface UICollectionViewLayout : NSObject <NSCoding>

- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));




@property (nullable, nonatomic, readonly) UICollectionView *collectionView;



- (void)invalidateLayout;
- (void)invalidateLayoutWithContext:(UICollectionViewLayoutInvalidationContext *)context __attribute__((availability(ios,introduced=7_0)));

- (void)registerClass:(nullable Class)viewClass forDecorationViewOfKind:(NSString *)elementKind;
- (void)registerNib:(nullable UINib *)nib forDecorationViewOfKind:(NSString *)elementKind;

@end

@interface UICollectionViewLayout (UISubclassingHooks)


@property(class, nonatomic, readonly) Class layoutAttributesClass;
@property(class, nonatomic, readonly) Class invalidationContextClass __attribute__((availability(ios,introduced=7_0)));
# 122 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionViewLayout.h" 3
- (void)prepareLayout;





- (nullable NSArray<__kindof UICollectionViewLayoutAttributes *> *)layoutAttributesForElementsInRect:(CGRect)rect;
- (nullable UICollectionViewLayoutAttributes *)layoutAttributesForItemAtIndexPath:(NSIndexPath *)indexPath;
- (nullable UICollectionViewLayoutAttributes *)layoutAttributesForSupplementaryViewOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)indexPath;
- (nullable UICollectionViewLayoutAttributes *)layoutAttributesForDecorationViewOfKind:(NSString*)elementKind atIndexPath:(NSIndexPath *)indexPath;

- (BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds;
- (UICollectionViewLayoutInvalidationContext *)invalidationContextForBoundsChange:(CGRect)newBounds __attribute__((availability(ios,introduced=7_0)));

- (BOOL)shouldInvalidateLayoutForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes *)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes *)originalAttributes __attribute__((availability(ios,introduced=8_0)));
- (UICollectionViewLayoutInvalidationContext *)invalidationContextForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes *)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes *)originalAttributes __attribute__((availability(ios,introduced=8_0)));

- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset withScrollingVelocity:(CGPoint)velocity;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset __attribute__((availability(ios,introduced=7_0)));


@property(nonatomic, readonly) CGSize collectionViewContentSize;




@end

@interface UICollectionViewLayout (UIUpdateSupportHooks)




- (void)prepareForCollectionViewUpdates:(NSArray<UICollectionViewUpdateItem *> *)updateItems;
- (void)finalizeCollectionViewUpdates;

- (void)prepareForAnimatedBoundsChange:(CGRect)oldBounds;
- (void)finalizeAnimatedBoundsChange;


- (void)prepareForTransitionToLayout:(UICollectionViewLayout *)newLayout __attribute__((availability(ios,introduced=7_0)));
- (void)prepareForTransitionFromLayout:(UICollectionViewLayout *)oldLayout __attribute__((availability(ios,introduced=7_0)));
- (void)finalizeLayoutTransition __attribute__((availability(ios,introduced=7_0)));





- (nullable UICollectionViewLayoutAttributes *)initialLayoutAttributesForAppearingItemAtIndexPath:(NSIndexPath *)itemIndexPath;
- (nullable UICollectionViewLayoutAttributes *)finalLayoutAttributesForDisappearingItemAtIndexPath:(NSIndexPath *)itemIndexPath;
- (nullable UICollectionViewLayoutAttributes *)initialLayoutAttributesForAppearingSupplementaryElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)elementIndexPath;
- (nullable UICollectionViewLayoutAttributes *)finalLayoutAttributesForDisappearingSupplementaryElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)elementIndexPath;
- (nullable UICollectionViewLayoutAttributes *)initialLayoutAttributesForAppearingDecorationElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)decorationIndexPath;
- (nullable UICollectionViewLayoutAttributes *)finalLayoutAttributesForDisappearingDecorationElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)decorationIndexPath;



- (NSArray<NSIndexPath *> *)indexPathsToDeleteForSupplementaryViewOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=7_0)));
- (NSArray<NSIndexPath *> *)indexPathsToDeleteForDecorationViewOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=7_0)));
- (NSArray<NSIndexPath *> *)indexPathsToInsertForSupplementaryViewOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=7_0)));
- (NSArray<NSIndexPath *> *)indexPathsToInsertForDecorationViewOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=7_0)));

@end

@interface UICollectionViewLayout (UIReorderingSupportHooks)

- (NSIndexPath *)targetIndexPathForInteractivelyMovingItem:(NSIndexPath *)previousIndexPath withPosition:(CGPoint)position __attribute__((availability(ios,introduced=9_0)));
- (UICollectionViewLayoutAttributes *)layoutAttributesForInteractivelyMovingItemAtIndexPath:(NSIndexPath *)indexPath withTargetPosition:(CGPoint)position __attribute__((availability(ios,introduced=9_0)));

- (UICollectionViewLayoutInvalidationContext *)invalidationContextForInteractivelyMovingItems:(NSArray<NSIndexPath *> *)targetIndexPaths withTargetPosition:(CGPoint)targetPosition previousIndexPaths:(NSArray<NSIndexPath *> *)previousIndexPaths previousPosition:(CGPoint)previousPosition __attribute__((availability(ios,introduced=9_0)));
- (UICollectionViewLayoutInvalidationContext *)invalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths:(NSArray<NSIndexPath *> *)indexPaths previousIndexPaths:(NSArray<NSIndexPath *> *)previousIndexPaths movementCancelled:(BOOL)movementCancelled __attribute__((availability(ios,introduced=9_0)));

@end
# 9 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionViewFlowLayout.h" 2 3






extern __attribute__((visibility ("default"))) NSString *const UICollectionElementKindSectionHeader __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString *const UICollectionElementKindSectionFooter __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) const CGSize UICollectionViewFlowLayoutAutomaticSize __attribute__((availability(ios,introduced=10_0)));

typedef enum UICollectionViewScrollDirection : NSInteger UICollectionViewScrollDirection; enum UICollectionViewScrollDirection : NSInteger {
    UICollectionViewScrollDirectionVertical,
    UICollectionViewScrollDirectionHorizontal
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UICollectionViewFlowLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext

@property (nonatomic) BOOL invalidateFlowLayoutDelegateMetrics;
@property (nonatomic) BOOL invalidateFlowLayoutAttributes;

@end

@protocol UICollectionViewDelegateFlowLayout <UICollectionViewDelegate>
@optional

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath;
- (UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout insetForSectionAtIndex:(NSInteger)section;
- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section;
- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section;
- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section;
- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface UICollectionViewFlowLayout : UICollectionViewLayout

@property (nonatomic) CGFloat minimumLineSpacing;
@property (nonatomic) CGFloat minimumInteritemSpacing;
@property (nonatomic) CGSize itemSize;
@property (nonatomic) CGSize estimatedItemSize __attribute__((availability(ios,introduced=8_0)));
@property (nonatomic) UICollectionViewScrollDirection scrollDirection;
@property (nonatomic) CGSize headerReferenceSize;
@property (nonatomic) CGSize footerReferenceSize;
@property (nonatomic) UIEdgeInsets sectionInset;


@property (nonatomic) BOOL sectionHeadersPinToVisibleBounds __attribute__((availability(ios,introduced=9_0)));
@property (nonatomic) BOOL sectionFootersPinToVisibleBounds __attribute__((availability(ios,introduced=9_0)));

@end
# 41 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionViewTransitionLayout.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollectionViewTransitionLayout.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UICollectionViewTransitionLayout : UICollectionViewLayout

@property (assign, nonatomic) CGFloat transitionProgress;
@property (readonly, nonatomic) UICollectionViewLayout *currentLayout;
@property (readonly, nonatomic) UICollectionViewLayout *nextLayout;

- (instancetype)initWithCurrentLayout:(UICollectionViewLayout *)currentLayout nextLayout:(UICollectionViewLayout *)newLayout __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

- (instancetype)init __attribute__((unavailable));

- (void)updateValue:(CGFloat)value forAnimatedKey:(NSString *)key;
- (CGFloat)valueForAnimatedKey:(NSString *)key;

@end
# 43 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDataDetectors.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDataDetectors.h" 3
typedef enum UIDataDetectorTypes : NSUInteger UIDataDetectorTypes; enum UIDataDetectorTypes : NSUInteger {
    UIDataDetectorTypePhoneNumber = 1 << 0,
    UIDataDetectorTypeLink = 1 << 1,
    UIDataDetectorTypeAddress __attribute__((availability(ios,introduced=4_0))) = 1 << 2,
    UIDataDetectorTypeCalendarEvent __attribute__((availability(ios,introduced=4_0))) = 1 << 3,
    UIDataDetectorTypeShipmentTrackingNumber __attribute__((availability(ios,introduced=10_0))) = 1 << 4,
    UIDataDetectorTypeFlightNumber __attribute__((availability(ios,introduced=10_0))) = 1 << 5,
    UIDataDetectorTypeLookupSuggestion __attribute__((availability(ios,introduced=10_0))) = 1 << 6,

    UIDataDetectorTypeNone = 0,
    UIDataDetectorTypeAll = (9223372036854775807L *2UL+1UL)
} __attribute__((availability(tvos,unavailable)));
# 52 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDatePicker.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDatePicker.h" 3
typedef enum UIDatePickerMode : NSInteger UIDatePickerMode; enum UIDatePickerMode : NSInteger {
    UIDatePickerModeTime,
    UIDatePickerModeDate,
    UIDatePickerModeDateAndTime,
    UIDatePickerModeCountDownTimer,
} __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) @interface UIDatePicker : UIControl <NSCoding>
@property (nonatomic) UIDatePickerMode datePickerMode;

@property (nullable, nonatomic, strong) NSLocale *locale;
@property (null_resettable, nonatomic, copy) NSCalendar *calendar;
@property (nullable, nonatomic, strong) NSTimeZone *timeZone;

@property (nonatomic, strong) NSDate *date;
@property (nullable, nonatomic, strong) NSDate *minimumDate;
@property (nullable, nonatomic, strong) NSDate *maximumDate;

@property (nonatomic) NSTimeInterval countDownDuration;
@property (nonatomic) NSInteger minuteInterval;

- (void)setDate:(NSDate *)date animated:(BOOL)animated;
@end
# 53 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDocument.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDocument.h" 3
typedef enum UIDocumentChangeKind : NSInteger UIDocumentChangeKind; enum UIDocumentChangeKind : NSInteger {
    UIDocumentChangeDone,
    UIDocumentChangeUndone,
    UIDocumentChangeRedone,
    UIDocumentChangeCleared
} __attribute__((availability(tvos,unavailable)));

typedef enum UIDocumentSaveOperation : NSInteger UIDocumentSaveOperation; enum UIDocumentSaveOperation : NSInteger {
    UIDocumentSaveForCreating,
    UIDocumentSaveForOverwriting
} __attribute__((availability(tvos,unavailable)));

typedef enum UIDocumentState : NSUInteger UIDocumentState; enum UIDocumentState : NSUInteger {
    UIDocumentStateNormal = 0,
    UIDocumentStateClosed = 1 << 0,
    UIDocumentStateInConflict = 1 << 1,
    UIDocumentStateSavingError = 1 << 2,
    UIDocumentStateEditingDisabled = 1 << 3,
    UIDocumentStateProgressAvailable = 1 << 4
} __attribute__((availability(tvos,unavailable)));

extern __attribute__((visibility ("default"))) NSNotificationName const UIDocumentStateChangedNotification __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable))) @interface UIDocument : NSObject <NSFilePresenter, NSProgressReporting>




- (instancetype)initWithFileURL:(NSURL *)url __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));






@property (readonly) NSURL *fileURL __attribute__((availability(tvos,unavailable)));
@property (readonly, copy) NSString *localizedName __attribute__((availability(tvos,unavailable)));
@property (readonly, copy, nullable) NSString *fileType __attribute__((availability(tvos,unavailable)));
@property (copy, nullable) NSDate *fileModificationDate __attribute__((availability(tvos,unavailable)));

@property (readonly) UIDocumentState documentState __attribute__((availability(tvos,unavailable)));

@property (readonly, nullable) NSProgress *progress __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));





- (void)openWithCompletionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));


- (void)closeWithCompletionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));







- (BOOL)loadFromContents:(id)contents ofType:(nullable NSString *)typeName error:(NSError **)outError __attribute__((availability(tvos,unavailable)));



- (nullable id)contentsForType:(NSString *)typeName error:(NSError **)outError __attribute__((availability(tvos,unavailable)));






- (void)disableEditing __attribute__((availability(tvos,unavailable)));
- (void)enableEditing __attribute__((availability(tvos,unavailable)));






@property (strong, null_resettable) NSUndoManager *undoManager __attribute__((availability(tvos,unavailable)));




@property(nonatomic, readonly) BOOL hasUnsavedChanges __attribute__((availability(tvos,unavailable)));





- (void)updateChangeCount:(UIDocumentChangeKind)change __attribute__((availability(tvos,unavailable)));





- (id)changeCountTokenForSaveOperation:(UIDocumentSaveOperation)saveOperation __attribute__((availability(tvos,unavailable)));
- (void)updateChangeCountWithToken:(id)changeCountToken forSaveOperation:(UIDocumentSaveOperation)saveOperation __attribute__((availability(tvos,unavailable)));






- (void)saveToURL:(NSURL *)url forSaveOperation:(UIDocumentSaveOperation)saveOperation completionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));



- (void)autosaveWithCompletionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));


@property(nonatomic, readonly, nullable) NSString *savingFileType __attribute__((availability(tvos,unavailable)));



- (NSString *)fileNameExtensionForType:(nullable NSString *)typeName saveOperation:(UIDocumentSaveOperation)saveOperation __attribute__((availability(tvos,unavailable)));



- (BOOL)writeContents:(id)contents andAttributes:(nullable NSDictionary *)additionalFileAttributes safelyToURL:(NSURL *)url forSaveOperation:(UIDocumentSaveOperation)saveOperation error:(NSError **)outError __attribute__((availability(tvos,unavailable)));


- (BOOL)writeContents:(id)contents toURL:(NSURL *)url forSaveOperation:(UIDocumentSaveOperation)saveOperation originalContentsURL:(nullable NSURL *)originalContentsURL error:(NSError **)outError __attribute__((availability(tvos,unavailable)));



- (nullable NSDictionary *)fileAttributesToWriteToURL:(NSURL *)url forSaveOperation:(UIDocumentSaveOperation)saveOperation error:(NSError **)outError __attribute__((availability(tvos,unavailable)));




- (BOOL)readFromURL:(NSURL *)url error:(NSError **)outError __attribute__((availability(tvos,unavailable)));




- (void)performAsynchronousFileAccessUsingBlock:(void (^)(void))block __attribute__((availability(tvos,unavailable)));
# 161 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDocument.h" 3
- (void)handleError:(NSError *)error userInteractionPermitted:(BOOL)userInteractionPermitted __attribute__((availability(tvos,unavailable)));




- (void)finishedHandlingError:(NSError *)error recovered:(BOOL)recovered __attribute__((availability(tvos,unavailable)));




- (void)userInteractionNoLongerPermittedForError:(NSError *)error __attribute__((availability(tvos,unavailable)));







- (void)revertToContentsOfURL:(NSURL *)url completionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));

@end



extern __attribute__((visibility ("default"))) NSString* const NSUserActivityDocumentURLKey __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

@interface UIDocument (ActivityContinuation)
@property (nonatomic, strong, nullable) NSUserActivity *userActivity __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
- (void)updateUserActivityState:(NSUserActivity *)userActivity __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
- (void)restoreUserActivityState:(NSUserActivity *)userActivity __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
@end
# 55 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDocumentInteractionController.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDocumentInteractionController.h" 3
@protocol UIDocumentInteractionControllerDelegate;

@class UIImage, UIView, UIPopoverController;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))) @interface UIDocumentInteractionController : NSObject <UIActionSheetDelegate>

+ (UIDocumentInteractionController *)interactionControllerWithURL:(NSURL *)url;

@property(nullable, nonatomic, weak) id<UIDocumentInteractionControllerDelegate> delegate;

@property(nullable, strong) NSURL *URL;
@property(nullable, nonatomic, copy) NSString *UTI;
@property(nullable, copy) NSString *name;
@property(nonatomic, readonly) NSArray<UIImage *> *icons;
@property(nullable, nonatomic, strong) id annotation;






- (BOOL)presentOptionsMenuFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated;
- (BOOL)presentOptionsMenuFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated;



- (BOOL)presentPreviewAnimated:(BOOL)animated;




- (BOOL)presentOpenInMenuFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated;
- (BOOL)presentOpenInMenuFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated;


- (void)dismissPreviewAnimated:(BOOL)animated;


- (void)dismissMenuAnimated:(BOOL)animated;



@property(nonatomic, readonly) NSArray<__kindof UIGestureRecognizer *> *gestureRecognizers;

@end

__attribute__((availability(tvos,unavailable))) @protocol UIDocumentInteractionControllerDelegate <NSObject>

@optional




- (UIViewController *)documentInteractionControllerViewControllerForPreview:(UIDocumentInteractionController *)controller;





- (CGRect)documentInteractionControllerRectForPreview:(UIDocumentInteractionController *)controller;
- (nullable UIView *)documentInteractionControllerViewForPreview:(UIDocumentInteractionController *)controller;


- (void)documentInteractionControllerWillBeginPreview:(UIDocumentInteractionController *)controller;
- (void)documentInteractionControllerDidEndPreview:(UIDocumentInteractionController *)controller;


- (void)documentInteractionControllerWillPresentOptionsMenu:(UIDocumentInteractionController *)controller;
- (void)documentInteractionControllerDidDismissOptionsMenu:(UIDocumentInteractionController *)controller;


- (void)documentInteractionControllerWillPresentOpenInMenu:(UIDocumentInteractionController *)controller;
- (void)documentInteractionControllerDidDismissOpenInMenu:(UIDocumentInteractionController *)controller;


- (void)documentInteractionController:(UIDocumentInteractionController *)controller willBeginSendingToApplication:(nullable NSString *)application;
- (void)documentInteractionController:(UIDocumentInteractionController *)controller didEndSendingToApplication:(nullable NSString *)application;


- (BOOL)documentInteractionController:(UIDocumentInteractionController *)controller canPerformAction:(nullable SEL)action __attribute__((availability(ios,introduced=3_2,deprecated=6_0,message="" )));
- (BOOL)documentInteractionController:(UIDocumentInteractionController *)controller performAction:(nullable SEL)action __attribute__((availability(ios,introduced=3_2,deprecated=6_0,message="" )));

@end
# 56 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDocumentPickerViewController.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDocumentPickerViewController.h" 3
@class UIDocumentPickerViewController, UIDocumentMenuViewController;

__attribute__((availability(tvos,unavailable))) @protocol UIDocumentPickerDelegate <NSObject>

- (void)documentPicker:(UIDocumentPickerViewController *)controller didPickDocumentAtURL:(NSURL *)url;

@optional

- (void)documentPickerWasCancelled:(UIDocumentPickerViewController *)controller;
@end

typedef enum UIDocumentPickerMode : NSUInteger UIDocumentPickerMode; enum UIDocumentPickerMode : NSUInteger {
    UIDocumentPickerModeImport,
    UIDocumentPickerModeOpen,
    UIDocumentPickerModeExportToService,
    UIDocumentPickerModeMoveToService
} __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) @interface UIDocumentPickerViewController : UIViewController


- (instancetype)initWithDocumentTypes:(NSArray <NSString *>*)allowedUTIs inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));


- (instancetype)initWithURL:(NSURL *)url inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));

@property (nullable, nonatomic, weak) id<UIDocumentPickerDelegate> delegate;
@property (nonatomic, assign, readonly) UIDocumentPickerMode documentPickerMode;

@end
# 57 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDocumentMenuViewController.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDocumentMenuViewController.h" 3
typedef enum UIDocumentMenuOrder : NSUInteger UIDocumentMenuOrder; enum UIDocumentMenuOrder : NSUInteger {
    UIDocumentMenuOrderFirst,
    UIDocumentMenuOrderLast
} __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

__attribute__((availability(tvos,unavailable))) @protocol UIDocumentMenuDelegate <NSObject>

- (void)documentMenu:(UIDocumentMenuViewController *)documentMenu didPickDocumentPicker:(UIDocumentPickerViewController *)documentPicker;
@optional
- (void)documentMenuWasCancelled:(UIDocumentMenuViewController *)documentMenu;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) @interface UIDocumentMenuViewController : UIViewController

- (instancetype)initWithDocumentTypes:(NSArray <NSString *> *)allowedUTIs inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
- (instancetype)initWithURL:(NSURL *)url inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

- (void)addOptionWithTitle:(NSString *)title image:(nullable UIImage *)image order:(UIDocumentMenuOrder)order handler:(void (^)(void))handler;

@property (nullable, nonatomic, weak) id<UIDocumentMenuDelegate> delegate;

@end
# 58 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDocumentPickerExtensionViewController.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDocumentPickerExtensionViewController.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) @interface UIDocumentPickerExtensionViewController : UIViewController





- (void)dismissGrantingAccessToURL:(nullable NSURL *)url;

- (void)prepareForPresentationInMode:(UIDocumentPickerMode)mode;


@property (nonatomic, readonly, assign) UIDocumentPickerMode documentPickerMode;


@property (nullable, nonatomic, readonly, copy) NSURL *originalURL;


@property (nullable, nonatomic, readonly, copy) NSArray<NSString *> *validTypes;



@property (nonatomic, readonly, copy) NSString *providerIdentifier;
@property (nullable, nonatomic, readonly, copy) NSURL *documentStorageURL;

@end
# 59 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICloudSharingController.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICloudSharingController.h" 3
@class UICloudSharingController, CKShare, CKContainer;

typedef enum UICloudSharingPermissionOptions : NSUInteger UICloudSharingPermissionOptions; enum UICloudSharingPermissionOptions : NSUInteger {
    UICloudSharingPermissionStandard = 0,

    UICloudSharingPermissionAllowPublic = 1 << 0,
    UICloudSharingPermissionAllowPrivate = 1 << 1,

    UICloudSharingPermissionAllowReadOnly = 1 << 2,
    UICloudSharingPermissionAllowReadWrite = 1 << 3,
} __attribute__((availability(ios,introduced=10_0)));

@protocol UICloudSharingControllerDelegate <NSObject>

- (void)cloudSharingController:(UICloudSharingController *)csc failedToSaveShareWithError:(NSError *)error;


- (nullable NSString *)itemTitleForCloudSharingController:(UICloudSharingController *)csc;

@optional

- (nullable NSData *)itemThumbnailDataForCloudSharingController:(UICloudSharingController *)csc;

- (nullable NSString *)itemTypeForCloudSharingController:(UICloudSharingController *)csc;

- (void)cloudSharingControllerDidSaveShare:(UICloudSharingController *)csc;
- (void)cloudSharingControllerDidStopSharing:(UICloudSharingController *)csc;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UICloudSharingController : UIViewController

- (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((unavailable));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((unavailable));






- (instancetype)initWithPreparationHandler:(void (^)(UICloudSharingController *controller, void (^preparationCompletionHandler)(CKShare * _Nullable, CKContainer * _Nullable, NSError * _Nullable)))preparationHandler;



- (instancetype)initWithShare:(CKShare *)share container:(CKContainer *)container;

@property (nonatomic, weak) id<UICloudSharingControllerDelegate> delegate;
@property (nonatomic, readonly, strong, nullable) CKShare *share;



@property (nonatomic) UICloudSharingPermissionOptions availablePermissions;





- (id <UIActivityItemSource>)activityItemSource;

@end
# 60 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSFileProviderExtension.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSFileProviderExtension.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) @interface NSFileProviderExtension : NSObject



+ (BOOL)writePlaceholderAtURL:(NSURL *)placeholderURL withMetadata:(NSDictionary *)metadata error:(NSError **)error;
+ (NSURL *)placeholderURLForURL:(NSURL *)url;






@property(nonatomic, readonly) NSString *providerIdentifier;






@property(nonatomic, readonly) NSURL *documentStorageURL;
# 41 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSFileProviderExtension.h" 3
- (nullable NSURL *)URLForItemWithPersistentIdentifier:(NSString *)identifier;
- (nullable NSString *)persistentIdentifierForItemAtURL:(NSURL *)url;




- (void)providePlaceholderAtURL:(NSURL *)url completionHandler:(void (^)(NSError * _Nullable error))completionHandler;


- (void)startProvidingItemAtURL:(NSURL *)url completionHandler:(void (^)(NSError * _Nullable error))completionHandler;


- (void)itemChangedAtURL:(NSURL *)url;



- (void)stopProvidingItemAtURL:(NSURL *)url;
@end
# 61 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIVisualEffectView.h" 1 3
# 23 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIVisualEffectView.h" 3
typedef enum UIBlurEffectStyle : NSInteger UIBlurEffectStyle; enum UIBlurEffectStyle : NSInteger {
    UIBlurEffectStyleExtraLight,
    UIBlurEffectStyleLight,
    UIBlurEffectStyleDark,
    UIBlurEffectStyleExtraDark __attribute__((availability(tvos,introduced=10_0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleRegular __attribute__((availability(ios,introduced=10_0))),
    UIBlurEffectStyleProminent __attribute__((availability(ios,introduced=10_0))),
} __attribute__((availability(ios,introduced=8_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) @interface UIVisualEffect : NSObject <NSCopying, NSSecureCoding> @end


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) @interface UIBlurEffect : UIVisualEffect
+ (UIBlurEffect *)effectWithStyle:(UIBlurEffectStyle)style;
@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) @interface UIVibrancyEffect : UIVisualEffect
+ (UIVibrancyEffect *)effectForBlurEffect:(UIBlurEffect *)blurEffect;
@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) @interface UIVisualEffectView : UIView <NSSecureCoding>
@property (nonatomic, strong, readonly) UIView *contentView;
@property (nonatomic, copy, nullable) UIVisualEffect *effect;
- (instancetype)initWithEffect:(nullable UIVisualEffect *)effect __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
@end
# 62 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGestureRecognizer.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGestureRecognizer.h" 3
@protocol UIGestureRecognizerDelegate;
@class UIView, UIEvent, UITouch, UIPress;

typedef enum UIGestureRecognizerState : NSInteger UIGestureRecognizerState; enum UIGestureRecognizerState : NSInteger {
    UIGestureRecognizerStatePossible,

    UIGestureRecognizerStateBegan,
    UIGestureRecognizerStateChanged,
    UIGestureRecognizerStateEnded,
    UIGestureRecognizerStateCancelled,

    UIGestureRecognizerStateFailed,


    UIGestureRecognizerStateRecognized = UIGestureRecognizerStateEnded
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) @interface UIGestureRecognizer : NSObject




- (instancetype)initWithTarget:(nullable id)target action:(nullable SEL)action __attribute__((objc_designated_initializer));

- (void)addTarget:(id)target action:(SEL)action;
- (void)removeTarget:(nullable id)target action:(nullable SEL)action;

@property(nonatomic,readonly) UIGestureRecognizerState state;

@property(nullable,nonatomic,weak) id <UIGestureRecognizerDelegate> delegate;

@property(nonatomic, getter=isEnabled) BOOL enabled;


@property(nullable, nonatomic,readonly) UIView *view;

@property(nonatomic) BOOL cancelsTouchesInView;
@property(nonatomic) BOOL delaysTouchesBegan;
@property(nonatomic) BOOL delaysTouchesEnded;

@property(nonatomic, copy) NSArray<NSNumber *> *allowedTouchTypes __attribute__((availability(ios,introduced=9_0)));
@property(nonatomic, copy) NSArray<NSNumber *> *allowedPressTypes __attribute__((availability(ios,introduced=9_0)));




@property (nonatomic) BOOL requiresExclusiveTouchType __attribute__((availability(ios,introduced=9_2)));




- (void)requireGestureRecognizerToFail:(UIGestureRecognizer *)otherGestureRecognizer;


- (CGPoint)locationInView:(nullable UIView*)view;


@property(nonatomic, readonly) NSUInteger numberOfTouches;



- (CGPoint)locationOfTouch:(NSUInteger)touchIndex inView:(nullable UIView*)view;

@end


@protocol UIGestureRecognizerDelegate <NSObject>
@optional

- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer;





- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer;





- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer __attribute__((availability(ios,introduced=7_0)));
- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer __attribute__((availability(ios,introduced=7_0)));


- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldReceiveTouch:(UITouch *)touch;


- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldReceivePress:(UIPress *)press;

@end
# 71 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGraphics.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGraphics.h" 3
@class UIImage;

extern __attribute__((visibility ("default"))) CGContextRef _Nullable UIGraphicsGetCurrentContext(void) __attribute__((cf_returns_not_retained));
extern __attribute__((visibility ("default"))) void UIGraphicsPushContext(CGContextRef context);
extern __attribute__((visibility ("default"))) void UIGraphicsPopContext(void);

extern __attribute__((visibility ("default"))) void UIRectFillUsingBlendMode(CGRect rect, CGBlendMode blendMode);
extern __attribute__((visibility ("default"))) void UIRectFill(CGRect rect);

extern __attribute__((visibility ("default"))) void UIRectFrameUsingBlendMode(CGRect rect, CGBlendMode blendMode);
extern __attribute__((visibility ("default"))) void UIRectFrame(CGRect rect);

extern __attribute__((visibility ("default"))) void UIRectClip(CGRect rect);





extern __attribute__((visibility ("default"))) void UIGraphicsBeginImageContext(CGSize size);
extern __attribute__((visibility ("default"))) void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale) __attribute__((availability(ios,introduced=4_0)));
extern __attribute__((visibility ("default"))) UIImage* _Nullable UIGraphicsGetImageFromCurrentImageContext(void);
extern __attribute__((visibility ("default"))) void UIGraphicsEndImageContext(void);



extern __attribute__((visibility ("default"))) BOOL UIGraphicsBeginPDFContextToFile(NSString *path, CGRect bounds, NSDictionary * _Nullable documentInfo) __attribute__((availability(ios,introduced=3_2)));
extern __attribute__((visibility ("default"))) void UIGraphicsBeginPDFContextToData(NSMutableData *data, CGRect bounds, NSDictionary * _Nullable documentInfo) __attribute__((availability(ios,introduced=3_2)));
extern __attribute__((visibility ("default"))) void UIGraphicsEndPDFContext(void) __attribute__((availability(ios,introduced=3_2)));

extern __attribute__((visibility ("default"))) void UIGraphicsBeginPDFPage(void) __attribute__((availability(ios,introduced=3_2)));
extern __attribute__((visibility ("default"))) void UIGraphicsBeginPDFPageWithInfo(CGRect bounds, NSDictionary * _Nullable pageInfo) __attribute__((availability(ios,introduced=3_2)));

extern __attribute__((visibility ("default"))) CGRect UIGraphicsGetPDFContextBounds(void) __attribute__((availability(ios,introduced=3_2)));

extern __attribute__((visibility ("default"))) void UIGraphicsSetPDFContextURLForRect(NSURL *url, CGRect rect) __attribute__((availability(ios,introduced=3_2)));
extern __attribute__((visibility ("default"))) void UIGraphicsAddPDFContextDestinationAtPoint(NSString *name, CGPoint point) __attribute__((availability(ios,introduced=3_2)));
extern __attribute__((visibility ("default"))) void UIGraphicsSetPDFContextDestinationForRect(NSString *name, CGRect rect) __attribute__((availability(ios,introduced=3_2)));
# 74 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGraphicsRenderer.h" 1 3
# 19 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGraphicsRenderer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIGraphicsRendererFormat : NSObject <NSCopying>

+ (instancetype)defaultFormat;


@property (nonatomic, readonly) CGRect bounds;
@end






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIGraphicsRendererContext : NSObject
@property (nonatomic, readonly) CGContextRef CGContext;
@property (nonatomic, readonly) __kindof UIGraphicsRendererFormat *format;

- (void)fillRect:(CGRect)rect;
- (void)fillRect:(CGRect)rect blendMode:(CGBlendMode)blendMode;

- (void)strokeRect:(CGRect)rect;
- (void)strokeRect:(CGRect)rect blendMode:(CGBlendMode)blendMode;

- (void)clipToRect:(CGRect)rect;
@end




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIGraphicsRenderer : NSObject



- (instancetype)initWithBounds:(CGRect)bounds;
- (instancetype)initWithBounds:(CGRect)bounds format:(UIGraphicsRendererFormat *)format __attribute__((objc_designated_initializer));

@property (nonatomic, readonly) __kindof UIGraphicsRendererFormat *format;
@property (nonatomic, readonly) BOOL allowsImageOutput;
@end
# 78 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGraphicsImageRenderer.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGraphicsImageRenderer.h" 3
@class UIGraphicsImageRendererContext;

typedef void (^UIGraphicsImageDrawingActions)(UIGraphicsImageRendererContext *rendererContext) __attribute__((availability(ios,introduced=10_0)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIGraphicsImageRendererFormat : UIGraphicsRendererFormat
@property (nonatomic) CGFloat scale;
@property (nonatomic) BOOL opaque;
@property (nonatomic) BOOL prefersExtendedRange;
@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIGraphicsImageRendererContext : UIGraphicsRendererContext
@property (nonatomic, readonly) UIImage *currentImage;
@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIGraphicsImageRenderer : UIGraphicsRenderer
- (instancetype)initWithSize:(CGSize)size;
- (instancetype)initWithSize:(CGSize)size format:(UIGraphicsImageRendererFormat *)format __attribute__((objc_designated_initializer));
- (instancetype)initWithBounds:(CGRect)bounds format:(UIGraphicsImageRendererFormat *)format __attribute__((objc_designated_initializer));



- (UIImage *)imageWithActions:(__attribute__((noescape)) UIGraphicsImageDrawingActions)actions;


- (NSData *)PNGDataWithActions:(__attribute__((noescape)) UIGraphicsImageDrawingActions)actions;
- (NSData *)JPEGDataWithCompressionQuality:(CGFloat)compressionQuality actions:(__attribute__((noescape)) UIGraphicsImageDrawingActions)actions;
@end
# 79 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGraphicsPDFRenderer.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGraphicsPDFRenderer.h" 3
@class UIGraphicsPDFRendererContext;

typedef void (^UIGraphicsPDFDrawingActions)(UIGraphicsPDFRendererContext *rendererContext) __attribute__((availability(ios,introduced=10_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIGraphicsPDFRendererFormat : UIGraphicsRendererFormat
@property (nonatomic, copy) NSDictionary<NSString *, id> *documentInfo;
@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIGraphicsPDFRendererContext : UIGraphicsRendererContext
@property (nonatomic, readonly) CGRect pdfContextBounds;

- (void)beginPage;
- (void)beginPageWithBounds:(CGRect)bounds pageInfo:(NSDictionary<NSString *, id> *)pageInfo;

- (void)setURL:(NSURL *)url forRect:(CGRect)rect;
- (void)addDestinationWithName:(NSString *)name atPoint:(CGPoint)point;
- (void)setDestinationWithName:(NSString *)name forRect:(CGRect)rect;
@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIGraphicsPDFRenderer : UIGraphicsRenderer
- (instancetype)initWithBounds:(CGRect)bounds format:(UIGraphicsPDFRendererFormat *)format __attribute__((objc_designated_initializer));

- (BOOL)writePDFToURL:(NSURL *)url withActions:(__attribute__((noescape)) UIGraphicsPDFDrawingActions)actions error:(NSError **)error;
- (NSData *)PDFDataWithActions:(__attribute__((noescape)) UIGraphicsPDFDrawingActions)actions;
@end
# 80 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIImageAsset.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIImageAsset.h" 3
@class UITraitCollection;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) @interface UIImageAsset : NSObject <NSSecureCoding>

- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

- (UIImage *)imageWithTraitCollection:(UITraitCollection *)traitCollection;
- (void)registerImage:(UIImage *)image withTraitCollection:(UITraitCollection *)traitCollection;
- (void)unregisterImageWithTraitCollection:(UITraitCollection *)traitCollection;
@end
# 84 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSDataAsset.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSDataAsset.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface NSDataAsset : NSObject<NSCopying>

- (instancetype)init __attribute__((unavailable));


- (nullable instancetype)initWithName:(NSString *)name;

- (nullable instancetype)initWithName:(NSString *)name bundle:(NSBundle *)bundle __attribute__((objc_designated_initializer));


@property (nonatomic, readonly, copy) NSString *name;

@property (nonatomic, readonly, copy) NSData *data;

@property (nonatomic, readonly, copy) NSString *typeIdentifier;

@end
# 85 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIImagePickerController.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINavigationController.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINavigationController.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPanGestureRecognizer.h" 1 3
# 17 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPanGestureRecognizer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) @interface UIPanGestureRecognizer : UIGestureRecognizer

@property (nonatomic) NSUInteger minimumNumberOfTouches __attribute__((availability(tvos,unavailable)));
@property (nonatomic) NSUInteger maximumNumberOfTouches __attribute__((availability(tvos,unavailable)));

- (CGPoint)translationInView:(nullable UIView *)view;
- (void)setTranslation:(CGPoint)translation inView:(nullable UIView *)view;

- (CGPoint)velocityInView:(nullable UIView *)view;

@end
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINavigationController.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITapGestureRecognizer.h" 1 3
# 20 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITapGestureRecognizer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) @interface UITapGestureRecognizer : UIGestureRecognizer

@property (nonatomic) NSUInteger numberOfTapsRequired;
@property (nonatomic) NSUInteger numberOfTouchesRequired __attribute__((availability(tvos,unavailable)));

@end
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINavigationController.h" 2 3
# 32 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINavigationController.h" 3
typedef enum UINavigationControllerOperation : NSInteger UINavigationControllerOperation; enum UINavigationControllerOperation : NSInteger {
    UINavigationControllerOperationNone,
    UINavigationControllerOperationPush,
    UINavigationControllerOperationPop,
};

extern __attribute__((visibility ("default"))) const CGFloat UINavigationControllerHideShowBarDuration;

@class UIView, UINavigationBar, UINavigationItem, UIToolbar;
@protocol UINavigationControllerDelegate;


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UINavigationController : UIViewController






- (instancetype)initWithNavigationBarClass:(nullable Class)navigationBarClass toolbarClass:(nullable Class)toolbarClass __attribute__((availability(ios,introduced=5_0)));

- (instancetype)initWithRootViewController:(UIViewController *)rootViewController;

- (void)pushViewController:(UIViewController *)viewController animated:(BOOL)animated;

- (nullable UIViewController *)popViewControllerAnimated:(BOOL)animated;
- (nullable NSArray<__kindof UIViewController *> *)popToViewController:(UIViewController *)viewController animated:(BOOL)animated;
- (nullable NSArray<__kindof UIViewController *> *)popToRootViewControllerAnimated:(BOOL)animated;

@property(nullable, nonatomic,readonly,strong) UIViewController *topViewController;
@property(nullable, nonatomic,readonly,strong) UIViewController *visibleViewController;

@property(nonatomic,copy) NSArray<__kindof UIViewController *> *viewControllers;

- (void)setViewControllers:(NSArray<UIViewController *> *)viewControllers animated:(BOOL)animated __attribute__((availability(ios,introduced=3_0)));

@property(nonatomic,getter=isNavigationBarHidden) BOOL navigationBarHidden;
- (void)setNavigationBarHidden:(BOOL)hidden animated:(BOOL)animated;
@property(nonatomic,readonly) UINavigationBar *navigationBar;

@property(nonatomic,getter=isToolbarHidden) BOOL toolbarHidden __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
- (void)setToolbarHidden:(BOOL)hidden animated:(BOOL)animated __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
@property(null_resettable,nonatomic,readonly) UIToolbar *toolbar __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));

@property(nullable, nonatomic, weak) id<UINavigationControllerDelegate> delegate;
@property(nullable, nonatomic, readonly) UIGestureRecognizer *interactivePopGestureRecognizer __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

- (void)showViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));


@property (nonatomic, readwrite, assign) BOOL hidesBarsWhenKeyboardAppears __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

@property (nonatomic, readwrite, assign) BOOL hidesBarsOnSwipe __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

@property (nonatomic, readonly, strong) UIPanGestureRecognizer *barHideOnSwipeGestureRecognizer __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

@property (nonatomic, readwrite, assign) BOOL hidesBarsWhenVerticallyCompact __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

@property (nonatomic, readwrite, assign) BOOL hidesBarsOnTap __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

@property (nonatomic, readonly, assign) UITapGestureRecognizer *barHideOnTapGestureRecognizer __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

@end

@protocol UIViewControllerInteractiveTransitioning;
@protocol UIViewControllerAnimatedTransitioning;

@protocol UINavigationControllerDelegate <NSObject>

@optional


- (void)navigationController:(UINavigationController *)navigationController willShowViewController:(UIViewController *)viewController animated:(BOOL)animated;
- (void)navigationController:(UINavigationController *)navigationController didShowViewController:(UIViewController *)viewController animated:(BOOL)animated;

- (UIInterfaceOrientationMask)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)navigationController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
- (UIInterfaceOrientation)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)navigationController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

- (nullable id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)navigationController
                          interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>) animationController __attribute__((availability(ios,introduced=7_0)));

- (nullable id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)navigationController
                                   animationControllerForOperation:(UINavigationControllerOperation)operation
                                                fromViewController:(UIViewController *)fromVC
                                                  toViewController:(UIViewController *)toVC __attribute__((availability(ios,introduced=7_0)));

@end

@interface UIViewController (UINavigationControllerItem)

@property(nonatomic,readonly,strong) UINavigationItem *navigationItem;
@property(nonatomic) BOOL hidesBottomBarWhenPushed __attribute__((availability(tvos,unavailable)));
@property(nullable, nonatomic,readonly,strong) UINavigationController *navigationController;

@end

@interface UIViewController (UINavigationControllerContextualToolbarItems)

@property (nullable, nonatomic, strong) NSArray<__kindof UIBarButtonItem *> *toolbarItems __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
- (void)setToolbarItems:(nullable NSArray<UIBarButtonItem *> *)toolbarItems animated:(BOOL)animated __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));

@end
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIImagePickerController.h" 2 3




@class UIImage;
@protocol UIImagePickerControllerDelegate;

typedef enum UIImagePickerControllerSourceType : NSInteger UIImagePickerControllerSourceType; enum UIImagePickerControllerSourceType : NSInteger {
    UIImagePickerControllerSourceTypePhotoLibrary,
    UIImagePickerControllerSourceTypeCamera,
    UIImagePickerControllerSourceTypeSavedPhotosAlbum
} __attribute__((availability(tvos,unavailable)));

typedef enum UIImagePickerControllerQualityType : NSInteger UIImagePickerControllerQualityType; enum UIImagePickerControllerQualityType : NSInteger {
    UIImagePickerControllerQualityTypeHigh = 0,
    UIImagePickerControllerQualityTypeMedium = 1,
    UIImagePickerControllerQualityTypeLow = 2,
    UIImagePickerControllerQualityType640x480 __attribute__((availability(ios,introduced=4_0))) = 3,
    UIImagePickerControllerQualityTypeIFrame1280x720 __attribute__((availability(ios,introduced=5_0))) = 4,
    UIImagePickerControllerQualityTypeIFrame960x540 __attribute__((availability(ios,introduced=5_0))) = 5,
} __attribute__((availability(tvos,unavailable)));

typedef enum UIImagePickerControllerCameraCaptureMode : NSInteger UIImagePickerControllerCameraCaptureMode; enum UIImagePickerControllerCameraCaptureMode : NSInteger {
    UIImagePickerControllerCameraCaptureModePhoto,
    UIImagePickerControllerCameraCaptureModeVideo
} __attribute__((availability(tvos,unavailable)));

typedef enum UIImagePickerControllerCameraDevice : NSInteger UIImagePickerControllerCameraDevice; enum UIImagePickerControllerCameraDevice : NSInteger {
    UIImagePickerControllerCameraDeviceRear,
    UIImagePickerControllerCameraDeviceFront
} __attribute__((availability(tvos,unavailable)));

typedef enum UIImagePickerControllerCameraFlashMode : NSInteger UIImagePickerControllerCameraFlashMode; enum UIImagePickerControllerCameraFlashMode : NSInteger {
    UIImagePickerControllerCameraFlashModeOff = -1,
    UIImagePickerControllerCameraFlashModeAuto = 0,
    UIImagePickerControllerCameraFlashModeOn = 1
} __attribute__((availability(tvos,unavailable)));


extern __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerMediaType __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerOriginalImage __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerEditedImage __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerCropRect __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerMediaURL __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerReferenceURL __attribute__((availability(ios,introduced=4_1))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerMediaMetadata __attribute__((availability(ios,introduced=4_1))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerLivePhoto __attribute__((availability(ios,introduced=9_1))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) @interface UIImagePickerController : UINavigationController <NSCoding>

+ (BOOL)isSourceTypeAvailable:(UIImagePickerControllerSourceType)sourceType;
+ (nullable NSArray<NSString *> *)availableMediaTypesForSourceType:(UIImagePickerControllerSourceType)sourceType;

+ (BOOL)isCameraDeviceAvailable:(UIImagePickerControllerCameraDevice)cameraDevice __attribute__((availability(ios,introduced=4_0)));
+ (BOOL)isFlashAvailableForCameraDevice:(UIImagePickerControllerCameraDevice)cameraDevice __attribute__((availability(ios,introduced=4_0)));
+ (nullable NSArray<NSNumber *> *)availableCaptureModesForCameraDevice:(UIImagePickerControllerCameraDevice)cameraDevice __attribute__((availability(ios,introduced=4_0)));

@property(nullable,nonatomic,weak) id <UINavigationControllerDelegate, UIImagePickerControllerDelegate> delegate;

@property(nonatomic) UIImagePickerControllerSourceType sourceType;
@property(nonatomic,copy) NSArray<NSString *> *mediaTypes;

@property(nonatomic) BOOL allowsEditing __attribute__((availability(ios,introduced=3_1)));
@property(nonatomic) BOOL allowsImageEditing __attribute__((availability(ios,introduced=2_0,deprecated=3_1,message="" )));


@property(nonatomic) NSTimeInterval videoMaximumDuration __attribute__((availability(ios,introduced=3_1)));
@property(nonatomic) UIImagePickerControllerQualityType videoQuality __attribute__((availability(ios,introduced=3_1)));


@property(nonatomic) BOOL showsCameraControls __attribute__((availability(ios,introduced=3_1)));
@property(nullable, nonatomic,strong) __kindof UIView *cameraOverlayView __attribute__((availability(ios,introduced=3_1)));
@property(nonatomic) CGAffineTransform cameraViewTransform __attribute__((availability(ios,introduced=3_1)));

- (void)takePicture __attribute__((availability(ios,introduced=3_1)));



- (BOOL)startVideoCapture __attribute__((availability(ios,introduced=4_0)));
- (void)stopVideoCapture __attribute__((availability(ios,introduced=4_0)));

@property(nonatomic) UIImagePickerControllerCameraCaptureMode cameraCaptureMode __attribute__((availability(ios,introduced=4_0)));
@property(nonatomic) UIImagePickerControllerCameraDevice cameraDevice __attribute__((availability(ios,introduced=4_0)));
@property(nonatomic) UIImagePickerControllerCameraFlashMode cameraFlashMode __attribute__((availability(ios,introduced=4_0)));


@end

__attribute__((availability(tvos,unavailable))) @protocol UIImagePickerControllerDelegate<NSObject>
@optional



- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingImage:(UIImage *)image editingInfo:(nullable NSDictionary<NSString *,id> *)editingInfo __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" )));
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *,id> *)info;
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker;

@end




extern __attribute__((visibility ("default"))) void UIImageWriteToSavedPhotosAlbum(UIImage *image, _Nullable id completionTarget, _Nullable SEL completionSelector, void * _Nullable contextInfo) __attribute__((availability(tvos,unavailable)));


extern __attribute__((visibility ("default"))) BOOL UIVideoAtPathIsCompatibleWithSavedPhotosAlbum(NSString *videoPath) __attribute__((availability(ios,introduced=3_1))) __attribute__((availability(tvos,unavailable)));



extern __attribute__((visibility ("default"))) void UISaveVideoAtPathToSavedPhotosAlbum(NSString *videoPath, _Nullable id completionTarget, _Nullable SEL completionSelector, void * _Nullable contextInfo) __attribute__((availability(ios,introduced=3_1))) __attribute__((availability(tvos,unavailable)));
# 86 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIImageView.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIImageView.h" 3
@class UIImage;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIImageView : UIView

- (instancetype)initWithImage:(nullable UIImage *)image;
- (instancetype)initWithImage:(nullable UIImage *)image highlightedImage:(nullable UIImage *)highlightedImage __attribute__((availability(ios,introduced=3_0)));

@property (nullable, nonatomic, strong) UIImage *image;
@property (nullable, nonatomic, strong) UIImage *highlightedImage __attribute__((availability(ios,introduced=3_0)));
@property (nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;

@property (nonatomic, getter=isHighlighted) BOOL highlighted __attribute__((availability(ios,introduced=3_0)));



@property (nullable, nonatomic, copy) NSArray<UIImage *> *animationImages;
@property (nullable, nonatomic, copy) NSArray<UIImage *> *highlightedAnimationImages __attribute__((availability(ios,introduced=3_0)));

@property (nonatomic) NSTimeInterval animationDuration;
@property (nonatomic) NSInteger animationRepeatCount;



@property (null_resettable, nonatomic, strong) UIColor *tintColor __attribute__((availability(ios,introduced=7_0)));

- (void)startAnimating;
- (void)stopAnimating;

@property(nonatomic, readonly, getter=isAnimating) BOOL animating;





@property (nonatomic) BOOL adjustsImageWhenAncestorFocused __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0)));



@property(readonly,strong) UILayoutGuide *focusedFrameGuide __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0)));

@end
# 87 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIInputView.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIInputView.h" 3
typedef enum UIInputViewStyle : NSInteger UIInputViewStyle; enum UIInputViewStyle : NSInteger {
    UIInputViewStyleDefault,
    UIInputViewStyleKeyboard,
} __attribute__((availability(ios,introduced=7_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIInputView : UIView

@property (nonatomic, readonly) UIInputViewStyle inputViewStyle;

@property (nonatomic, assign) BOOL allowsSelfSizing __attribute__((availability(ios,introduced=9_0)));

- (instancetype)initWithFrame:(CGRect)frame inputViewStyle:(UIInputViewStyle)inputViewStyle __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@end
# 88 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIInputViewController.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIInputViewController.h" 3
@class UILexicon;

@protocol UITextDocumentProxy <UIKeyInput>

@property (nullable, nonatomic, readonly) NSString *documentContextBeforeInput;
@property (nullable, nonatomic, readonly) NSString *documentContextAfterInput;



@property (nullable, nonatomic, readonly) UITextInputMode *documentInputMode __attribute__((availability(ios,introduced=10_0)));

- (void)adjustTextPositionByCharacterOffset:(NSInteger)offset;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) @interface UIInputViewController : UIViewController <UITextInputDelegate>

@property (nullable, nonatomic, strong) UIInputView *inputView;

@property (nonatomic, readonly) id <UITextDocumentProxy> textDocumentProxy;



@property (nullable, nonatomic, copy) NSString *primaryLanguage;

- (void)dismissKeyboard;
- (void)advanceToNextInputMode;




- (void)handleInputModeListFromView:(nonnull UIView *)view withEvent:(nonnull UIEvent *)event __attribute__((availability(ios,introduced=10_0)));



- (void)requestSupplementaryLexiconWithCompletion:(void (^)(UILexicon *))completionHandler;

@end
# 89 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UILabel.h" 1 3
# 17 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UILabel.h" 3
@class UIColor, UIFont;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UILabel : UIView <NSCoding, UIContentSizeCategoryAdjusting>

@property(nullable, nonatomic,copy) NSString *text;
@property(null_resettable, nonatomic,strong) UIFont *font;
@property(null_resettable, nonatomic,strong) UIColor *textColor;
@property(nullable, nonatomic,strong) UIColor *shadowColor;
@property(nonatomic) CGSize shadowOffset;
@property(nonatomic) NSTextAlignment textAlignment;
@property(nonatomic) NSLineBreakMode lineBreakMode;


@property(nullable, nonatomic,copy) NSAttributedString *attributedText __attribute__((availability(ios,introduced=6_0)));



@property(nullable, nonatomic,strong) UIColor *highlightedTextColor;
@property(nonatomic,getter=isHighlighted) BOOL highlighted;

@property(nonatomic,getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
@property(nonatomic,getter=isEnabled) BOOL enabled;





@property(nonatomic) NSInteger numberOfLines;




@property(nonatomic) BOOL adjustsFontSizeToFitWidth;
@property(nonatomic) UIBaselineAdjustment baselineAdjustment;
@property(nonatomic) CGFloat minimumScaleFactor __attribute__((availability(ios,introduced=6_0)));




@property(nonatomic) BOOL allowsDefaultTighteningForTruncation __attribute__((availability(ios,introduced=9_0)));




- (CGRect)textRectForBounds:(CGRect)bounds limitedToNumberOfLines:(NSInteger)numberOfLines;
- (void)drawTextInRect:(CGRect)rect;




@property(nonatomic) CGFloat preferredMaxLayoutWidth __attribute__((availability(ios,introduced=6_0)));




@property(nonatomic) CGFloat minimumFontSize __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));


@property(nonatomic) BOOL adjustsLetterSpacingToFitWidth __attribute__((availability(ios,introduced=6_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));

@end
# 91 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UILexicon.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UILexicon.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) @interface UILexiconEntry : NSObject <NSCopying>




@property (nonatomic, readonly) NSString *documentText;
@property (nonatomic, readonly) NSString *userInput;
@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) @interface UILexicon : NSObject <NSCopying>
@property (nonatomic, readonly) NSArray<UILexiconEntry *> *entries;
@end
# 92 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UILocalNotification.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UILocalNotification.h" 3
@class CLRegion;


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationRequest"))) __attribute__((availability(tvos,unavailable)))
@interface UILocalNotification : NSObject<NSCopying, NSCoding>

- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));


@property(nullable, nonatomic,copy) NSDate *fireDate;


@property(nullable, nonatomic,copy) NSTimeZone *timeZone;

@property(nonatomic) NSCalendarUnit repeatInterval;
@property(nullable, nonatomic,copy) NSCalendar *repeatCalendar;




@property(nullable, nonatomic,copy) CLRegion *region __attribute__((availability(ios,introduced=8_0)));


@property(nonatomic,assign) BOOL regionTriggersOnce __attribute__((availability(ios,introduced=8_0)));


@property(nullable, nonatomic,copy) NSString *alertBody;
@property(nonatomic) BOOL hasAction;
@property(nullable, nonatomic,copy) NSString *alertAction;
@property(nullable, nonatomic,copy) NSString *alertLaunchImage;
@property(nullable, nonatomic,copy) NSString *alertTitle __attribute__((availability(ios,introduced=8_2)));


@property(nullable, nonatomic,copy) NSString *soundName;


@property(nonatomic) NSInteger applicationIconBadgeNumber;


@property(nullable, nonatomic,copy) NSDictionary *userInfo;


@property (nullable, nonatomic, copy) NSString *category __attribute__((availability(ios,introduced=8_0)));

@end


extern __attribute__((visibility ("default"))) NSString *const UILocalNotificationDefaultSoundName __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's +[UNNotificationSound defaultSound]"))) __attribute__((availability(tvos,unavailable)));
# 95 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIApplicationShortcutItem.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIApplicationShortcutItem.h" 3
@class UIImage;

typedef enum UIApplicationShortcutIconType : NSInteger UIApplicationShortcutIconType; enum UIApplicationShortcutIconType : NSInteger {
    UIApplicationShortcutIconTypeCompose,
    UIApplicationShortcutIconTypePlay,
    UIApplicationShortcutIconTypePause,
    UIApplicationShortcutIconTypeAdd,
    UIApplicationShortcutIconTypeLocation,
    UIApplicationShortcutIconTypeSearch,
    UIApplicationShortcutIconTypeShare,
    UIApplicationShortcutIconTypeProhibit __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeContact __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeHome __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeMarkLocation __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeFavorite __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeLove __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeCloud __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeInvitation __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeConfirmation __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeMail __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeMessage __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeDate __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeTime __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeCapturePhoto __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeCaptureVideo __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeTask __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeTaskCompleted __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeAlarm __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeBookmark __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeShuffle __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeAudio __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeUpdate __attribute__((availability(ios,introduced=9_1)))
} __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)))
@interface UIApplicationShortcutIcon : NSObject <NSCopying>


+ (instancetype)iconWithType:(UIApplicationShortcutIconType)type;




+ (instancetype)iconWithTemplateImageName:(NSString *)templateImageName;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)))
@interface UIApplicationShortcutItem : NSObject <NSCopying, NSMutableCopying>

- (instancetype)init __attribute__((unavailable));
- (instancetype)initWithType:(NSString *)type localizedTitle:(NSString *)localizedTitle localizedSubtitle:(nullable NSString *)localizedSubtitle icon:(nullable UIApplicationShortcutIcon *)icon userInfo:(nullable NSDictionary *)userInfo __attribute__((objc_designated_initializer));
- (instancetype)initWithType:(NSString *)type localizedTitle:(NSString *)localizedTitle;


@property (nonatomic, copy, readonly) NSString *type;


@property (nonatomic, copy, readonly) NSString *localizedTitle;
@property (nullable, nonatomic, copy, readonly) NSString *localizedSubtitle;
@property (nullable, nonatomic, copy, readonly) UIApplicationShortcutIcon *icon;



@property (nullable, nonatomic, copy, readonly) NSDictionary<NSString *, id <NSSecureCoding>> *userInfo;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)))
@interface UIMutableApplicationShortcutItem : UIApplicationShortcutItem


@property (nonatomic, copy) NSString *type;


@property (nonatomic, copy) NSString *localizedTitle;
@property (nullable, nonatomic, copy) NSString *localizedSubtitle;
@property (nullable, nonatomic, copy) UIApplicationShortcutIcon *icon;



@property (nullable, nonatomic, copy) NSDictionary<NSString *, id <NSSecureCoding>> *userInfo;

@end
# 99 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIUserNotificationSettings.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIUserNotificationSettings.h" 3
@class UIUserNotificationCategory;
@class UIUserNotificationAction;

typedef enum UIUserNotificationType : NSUInteger UIUserNotificationType; enum UIUserNotificationType : NSUInteger {
    UIUserNotificationTypeNone = 0,
    UIUserNotificationTypeBadge = 1 << 0,
    UIUserNotificationTypeSound = 1 << 1,
    UIUserNotificationTypeAlert = 1 << 2,
} __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNAuthorizationOptions"))) __attribute__((availability(tvos,unavailable)));

typedef enum UIUserNotificationActionBehavior : NSUInteger UIUserNotificationActionBehavior; enum UIUserNotificationActionBehavior : NSUInteger {
    UIUserNotificationActionBehaviorDefault,
    UIUserNotificationActionBehaviorTextInput
} __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationAction or UNTextInputNotificationAction"))) __attribute__((availability(tvos,unavailable)));

typedef enum UIUserNotificationActivationMode : NSUInteger UIUserNotificationActivationMode; enum UIUserNotificationActivationMode : NSUInteger {
    UIUserNotificationActivationModeForeground,
    UIUserNotificationActivationModeBackground
} __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationActionOptions"))) __attribute__((availability(tvos,unavailable)));

typedef enum UIUserNotificationActionContext : NSUInteger UIUserNotificationActionContext; enum UIUserNotificationActionContext : NSUInteger {
    UIUserNotificationActionContextDefault,
    UIUserNotificationActionContextMinimal
} __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNNotificationCategory actions] or -[UNNotificationCategory minimalActions]"))) __attribute__((availability(tvos,unavailable)));

extern __attribute__((visibility ("default"))) NSString *const UIUserNotificationTextInputActionButtonTitleKey __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNTextInputNotificationAction textInputButtonTitle]"))) __attribute__((availability(tvos,unavailable)));

extern __attribute__((visibility ("default"))) NSString *const UIUserNotificationActionResponseTypedTextKey __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNTextInputNotificationResponse userText]"))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationSettings"))) __attribute__((availability(tvos,unavailable)))
@interface UIUserNotificationSettings : NSObject


+ (instancetype)settingsForTypes:(UIUserNotificationType)types
                      categories:(nullable NSSet<UIUserNotificationCategory *> *)categories;

@property (nonatomic, readonly) UIUserNotificationType types;


@property (nullable, nonatomic, copy, readonly) NSSet<UIUserNotificationCategory *> *categories;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationCategory"))) __attribute__((availability(tvos,unavailable)))
@interface UIUserNotificationCategory : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>

- (instancetype)init __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));


@property (nullable, nonatomic, copy, readonly) NSString *identifier __attribute__((availability(tvos,unavailable)));


- (nullable NSArray<UIUserNotificationAction *> *)actionsForContext:(UIUserNotificationActionContext)context __attribute__((availability(tvos,unavailable)));

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationCategory"))) __attribute__((availability(tvos,unavailable)))
@interface UIMutableUserNotificationCategory : UIUserNotificationCategory


@property (nullable, nonatomic, copy) NSString *identifier;


- (void)setActions:(nullable NSArray<UIUserNotificationAction *> *)actions forContext:(UIUserNotificationActionContext)context;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationAction"))) __attribute__((availability(tvos,unavailable)))
@interface UIUserNotificationAction : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>

- (instancetype)init __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));


@property (nullable, nonatomic, copy, readonly) NSString *identifier __attribute__((availability(tvos,unavailable)));


@property (nullable, nonatomic, copy, readonly) NSString *title __attribute__((availability(tvos,unavailable)));


@property (nonatomic, assign, readonly) UIUserNotificationActionBehavior behavior __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));


@property (nonatomic, copy, readonly) NSDictionary *parameters __attribute__((availability(ios,introduced=9_0)))__attribute__((availability(tvos,unavailable)));


@property (nonatomic, assign, readonly) UIUserNotificationActivationMode activationMode __attribute__((availability(tvos,unavailable)));


@property (nonatomic, assign, readonly, getter=isAuthenticationRequired) BOOL authenticationRequired __attribute__((availability(tvos,unavailable)));


@property (nonatomic, assign, readonly, getter=isDestructive) BOOL destructive __attribute__((availability(tvos,unavailable)));

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationAction"))) __attribute__((availability(tvos,unavailable)))
@interface UIMutableUserNotificationAction : UIUserNotificationAction


@property (nullable, nonatomic, copy) NSString *identifier;


@property (nullable, nonatomic, copy) NSString *title;


@property (nonatomic, assign) UIUserNotificationActionBehavior behavior __attribute__((availability(ios,introduced=9_0)));


@property (nonatomic, copy) NSDictionary *parameters __attribute__((availability(ios,introduced=9_0)));


@property (nonatomic, assign) UIUserNotificationActivationMode activationMode;


@property (nonatomic, assign, getter=isAuthenticationRequired) BOOL authenticationRequired;


@property (nonatomic, assign, getter=isDestructive) BOOL destructive;

@end
# 100 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UILocalizedIndexedCollation.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UILocalizedIndexedCollation.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable))) @interface UILocalizedIndexedCollation : NSObject

+ (instancetype)currentCollation;


@property(nonatomic, readonly) NSArray<NSString *> * sectionTitles;


@property(nonatomic, readonly) NSArray<NSString *> *sectionIndexTitles;




- (NSInteger)sectionForSectionIndexTitleAtIndex:(NSInteger)indexTitleIndex;



- (NSInteger)sectionForObject:(id)object collationStringSelector:(SEL)selector;





- (NSArray *)sortedArrayFromArray:(NSArray *)array collationStringSelector:(SEL)selector;

@end
# 104 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UILongPressGestureRecognizer.h" 1 3
# 19 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UILongPressGestureRecognizer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) @interface UILongPressGestureRecognizer : UIGestureRecognizer

@property (nonatomic) NSUInteger numberOfTapsRequired;
@property (nonatomic) NSUInteger numberOfTouchesRequired __attribute__((availability(tvos,unavailable)));

@property (nonatomic) CFTimeInterval minimumPressDuration;
@property (nonatomic) CGFloat allowableMovement;

@end
# 105 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIManagedDocument.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIManagedDocument.h" 3
@class NSManagedObjectModel;
@class NSManagedObjectContext;
@class NSPersistentStoreCoordinator;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable))) @interface UIManagedDocument : UIDocument




@property(class, nonatomic, readonly) NSString *persistentStoreName;






@property (nonatomic, strong, readonly) NSManagedObjectContext *managedObjectContext;



@property (nonatomic, strong, readonly) NSManagedObjectModel* managedObjectModel;



@property (nullable, nonatomic, copy) NSDictionary *persistentStoreOptions;



@property (nullable, nonatomic, copy) NSString *modelConfiguration;



- (BOOL)configurePersistentStoreCoordinatorForURL:(NSURL *)storeURL ofType:(NSString *)fileType modelConfiguration:(nullable NSString *)configuration storeOptions:(nullable NSDictionary *)storeOptions error:(NSError **)error;



- (NSString *)persistentStoreTypeForFileType:(NSString *)fileType;



- (BOOL)readAdditionalContentFromURL:(NSURL *)absoluteURL error:(NSError **)error;



- (nullable id)additionalContentForURL:(NSURL *)absoluteURL error:(NSError **)error;



- (BOOL)writeAdditionalContent:(id)content toURL:(NSURL *)absoluteURL originalContentsURL:(nullable NSURL *)absoluteOriginalContentsURL error:(NSError **)error;

@end
# 106 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIMenuController.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIMenuController.h" 3
typedef enum UIMenuControllerArrowDirection : NSInteger UIMenuControllerArrowDirection; enum UIMenuControllerArrowDirection : NSInteger {
    UIMenuControllerArrowDefault,
    UIMenuControllerArrowUp __attribute__((availability(ios,introduced=3_2))),
    UIMenuControllerArrowDown __attribute__((availability(ios,introduced=3_2))),
    UIMenuControllerArrowLeft __attribute__((availability(ios,introduced=3_2))),
    UIMenuControllerArrowRight __attribute__((availability(ios,introduced=3_2))),
} __attribute__((availability(tvos,unavailable)));

@class UIView, UIMenuItem;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable))) @interface UIMenuController : NSObject


@property(class, nonatomic, readonly) UIMenuController *sharedMenuController;




@property(nonatomic,getter=isMenuVisible) BOOL menuVisible;
- (void)setMenuVisible:(BOOL)menuVisible animated:(BOOL)animated;

- (void)setTargetRect:(CGRect)targetRect inView:(UIView *)targetView;
@property(nonatomic) UIMenuControllerArrowDirection arrowDirection __attribute__((availability(ios,introduced=3_2)));

@property(nullable, nonatomic,copy) NSArray<UIMenuItem *> *menuItems __attribute__((availability(ios,introduced=3_2)));

- (void)update;

@property(nonatomic,readonly) CGRect menuFrame;

@end

extern __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerWillShowMenuNotification __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerDidShowMenuNotification __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerWillHideMenuNotification __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerDidHideMenuNotification __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerMenuFrameDidChangeNotification __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))) @interface UIMenuItem : NSObject

- (instancetype)initWithTitle:(NSString *)title action:(SEL)action __attribute__((objc_designated_initializer));

@property(nonatomic,copy) NSString *title;
@property(nonatomic) SEL action;

@end
# 107 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIMotionEffect.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIMotionEffect.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIMotionEffect : NSObject <NSCopying, NSCoding>

- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
# 37 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIMotionEffect.h" 3
- (nullable NSDictionary<NSString *, id> *)keyPathsAndRelativeValuesForViewerOffset:(UIOffset)viewerOffset;

@end



typedef enum UIInterpolatingMotionEffectType : NSInteger UIInterpolatingMotionEffectType; enum UIInterpolatingMotionEffectType : NSInteger {



    UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis,




    UIInterpolatingMotionEffectTypeTiltAlongVerticalAxis
};






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIInterpolatingMotionEffect : UIMotionEffect

- (instancetype)initWithKeyPath:(NSString *)keyPath type:(UIInterpolatingMotionEffectType)type __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
@property (readonly, nonatomic) NSString *keyPath;
@property (readonly, nonatomic) UIInterpolatingMotionEffectType type;

@property (nullable, strong, nonatomic) id minimumRelativeValue;
@property (nullable, strong, nonatomic) id maximumRelativeValue;

@end





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIMotionEffectGroup : UIMotionEffect
@property (nullable, copy, nonatomic) NSArray<__kindof UIMotionEffect *> *motionEffects;
@end
# 108 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINavigationBar.h" 1 3
# 20 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINavigationBar.h" 3
@class UINavigationItem, UIBarButtonItem, UIImage, UIColor;
@protocol UINavigationBarDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UINavigationBar : UIView <NSCoding, UIBarPositioning>

@property(nonatomic,assign) UIBarStyle barStyle __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
@property(nullable,nonatomic,weak) id<UINavigationBarDelegate> delegate;
# 40 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINavigationBar.h" 3
@property(nonatomic,assign,getter=isTranslucent) BOOL translucent __attribute__((availability(ios,introduced=3_0))) __attribute__((annotate("ui_appearance_selector")));



- (void)pushNavigationItem:(UINavigationItem *)item animated:(BOOL)animated;
- (nullable UINavigationItem *)popNavigationItemAnimated:(BOOL)animated;

@property(nullable, nonatomic,readonly,strong) UINavigationItem *topItem;
@property(nullable, nonatomic,readonly,strong) UINavigationItem *backItem;

@property(nullable,nonatomic,copy) NSArray<UINavigationItem *> *items;
- (void)setItems:(nullable NSArray<UINavigationItem *> *)items animated:(BOOL)animated;






@property(null_resettable, nonatomic,strong) UIColor *tintColor;
@property(nullable, nonatomic,strong) UIColor *barTintColor __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));






- (void)setBackgroundImage:(nullable UIImage *)backgroundImage forBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)backgroundImageForBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));





- (void)setBackgroundImage:(nullable UIImage *)backgroundImage forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)backgroundImageForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



@property(nullable, nonatomic,strong) UIImage *shadowImage __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));



@property(nullable,nonatomic,copy) NSDictionary<NSString *,id> *titleTextAttributes __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

- (void)setTitleVerticalPositionAdjustment:(CGFloat)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (CGFloat)titleVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));






@property(nullable,nonatomic,strong) UIImage *backIndicatorImage __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
@property(nullable,nonatomic,strong) UIImage *backIndicatorTransitionMaskImage __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

@end

@protocol UINavigationBarDelegate <UIBarPositioningDelegate>

@optional

- (BOOL)navigationBar:(UINavigationBar *)navigationBar shouldPushItem:(UINavigationItem *)item;
- (void)navigationBar:(UINavigationBar *)navigationBar didPushItem:(UINavigationItem *)item;
- (BOOL)navigationBar:(UINavigationBar *)navigationBar shouldPopItem:(UINavigationItem *)item;
- (void)navigationBar:(UINavigationBar *)navigationBar didPopItem:(UINavigationItem *)item;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UINavigationItem : NSObject <NSCoding>

- (instancetype)initWithTitle:(NSString *)title __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

@property(nullable, nonatomic,copy) NSString *title;
@property(nullable, nonatomic,strong) UIView *titleView;

@property(nullable,nonatomic,copy) NSString *prompt __attribute__((availability(tvos,unavailable)));
@property(nullable,nonatomic,strong) UIBarButtonItem *backBarButtonItem __attribute__((availability(tvos,unavailable)));

@property(nonatomic,assign) BOOL hidesBackButton __attribute__((availability(tvos,unavailable)));
- (void)setHidesBackButton:(BOOL)hidesBackButton animated:(BOOL)animated __attribute__((availability(tvos,unavailable)));
# 134 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINavigationBar.h" 3
@property(nullable,nonatomic,copy) NSArray<UIBarButtonItem *> *leftBarButtonItems __attribute__((availability(ios,introduced=5_0)));
@property(nullable,nonatomic,copy) NSArray<UIBarButtonItem *> *rightBarButtonItems __attribute__((availability(ios,introduced=5_0)));
- (void)setLeftBarButtonItems:(nullable NSArray<UIBarButtonItem *> *)items animated:(BOOL)animated __attribute__((availability(ios,introduced=5_0)));
- (void)setRightBarButtonItems:(nullable NSArray<UIBarButtonItem *> *)items animated:(BOOL)animated __attribute__((availability(ios,introduced=5_0)));






@property(nonatomic) BOOL leftItemsSupplementBackButton __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));



@property(nullable, nonatomic,strong) UIBarButtonItem *leftBarButtonItem;
@property(nullable, nonatomic,strong) UIBarButtonItem *rightBarButtonItem;
- (void)setLeftBarButtonItem:(nullable UIBarButtonItem *)item animated:(BOOL)animated;
- (void)setRightBarButtonItem:(nullable UIBarButtonItem *)item animated:(BOOL)animated;

@end
# 109 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINib.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINib.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) @interface UINib : NSObject



+ (UINib *)nibWithNibName:(NSString *)name bundle:(nullable NSBundle *)bundleOrNil;


+ (UINib *)nibWithData:(NSData *)data bundle:(nullable NSBundle *)bundleOrNil;





- (NSArray *)instantiateWithOwner:(nullable id)ownerOrNil options:(nullable NSDictionary *)optionsOrNil;
@end
# 111 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINibDeclarations.h" 1 3
# 112 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINibLoading.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINibLoading.h" 3
extern __attribute__((visibility ("default"))) NSString * const UINibExternalObjects __attribute__((availability(ios,introduced=3_0)));

@interface NSBundle(UINibLoadingAdditions)
- (nullable NSArray *)loadNibNamed:(NSString *)name owner:(nullable id)owner options:(nullable NSDictionary *)options;
@end

@interface NSObject(UINibLoadingAdditions)
- (void)awakeFromNib __attribute__((objc_requires_super));
- (void)prepareForInterfaceBuilder __attribute__((availability(ios,introduced=8_0)));
@end

extern __attribute__((visibility ("default"))) NSString * const UINibProxiedObjectsKey __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
# 113 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPageControl.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPageControl.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIPageControl : UIControl

@property(nonatomic) NSInteger numberOfPages;
@property(nonatomic) NSInteger currentPage;

@property(nonatomic) BOOL hidesForSinglePage;

@property(nonatomic) BOOL defersCurrentPageDisplay;
- (void)updateCurrentPageDisplay;

- (CGSize)sizeForNumberOfPages:(NSInteger)pageCount;

@property(nullable, nonatomic,strong) UIColor *pageIndicatorTintColor __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
@property(nullable, nonatomic,strong) UIColor *currentPageIndicatorTintColor __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

@end
# 114 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPageViewController.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPageViewController.h" 3
typedef enum UIPageViewControllerNavigationOrientation : NSInteger UIPageViewControllerNavigationOrientation; enum UIPageViewControllerNavigationOrientation : NSInteger {
    UIPageViewControllerNavigationOrientationHorizontal = 0,
    UIPageViewControllerNavigationOrientationVertical = 1
};

typedef enum UIPageViewControllerSpineLocation : NSInteger UIPageViewControllerSpineLocation; enum UIPageViewControllerSpineLocation : NSInteger {
    UIPageViewControllerSpineLocationNone = 0,
    UIPageViewControllerSpineLocationMin = 1,
    UIPageViewControllerSpineLocationMid = 2,
    UIPageViewControllerSpineLocationMax = 3
};

typedef enum UIPageViewControllerNavigationDirection : NSInteger UIPageViewControllerNavigationDirection; enum UIPageViewControllerNavigationDirection : NSInteger {
    UIPageViewControllerNavigationDirectionForward,
    UIPageViewControllerNavigationDirectionReverse
};

typedef enum UIPageViewControllerTransitionStyle : NSInteger UIPageViewControllerTransitionStyle; enum UIPageViewControllerTransitionStyle : NSInteger {
    UIPageViewControllerTransitionStylePageCurl = 0,
    UIPageViewControllerTransitionStyleScroll = 1
};




extern __attribute__((visibility ("default"))) NSString * const UIPageViewControllerOptionSpineLocationKey;




extern __attribute__((visibility ("default"))) NSString * const UIPageViewControllerOptionInterPageSpacingKey __attribute__((availability(ios,introduced=6_0)));

@protocol UIPageViewControllerDelegate, UIPageViewControllerDataSource;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) @interface UIPageViewController : UIViewController {
}

- (instancetype)initWithTransitionStyle:(UIPageViewControllerTransitionStyle)style navigationOrientation:(UIPageViewControllerNavigationOrientation)navigationOrientation options:(nullable NSDictionary<NSString *, id> *)options __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

@property (nullable, nonatomic, weak) id <UIPageViewControllerDelegate> delegate;
@property (nullable, nonatomic, weak) id <UIPageViewControllerDataSource> dataSource;
@property (nonatomic, readonly) UIPageViewControllerTransitionStyle transitionStyle;
@property (nonatomic, readonly) UIPageViewControllerNavigationOrientation navigationOrientation;
@property (nonatomic, readonly) UIPageViewControllerSpineLocation spineLocation;



@property (nonatomic, getter=isDoubleSided) BOOL doubleSided;




@property(nonatomic, readonly) NSArray<__kindof UIGestureRecognizer *> *gestureRecognizers;
@property (nullable, nonatomic, readonly) NSArray<__kindof UIViewController *> *viewControllers;



- (void)setViewControllers:(nullable NSArray<UIViewController *> *)viewControllers direction:(UIPageViewControllerNavigationDirection)direction animated:(BOOL)animated completion:(void (^ _Nullable)(BOOL finished))completion;

@end

@protocol UIPageViewControllerDelegate <NSObject>

@optional


- (void)pageViewController:(UIPageViewController *)pageViewController willTransitionToViewControllers:(NSArray<UIViewController *> *)pendingViewControllers __attribute__((availability(ios,introduced=6_0)));


- (void)pageViewController:(UIPageViewController *)pageViewController didFinishAnimating:(BOOL)finished previousViewControllers:(NSArray<UIViewController *> *)previousViewControllers transitionCompleted:(BOOL)completed;



- (UIPageViewControllerSpineLocation)pageViewController:(UIPageViewController *)pageViewController spineLocationForInterfaceOrientation:(UIInterfaceOrientation)orientation __attribute__((availability(tvos,unavailable)));

- (UIInterfaceOrientationMask)pageViewControllerSupportedInterfaceOrientations:(UIPageViewController *)pageViewController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
- (UIInterfaceOrientation)pageViewControllerPreferredInterfaceOrientationForPresentation:(UIPageViewController *)pageViewController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

@end

@protocol UIPageViewControllerDataSource <NSObject>

@required




- (nullable UIViewController *)pageViewController:(UIPageViewController *)pageViewController viewControllerBeforeViewController:(UIViewController *)viewController;
- (nullable UIViewController *)pageViewController:(UIPageViewController *)pageViewController viewControllerAfterViewController:(UIViewController *)viewController;

@optional



- (NSInteger)presentationCountForPageViewController:(UIPageViewController *)pageViewController __attribute__((availability(ios,introduced=6_0)));
- (NSInteger)presentationIndexForPageViewController:(UIPageViewController *)pageViewController __attribute__((availability(ios,introduced=6_0)));

@end
# 115 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPasteboard.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPasteboard.h" 3
typedef NSString * UIPasteboardName;


extern __attribute__((visibility ("default"))) UIPasteboardName const UIPasteboardNameGeneral __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIPasteboardNameFind __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=3_0,deprecated=10_0,message="" "The Find pasteboard is no longer available.")));

@class UIColor, UIImage;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) @interface UIPasteboard : NSObject


@property(class, nonatomic, readonly) UIPasteboard *generalPasteboard;




+ (nullable UIPasteboard *)pasteboardWithName:(UIPasteboardName)pasteboardName create:(BOOL)create;
+ (UIPasteboard *)pasteboardWithUniqueName;

@property(readonly,nonatomic) UIPasteboardName name;

+ (void)removePasteboardWithName:(UIPasteboardName)pasteboardName;

@property(readonly,getter=isPersistent,nonatomic) BOOL persistent;
- (void)setPersistent:(BOOL)persistent __attribute__((availability(ios,introduced=3_0,deprecated=10_0,message="" "Do not set persistence on pasteboards. This property is set automatically.")));
@property(readonly,nonatomic) NSInteger changeCount;




@property(nonatomic, readonly) NSArray<NSString *> * pasteboardTypes;



- (BOOL)containsPasteboardTypes:(NSArray<NSString *> *)pasteboardTypes;
- (nullable NSData *)dataForPasteboardType:(NSString *)pasteboardType;

- (nullable id)valueForPasteboardType:(NSString *)pasteboardType;

- (void)setValue:(id)value forPasteboardType:(NSString *)pasteboardType;
- (void)setData:(NSData *)data forPasteboardType:(NSString *)pasteboardType;



@property(readonly,nonatomic) NSInteger numberOfItems;
- (nullable NSArray<NSArray<NSString *> *> *)pasteboardTypesForItemSet:(nullable NSIndexSet*)itemSet;

- (BOOL)containsPasteboardTypes:(NSArray<NSString *> *)pasteboardTypes inItemSet:(nullable NSIndexSet *)itemSet;
- (nullable NSIndexSet *)itemSetWithPasteboardTypes:(NSArray<NSString *> *)pasteboardTypes;
- (nullable NSArray *)valuesForPasteboardType:(NSString *)pasteboardType inItemSet:(nullable NSIndexSet *)itemSet;
- (nullable NSArray *)dataForPasteboardType:(NSString *)pasteboardType inItemSet:(nullable NSIndexSet *)itemSet;



@property(nonatomic,copy) NSArray<NSDictionary<NSString *, id> *> *items;
- (void)addItems:(NSArray<NSDictionary<NSString *, id> *> *)items;

typedef NSString * UIPasteboardOption __attribute__((swift_wrapper(struct))) __attribute__((availability(ios,introduced=10_0)));

extern __attribute__((visibility ("default"))) UIPasteboardOption const UIPasteboardOptionExpirationDate __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0))) __attribute__((swift_name("UIPasteboardOption.expirationDate")));
extern __attribute__((visibility ("default"))) UIPasteboardOption const UIPasteboardOptionLocalOnly __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0))) __attribute__((swift_name("UIPasteboardOption.localOnly")));

- (void)setItems:(NSArray<NSDictionary<NSString *, id> *> *)items options:(NSDictionary<UIPasteboardOption, id> *)options __attribute__((availability(ios,introduced=10_0)));

@property(nullable,nonatomic,copy) NSString *string __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property(nullable,nonatomic,copy) NSArray<NSString *> *strings __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

@property(nullable,nonatomic,copy) NSURL *URL __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property(nullable,nonatomic,copy) NSArray<NSURL *> *URLs __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

@property(nullable,nonatomic,copy) UIImage *image __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property(nullable,nonatomic,copy) NSArray<UIImage *> *images __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

@property(nullable,nonatomic,copy) UIColor *color __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
@property(nullable,nonatomic,copy) NSArray<UIColor *> *colors __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



@property (nonatomic, readonly) BOOL hasStrings __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0)));
@property (nonatomic, readonly) BOOL hasURLs __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0)));
@property (nonatomic, readonly) BOOL hasImages __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0)));
@property (nonatomic, readonly) BOOL hasColors __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0)));

@end



extern __attribute__((visibility ("default"))) NSNotificationName const UIPasteboardChangedNotification __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIPasteboardChangedTypesAddedKey __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIPasteboardChangedTypesRemovedKey __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

extern __attribute__((visibility ("default"))) NSNotificationName const UIPasteboardRemovedNotification __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



extern __attribute__((visibility ("default"))) NSArray<NSString *> *UIPasteboardTypeListString __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern __attribute__((visibility ("default"))) NSArray<NSString *> *UIPasteboardTypeListURL __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern __attribute__((visibility ("default"))) NSArray<NSString *> *UIPasteboardTypeListImage __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern __attribute__((visibility ("default"))) NSArray<NSString *> *UIPasteboardTypeListColor __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



extern __attribute__((visibility ("default"))) NSString * const UIPasteboardTypeAutomatic __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0)));
# 117 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPinchGestureRecognizer.h" 1 3
# 17 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPinchGestureRecognizer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))) @interface UIPinchGestureRecognizer : UIGestureRecognizer

@property (nonatomic) CGFloat scale;
@property (nonatomic,readonly) CGFloat velocity;

@end
# 119 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPopoverController.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPopoverController.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPopoverSupport.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPopoverSupport.h" 3
typedef enum UIPopoverArrowDirection : NSUInteger UIPopoverArrowDirection; enum UIPopoverArrowDirection : NSUInteger {
    UIPopoverArrowDirectionUp = 1UL << 0,
    UIPopoverArrowDirectionDown = 1UL << 1,
    UIPopoverArrowDirectionLeft = 1UL << 2,
    UIPopoverArrowDirectionRight = 1UL << 3,
    UIPopoverArrowDirectionAny = UIPopoverArrowDirectionUp | UIPopoverArrowDirectionDown | UIPopoverArrowDirectionLeft | UIPopoverArrowDirectionRight,
    UIPopoverArrowDirectionUnknown = (9223372036854775807L *2UL+1UL)
};

@interface UIViewController (UIPopoverController)



@property (nonatomic,readwrite,getter=isModalInPopover) BOOL modalInPopover __attribute__((availability(ios,introduced=3_2)));



@property (nonatomic,readwrite) CGSize contentSizeForViewInPopover __attribute__((availability(ios,introduced=3_2,deprecated=7_0,message="" "Use UIViewController.preferredContentSize instead."))) __attribute__((availability(tvos,unavailable)));

@end
# 17 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPopoverController.h" 2 3



@class UIBarButtonItem, UIView;
@protocol UIPopoverControllerDelegate;


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2,deprecated=9_0,message="" "UIPopoverController is deprecated. Popovers are now implemented as UIViewController presentations. Use a modal presentation style of UIModalPresentationPopover and UIPopoverPresentationController.")))
@interface UIPopoverController : NSObject <UIAppearanceContainer> {}



- (instancetype)initWithContentViewController:(UIViewController *)viewController;

@property (nullable, nonatomic, weak) id <UIPopoverControllerDelegate> delegate;



@property (nonatomic, strong) UIViewController *contentViewController;
- (void)setContentViewController:(UIViewController *)viewController animated:(BOOL)animated;



@property (nonatomic) CGSize popoverContentSize;
- (void)setPopoverContentSize:(CGSize)size animated:(BOOL)animated;



@property (nonatomic, readonly, getter=isPopoverVisible) BOOL popoverVisible;



@property (nonatomic, readonly) UIPopoverArrowDirection popoverArrowDirection;



@property (nullable, nonatomic, copy) NSArray<__kindof UIView *> *passthroughViews;



- (void)presentPopoverFromRect:(CGRect)rect inView:(UIView *)view permittedArrowDirections:(UIPopoverArrowDirection)arrowDirections animated:(BOOL)animated;



- (void)presentPopoverFromBarButtonItem:(UIBarButtonItem *)item permittedArrowDirections:(UIPopoverArrowDirection)arrowDirections animated:(BOOL)animated;



- (void)dismissPopoverAnimated:(BOOL)animated;



@property (nullable, nonatomic, copy) UIColor *backgroundColor __attribute__((availability(ios,introduced=7_0)));



@property (nonatomic, readwrite) UIEdgeInsets popoverLayoutMargins __attribute__((availability(ios,introduced=5_0)));



@property (nullable, nonatomic, readwrite, strong) Class popoverBackgroundViewClass __attribute__((availability(ios,introduced=5_0)));

@end

@protocol UIPopoverControllerDelegate <NSObject>
@optional



- (BOOL)popoverControllerShouldDismissPopover:(UIPopoverController *)popoverController __attribute__((availability(ios,introduced=3_2,deprecated=9_0,message="" )));



- (void)popoverControllerDidDismissPopover:(UIPopoverController *)popoverController __attribute__((availability(ios,introduced=3_2,deprecated=9_0,message="" )));



- (void)popoverController:(UIPopoverController *)popoverController willRepositionPopoverToRect:(inout CGRect *)rect inView:(inout UIView * _Nonnull * _Nonnull)view __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" )));

@end
# 120 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPopoverBackgroundView.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPopoverBackgroundView.h" 3
@protocol UIPopoverBackgroundViewMethods


+ (CGFloat)arrowBase;



+ (UIEdgeInsets)contentViewInsets;

+ (CGFloat)arrowHeight;
@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))
@interface UIPopoverBackgroundView : UIView <UIPopoverBackgroundViewMethods>





@property (nonatomic, readwrite) CGFloat arrowOffset;



@property (nonatomic, readwrite) UIPopoverArrowDirection arrowDirection;




@property(class, nonatomic, readonly) BOOL wantsDefaultContentAppearance __attribute__((availability(ios,introduced=6_0)));




@end
# 121 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPress.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPress.h" 3
@class UIGestureRecognizer;
@class UIResponder;
@class UIWindow;

__attribute__((availability(ios,introduced=9_0))) typedef enum UIPressPhase : NSInteger UIPressPhase; enum UIPressPhase : NSInteger {
    UIPressPhaseBegan,
    UIPressPhaseChanged,
    UIPressPhaseStationary,
    UIPressPhaseEnded,
    UIPressPhaseCancelled,
};

__attribute__((availability(ios,introduced=9_0))) typedef enum UIPressType : NSInteger UIPressType; enum UIPressType : NSInteger {
    UIPressTypeUpArrow,
    UIPressTypeDownArrow,
    UIPressTypeLeftArrow,
    UIPressTypeRightArrow,

    UIPressTypeSelect,
    UIPressTypeMenu,
    UIPressTypePlayPause,
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UIPress : NSObject

@property(nonatomic,readonly) NSTimeInterval timestamp;
@property(nonatomic,readonly) UIPressPhase phase;
@property(nonatomic,readonly) UIPressType type;

@property(nullable,nonatomic,readonly,strong) UIWindow *window;
@property(nullable,nonatomic,readonly,strong) UIResponder *responder;
@property(nullable,nonatomic,readonly,copy) NSArray <UIGestureRecognizer *> *gestureRecognizers;


@property(nonatomic, readonly) CGFloat force;
@end
# 122 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPressesEvent.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPressesEvent.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UIPressesEvent : UIEvent


@property(nonatomic, readonly) NSSet <UIPress *> *allPresses;



- (NSSet <UIPress *> *)pressesForGestureRecognizer:(UIGestureRecognizer *)gesture;

@end
# 123 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinter.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinter.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) @interface UIPrinter : NSObject
# 29 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinter.h" 3
typedef enum UIPrinterJobTypes : NSInteger UIPrinterJobTypes; enum UIPrinterJobTypes : NSInteger {
    UIPrinterJobTypeUnknown = 0,
    UIPrinterJobTypeDocument = 1 << 0,
    UIPrinterJobTypeEnvelope = 1 << 1,
    UIPrinterJobTypeLabel = 1 << 2,
    UIPrinterJobTypePhoto = 1 << 3,
    UIPrinterJobTypeReceipt = 1 << 4,
    UIPrinterJobTypeRoll = 1 << 5,
    UIPrinterJobTypeLargeFormat = 1 << 6,
    UIPrinterJobTypePostcard = 1 << 7
} __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
# 49 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinter.h" 3
+ (UIPrinter *)printerWithURL:(NSURL *)url;







@property (readonly,copy) NSURL *URL;





@property (readonly,copy) NSString *displayName;
# 73 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinter.h" 3
@property (nullable,readonly,copy) NSString *displayLocation;
# 82 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinter.h" 3
@property (readonly) UIPrinterJobTypes supportedJobTypes;
# 91 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinter.h" 3
@property (nullable, readonly,copy) NSString *makeAndModel;
# 101 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinter.h" 3
@property (readonly) BOOL supportsColor;
# 110 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinter.h" 3
@property (readonly) BOOL supportsDuplex;
# 120 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinter.h" 3
- (void)contactPrinter:(void(^ _Nullable)(BOOL available))completionHandler;

@end
# 124 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinterPickerController.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinterPickerController.h" 3
@class UIPrinterPickerController, UIPrinter, UIView, UIViewController, UIBarButtonItem;

typedef void (^UIPrinterPickerCompletionHandler)(UIPrinterPickerController *printerPickerController, BOOL userDidSelect, NSError * _Nullable error);

__attribute__((availability(tvos,unavailable)))
@protocol UIPrinterPickerControllerDelegate <NSObject>
@optional

- (nullable UIViewController *)printerPickerControllerParentViewController:(UIPrinterPickerController *)printerPickerController;
# 34 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinterPickerController.h" 3
- (BOOL)printerPickerController:(UIPrinterPickerController *)printerPickerController shouldShowPrinter:(UIPrinter *)printer;

- (void)printerPickerControllerWillPresent:(UIPrinterPickerController *)printerPickerController;
- (void)printerPickerControllerDidPresent:(UIPrinterPickerController *)printerPickerController;
- (void)printerPickerControllerWillDismiss:(UIPrinterPickerController *)printerPickerController;
- (void)printerPickerControllerDidDismiss:(UIPrinterPickerController *)printerPickerController;

- (void)printerPickerControllerDidSelectPrinter:(UIPrinterPickerController *)printerPickerController;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) @interface UIPrinterPickerController : NSObject
# 54 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrinterPickerController.h" 3
+ (UIPrinterPickerController *)printerPickerControllerWithInitiallySelectedPrinter:(nullable UIPrinter *)printer;





@property(nullable,nonatomic,readonly) UIPrinter *selectedPrinter;

@property(nullable,nonatomic,weak) id<UIPrinterPickerControllerDelegate> delegate;

- (BOOL)presentAnimated:(BOOL)animated completionHandler:(nullable UIPrinterPickerCompletionHandler)completion;
- (BOOL)presentFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated completionHandler:(nullable UIPrinterPickerCompletionHandler)completion;
- (BOOL)presentFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated completionHandler:(nullable UIPrinterPickerCompletionHandler)completion;
- (void)dismissAnimated:(BOOL)animated;

@end
# 125 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrintError.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrintError.h" 3
extern __attribute__((visibility ("default"))) NSErrorDomain const UIPrintErrorDomain __attribute__((availability(tvos,unavailable)));

enum {
    UIPrintingNotAvailableError = 1,
    UIPrintNoContentError,
    UIPrintUnknownImageFormatError,
    UIPrintJobFailedError,
} __attribute__((availability(tvos,unavailable)));
# 126 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrintFormatter.h" 1 3
# 17 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrintFormatter.h" 3
@class UIPrintPageRenderer;
@class UIView, UIFont, UIColor;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) @interface UIPrintFormatter : NSObject <NSCopying>

@property(nullable,nonatomic,readonly,weak) UIPrintPageRenderer *printPageRenderer __attribute__((availability(tvos,unavailable)));
- (void)removeFromPrintPageRenderer __attribute__((availability(tvos,unavailable)));

@property(nonatomic) CGFloat maximumContentHeight __attribute__((availability(tvos,unavailable)));
@property(nonatomic) CGFloat maximumContentWidth __attribute__((availability(tvos,unavailable)));
@property(nonatomic) UIEdgeInsets contentInsets __attribute__((availability(ios,introduced=4_2,deprecated=10_0,message="" "Use perPageContentInsets instead."))) __attribute__((availability(tvos,unavailable)));


@property(nonatomic) UIEdgeInsets perPageContentInsets __attribute__((availability(tvos,unavailable)));

@property(nonatomic) NSInteger startPage __attribute__((availability(tvos,unavailable)));
@property(nonatomic,readonly) NSInteger pageCount __attribute__((availability(tvos,unavailable)));

- (CGRect)rectForPageAtIndex:(NSInteger)pageIndex __attribute__((availability(tvos,unavailable)));
- (void)drawInRect:(CGRect)rect forPageAtIndex:(NSInteger)pageIndex __attribute__((availability(tvos,unavailable)));

@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) @interface UISimpleTextPrintFormatter : UIPrintFormatter {
}

- (instancetype)initWithText:(NSString *)text;
- (instancetype)initWithAttributedText:(NSAttributedString *)attributedText __attribute__((availability(ios,introduced=7_0)));

@property(nullable,nonatomic,copy) NSString *text;
@property(nullable,nonatomic,copy) NSAttributedString *attributedText __attribute__((availability(ios,introduced=7_0)));
@property(nullable,nonatomic,strong) UIFont *font;
@property(nullable,nonatomic,strong) UIColor *color;
@property(nonatomic) NSTextAlignment textAlignment;

@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) @interface UIMarkupTextPrintFormatter : UIPrintFormatter {
}

- (instancetype)initWithMarkupText:(NSString *)markupText;
@property(nullable,nonatomic,copy) NSString *markupText;

@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) @interface UIViewPrintFormatter : UIPrintFormatter

@property(nonatomic,readonly) UIView *view;

@end



@interface UIView(UIPrintFormatter)

- (UIViewPrintFormatter *)viewPrintFormatter __attribute__((availability(tvos,unavailable)));
- (void)drawRect:(CGRect)rect forViewPrintFormatter:(UIViewPrintFormatter *)formatter __attribute__((availability(tvos,unavailable)));

@end
# 127 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrintInfo.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrintInfo.h" 3
typedef enum UIPrintInfoOutputType : NSInteger UIPrintInfoOutputType; enum UIPrintInfoOutputType : NSInteger {
    UIPrintInfoOutputGeneral,
    UIPrintInfoOutputPhoto,
    UIPrintInfoOutputGrayscale,
    UIPrintInfoOutputPhotoGrayscale __attribute__((availability(ios,introduced=7_0))),
 } __attribute__((availability(tvos,unavailable)));

typedef enum UIPrintInfoOrientation : NSInteger UIPrintInfoOrientation; enum UIPrintInfoOrientation : NSInteger {
    UIPrintInfoOrientationPortrait,
    UIPrintInfoOrientationLandscape,
} __attribute__((availability(tvos,unavailable)));

typedef enum UIPrintInfoDuplex : NSInteger UIPrintInfoDuplex; enum UIPrintInfoDuplex : NSInteger {
    UIPrintInfoDuplexNone,
    UIPrintInfoDuplexLongEdge,
    UIPrintInfoDuplexShortEdge,
} __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) @interface UIPrintInfo : NSObject <NSCopying, NSCoding>

- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

+ (UIPrintInfo *)printInfo;
+ (UIPrintInfo *)printInfoWithDictionary:(nullable NSDictionary *)dictionary;

@property(nullable,nonatomic,copy) NSString *printerID;
@property(nonatomic,copy) NSString *jobName;
@property(nonatomic) UIPrintInfoOutputType outputType;
@property(nonatomic) UIPrintInfoOrientation orientation;
@property(nonatomic) UIPrintInfoDuplex duplex;
@property(nonatomic,readonly) NSDictionary *dictionaryRepresentation;

@end
# 128 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrintInteractionController.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrintInteractionController.h" 3
@class UIPrintInteractionController, UIPrintInfo, UIPrintPaper, UIPrintPageRenderer, UIPrintFormatter, UIPrinter;
@class UIView, UIBarButtonItem;

typedef void (^UIPrintInteractionCompletionHandler)(UIPrintInteractionController *printInteractionController, BOOL completed, NSError * _Nullable error) __attribute__((availability(tvos,unavailable)));


__attribute__((availability(ios,introduced=9_0))) typedef enum UIPrinterCutterBehavior : NSInteger UIPrinterCutterBehavior; enum UIPrinterCutterBehavior : NSInteger {
    UIPrinterCutterBehaviorNoCut,
    UIPrinterCutterBehaviorPrinterDefault,
    UIPrinterCutterBehaviorCutAfterEachPage,
    UIPrinterCutterBehaviorCutAfterEachCopy,
    UIPrinterCutterBehaviorCutAfterEachJob,
} __attribute__((availability(tvos,unavailable)));

@protocol UIPrintInteractionControllerDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) @interface UIPrintInteractionController : NSObject


@property(class, nonatomic, readonly, getter=isPrintingAvailable) BOOL printingAvailable;





@property(class, nonatomic, readonly) NSSet<NSString *> *printableUTIs;



+ (BOOL)canPrintURL:(NSURL *)url;
+ (BOOL)canPrintData:(NSData *)data;


@property(class, nonatomic, readonly) UIPrintInteractionController *sharedPrintController;




@property(nullable,nonatomic,strong) UIPrintInfo *printInfo;
@property(nullable,nonatomic,weak) id<UIPrintInteractionControllerDelegate> delegate;
@property(nonatomic) BOOL showsPageRange __attribute__((availability(ios,introduced=4_2,deprecated=10_0,message="" "Pages can be removed from the print preview, so page range is always shown.")));
@property(nonatomic) BOOL showsNumberOfCopies __attribute__((availability(ios,introduced=7_0)));
@property(nonatomic) BOOL showsPaperSelectionForLoadedPapers __attribute__((availability(ios,introduced=8_0)));

@property(nullable, nonatomic,readonly) UIPrintPaper *printPaper;

@property(nullable,nonatomic,strong) UIPrintPageRenderer *printPageRenderer;
@property(nullable,nonatomic,strong) UIPrintFormatter *printFormatter;
@property(nullable,nonatomic,copy) id printingItem;
@property(nullable,nonatomic,copy) NSArray *printingItems;

- (BOOL)presentAnimated:(BOOL)animated completionHandler:(nullable UIPrintInteractionCompletionHandler)completion;
- (BOOL)presentFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated completionHandler:(nullable UIPrintInteractionCompletionHandler)completion;
- (BOOL)presentFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated completionHandler:(nullable UIPrintInteractionCompletionHandler)completion;






- (BOOL)printToPrinter:(UIPrinter *)printer completionHandler:(nullable UIPrintInteractionCompletionHandler)completion;

- (void)dismissAnimated:(BOOL)animated;

@end

__attribute__((availability(tvos,unavailable))) @protocol UIPrintInteractionControllerDelegate <NSObject>
@optional

- ( UIViewController * _Nullable )printInteractionControllerParentViewController:(UIPrintInteractionController *)printInteractionController;

- (UIPrintPaper *)printInteractionController:(UIPrintInteractionController *)printInteractionController choosePaper:(NSArray<UIPrintPaper *> *)paperList;

- (void)printInteractionControllerWillPresentPrinterOptions:(UIPrintInteractionController *)printInteractionController;
- (void)printInteractionControllerDidPresentPrinterOptions:(UIPrintInteractionController *)printInteractionController;
- (void)printInteractionControllerWillDismissPrinterOptions:(UIPrintInteractionController *)printInteractionController;
- (void)printInteractionControllerDidDismissPrinterOptions:(UIPrintInteractionController *)printInteractionController;

- (void)printInteractionControllerWillStartJob:(UIPrintInteractionController *)printInteractionController;
- (void)printInteractionControllerDidFinishJob:(UIPrintInteractionController *)printInteractionController;

- (CGFloat)printInteractionController:(UIPrintInteractionController *)printInteractionController cutLengthForPaper:(UIPrintPaper *)paper __attribute__((availability(ios,introduced=7_0)));
- (UIPrinterCutterBehavior) printInteractionController:(UIPrintInteractionController *)printInteractionController chooseCutterBehavior:(NSArray *)availableBehaviors __attribute__((availability(ios,introduced=9_0)));

@end
# 129 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrintPageRenderer.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrintPageRenderer.h" 3
@class UIPrintFormatter;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) @interface UIPrintPageRenderer : NSObject

@property(nonatomic) CGFloat headerHeight;
@property(nonatomic) CGFloat footerHeight;

@property(nonatomic,readonly) CGRect paperRect;
@property(nonatomic,readonly) CGRect printableRect;

@property(nonatomic,readonly) NSInteger numberOfPages;

@property(nullable,nonatomic,copy) NSArray<UIPrintFormatter *> *printFormatters;
- (nullable NSArray<UIPrintFormatter *> *)printFormattersForPageAtIndex:(NSInteger)pageIndex;
- (void)addPrintFormatter:(UIPrintFormatter *)formatter startingAtPageAtIndex:(NSInteger)pageIndex;

- (void)prepareForDrawingPages:(NSRange)range;

- (void)drawPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)printableRect;
- (void)drawPrintFormatter:(UIPrintFormatter *)printFormatter forPageAtIndex:(NSInteger)pageIndex;
- (void)drawHeaderForPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)headerRect;
- (void)drawContentForPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)contentRect;
- (void)drawFooterForPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)footerRect;

@end
# 130 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrintPaper.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPrintPaper.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2)))__attribute__((availability(tvos,unavailable))) @interface UIPrintPaper : NSObject

+ (UIPrintPaper *)bestPaperForPageSize:(CGSize)contentSize withPapersFromArray:(NSArray<UIPrintPaper *> *)paperList;

@property(readonly) CGSize paperSize;
@property(readonly) CGRect printableRect;

@end



@interface UIPrintPaper(Deprecated_Nonfunctional)
- (CGRect)printRect __attribute__((availability(tvos,unavailable))) ;
@end
# 131 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIProgressView.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIProgressView.h" 3
@class UIImageView, CAGradientLayer;

typedef enum UIProgressViewStyle : NSInteger UIProgressViewStyle; enum UIProgressViewStyle : NSInteger {
    UIProgressViewStyleDefault,
    UIProgressViewStyleBar __attribute__((availability(tvos,unavailable))),
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIProgressView : UIView <NSCoding>

- (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
- (instancetype)initWithProgressViewStyle:(UIProgressViewStyle)style;

@property(nonatomic) UIProgressViewStyle progressViewStyle;
@property(nonatomic) float progress;
@property(nonatomic, strong, nullable) UIColor* progressTintColor __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
@property(nonatomic, strong, nullable) UIColor* trackTintColor __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
@property(nonatomic, strong, nullable) UIImage* progressImage __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
@property(nonatomic, strong, nullable) UIImage* trackImage __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

- (void)setProgress:(float)progress animated:(BOOL)animated __attribute__((availability(ios,introduced=5_0)));

@property(nonatomic, strong, nullable) NSProgress *observedProgress __attribute__((availability(ios,introduced=9_0)));

@end
# 132 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIReferenceLibraryViewController.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIReferenceLibraryViewController.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)))
@interface UIReferenceLibraryViewController : UIViewController {}



+ (BOOL)dictionaryHasDefinitionForTerm:(NSString *)term;



- (instancetype)initWithTerm:(NSString *)term __attribute__((objc_designated_initializer));
- (instancetype) initWithCoder:(nonnull NSCoder *)aDecoder __attribute__((objc_designated_initializer));

- (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((unavailable));
- (instancetype)init __attribute__((unavailable));

@end
# 133 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIRotationGestureRecognizer.h" 1 3
# 17 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIRotationGestureRecognizer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))) @interface UIRotationGestureRecognizer : UIGestureRecognizer

@property (nonatomic) CGFloat rotation;
@property (nonatomic,readonly) CGFloat velocity;

@end
# 136 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIScreen.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIScreen.h" 3
@class UIScreenMode, CADisplayLink, UIView;


extern __attribute__((visibility ("default"))) NSNotificationName const UIScreenDidConnectNotification __attribute__((availability(ios,introduced=3_2)));

extern __attribute__((visibility ("default"))) NSNotificationName const UIScreenDidDisconnectNotification __attribute__((availability(ios,introduced=3_2)));

extern __attribute__((visibility ("default"))) NSNotificationName const UIScreenModeDidChangeNotification __attribute__((availability(ios,introduced=3_2)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIScreenBrightnessDidChangeNotification __attribute__((availability(ios,introduced=5_0)));


typedef enum UIScreenOverscanCompensation : NSInteger UIScreenOverscanCompensation; enum UIScreenOverscanCompensation : NSInteger {
    UIScreenOverscanCompensationScale,
    UIScreenOverscanCompensationInsetBounds,
    UIScreenOverscanCompensationNone __attribute__((availability(ios,introduced=9_0))),

    UIScreenOverscanCompensationInsetApplicationFrame __attribute__((availability(ios,introduced=5_0,deprecated=9_0,message="" "Use UIScreenOverscanCompensationNone"))) = 2,
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIScreen : NSObject <UITraitEnvironment>


@property(class, nonatomic, readonly) NSArray<UIScreen *> *screens __attribute__((availability(ios,introduced=3_2)));
@property(class, nonatomic, readonly) UIScreen *mainScreen;





@property(nonatomic,readonly) CGRect bounds;
@property(nonatomic,readonly) CGFloat scale __attribute__((availability(ios,introduced=4_0)));

@property(nonatomic,readonly,copy) NSArray<UIScreenMode *> *availableModes __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable)));
@property(nullable, nonatomic,readonly,strong) UIScreenMode *preferredMode __attribute__((availability(ios,introduced=4_3))) __attribute__((availability(tvos,unavailable)));



@property(nullable,nonatomic,strong) UIScreenMode *currentMode __attribute__((availability(ios,introduced=3_2)));

@property(nonatomic) UIScreenOverscanCompensation overscanCompensation __attribute__((availability(ios,introduced=5_0)));

@property(nonatomic,readonly) UIEdgeInsets overscanCompensationInsets __attribute__((availability(ios,introduced=9_0)));

@property(nullable, nonatomic,readonly,strong) UIScreen *mirroredScreen __attribute__((availability(ios,introduced=4_3)));

@property(nonatomic) CGFloat brightness __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic) BOOL wantsSoftwareDimming __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));

@property (readonly) id <UICoordinateSpace> coordinateSpace __attribute__((availability(ios,introduced=8_0)));
@property (readonly) id <UICoordinateSpace> fixedCoordinateSpace __attribute__((availability(ios,introduced=8_0)));

@property(nonatomic,readonly) CGRect nativeBounds __attribute__((availability(ios,introduced=8_0)));
@property(nonatomic,readonly) CGFloat nativeScale __attribute__((availability(ios,introduced=8_0)));

- (nullable CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel __attribute__((availability(ios,introduced=4_0)));

@property (nullable, nonatomic, weak, readonly) id<UIFocusItem> focusedItem __attribute__((availability(ios,introduced=10_0)));
@property (nullable, nonatomic, weak, readonly) UIView *focusedView __attribute__((availability(ios,introduced=9_0)));
@property (readonly, nonatomic) BOOL supportsFocus __attribute__((availability(ios,introduced=9_0)));

@property(nonatomic,readonly) CGRect applicationFrame __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use -[UIScreen bounds]"))) __attribute__((availability(tvos,unavailable)));

@end

@interface UIScreen (UISnapshotting)

- (UIView *)snapshotViewAfterScreenUpdates:(BOOL)afterUpdates __attribute__((availability(ios,introduced=7_0)));
@end
# 137 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIScreenEdgePanGestureRecognizer.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIScreenEdgePanGestureRecognizer.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable))) @interface UIScreenEdgePanGestureRecognizer : UIPanGestureRecognizer
@property (readwrite, nonatomic, assign) UIRectEdge edges;
@end
# 138 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIScreenMode.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIScreenMode.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) @interface UIScreenMode : NSObject

@property(readonly,nonatomic) CGSize size;
@property(readonly,nonatomic) CGFloat pixelAspectRatio;

@end
# 139 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISearchBar.h" 1 3
# 19 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISearchBar.h" 3
typedef enum UISearchBarIcon : NSInteger UISearchBarIcon; enum UISearchBarIcon : NSInteger {
    UISearchBarIconSearch,
    UISearchBarIconClear __attribute__((availability(tvos,unavailable))),
    UISearchBarIconBookmark __attribute__((availability(tvos,unavailable))),
    UISearchBarIconResultsList __attribute__((availability(tvos,unavailable))),
};

typedef enum UISearchBarStyle : NSUInteger UISearchBarStyle; enum UISearchBarStyle : NSUInteger {
    UISearchBarStyleDefault,
    UISearchBarStyleProminent,
    UISearchBarStyleMinimal
} __attribute__((availability(ios,introduced=7_0)));


@protocol UISearchBarDelegate;
@class UITextField, UILabel, UIButton, UIColor;





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UISearchBar : UIView <UIBarPositioning, UITextInputTraits>

- (instancetype)init __attribute__((availability(tvos,unavailable)));
- (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));

@property(nonatomic) UIBarStyle barStyle __attribute__((availability(tvos,unavailable)));
@property(nullable,nonatomic,weak) id<UISearchBarDelegate> delegate;
@property(nullable,nonatomic,copy) NSString *text;
@property(nullable,nonatomic,copy) NSString *prompt;
@property(nullable,nonatomic,copy) NSString *placeholder;
@property(nonatomic) BOOL showsBookmarkButton __attribute__((availability(tvos,unavailable)));
@property(nonatomic) BOOL showsCancelButton __attribute__((availability(tvos,unavailable)));
@property(nonatomic) BOOL showsSearchResultsButton __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic, getter=isSearchResultsButtonSelected) BOOL searchResultsButtonSelected __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable)));
- (void)setShowsCancelButton:(BOOL)showsCancelButton animated:(BOOL)animated __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));




@property (nonatomic, readonly, strong) UITextInputAssistantItem *inputAssistantItem __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));






@property(null_resettable, nonatomic,strong) UIColor *tintColor;
@property(nullable, nonatomic,strong) UIColor *barTintColor __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));

@property (nonatomic) UISearchBarStyle searchBarStyle __attribute__((availability(ios,introduced=7_0)));
# 84 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISearchBar.h" 3
@property(nonatomic,assign,getter=isTranslucent) BOOL translucent __attribute__((availability(ios,introduced=3_0)));

@property(nullable, nonatomic,copy) NSArray<NSString *> *scopeButtonTitles __attribute__((availability(ios,introduced=3_0)));
@property(nonatomic) NSInteger selectedScopeButtonIndex __attribute__((availability(ios,introduced=3_0)));
@property(nonatomic) BOOL showsScopeBar __attribute__((availability(ios,introduced=3_0)));



@property (nullable, nonatomic, readwrite, strong) UIView *inputAccessoryView;


@property(nullable, nonatomic,strong) UIImage *backgroundImage __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
@property(nullable, nonatomic,strong) UIImage *scopeBarBackgroundImage __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));


- (void)setBackgroundImage:(nullable UIImage *)backgroundImage forBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)backgroundImageForBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));






- (void)setSearchFieldBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)searchFieldBackgroundImageForState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

- (void)setImage:(nullable UIImage *)iconImage forSearchBarIcon:(UISearchBarIcon)icon state:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)imageForSearchBarIcon:(UISearchBarIcon)icon state:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));







- (void)setScopeBarButtonBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)scopeBarButtonBackgroundImageForState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



- (void)setScopeBarButtonDividerImage:(nullable UIImage *)dividerImage forLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)scopeBarButtonDividerImageForLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



- (void)setScopeBarButtonTitleTextAttributes:(nullable NSDictionary<NSString *, id> *)attributes forState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable NSDictionary<NSString *, id> *)scopeBarButtonTitleTextAttributesForState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



@property(nonatomic) UIOffset searchFieldBackgroundPositionAdjustment __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



@property(nonatomic) UIOffset searchTextPositionAdjustment __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



- (void)setPositionAdjustment:(UIOffset)adjustment forSearchBarIcon:(UISearchBarIcon)icon __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (UIOffset)positionAdjustmentForSearchBarIcon:(UISearchBarIcon)icon __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional

- (BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)searchBar;
- (BOOL)searchBarShouldEndEditing:(UISearchBar *)searchBar;
- (void)searchBarTextDidEndEditing:(UISearchBar *)searchBar;
- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText;
- (BOOL)searchBar:(UISearchBar *)searchBar shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text __attribute__((availability(ios,introduced=3_0)));

- (void)searchBarSearchButtonClicked:(UISearchBar *)searchBar;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)searchBar __attribute__((availability(tvos,unavailable)));
- (void)searchBarCancelButtonClicked:(UISearchBar *)searchBar __attribute__((availability(tvos,unavailable)));
- (void)searchBarResultsListButtonClicked:(UISearchBar *)searchBar __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable)));

- (void)searchBar:(UISearchBar *)searchBar selectedScopeButtonIndexDidChange:(NSInteger)selectedScope __attribute__((availability(ios,introduced=3_0)));

@end
# 141 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISearchContainerViewController.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISearchContainerViewController.h" 3
@class UISearchController;


extern __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9_1))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0))) @interface UISearchContainerViewController : UIViewController
@property (nonatomic, strong, readonly) UISearchController *searchController;

- (instancetype)initWithSearchController:(UISearchController *)searchController;

@end
# 142 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISearchController.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPresentationController.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPresentationController.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitionCoordinator.h" 1 3
# 19 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitionCoordinator.h" 3
typedef NSString * UITransitionContextViewControllerKey;
typedef NSString * UITransitionContextViewKey;


@protocol UIViewControllerTransitionCoordinatorContext <NSObject>






@property(nonatomic, readonly, getter=isAnimated) BOOL animated;







@property(nonatomic, readonly) UIModalPresentationStyle presentationStyle;
# 48 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitionCoordinator.h" 3
@property(nonatomic, readonly) BOOL initiallyInteractive;



@property(nonatomic,readonly) BOOL isInterruptible __attribute__((availability(ios,introduced=10_0)));




@property(nonatomic, readonly, getter=isInteractive) BOOL interactive;






@property(nonatomic, readonly, getter=isCancelled) BOOL cancelled;






@property(nonatomic, readonly) NSTimeInterval transitionDuration;
# 80 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitionCoordinator.h" 3
@property(nonatomic, readonly) CGFloat percentComplete;
@property(nonatomic, readonly) CGFloat completionVelocity;
@property(nonatomic, readonly) UIViewAnimationCurve completionCurve;
# 92 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitionCoordinator.h" 3
- (nullable __kindof UIViewController *)viewControllerForKey:(UITransitionContextViewControllerKey)key;




- (nullable __kindof UIView *)viewForKey:(UITransitionContextViewKey)key __attribute__((availability(ios,introduced=8_0)));



@property(nonatomic, readonly) UIView *containerView;






@property(nonatomic, readonly) CGAffineTransform targetTransform __attribute__((availability(ios,introduced=8_0)));




@end







@protocol UIViewControllerTransitionCoordinator <UIViewControllerTransitionCoordinatorContext>
# 136 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitionCoordinator.h" 3
- (BOOL)animateAlongsideTransition:(void (^ _Nullable)(id <UIViewControllerTransitionCoordinatorContext>context))animation
                        completion:(void (^ _Nullable)(id <UIViewControllerTransitionCoordinatorContext>context))completion;



- (BOOL)animateAlongsideTransitionInView:(nullable UIView *)view
                               animation:(void (^ _Nullable)(id <UIViewControllerTransitionCoordinatorContext>context))animation
                              completion:(void (^ _Nullable)(id <UIViewControllerTransitionCoordinatorContext>context))completion;
# 153 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitionCoordinator.h" 3
- (void)notifyWhenInteractionEndsUsingBlock: (void (^)(id <UIViewControllerTransitionCoordinatorContext>context))handler __attribute__((availability(ios,introduced=7_0,deprecated=10_0,message="" "Use notifyWhenInteractionChangesUsingBlock")));





- (void)notifyWhenInteractionChangesUsingBlock: (void (^)(id <UIViewControllerTransitionCoordinatorContext>context))handler __attribute__((availability(ios,introduced=10_0)));

@end

@interface UIViewController(UIViewControllerTransitionCoordinator)
# 172 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitionCoordinator.h" 3
@property(nonatomic, readonly, nullable) id <UIViewControllerTransitionCoordinator> transitionCoordinator __attribute__((availability(ios,introduced=7_0)));



@end
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPresentationController.h" 2 3




@class UIPresentationController;

@protocol UIAdaptivePresentationControllerDelegate <NSObject>

@optional


- (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController *)controller;


- (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController *)controller traitCollection:(UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=8_3)));


- (nullable UIViewController *)presentationController:(UIPresentationController *)controller viewControllerForAdaptivePresentationStyle:(UIModalPresentationStyle)style;


- (void)presentationController:(UIPresentationController *)presentationController willPresentWithAdaptiveStyle:(UIModalPresentationStyle)style transitionCoordinator:(nullable id <UIViewControllerTransitionCoordinator>)transitionCoordinator __attribute__((availability(ios,introduced=8_3)));


@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) @interface UIPresentationController : NSObject <UIAppearanceContainer, UITraitEnvironment, UIContentContainer, UIFocusEnvironment>

@property(nonatomic, strong, readonly) UIViewController *presentingViewController;
@property(nonatomic, strong, readonly) UIViewController *presentedViewController;

@property(nonatomic, readonly) UIModalPresentationStyle presentationStyle;



@property(nullable, nonatomic, readonly, strong) UIView *containerView;

@property(nullable, nonatomic, weak) id <UIAdaptivePresentationControllerDelegate> delegate;

- (instancetype)initWithPresentedViewController:(UIViewController *)presentedViewController presentingViewController:(nullable UIViewController *)presentingViewController __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((unavailable));





@property(nonatomic, readonly) UIModalPresentationStyle adaptivePresentationStyle;



- (UIModalPresentationStyle)adaptivePresentationStyleForTraitCollection:(UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=8_3)));

- (void)containerViewWillLayoutSubviews;
- (void)containerViewDidLayoutSubviews;





@property(nonatomic, readonly, nullable) UIView *presentedView;



@property(nonatomic, readonly) CGRect frameOfPresentedViewInContainerView;




@property(nonatomic, readonly) BOOL shouldPresentInFullscreen;




@property(nonatomic, readonly) BOOL shouldRemovePresentersView;
# 107 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPresentationController.h" 3
- (void)presentationTransitionWillBegin;
- (void)presentationTransitionDidEnd:(BOOL)completed;
- (void)dismissalTransitionWillBegin;
- (void)dismissalTransitionDidEnd:(BOOL)completed;


@property(nullable, nonatomic, copy) UITraitCollection *overrideTraitCollection;

@end
# 9 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISearchController.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitioning.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitioning.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewAnimating.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewAnimating.h" 3
typedef enum UIViewAnimatingState : NSInteger UIViewAnimatingState; enum UIViewAnimatingState : NSInteger
{
    UIViewAnimatingStateInactive,
    UIViewAnimatingStateActive,
    UIViewAnimatingStateStopped,
} __attribute__((availability(ios,introduced=10_0))) ;

typedef enum UIViewAnimatingPosition : NSInteger UIViewAnimatingPosition; enum UIViewAnimatingPosition : NSInteger {
    UIViewAnimatingPositionEnd,
    UIViewAnimatingPositionStart,
    UIViewAnimatingPositionCurrent,
} __attribute__((availability(ios,introduced=10_0)));




@protocol UIViewAnimating <NSObject>

@property(nonatomic, readonly) UIViewAnimatingState state;



@property(nonatomic, readonly, getter=isRunning) BOOL running;



@property(nonatomic, getter=isReversed) BOOL reversed;







@property(nonatomic) CGFloat fractionComplete;


- (void)startAnimation;


- (void)startAnimationAfterDelay:(NSTimeInterval)delay;



- (void)pauseAnimation;







- (void)stopAnimation:(BOOL) withoutFinishing;



- (void)finishAnimationAtPosition:(UIViewAnimatingPosition)finalPosition;

@end

@protocol UITimingCurveProvider;

@protocol UIViewImplicitlyAnimating <UIViewAnimating>

@optional

- (void)addAnimations:(void (^)(void))animation delayFactor:(CGFloat)delayFactor;
- (void)addAnimations:(void (^)(void))animation;
- (void)addCompletion:(void (^)(UIViewAnimatingPosition finalPosition))completion;
- (void)continueAnimationWithTimingParameters:(nullable id <UITimingCurveProvider>)parameters durationFactor:(CGFloat)durationFactor;

@end
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitioning.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITimingParameters.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITimingParameters.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITimingCurveProvider.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITimingCurveProvider.h" 3
typedef enum UITimingCurveType : NSInteger UITimingCurveType; enum UITimingCurveType : NSInteger {
    UITimingCurveTypeBuiltin,
    UITimingCurveTypeCubic,
    UITimingCurveTypeSpring,
    UITimingCurveTypeComposed,
} __attribute__((availability(ios,introduced=10_0)));

@class UICubicTimingParameters, UISpringTimingParameters;



@protocol UITimingCurveProvider <NSCoding, NSCopying>

@property(nonatomic, readonly) UITimingCurveType timingCurveType;
@property(nullable, nonatomic, readonly) UICubicTimingParameters *cubicTimingParameters;
@property(nullable, nonatomic, readonly) UISpringTimingParameters *springTimingParameters;

@end
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITimingParameters.h" 2 3



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UICubicTimingParameters : NSObject <UITimingCurveProvider>

@property(nonatomic, readonly) UIViewAnimationCurve animationCurve;
@property(nonatomic, readonly) CGPoint controlPoint1;
@property(nonatomic, readonly) CGPoint controlPoint2;

- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
- (instancetype)initWithAnimationCurve:(UIViewAnimationCurve)curve __attribute__((objc_designated_initializer));
- (instancetype)initWithControlPoint1:(CGPoint)point1 controlPoint2:(CGPoint)point2 __attribute__((objc_designated_initializer));

@end


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UISpringTimingParameters : NSObject <UITimingCurveProvider>

@property(nonatomic, readonly) CGVector initialVelocity;

- (instancetype)init __attribute__((objc_designated_initializer));

- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
# 49 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITimingParameters.h" 3
- (instancetype)initWithDampingRatio:(CGFloat)ratio initialVelocity:(CGVector)velocity __attribute__((objc_designated_initializer));



- (instancetype)initWithMass:(CGFloat)mass stiffness:(CGFloat)stiffness damping:(CGFloat)damping initialVelocity:(CGVector)velocity __attribute__((objc_designated_initializer));


- (instancetype)initWithDampingRatio:(CGFloat)ratio;

@end
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitioning.h" 2 3



@class UIView;
# 28 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitioning.h" 3
extern __attribute__((visibility ("default"))) UITransitionContextViewControllerKey const UITransitionContextFromViewControllerKey __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) UITransitionContextViewControllerKey const UITransitionContextToViewControllerKey __attribute__((availability(ios,introduced=7_0)));

extern __attribute__((visibility ("default"))) UITransitionContextViewKey const UITransitionContextFromViewKey __attribute__((availability(ios,introduced=8_0)));
extern __attribute__((visibility ("default"))) UITransitionContextViewKey const UITransitionContextToViewKey __attribute__((availability(ios,introduced=8_0)));
# 73 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitioning.h" 3
@protocol UIViewControllerContextTransitioning <NSObject>



@property(nonatomic, readonly) UIView *containerView;
# 86 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitioning.h" 3
@property(nonatomic, readonly, getter=isAnimated) BOOL animated;

@property(nonatomic, readonly, getter=isInteractive) BOOL interactive;

@property(nonatomic, readonly) BOOL transitionWasCancelled;

@property(nonatomic, readonly) UIModalPresentationStyle presentationStyle;
# 112 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitioning.h" 3
- (void)updateInteractiveTransition:(CGFloat)percentComplete;
- (void)finishInteractiveTransition;
- (void)cancelInteractiveTransition;



- (void)pauseInteractiveTransition __attribute__((availability(ios,introduced=10_0)));







- (void)completeTransition:(BOOL)didComplete;







- (nullable __kindof UIViewController *)viewControllerForKey:(UITransitionContextViewControllerKey)key;





- (nullable __kindof UIView *)viewForKey:(UITransitionContextViewKey)key __attribute__((availability(ios,introduced=8_0)));


@property(nonatomic, readonly) CGAffineTransform targetTransform __attribute__((availability(ios,introduced=8_0)));
# 154 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitioning.h" 3
- (CGRect)initialFrameForViewController:(UIViewController *)vc;
- (CGRect)finalFrameForViewController:(UIViewController *)vc;
@end

@protocol UIViewControllerAnimatedTransitioning <NSObject>




- (NSTimeInterval)transitionDuration:(nullable id <UIViewControllerContextTransitioning>)transitionContext;

- (void)animateTransition:(id <UIViewControllerContextTransitioning>)transitionContext;

@optional





- (id <UIViewImplicitlyAnimating>) interruptibleAnimatorForTransition:(id <UIViewControllerContextTransitioning>)transitionContext __attribute__((availability(ios,introduced=10_0)));


- (void)animationEnded:(BOOL) transitionCompleted;

@end


@protocol UIViewControllerInteractiveTransitioning <NSObject>
- (void)startInteractiveTransition:(id <UIViewControllerContextTransitioning>)transitionContext;

@optional

@property(nonatomic, readonly) CGFloat completionSpeed;
@property(nonatomic, readonly) UIViewAnimationCurve completionCurve;
# 198 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitioning.h" 3
@property (nonatomic, readonly) BOOL wantsInteractiveStart __attribute__((availability(ios,introduced=10_0)));

@end

@class UIPresentationController;

@protocol UIViewControllerTransitioningDelegate <NSObject>

@optional
- (nullable id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)presented presentingController:(UIViewController *)presenting sourceController:(UIViewController *)source;

- (nullable id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)dismissed;

- (nullable id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)animator;

- (nullable id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)animator;

- (nullable UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)presented presentingViewController:(nullable UIViewController *)presenting sourceViewController:(UIViewController *)source __attribute__((availability(ios,introduced=8_0)));

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIPercentDrivenInteractiveTransition : NSObject <UIViewControllerInteractiveTransitioning>



@property (readonly) CGFloat duration;


@property (readonly) CGFloat percentComplete;







@property (nonatomic,assign) CGFloat completionSpeed;




@property (nonatomic,assign) UIViewAnimationCurve completionCurve;




@property (nullable, nonatomic, strong)id <UITimingCurveProvider> timingCurve __attribute__((availability(ios,introduced=10_0)));




@property (nonatomic) BOOL wantsInteractiveStart __attribute__((availability(ios,introduced=10_0)));




- (void)pauseInteractiveTransition __attribute__((availability(ios,introduced=10_0)));
# 265 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewControllerTransitioning.h" 3
- (void)updateInteractiveTransition:(CGFloat)percentComplete;
- (void)cancelInteractiveTransition;
- (void)finishInteractiveTransition;

@end
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISearchController.h" 2 3




@class UISearchController;

@protocol UISearchControllerDelegate <NSObject>
@optional

- (void)willPresentSearchController:(UISearchController *)searchController;
- (void)didPresentSearchController:(UISearchController *)searchController;
- (void)willDismissSearchController:(UISearchController *)searchController;
- (void)didDismissSearchController:(UISearchController *)searchController;


- (void)presentSearchController:(UISearchController *)searchController;
@end

@protocol UISearchResultsUpdating <NSObject>
@required

- (void)updateSearchResultsForSearchController:(UISearchController *)searchController;
@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) @interface UISearchController : UIViewController <UIViewControllerTransitioningDelegate, UIViewControllerAnimatedTransitioning>


- (instancetype)initWithSearchResultsController:(nullable UIViewController *)searchResultsController;


@property (nullable, nonatomic, weak) id <UISearchResultsUpdating> searchResultsUpdater;


@property (nonatomic, assign, getter = isActive) BOOL active;

@property (nullable, nonatomic, weak) id <UISearchControllerDelegate> delegate;
@property (nonatomic, assign) BOOL dimsBackgroundDuringPresentation __attribute__((availability(tvos,unavailable)));
@property (nonatomic, assign) BOOL obscuresBackgroundDuringPresentation __attribute__((availability(ios,introduced=9_1)));
@property (nonatomic, assign) BOOL hidesNavigationBarDuringPresentation;

@property (nullable, nonatomic, strong, readonly) UIViewController *searchResultsController;


@property (nonatomic, strong, readonly) UISearchBar *searchBar;
@end
# 143 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISearchDisplayController.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISearchDisplayController.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITableView.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITableView.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISwipeGestureRecognizer.h" 1 3
# 21 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISwipeGestureRecognizer.h" 3
typedef enum UISwipeGestureRecognizerDirection : NSUInteger UISwipeGestureRecognizerDirection; enum UISwipeGestureRecognizerDirection : NSUInteger {
    UISwipeGestureRecognizerDirectionRight = 1 << 0,
    UISwipeGestureRecognizerDirectionLeft = 1 << 1,
    UISwipeGestureRecognizerDirectionUp = 1 << 2,
    UISwipeGestureRecognizerDirectionDown = 1 << 3
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) @interface UISwipeGestureRecognizer : UIGestureRecognizer

@property(nonatomic) NSUInteger numberOfTouchesRequired __attribute__((availability(tvos,unavailable)));
@property(nonatomic) UISwipeGestureRecognizerDirection direction;

@end
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITableView.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITableViewCell.h" 1 3
# 17 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITableViewCell.h" 3
@class UIImage, UIColor, UILabel, UIImageView, UIButton, UITextField, UITableView, UILongPressGestureRecognizer;

typedef enum UITableViewCellStyle : NSInteger UITableViewCellStyle; enum UITableViewCellStyle : NSInteger {
    UITableViewCellStyleDefault,
    UITableViewCellStyleValue1,
    UITableViewCellStyleValue2,
    UITableViewCellStyleSubtitle
};

typedef enum UITableViewCellSeparatorStyle : NSInteger UITableViewCellSeparatorStyle; enum UITableViewCellSeparatorStyle : NSInteger {
    UITableViewCellSeparatorStyleNone,
    UITableViewCellSeparatorStyleSingleLine,
    UITableViewCellSeparatorStyleSingleLineEtched
} __attribute__((availability(tvos,unavailable)));

typedef enum UITableViewCellSelectionStyle : NSInteger UITableViewCellSelectionStyle; enum UITableViewCellSelectionStyle : NSInteger {
    UITableViewCellSelectionStyleNone,
    UITableViewCellSelectionStyleBlue,
    UITableViewCellSelectionStyleGray,
    UITableViewCellSelectionStyleDefault __attribute__((availability(ios,introduced=7_0)))
};

typedef enum UITableViewCellFocusStyle : NSInteger UITableViewCellFocusStyle; enum UITableViewCellFocusStyle : NSInteger {
    UITableViewCellFocusStyleDefault,
    UITableViewCellFocusStyleCustom
} __attribute__((availability(ios,introduced=9_0)));

typedef enum UITableViewCellEditingStyle : NSInteger UITableViewCellEditingStyle; enum UITableViewCellEditingStyle : NSInteger {
    UITableViewCellEditingStyleNone,
    UITableViewCellEditingStyleDelete,
    UITableViewCellEditingStyleInsert
};

typedef enum UITableViewCellAccessoryType : NSInteger UITableViewCellAccessoryType; enum UITableViewCellAccessoryType : NSInteger {
    UITableViewCellAccessoryNone,
    UITableViewCellAccessoryDisclosureIndicator,
    UITableViewCellAccessoryDetailDisclosureButton __attribute__((availability(tvos,unavailable))),
    UITableViewCellAccessoryCheckmark,
    UITableViewCellAccessoryDetailButton __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)))
};

typedef enum UITableViewCellStateMask : NSUInteger UITableViewCellStateMask; enum UITableViewCellStateMask : NSUInteger {
    UITableViewCellStateDefaultMask = 0,
    UITableViewCellStateShowingEditControlMask = 1 << 0,
    UITableViewCellStateShowingDeleteConfirmationMask = 1 << 1
};



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UITableViewCell : UIView <NSCoding, UIGestureRecognizerDelegate>


- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(nullable NSString *)reuseIdentifier __attribute__((availability(ios,introduced=3_0))) __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));


@property (nonatomic, readonly, strong, nullable) UIImageView *imageView __attribute__((availability(ios,introduced=3_0)));

@property (nonatomic, readonly, strong, nullable) UILabel *textLabel __attribute__((availability(ios,introduced=3_0)));
@property (nonatomic, readonly, strong, nullable) UILabel *detailTextLabel __attribute__((availability(ios,introduced=3_0)));


@property (nonatomic, readonly, strong) UIView *contentView;


@property (nonatomic, strong, nullable) UIView *backgroundView;


@property (nonatomic, strong, nullable) UIView *selectedBackgroundView;


@property (nonatomic, strong, nullable) UIView *multipleSelectionBackgroundView __attribute__((availability(ios,introduced=5_0)));

@property (nonatomic, readonly, copy, nullable) NSString *reuseIdentifier;
- (void)prepareForReuse;

@property (nonatomic) UITableViewCellSelectionStyle selectionStyle;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)setHighlighted:(BOOL)highlighted animated:(BOOL)animated;

@property (nonatomic, readonly) UITableViewCellEditingStyle editingStyle;
@property (nonatomic) BOOL showsReorderControl;
@property (nonatomic) BOOL shouldIndentWhileEditing;

@property (nonatomic) UITableViewCellAccessoryType accessoryType;
@property (nonatomic, strong, nullable) UIView *accessoryView;
@property (nonatomic) UITableViewCellAccessoryType editingAccessoryType;
@property (nonatomic, strong, nullable) UIView *editingAccessoryView;

@property (nonatomic) NSInteger indentationLevel;
@property (nonatomic) CGFloat indentationWidth;
@property (nonatomic) UIEdgeInsets separatorInset __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

@property (nonatomic, getter=isEditing) BOOL editing;
- (void)setEditing:(BOOL)editing animated:(BOOL)animated;

@property(nonatomic, readonly) BOOL showingDeleteConfirmation;

@property (nonatomic) UITableViewCellFocusStyle focusStyle __attribute__((availability(ios,introduced=9_0))) __attribute__((annotate("ui_appearance_selector")));




- (void)willTransitionToState:(UITableViewCellStateMask)state __attribute__((availability(ios,introduced=3_0)));
- (void)didTransitionToState:(UITableViewCellStateMask)state __attribute__((availability(ios,introduced=3_0)));

@end

@interface UITableViewCell (UIDeprecated)


- (id)initWithFrame:(CGRect)frame reuseIdentifier:(nullable NSString *)reuseIdentifier __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));



@property (nonatomic, copy, nullable) NSString *text __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property (nonatomic, strong, nullable) UIFont *font __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property (nonatomic) NSTextAlignment textAlignment __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property (nonatomic) NSLineBreakMode lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property (nonatomic, strong, nullable) UIColor *textColor __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property (nonatomic, strong, nullable) UIColor *selectedTextColor __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));

@property (nonatomic, strong, nullable) UIImage *image __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property (nonatomic, strong, nullable) UIImage *selectedImage __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));


@property (nonatomic) BOOL hidesAccessoryWhenEditing __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));


@property (nonatomic, assign, nullable) id target __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property (nonatomic, nullable) SEL editAction __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property (nonatomic, nullable) SEL accessoryAction __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));

@end
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITableView.h" 2 3




typedef enum UITableViewStyle : NSInteger UITableViewStyle; enum UITableViewStyle : NSInteger {
    UITableViewStylePlain,
    UITableViewStyleGrouped
};

typedef enum UITableViewScrollPosition : NSInteger UITableViewScrollPosition; enum UITableViewScrollPosition : NSInteger {
    UITableViewScrollPositionNone,
    UITableViewScrollPositionTop,
    UITableViewScrollPositionMiddle,
    UITableViewScrollPositionBottom
};

typedef enum UITableViewRowAnimation : NSInteger UITableViewRowAnimation; enum UITableViewRowAnimation : NSInteger {
    UITableViewRowAnimationFade,
    UITableViewRowAnimationRight,
    UITableViewRowAnimationLeft,
    UITableViewRowAnimationTop,
    UITableViewRowAnimationBottom,
    UITableViewRowAnimationNone,
    UITableViewRowAnimationMiddle,
    UITableViewRowAnimationAutomatic = 100
};



extern __attribute__((visibility ("default"))) NSString *const UITableViewIndexSearch __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));



extern __attribute__((visibility ("default"))) const CGFloat UITableViewAutomaticDimension __attribute__((availability(ios,introduced=5_0)));

@class UITableView;
@class UINib;
@protocol UITableViewDataSource;
@protocol UITableViewDataSourcePrefetching;
@class UILongPressGestureRecognizer;
@class UITableViewHeaderFooterView;
@class UIRefreshControl;
@class UIVisualEffect;

typedef enum UITableViewRowActionStyle : NSInteger UITableViewRowActionStyle; enum UITableViewRowActionStyle : NSInteger {
    UITableViewRowActionStyleDefault = 0,
    UITableViewRowActionStyleDestructive = UITableViewRowActionStyleDefault,
    UITableViewRowActionStyleNormal
} __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) @interface UITableViewRowAction : NSObject <NSCopying>

+ (instancetype)rowActionWithStyle:(UITableViewRowActionStyle)style title:(nullable NSString *)title handler:(void (^)(UITableViewRowAction *action, NSIndexPath *indexPath))handler;

@property (nonatomic, readonly) UITableViewRowActionStyle style;
@property (nonatomic, copy, nullable) NSString *title;
@property (nonatomic, copy, nullable) UIColor *backgroundColor;
@property (nonatomic, copy, nullable) UIVisualEffect* backgroundEffect;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UITableViewFocusUpdateContext : UIFocusUpdateContext

@property (nonatomic, strong, readonly, nullable) NSIndexPath *previouslyFocusedIndexPath;
@property (nonatomic, strong, readonly, nullable) NSIndexPath *nextFocusedIndexPath;

@end




@protocol UITableViewDelegate<NSObject, UIScrollViewDelegate>

@optional



- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath;
- (void)tableView:(UITableView *)tableView willDisplayHeaderView:(UIView *)view forSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));
- (void)tableView:(UITableView *)tableView willDisplayFooterView:(UIView *)view forSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));
- (void)tableView:(UITableView *)tableView didEndDisplayingCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath*)indexPath __attribute__((availability(ios,introduced=6_0)));
- (void)tableView:(UITableView *)tableView didEndDisplayingHeaderView:(UIView *)view forSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));
- (void)tableView:(UITableView *)tableView didEndDisplayingFooterView:(UIView *)view forSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));



- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath;
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section;
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section;



- (CGFloat)tableView:(UITableView *)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=7_0)));
- (CGFloat)tableView:(UITableView *)tableView estimatedHeightForHeaderInSection:(NSInteger)section __attribute__((availability(ios,introduced=7_0)));
- (CGFloat)tableView:(UITableView *)tableView estimatedHeightForFooterInSection:(NSInteger)section __attribute__((availability(ios,introduced=7_0)));



- (nullable UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section;
- (nullable UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section;



- (UITableViewCellAccessoryType)tableView:(UITableView *)tableView accessoryTypeForRowWithIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
- (void)tableView:(UITableView *)tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)indexPath;





- (BOOL)tableView:(UITableView *)tableView shouldHighlightRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6_0)));
- (void)tableView:(UITableView *)tableView didHighlightRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6_0)));
- (void)tableView:(UITableView *)tableView didUnhighlightRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6_0)));


- (nullable NSIndexPath *)tableView:(UITableView *)tableView willSelectRowAtIndexPath:(NSIndexPath *)indexPath;
- (nullable NSIndexPath *)tableView:(UITableView *)tableView willDeselectRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=3_0)));

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath;
- (void)tableView:(UITableView *)tableView didDeselectRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=3_0)));




- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath;
- (nullable NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
- (nullable NSArray<UITableViewRowAction *> *)tableView:(UITableView *)tableView editActionsForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));


- (BOOL)tableView:(UITableView *)tableView shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)indexPath;


- (void)tableView:(UITableView *)tableView willBeginEditingRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(tvos,unavailable)));
- (void)tableView:(UITableView *)tableView didEndEditingRowAtIndexPath:(nullable NSIndexPath *)indexPath __attribute__((availability(tvos,unavailable)));




- (NSIndexPath *)tableView:(UITableView *)tableView targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)sourceIndexPath toProposedIndexPath:(NSIndexPath *)proposedDestinationIndexPath;



- (NSInteger)tableView:(UITableView *)tableView indentationLevelForRowAtIndexPath:(NSIndexPath *)indexPath;



- (BOOL)tableView:(UITableView *)tableView shouldShowMenuForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=5_0)));
- (BOOL)tableView:(UITableView *)tableView canPerformAction:(SEL)action forRowAtIndexPath:(NSIndexPath *)indexPath withSender:(nullable id)sender __attribute__((availability(ios,introduced=5_0)));
- (void)tableView:(UITableView *)tableView performAction:(SEL)action forRowAtIndexPath:(NSIndexPath *)indexPath withSender:(nullable id)sender __attribute__((availability(ios,introduced=5_0)));



- (BOOL)tableView:(UITableView *)tableView canFocusRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9_0)));
- (BOOL)tableView:(UITableView *)tableView shouldUpdateFocusInContext:(UITableViewFocusUpdateContext *)context __attribute__((availability(ios,introduced=9_0)));
- (void)tableView:(UITableView *)tableView didUpdateFocusInContext:(UITableViewFocusUpdateContext *)context withAnimationCoordinator:(UIFocusAnimationCoordinator *)coordinator __attribute__((availability(ios,introduced=9_0)));
- (nullable NSIndexPath *)indexPathForPreferredFocusedViewInTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=9_0)));

@end

extern __attribute__((visibility ("default"))) NSNotificationName const UITableViewSelectionDidChangeNotification;




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UITableView : UIScrollView <NSCoding>

- (instancetype)initWithFrame:(CGRect)frame style:(UITableViewStyle)style __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@property (nonatomic, readonly) UITableViewStyle style;
@property (nonatomic, weak, nullable) id <UITableViewDataSource> dataSource;
@property (nonatomic, weak, nullable) id <UITableViewDelegate> delegate;
@property (nonatomic, weak) id<UITableViewDataSourcePrefetching> prefetchDataSource __attribute__((availability(ios,introduced=10_0)));
@property (nonatomic) CGFloat rowHeight;
@property (nonatomic) CGFloat sectionHeaderHeight;
@property (nonatomic) CGFloat sectionFooterHeight;
@property (nonatomic) CGFloat estimatedRowHeight __attribute__((availability(ios,introduced=7_0)));
@property (nonatomic) CGFloat estimatedSectionHeaderHeight __attribute__((availability(ios,introduced=7_0)));
@property (nonatomic) CGFloat estimatedSectionFooterHeight __attribute__((availability(ios,introduced=7_0)));
@property (nonatomic) UIEdgeInsets separatorInset __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));

@property (nonatomic, strong, nullable) UIView *backgroundView __attribute__((availability(ios,introduced=3_2)));



- (void)reloadData;
- (void)reloadSectionIndexTitles __attribute__((availability(ios,introduced=3_0)));



@property (nonatomic, readonly) NSInteger numberOfSections;
- (NSInteger)numberOfRowsInSection:(NSInteger)section;

- (CGRect)rectForSection:(NSInteger)section;
- (CGRect)rectForHeaderInSection:(NSInteger)section;
- (CGRect)rectForFooterInSection:(NSInteger)section;
- (CGRect)rectForRowAtIndexPath:(NSIndexPath *)indexPath;

- (nullable NSIndexPath *)indexPathForRowAtPoint:(CGPoint)point;
- (nullable NSIndexPath *)indexPathForCell:(UITableViewCell *)cell;
- (nullable NSArray<NSIndexPath *> *)indexPathsForRowsInRect:(CGRect)rect;

- (nullable __kindof UITableViewCell *)cellForRowAtIndexPath:(NSIndexPath *)indexPath;
@property (nonatomic, readonly) NSArray<__kindof UITableViewCell *> *visibleCells;
@property (nonatomic, readonly, nullable) NSArray<NSIndexPath *> *indexPathsForVisibleRows;

- (nullable UITableViewHeaderFooterView *)headerViewForSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));
- (nullable UITableViewHeaderFooterView *)footerViewForSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));

- (void)scrollToRowAtIndexPath:(NSIndexPath *)indexPath atScrollPosition:(UITableViewScrollPosition)scrollPosition animated:(BOOL)animated;
- (void)scrollToNearestSelectedRowAtScrollPosition:(UITableViewScrollPosition)scrollPosition animated:(BOOL)animated;



- (void)beginUpdates;
- (void)endUpdates;

- (void)insertSections:(NSIndexSet *)sections withRowAnimation:(UITableViewRowAnimation)animation;
- (void)deleteSections:(NSIndexSet *)sections withRowAnimation:(UITableViewRowAnimation)animation;
- (void)reloadSections:(NSIndexSet *)sections withRowAnimation:(UITableViewRowAnimation)animation __attribute__((availability(ios,introduced=3_0)));
- (void)moveSection:(NSInteger)section toSection:(NSInteger)newSection __attribute__((availability(ios,introduced=5_0)));

- (void)insertRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation;
- (void)deleteRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation;
- (void)reloadRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation __attribute__((availability(ios,introduced=3_0)));
- (void)moveRowAtIndexPath:(NSIndexPath *)indexPath toIndexPath:(NSIndexPath *)newIndexPath __attribute__((availability(ios,introduced=5_0)));



@property (nonatomic, getter=isEditing) BOOL editing;
- (void)setEditing:(BOOL)editing animated:(BOOL)animated;

@property (nonatomic) BOOL allowsSelection __attribute__((availability(ios,introduced=3_0)));
@property (nonatomic) BOOL allowsSelectionDuringEditing;
@property (nonatomic) BOOL allowsMultipleSelection __attribute__((availability(ios,introduced=5_0)));
@property (nonatomic) BOOL allowsMultipleSelectionDuringEditing __attribute__((availability(ios,introduced=5_0)));



@property (nonatomic, readonly, nullable) NSIndexPath *indexPathForSelectedRow;
@property (nonatomic, readonly, nullable) NSArray<NSIndexPath *> *indexPathsForSelectedRows __attribute__((availability(ios,introduced=5_0)));


- (void)selectRowAtIndexPath:(nullable NSIndexPath *)indexPath animated:(BOOL)animated scrollPosition:(UITableViewScrollPosition)scrollPosition;
- (void)deselectRowAtIndexPath:(NSIndexPath *)indexPath animated:(BOOL)animated;



@property (nonatomic) NSInteger sectionIndexMinimumDisplayRowCount;
@property (nonatomic, strong, nullable) UIColor *sectionIndexColor __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
@property (nonatomic, strong, nullable) UIColor *sectionIndexBackgroundColor __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));
@property (nonatomic, strong, nullable) UIColor *sectionIndexTrackingBackgroundColor __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

@property (nonatomic) UITableViewCellSeparatorStyle separatorStyle __attribute__((availability(tvos,unavailable)));
@property (nonatomic, strong, nullable) UIColor *separatorColor __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
@property (nonatomic, copy, nullable) UIVisualEffect *separatorEffect __attribute__((availability(ios,introduced=8_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

@property (nonatomic) BOOL cellLayoutMarginsFollowReadableWidth __attribute__((availability(ios,introduced=9_0)));

@property (nonatomic, strong, nullable) UIView *tableHeaderView;
@property (nonatomic, strong, nullable) UIView *tableFooterView;

- (nullable __kindof UITableViewCell *)dequeueReusableCellWithIdentifier:(NSString *)identifier;
- (__kindof UITableViewCell *)dequeueReusableCellWithIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6_0)));
- (nullable __kindof UITableViewHeaderFooterView *)dequeueReusableHeaderFooterViewWithIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=6_0)));




- (void)registerNib:(nullable UINib *)nib forCellReuseIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=5_0)));
- (void)registerClass:(nullable Class)cellClass forCellReuseIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=6_0)));

- (void)registerNib:(nullable UINib *)nib forHeaderFooterViewReuseIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=6_0)));
- (void)registerClass:(nullable Class)aClass forHeaderFooterViewReuseIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=6_0)));



@property (nonatomic) BOOL remembersLastFocusedIndexPath __attribute__((availability(ios,introduced=9_0)));

@end




@protocol UITableViewDataSource<NSObject>

@required

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section;




- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath;

@optional

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView;

- (nullable NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section;
- (nullable NSString *)tableView:(UITableView *)tableView titleForFooterInSection:(NSInteger)section;




- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath;




- (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath;



- (nullable NSArray<NSString *> *)sectionIndexTitlesForTableView:(UITableView *)tableView __attribute__((availability(tvos,unavailable)));
- (NSInteger)tableView:(UITableView *)tableView sectionForSectionIndexTitle:(NSString *)title atIndex:(NSInteger)index __attribute__((availability(tvos,unavailable)));





- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath;



- (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath *)destinationIndexPath;

@end





@protocol UITableViewDataSourcePrefetching <NSObject>

@required


- (void)tableView:(UITableView *)tableView prefetchRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;

@optional


- (void)tableView:(UITableView *)tableView cancelPrefetchingForRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;

@end





@interface NSIndexPath (UITableView)

+ (instancetype)indexPathForRow:(NSInteger)row inSection:(NSInteger)section;

@property (nonatomic, readonly) NSInteger section;
@property (nonatomic, readonly) NSInteger row;

@end
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISearchDisplayController.h" 2 3




@class UISearchBar, UITableView, UIViewController, UIPopoverController;
@protocol UITableViewDataSource, UITableViewDelegate, UISearchDisplayDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" "UISearchDisplayController has been replaced with UISearchController"))) __attribute__((availability(tvos,unavailable)))
@interface UISearchDisplayController : NSObject

- (instancetype)initWithSearchBar:(UISearchBar *)searchBar contentsController:(UIViewController *)viewController;

@property(nullable,nonatomic,assign) id<UISearchDisplayDelegate> delegate;

@property(nonatomic,getter=isActive) BOOL active;
- (void)setActive:(BOOL)visible animated:(BOOL)animated;

@property(nonatomic,readonly) UISearchBar *searchBar;
@property(nonatomic,readonly) UIViewController *searchContentsController;
@property(nonatomic,readonly) UITableView *searchResultsTableView;
@property(nullable,nonatomic,weak) id<UITableViewDataSource> searchResultsDataSource;
@property(nullable,nonatomic,weak) id<UITableViewDelegate> searchResultsDelegate;
@property(nullable,nonatomic,copy) NSString *searchResultsTitle __attribute__((availability(ios,introduced=5_0)));


@property (nonatomic, assign) BOOL displaysSearchBarInNavigationBar __attribute__((availability(ios,introduced=7_0)));
@property (nullable, nonatomic, readonly) UINavigationItem *navigationItem __attribute__((availability(ios,introduced=7_0)));

@end

__attribute__((availability(tvos,unavailable)))
@protocol UISearchDisplayDelegate <NSObject>

@optional


- (void) searchDisplayControllerWillBeginSearch:(UISearchDisplayController *)controller __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
- (void) searchDisplayControllerDidBeginSearch:(UISearchDisplayController *)controller __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
- (void) searchDisplayControllerWillEndSearch:(UISearchDisplayController *)controller __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
- (void) searchDisplayControllerDidEndSearch:(UISearchDisplayController *)controller __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));


- (void)searchDisplayController:(UISearchDisplayController *)controller didLoadSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
- (void)searchDisplayController:(UISearchDisplayController *)controller willUnloadSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));


- (void)searchDisplayController:(UISearchDisplayController *)controller willShowSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
- (void)searchDisplayController:(UISearchDisplayController *)controller didShowSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
- (void)searchDisplayController:(UISearchDisplayController *)controller willHideSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
- (void)searchDisplayController:(UISearchDisplayController *)controller didHideSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));


- (BOOL)searchDisplayController:(UISearchDisplayController *)controller shouldReloadTableForSearchString:(nullable NSString *)searchString __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
- (BOOL)searchDisplayController:(UISearchDisplayController *)controller shouldReloadTableForSearchScope:(NSInteger)searchOption __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));

@end
# 144 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISegmentedControl.h" 1 3
# 18 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISegmentedControl.h" 3
typedef enum UISegmentedControlStyle : NSInteger UISegmentedControlStyle; enum UISegmentedControlStyle : NSInteger {
    UISegmentedControlStylePlain,
    UISegmentedControlStyleBordered,
    UISegmentedControlStyleBar,
    UISegmentedControlStyleBezeled,
} __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "The segmentedControlStyle property no longer has any effect"))) __attribute__((availability(tvos,unavailable)));

enum {
    UISegmentedControlNoSegment = -1
};

typedef enum UISegmentedControlSegment : NSInteger UISegmentedControlSegment; enum UISegmentedControlSegment : NSInteger {
    UISegmentedControlSegmentAny = 0,
    UISegmentedControlSegmentLeft = 1,
    UISegmentedControlSegmentCenter = 2,
    UISegmentedControlSegmentRight = 3,
    UISegmentedControlSegmentAlone = 4,
};

@class UIImage, UIColor;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UISegmentedControl : UIControl <NSCoding>

- (instancetype)initWithItems:(nullable NSArray *)items;

@property(nonatomic) UISegmentedControlStyle segmentedControlStyle __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "The segmentedControlStyle property no longer has any effect"))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic,getter=isMomentary) BOOL momentary;
@property(nonatomic,readonly) NSUInteger numberOfSegments;


@property(nonatomic) BOOL apportionsSegmentWidthsByContent __attribute__((availability(ios,introduced=5_0)));

- (void)insertSegmentWithTitle:(nullable NSString *)title atIndex:(NSUInteger)segment animated:(BOOL)animated;
- (void)insertSegmentWithImage:(nullable UIImage *)image atIndex:(NSUInteger)segment animated:(BOOL)animated;
- (void)removeSegmentAtIndex:(NSUInteger)segment animated:(BOOL)animated;
- (void)removeAllSegments;

- (void)setTitle:(nullable NSString *)title forSegmentAtIndex:(NSUInteger)segment;
- (nullable NSString *)titleForSegmentAtIndex:(NSUInteger)segment;

- (void)setImage:(nullable UIImage *)image forSegmentAtIndex:(NSUInteger)segment;
- (nullable UIImage *)imageForSegmentAtIndex:(NSUInteger)segment;

- (void)setWidth:(CGFloat)width forSegmentAtIndex:(NSUInteger)segment;
- (CGFloat)widthForSegmentAtIndex:(NSUInteger)segment;

- (void)setContentOffset:(CGSize)offset forSegmentAtIndex:(NSUInteger)segment;
- (CGSize)contentOffsetForSegmentAtIndex:(NSUInteger)segment;

- (void)setEnabled:(BOOL)enabled forSegmentAtIndex:(NSUInteger)segment;
- (BOOL)isEnabledForSegmentAtIndex:(NSUInteger)segment;



@property(nonatomic) NSInteger selectedSegmentIndex;


@property(null_resettable,nonatomic,strong) UIColor *tintColor;
# 84 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISegmentedControl.h" 3
- (void)setBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)backgroundImageForState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



- (void)setDividerImage:(nullable UIImage *)dividerImage forLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)dividerImageForLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



- (void)setTitleTextAttributes:(nullable NSDictionary *)attributes forState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable NSDictionary *)titleTextAttributesForState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



- (void)setContentPositionAdjustment:(UIOffset)adjustment forSegmentType:(UISegmentedControlSegment)leftCenterRightOrAlone barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (UIOffset)contentPositionAdjustmentForSegmentType:(UISegmentedControlSegment)leftCenterRightOrAlone barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

@end
# 145 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISlider.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISlider.h" 3
@class UIImageView, UIImage;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) @interface UISlider : UIControl <NSCoding>

@property(nonatomic) float value;
@property(nonatomic) float minimumValue;
@property(nonatomic) float maximumValue;

@property(nullable, nonatomic,strong) UIImage *minimumValueImage;
@property(nullable, nonatomic,strong) UIImage *maximumValueImage;

@property(nonatomic,getter=isContinuous) BOOL continuous;

@property(nullable, nonatomic,strong) UIColor *minimumTrackTintColor __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
@property(nullable, nonatomic,strong) UIColor *maximumTrackTintColor __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
@property(nullable, nonatomic,strong) UIColor *thumbTintColor __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

- (void)setValue:(float)value animated:(BOOL)animated;




- (void)setThumbImage:(nullable UIImage *)image forState:(UIControlState)state;
- (void)setMinimumTrackImage:(nullable UIImage *)image forState:(UIControlState)state;
- (void)setMaximumTrackImage:(nullable UIImage *)image forState:(UIControlState)state;

- (nullable UIImage *)thumbImageForState:(UIControlState)state;
- (nullable UIImage *)minimumTrackImageForState:(UIControlState)state;
- (nullable UIImage *)maximumTrackImageForState:(UIControlState)state;

@property(nullable,nonatomic,readonly) UIImage *currentThumbImage;
@property(nullable,nonatomic,readonly) UIImage *currentMinimumTrackImage;
@property(nullable,nonatomic,readonly) UIImage *currentMaximumTrackImage;


- (CGRect)minimumValueImageRectForBounds:(CGRect)bounds;
- (CGRect)maximumValueImageRectForBounds:(CGRect)bounds;
- (CGRect)trackRectForBounds:(CGRect)bounds;
- (CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value;

@end
# 146 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISplitViewController.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISplitViewController.h" 3
@protocol UISplitViewControllerDelegate;

typedef enum UISplitViewControllerDisplayMode : NSInteger UISplitViewControllerDisplayMode; enum UISplitViewControllerDisplayMode : NSInteger {
    UISplitViewControllerDisplayModeAutomatic,
    UISplitViewControllerDisplayModePrimaryHidden,
    UISplitViewControllerDisplayModeAllVisible,
    UISplitViewControllerDisplayModePrimaryOverlay,
} __attribute__((availability(ios,introduced=8_0)));


extern __attribute__((visibility ("default"))) CGFloat const UISplitViewControllerAutomaticDimension __attribute__((availability(ios,introduced=8_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) @interface UISplitViewController : UIViewController

@property (nonatomic, copy) NSArray<__kindof UIViewController *> *viewControllers;
@property (nullable, nonatomic, weak) id <UISplitViewControllerDelegate> delegate;


@property (nonatomic) BOOL presentsWithGesture __attribute__((availability(ios,introduced=5_1)));


@property(nonatomic, readonly, getter=isCollapsed) BOOL collapsed __attribute__((availability(ios,introduced=8_0)));


@property (nonatomic) UISplitViewControllerDisplayMode preferredDisplayMode __attribute__((availability(ios,introduced=8_0)));


@property (nonatomic, readonly) UISplitViewControllerDisplayMode displayMode __attribute__((availability(ios,introduced=8_0)));



@property (nonatomic, readonly) UIBarButtonItem *displayModeButtonItem __attribute__((availability(ios,introduced=8_0)));





@property(nonatomic, assign) CGFloat preferredPrimaryColumnWidthFraction __attribute__((availability(ios,introduced=8_0)));


@property(nonatomic, assign) CGFloat minimumPrimaryColumnWidth __attribute__((availability(ios,introduced=8_0)));


@property(nonatomic, assign) CGFloat maximumPrimaryColumnWidth __attribute__((availability(ios,introduced=8_0)));


@property(nonatomic,readonly) CGFloat primaryColumnWidth __attribute__((availability(ios,introduced=8_0)));


- (void)showViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));


- (void)showDetailViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));

@end

@protocol UISplitViewControllerDelegate

@optional


- (void)splitViewController:(UISplitViewController *)svc willChangeToDisplayMode:(UISplitViewControllerDisplayMode)displayMode __attribute__((availability(ios,introduced=8_0)));


- (UISplitViewControllerDisplayMode)targetDisplayModeForActionInSplitViewController:(UISplitViewController *)svc __attribute__((availability(ios,introduced=8_0)));



- (BOOL)splitViewController:(UISplitViewController *)splitViewController showViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));



- (BOOL)splitViewController:(UISplitViewController *)splitViewController showDetailViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));




- (nullable UIViewController *)primaryViewControllerForCollapsingSplitViewController:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=8_0)));




- (nullable UIViewController *)primaryViewControllerForExpandingSplitViewController:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=8_0)));






- (BOOL)splitViewController:(UISplitViewController *)splitViewController collapseSecondaryViewController:(UIViewController *)secondaryViewController ontoPrimaryViewController:(UIViewController *)primaryViewController __attribute__((availability(ios,introduced=8_0)));






- (nullable UIViewController *)splitViewController:(UISplitViewController *)splitViewController separateSecondaryViewControllerFromPrimaryViewController:(UIViewController *)primaryViewController __attribute__((availability(ios,introduced=8_0)));

- (UIInterfaceOrientationMask)splitViewControllerSupportedInterfaceOrientations:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
- (UIInterfaceOrientation)splitViewControllerPreferredInterfaceOrientationForPresentation:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));



- (void)splitViewController:(UISplitViewController *)svc willHideViewController:(UIViewController *)aViewController withBarButtonItem:(UIBarButtonItem *)barButtonItem forPopoverController:(UIPopoverController *)pc __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use splitViewController:willChangeToDisplayMode: and displayModeButtonItem instead"))) __attribute__((availability(tvos,unavailable)));


- (void)splitViewController:(UISplitViewController *)svc willShowViewController:(UIViewController *)aViewController invalidatingBarButtonItem:(UIBarButtonItem *)barButtonItem __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use splitViewController:willChangeToDisplayMode: and displayModeButtonItem instead"))) __attribute__((availability(tvos,unavailable)));


- (void)splitViewController:(UISplitViewController *)svc popoverController:(UIPopoverController *)pc willPresentViewController:(UIViewController *)aViewController __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use splitViewController:willChangeToDisplayMode: instead"))) __attribute__((availability(tvos,unavailable)));



- (BOOL)splitViewController:(UISplitViewController *)svc shouldHideViewController:(UIViewController *)vc inOrientation:(UIInterfaceOrientation)orientation __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use preferredDisplayMode instead"))) __attribute__((availability(tvos,unavailable)));


@end

@interface UIViewController (UISplitViewController)

@property (nullable, nonatomic, readonly, strong) UISplitViewController *splitViewController;



- (void)collapseSecondaryViewController:(UIViewController *)secondaryViewController forSplitViewController:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=8_0)));


- (nullable UIViewController *)separateSecondaryViewControllerForSplitViewController:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=8_0)));

@end
# 147 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStepper.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStepper.h" 3
@class UIButton, UIImageView;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable))) @interface UIStepper : UIControl

@property(nonatomic,getter=isContinuous) BOOL continuous;
@property(nonatomic) BOOL autorepeat;
@property(nonatomic) BOOL wraps;

@property(nonatomic) double value;
@property(nonatomic) double minimumValue;
@property(nonatomic) double maximumValue;
@property(nonatomic) double stepValue;


@property(null_resettable,nonatomic,strong) UIColor *tintColor __attribute__((availability(ios,introduced=6_0)));


- (void)setBackgroundImage:(nullable UIImage*)image forState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage*)backgroundImageForState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));


- (void)setDividerImage:(nullable UIImage*)image forLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage*)dividerImageForLeftSegmentState:(UIControlState)state rightSegmentState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));


- (void)setIncrementImage:(nullable UIImage *)image forState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)incrementImageForState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));


- (void)setDecrementImage:(nullable UIImage *)image forState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)decrementImageForState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

@end
# 148 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStoryboard.h" 1 3
# 11 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStoryboard.h" 3
@class UIViewController;



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) @interface UIStoryboard : NSObject {
}

+ (UIStoryboard *)storyboardWithName:(NSString *)name bundle:(nullable NSBundle *)storyboardBundleOrNil;

- (nullable __kindof UIViewController *)instantiateInitialViewController;
- (__kindof UIViewController *)instantiateViewControllerWithIdentifier:(NSString *)identifier;

@end
# 149 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStoryboardPopoverSegue.h" 1 3







# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStoryboardSegue.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStoryboardSegue.h" 3
@class UIViewController;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) @interface UIStoryboardSegue : NSObject


+ (instancetype)segueWithIdentifier:(nullable NSString *)identifier source:(UIViewController *)source destination:(UIViewController *)destination performHandler:(void (^)(void))performHandler __attribute__((availability(ios,introduced=6_0)));

- (instancetype)initWithIdentifier:(nullable NSString *)identifier source:(UIViewController *)source destination:(UIViewController *)destination __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((unavailable));

@property (nullable, nonatomic, copy, readonly) NSString *identifier;
@property (nonatomic, readonly) __kindof UIViewController *sourceViewController;
@property (nonatomic, readonly) __kindof UIViewController *destinationViewController;



- (void)perform;

@end



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UIStoryboardUnwindSegueSource : NSObject

- (instancetype)init __attribute__((unavailable));

@property (readonly) UIViewController *sourceViewController;
@property (readonly) SEL unwindAction;
@property (readonly, nullable) id sender;

@end
# 9 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStoryboardPopoverSegue.h" 2 3



@class UIPopoverController;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0,deprecated=9_0,message="" "Access destinationViewController.popoverPresentationController from your segue's performHandler or override of -perform"))) @interface UIStoryboardPopoverSegue : UIStoryboardSegue {
}

@property (nonatomic, strong, readonly) UIPopoverController *popoverController;

@end
# 150 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISwitch.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISwitch.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) @interface UISwitch : UIControl <NSCoding>

@property(nullable, nonatomic, strong) UIColor *onTintColor __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
@property(null_resettable, nonatomic, strong) UIColor *tintColor __attribute__((availability(ios,introduced=6_0)));
@property(nullable, nonatomic, strong) UIColor *thumbTintColor __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

@property(nullable, nonatomic, strong) UIImage *onImage __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
@property(nullable, nonatomic, strong) UIImage *offImage __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

@property(nonatomic,getter=isOn) BOOL on;

- (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

- (void)setOn:(BOOL)on animated:(BOOL)animated;

@end
# 154 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITabBar.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITabBar.h" 3
typedef enum UITabBarItemPositioning : NSInteger UITabBarItemPositioning; enum UITabBarItemPositioning : NSInteger {
    UITabBarItemPositioningAutomatic,
    UITabBarItemPositioningFill,
    UITabBarItemPositioningCentered,
} __attribute__((availability(ios,introduced=7_0)));

@class UITabBarItem;
@class UIImageView;
@protocol UITabBarDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UITabBar : UIView

@property(nullable, nonatomic, weak) id<UITabBarDelegate> delegate;
@property(nullable, nonatomic, copy) NSArray<UITabBarItem *> *items;
@property(nullable, nonatomic, weak) UITabBarItem *selectedItem;

- (void)setItems:(nullable NSArray<UITabBarItem *> *)items animated:(BOOL)animated;



- (void)beginCustomizingItems:(NSArray<UITabBarItem *> *)items __attribute__((availability(tvos,unavailable)));
- (BOOL)endCustomizingAnimated:(BOOL)animated __attribute__((availability(tvos,unavailable)));

@property(nonatomic, readonly, getter=isCustomizing) BOOL customizing __attribute__((availability(tvos,unavailable)));
# 47 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITabBar.h" 3
@property(null_resettable, nonatomic, strong) UIColor *tintColor __attribute__((availability(ios,introduced=5_0)));
@property(nullable, nonatomic, strong) UIColor *barTintColor __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));

@property (nonatomic, readwrite, copy, nullable) UIColor *unselectedItemTintColor __attribute__((availability(ios,introduced=10_0))) __attribute__((annotate("ui_appearance_selector")));
# 60 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITabBar.h" 3
@property(nullable, nonatomic, strong) UIColor *selectedImageTintColor __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use tintColor"))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));



@property(nullable, nonatomic, strong) UIImage *backgroundImage __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



@property(nullable, nonatomic, strong) UIImage *selectionIndicatorImage __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



@property(nullable, nonatomic, strong) UIImage *shadowImage __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
# 84 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITabBar.h" 3
@property(nonatomic) UITabBarItemPositioning itemPositioning __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));






@property(nonatomic) CGFloat itemWidth __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));






@property(nonatomic) CGFloat itemSpacing __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));




@property(nonatomic) UIBarStyle barStyle __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
# 116 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITabBar.h" 3
@property(nonatomic,getter=isTranslucent) BOOL translucent __attribute__((availability(ios,introduced=7_0)));
@end



@protocol UITabBarDelegate<NSObject>
@optional

- (void)tabBar:(UITabBar *)tabBar didSelectItem:(UITabBarItem *)item;






- (void)tabBar:(UITabBar *)tabBar willBeginCustomizingItems:(NSArray<UITabBarItem *> *)items __attribute__((availability(tvos,unavailable)));
- (void)tabBar:(UITabBar *)tabBar didBeginCustomizingItems:(NSArray<UITabBarItem *> *)items __attribute__((availability(tvos,unavailable)));
- (void)tabBar:(UITabBar *)tabBar willEndCustomizingItems:(NSArray<UITabBarItem *> *)items changed:(BOOL)changed __attribute__((availability(tvos,unavailable)));
- (void)tabBar:(UITabBar *)tabBar didEndCustomizingItems:(NSArray<UITabBarItem *> *)items changed:(BOOL)changed __attribute__((availability(tvos,unavailable)));

@end
# 155 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITabBarController.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITabBarController.h" 3
@class UIView, UIImage, UINavigationController, UITabBarItem;
@protocol UITabBarControllerDelegate;
# 31 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITabBarController.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UITabBarController : UIViewController <UITabBarDelegate, NSCoding>

@property(nullable, nonatomic,copy) NSArray<__kindof UIViewController *> *viewControllers;


- (void)setViewControllers:(NSArray<__kindof UIViewController *> * _Nullable)viewControllers animated:(BOOL)animated;

@property(nullable, nonatomic, assign) __kindof UIViewController *selectedViewController;
@property(nonatomic) NSUInteger selectedIndex;

@property(nonatomic, readonly) UINavigationController *moreNavigationController __attribute__((availability(tvos,unavailable)));
@property(nullable, nonatomic, copy) NSArray<__kindof UIViewController *> *customizableViewControllers __attribute__((availability(tvos,unavailable)));

@property(nonatomic,readonly) UITabBar *tabBar __attribute__((availability(ios,introduced=3_0)));

@property(nullable, nonatomic,weak) id<UITabBarControllerDelegate> delegate;

@end

@protocol UITabBarControllerDelegate <NSObject>
@optional
- (BOOL)tabBarController:(UITabBarController *)tabBarController shouldSelectViewController:(UIViewController *)viewController __attribute__((availability(ios,introduced=3_0)));
- (void)tabBarController:(UITabBarController *)tabBarController didSelectViewController:(UIViewController *)viewController;

- (void)tabBarController:(UITabBarController *)tabBarController willBeginCustomizingViewControllers:(NSArray<__kindof UIViewController *> *)viewControllers __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
- (void)tabBarController:(UITabBarController *)tabBarController willEndCustomizingViewControllers:(NSArray<__kindof UIViewController *> *)viewControllers changed:(BOOL)changed __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
- (void)tabBarController:(UITabBarController *)tabBarController didEndCustomizingViewControllers:(NSArray<__kindof UIViewController *> *)viewControllers changed:(BOOL)changed __attribute__((availability(tvos,unavailable)));

- (UIInterfaceOrientationMask)tabBarControllerSupportedInterfaceOrientations:(UITabBarController *)tabBarController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
- (UIInterfaceOrientation)tabBarControllerPreferredInterfaceOrientationForPresentation:(UITabBarController *)tabBarController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

- (nullable id <UIViewControllerInteractiveTransitioning>)tabBarController:(UITabBarController *)tabBarController
                      interactionControllerForAnimationController: (id <UIViewControllerAnimatedTransitioning>)animationController __attribute__((availability(ios,introduced=7_0)));

- (nullable id <UIViewControllerAnimatedTransitioning>)tabBarController:(UITabBarController *)tabBarController
            animationControllerForTransitionFromViewController:(UIViewController *)fromVC
                                              toViewController:(UIViewController *)toVC __attribute__((availability(ios,introduced=7_0)));

@end

@interface UIViewController (UITabBarControllerItem)

@property(null_resettable, nonatomic, strong) UITabBarItem *tabBarItem;

@property(nullable, nonatomic, readonly, strong) UITabBarController *tabBarController;

@end
# 156 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITabBarItem.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITabBarItem.h" 3
typedef enum UITabBarSystemItem : NSInteger UITabBarSystemItem; enum UITabBarSystemItem : NSInteger {
    UITabBarSystemItemMore,
    UITabBarSystemItemFavorites,
    UITabBarSystemItemFeatured,
    UITabBarSystemItemTopRated,
    UITabBarSystemItemRecents,
    UITabBarSystemItemContacts,
    UITabBarSystemItemHistory,
    UITabBarSystemItemBookmarks,
    UITabBarSystemItemSearch,
    UITabBarSystemItemDownloads,
    UITabBarSystemItemMostRecent,
    UITabBarSystemItemMostViewed,
};

@class UIView, UIImage;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UITabBarItem : UIBarItem

- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));




- (instancetype)initWithTitle:(nullable NSString *)title image:(nullable UIImage *)image tag:(NSInteger)tag;
- (instancetype)initWithTitle:(nullable NSString *)title image:(nullable UIImage *)image selectedImage:(nullable UIImage *)selectedImage __attribute__((availability(ios,introduced=7_0)));
- (instancetype)initWithTabBarSystemItem:(UITabBarSystemItem)systemItem tag:(NSInteger)tag;

@property(nullable, nonatomic,strong) UIImage *selectedImage __attribute__((availability(ios,introduced=7_0)));

@property(nullable, nonatomic, copy) NSString *badgeValue;



- (void)setFinishedSelectedImage:(nullable UIImage *)selectedImage withFinishedUnselectedImage:(nullable UIImage *)unselectedImage __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use initWithTitle:image:selectedImage: or the image and selectedImage properties along with UIImageRenderingModeAlwaysOriginal"))) __attribute__((availability(tvos,unavailable)));
- (nullable UIImage *)finishedSelectedImage __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));
- (nullable UIImage *)finishedUnselectedImage __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));





@property (nonatomic, readwrite, assign) UIOffset titlePositionAdjustment __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));


@property (nonatomic, readwrite, copy, nullable) UIColor *badgeColor __attribute__((availability(ios,introduced=10_0))) __attribute__((annotate("ui_appearance_selector")));


- (void)setBadgeTextAttributes:(nullable NSDictionary<NSString *,id> *)textAttributes forState:(UIControlState)state __attribute__((availability(ios,introduced=10_0))) __attribute__((annotate("ui_appearance_selector")));


- (nullable NSDictionary<NSString *,id> *)badgeTextAttributesForState:(UIControlState)state __attribute__((availability(ios,introduced=10_0))) __attribute__((annotate("ui_appearance_selector")));

@end
# 157 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITableViewHeaderFooterView.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITableViewHeaderFooterView.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface UITableViewHeaderFooterView : UIView

- (instancetype)initWithReuseIdentifier:(nullable NSString *)reuseIdentifier __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@property (nonatomic, strong, null_resettable) UIColor *tintColor;

@property (nonatomic, readonly, strong, nullable) UILabel *textLabel;
@property (nonatomic, readonly, strong, nullable) UILabel *detailTextLabel;

@property (nonatomic, readonly, strong) UIView *contentView;
@property (nonatomic, strong, nullable) UIView *backgroundView;

@property (nonatomic, readonly, copy, nullable) NSString *reuseIdentifier;

- (void)prepareForReuse;

@end
# 159 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITableViewController.h" 1 3
# 19 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITableViewController.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UITableViewController : UIViewController <UITableViewDelegate, UITableViewDataSource>

- (instancetype)initWithStyle:(UITableViewStyle)style __attribute__((objc_designated_initializer));
- (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@property (nonatomic, strong, null_resettable) UITableView *tableView;
@property (nonatomic) BOOL clearsSelectionOnViewWillAppear __attribute__((availability(ios,introduced=3_2)));

@property (nonatomic, strong, nullable) UIRefreshControl *refreshControl __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));

@end
# 161 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextChecker.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextChecker.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) @interface UITextChecker : NSObject


- (NSRange)rangeOfMisspelledWordInString:(NSString *)stringToCheck range:(NSRange)range startingAt:(NSInteger)startingOffset wrap:(BOOL)wrapFlag language:(NSString *)language;


- (nullable NSArray<NSString *> *)guessesForWordRange:(NSRange)range inString:(NSString *)string language:(NSString *)language;


- (nullable NSArray<NSString *> *)completionsForPartialWordRange:(NSRange)range inString:(NSString *)string language:(NSString *)language;


- (void)ignoreWord:(NSString *)wordToIgnore;

@property(nonatomic, strong, nullable) NSArray<NSString *> *ignoredWords;






+ (void)learnWord:(NSString *)word;
+ (BOOL)hasLearnedWord:(NSString *)word;
+ (void)unlearnWord:(NSString *)word;



@property(class, nonatomic, readonly) NSArray<NSString *> *availableLanguages;




@end
# 163 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextView.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextView.h" 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextInteraction.h" 1 3







typedef enum UITextItemInteraction : NSInteger UITextItemInteraction; enum UITextItemInteraction : NSInteger {
    UITextItemInteractionInvokeDefaultAction,
    UITextItemInteractionPresentActions,
    UITextItemInteractionPreview,
} __attribute__((availability(ios,introduced=10_0)));
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UITextView.h" 2 3




@class UIFont, UIColor, UITextView, NSTextContainer, NSLayoutManager, NSTextStorage, NSTextAttachment;

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional

- (BOOL)textViewShouldBeginEditing:(UITextView *)textView;
- (BOOL)textViewShouldEndEditing:(UITextView *)textView;

- (void)textViewDidBeginEditing:(UITextView *)textView;
- (void)textViewDidEndEditing:(UITextView *)textView;

- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text;
- (void)textViewDidChange:(UITextView *)textView;

- (void)textViewDidChangeSelection:(UITextView *)textView;

- (BOOL)textView:(UITextView *)textView shouldInteractWithURL:(NSURL *)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction __attribute__((availability(ios,introduced=10_0)));
- (BOOL)textView:(UITextView *)textView shouldInteractWithTextAttachment:(NSTextAttachment *)textAttachment inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction __attribute__((availability(ios,introduced=10_0)));

- (BOOL)textView:(UITextView *)textView shouldInteractWithURL:(NSURL *)URL inRange:(NSRange)characterRange __attribute__((availability(ios,introduced=7_0,deprecated=10_0,message="" "Use textView:shouldInteractWithURL:inRange:forInteractionType: instead")));
- (BOOL)textView:(UITextView *)textView shouldInteractWithTextAttachment:(NSTextAttachment *)textAttachment inRange:(NSRange)characterRange __attribute__((availability(ios,introduced=7_0,deprecated=10_0,message="" "Use textView:shouldInteractWithTextAttachment:inRange:forInteractionType: instead")));

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UITextView : UIScrollView <UITextInput, UIContentSizeCategoryAdjusting>

@property(nullable,nonatomic,weak) id<UITextViewDelegate> delegate;
@property(null_resettable,nonatomic,copy) NSString *text;
@property(nullable,nonatomic,strong) UIFont *font;
@property(nullable,nonatomic,strong) UIColor *textColor;
@property(nonatomic) NSTextAlignment textAlignment;
@property(nonatomic) NSRange selectedRange;
@property(nonatomic,getter=isEditable) BOOL editable __attribute__((availability(tvos,unavailable)));
@property(nonatomic,getter=isSelectable) BOOL selectable __attribute__((availability(ios,introduced=7_0)));
@property(nonatomic) UIDataDetectorTypes dataDetectorTypes __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));

@property(nonatomic) BOOL allowsEditingTextAttributes __attribute__((availability(ios,introduced=6_0)));
@property(null_resettable,copy) NSAttributedString *attributedText __attribute__((availability(ios,introduced=6_0)));
@property(nonatomic,copy) NSDictionary<NSString *, id> *typingAttributes __attribute__((availability(ios,introduced=6_0)));

- (void)scrollRangeToVisible:(NSRange)range;




@property (nullable, readwrite, strong) UIView *inputView;
@property (nullable, readwrite, strong) UIView *inputAccessoryView;

@property(nonatomic) BOOL clearsOnInsertion __attribute__((availability(ios,introduced=6_0)));


- (instancetype)initWithFrame:(CGRect)frame textContainer:(nullable NSTextContainer *)textContainer __attribute__((availability(ios,introduced=7_0))) __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));


@property(nonatomic,readonly) NSTextContainer *textContainer __attribute__((availability(ios,introduced=7_0)));

@property(nonatomic, assign) UIEdgeInsets textContainerInset __attribute__((availability(ios,introduced=7_0)));


@property(nonatomic,readonly) NSLayoutManager *layoutManager __attribute__((availability(ios,introduced=7_0)));
@property(nonatomic,readonly,strong) NSTextStorage *textStorage __attribute__((availability(ios,introduced=7_0)));


@property(null_resettable, nonatomic, copy) NSDictionary<NSString *, id> *linkTextAttributes __attribute__((availability(ios,introduced=7_0)));

@end

extern __attribute__((visibility ("default"))) NSNotificationName const UITextViewTextDidBeginEditingNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UITextViewTextDidChangeNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UITextViewTextDidEndEditingNotification;
# 167 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIToolbar.h" 1 3
# 18 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIToolbar.h" 3
@class UIBarButtonItem, UIColor;
@protocol UIToolbarDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) @interface UIToolbar : UIView <UIBarPositioning>

@property(nonatomic) UIBarStyle barStyle __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
@property(nullable, nonatomic, copy) NSArray<UIBarButtonItem *> *items;
# 38 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIToolbar.h" 3
@property(nonatomic,assign,getter=isTranslucent) BOOL translucent __attribute__((availability(ios,introduced=3_0))) __attribute__((annotate("ui_appearance_selector")));

- (void)setItems:(nullable NSArray<UIBarButtonItem *> *)items animated:(BOOL)animated;






@property(null_resettable, nonatomic, strong) UIColor *tintColor;
@property(nullable, nonatomic, strong) UIColor *barTintColor __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));
# 60 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIToolbar.h" 3
- (void)setBackgroundImage:(nullable UIImage *)backgroundImage forToolbarPosition:(UIBarPosition)topOrBottom barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)backgroundImageForToolbarPosition:(UIBarPosition)topOrBottom barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



- (void)setShadowImage:(nullable UIImage *)shadowImage forToolbarPosition:(UIBarPosition)topOrBottom __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
- (nullable UIImage *)shadowImageForToolbarPosition:(UIBarPosition)topOrBottom __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

@property(nullable, nonatomic, weak) id<UIToolbarDelegate> delegate __attribute__((availability(ios,introduced=7_0)));
@end

__attribute__((availability(tvos,unavailable)))
@protocol UIToolbarDelegate <UIBarPositioningDelegate>
@end
# 168 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIVideoEditorController.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIVideoEditorController.h" 3
@protocol UIVideoEditorControllerDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_1))) __attribute__((availability(tvos,unavailable))) @interface UIVideoEditorController : UINavigationController

+ (BOOL)canEditVideoAtPath:(NSString *)videoPath __attribute__((availability(ios,introduced=3_1)));

@property(nullable, nonatomic,assign) id <UINavigationControllerDelegate, UIVideoEditorControllerDelegate> delegate;

@property(nonatomic, copy) NSString *videoPath;
@property(nonatomic) NSTimeInterval videoMaximumDuration;
@property(nonatomic) UIImagePickerControllerQualityType videoQuality;

@end

__attribute__((availability(tvos,unavailable))) @protocol UIVideoEditorControllerDelegate<NSObject>
@optional



- (void)videoEditorController:(UIVideoEditorController *)editor didSaveEditedVideoToPath:(NSString *)editedVideoPath;
- (void)videoEditorController:(UIVideoEditorController *)editor didFailWithError:(NSError *)error;
- (void)videoEditorControllerDidCancel:(UIVideoEditorController *)editor;

@end
# 171 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIWebView.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIWebView.h" 3
typedef enum UIWebViewNavigationType : NSInteger UIWebViewNavigationType; enum UIWebViewNavigationType : NSInteger {
    UIWebViewNavigationTypeLinkClicked,
    UIWebViewNavigationTypeFormSubmitted,
    UIWebViewNavigationTypeBackForward,
    UIWebViewNavigationTypeReload,
    UIWebViewNavigationTypeFormResubmitted,
    UIWebViewNavigationTypeOther
} __attribute__((availability(tvos,unavailable)));

typedef enum UIWebPaginationMode : NSInteger UIWebPaginationMode; enum UIWebPaginationMode : NSInteger {
    UIWebPaginationModeUnpaginated,
    UIWebPaginationModeLeftToRight,
    UIWebPaginationModeTopToBottom,
    UIWebPaginationModeBottomToTop,
    UIWebPaginationModeRightToLeft
} __attribute__((availability(tvos,unavailable)));

typedef enum UIWebPaginationBreakingMode : NSInteger UIWebPaginationBreakingMode; enum UIWebPaginationBreakingMode : NSInteger {
    UIWebPaginationBreakingModePage,
    UIWebPaginationBreakingModeColumn
} __attribute__((availability(tvos,unavailable)));

@class UIWebViewInternal;
@protocol UIWebViewDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) @interface UIWebView : UIView <NSCoding, UIScrollViewDelegate>

@property (nullable, nonatomic, assign) id <UIWebViewDelegate> delegate;

@property (nonatomic, readonly, strong) UIScrollView *scrollView __attribute__((availability(ios,introduced=5_0)));

- (void)loadRequest:(NSURLRequest *)request;
- (void)loadHTMLString:(NSString *)string baseURL:(nullable NSURL *)baseURL;
- (void)loadData:(NSData *)data MIMEType:(NSString *)MIMEType textEncodingName:(NSString *)textEncodingName baseURL:(NSURL *)baseURL;

@property (nullable, nonatomic, readonly, strong) NSURLRequest *request;

- (void)reload;
- (void)stopLoading;

- (void)goBack;
- (void)goForward;

@property (nonatomic, readonly, getter=canGoBack) BOOL canGoBack;
@property (nonatomic, readonly, getter=canGoForward) BOOL canGoForward;
@property (nonatomic, readonly, getter=isLoading) BOOL loading;

- (nullable NSString *)stringByEvaluatingJavaScriptFromString:(NSString *)script;

@property (nonatomic) BOOL scalesPageToFit;

@property (nonatomic) BOOL detectsPhoneNumbers __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" )));
@property (nonatomic) UIDataDetectorTypes dataDetectorTypes __attribute__((availability(ios,introduced=3_0)));

@property (nonatomic) BOOL allowsInlineMediaPlayback __attribute__((availability(ios,introduced=4_0)));
@property (nonatomic) BOOL mediaPlaybackRequiresUserAction __attribute__((availability(ios,introduced=4_0)));

@property (nonatomic) BOOL mediaPlaybackAllowsAirPlay __attribute__((availability(ios,introduced=5_0)));

@property (nonatomic) BOOL suppressesIncrementalRendering __attribute__((availability(ios,introduced=6_0)));

@property (nonatomic) BOOL keyboardDisplayRequiresUserAction __attribute__((availability(ios,introduced=6_0)));

@property (nonatomic) UIWebPaginationMode paginationMode __attribute__((availability(ios,introduced=7_0)));
@property (nonatomic) UIWebPaginationBreakingMode paginationBreakingMode __attribute__((availability(ios,introduced=7_0)));
@property (nonatomic) CGFloat pageLength __attribute__((availability(ios,introduced=7_0)));
@property (nonatomic) CGFloat gapBetweenPages __attribute__((availability(ios,introduced=7_0)));
@property (nonatomic, readonly) NSUInteger pageCount __attribute__((availability(ios,introduced=7_0)));

@property (nonatomic) BOOL allowsPictureInPictureMediaPlayback __attribute__((availability(ios,introduced=9_0)));

@property (nonatomic) BOOL allowsLinkPreview __attribute__((availability(ios,introduced=9_0)));
@end

__attribute__((availability(tvos,unavailable))) @protocol UIWebViewDelegate <NSObject>

@optional
- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType;
- (void)webViewDidStartLoad:(UIWebView *)webView;
- (void)webViewDidFinishLoad:(UIWebView *)webView;
- (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error;

@end
# 174 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIWindow.h" 1 3
# 16 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIWindow.h" 3
typedef CGFloat UIWindowLevel;

@class UIEvent, UIScreen, NSUndoManager, UIViewController;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) @interface UIWindow : UIView

@property(nonatomic,strong) UIScreen *screen __attribute__((availability(ios,introduced=3_2)));

@property(nonatomic) UIWindowLevel windowLevel;
@property(nonatomic,readonly,getter=isKeyWindow) BOOL keyWindow;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;

- (void)makeKeyWindow;
- (void)makeKeyAndVisible;

@property(nullable, nonatomic,strong) UIViewController *rootViewController __attribute__((availability(ios,introduced=4_0)));

- (void)sendEvent:(UIEvent *)event;

- (CGPoint)convertPoint:(CGPoint)point toWindow:(nullable UIWindow *)window;
- (CGPoint)convertPoint:(CGPoint)point fromWindow:(nullable UIWindow *)window;
- (CGRect)convertRect:(CGRect)rect toWindow:(nullable UIWindow *)window;
- (CGRect)convertRect:(CGRect)rect fromWindow:(nullable UIWindow *)window;

@end

extern __attribute__((visibility ("default"))) const UIWindowLevel UIWindowLevelNormal;
extern __attribute__((visibility ("default"))) const UIWindowLevel UIWindowLevelAlert;
extern __attribute__((visibility ("default"))) const UIWindowLevel UIWindowLevelStatusBar __attribute__((availability(tvos,unavailable)));

extern __attribute__((visibility ("default"))) NSNotificationName const UIWindowDidBecomeVisibleNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UIWindowDidBecomeHiddenNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UIWindowDidBecomeKeyNotification;
extern __attribute__((visibility ("default"))) NSNotificationName const UIWindowDidResignKeyNotification;





extern __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardWillShowNotification __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardDidShowNotification __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardWillHideNotification __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardDidHideNotification __attribute__((availability(tvos,unavailable)));

extern __attribute__((visibility ("default"))) NSString *const UIKeyboardFrameBeginUserInfoKey __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIKeyboardFrameEndUserInfoKey __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIKeyboardAnimationDurationUserInfoKey __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIKeyboardAnimationCurveUserInfoKey __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIKeyboardIsLocalUserInfoKey __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));



extern __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardWillChangeFrameNotification __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardDidChangeFrameNotification __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));


extern __attribute__((visibility ("default"))) NSString *const UIKeyboardCenterBeginUserInfoKey __attribute__((availability(ios,introduced=2_0,deprecated=3_2,message="" ))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIKeyboardCenterEndUserInfoKey __attribute__((availability(ios,introduced=2_0,deprecated=3_2,message="" ))) __attribute__((availability(tvos,unavailable)));
extern __attribute__((visibility ("default"))) NSString *const UIKeyboardBoundsUserInfoKey __attribute__((availability(ios,introduced=2_0,deprecated=3_2,message="" ))) __attribute__((availability(tvos,unavailable)));
# 175 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSAttributedString.h" 1 3
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSAttributedString.h" 3
@class NSFileWrapper;
@class NSURL;





extern __attribute__((visibility ("default"))) NSString * const NSFontAttributeName __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString * const NSParagraphStyleAttributeName __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString * const NSForegroundColorAttributeName __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString * const NSBackgroundColorAttributeName __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString * const NSLigatureAttributeName __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString * const NSKernAttributeName __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString * const NSStrikethroughStyleAttributeName __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString * const NSUnderlineStyleAttributeName __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString * const NSStrokeColorAttributeName __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString * const NSStrokeWidthAttributeName __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString * const NSShadowAttributeName __attribute__((availability(ios,introduced=6_0)));
extern __attribute__((visibility ("default"))) NSString *const NSTextEffectAttributeName __attribute__((availability(ios,introduced=7_0)));

extern __attribute__((visibility ("default"))) NSString * const NSAttachmentAttributeName __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSLinkAttributeName __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSBaselineOffsetAttributeName __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSUnderlineColorAttributeName __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSStrikethroughColorAttributeName __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSObliquenessAttributeName __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSExpansionAttributeName __attribute__((availability(ios,introduced=7_0)));

extern __attribute__((visibility ("default"))) NSString * const NSWritingDirectionAttributeName __attribute__((availability(ios,introduced=7_0)));

extern __attribute__((visibility ("default"))) NSString * const NSVerticalGlyphFormAttributeName __attribute__((availability(ios,introduced=6_0)));





typedef enum NSUnderlineStyle : NSInteger NSUnderlineStyle; enum NSUnderlineStyle : NSInteger {
    NSUnderlineStyleNone = 0x00,
    NSUnderlineStyleSingle = 0x01,
    NSUnderlineStyleThick __attribute__((availability(ios,introduced=7_0))) = 0x02,
    NSUnderlineStyleDouble __attribute__((availability(ios,introduced=7_0))) = 0x09,

    NSUnderlinePatternSolid __attribute__((availability(ios,introduced=7_0))) = 0x0000,
    NSUnderlinePatternDot __attribute__((availability(ios,introduced=7_0))) = 0x0100,
    NSUnderlinePatternDash __attribute__((availability(ios,introduced=7_0))) = 0x0200,
    NSUnderlinePatternDashDot __attribute__((availability(ios,introduced=7_0))) = 0x0300,
    NSUnderlinePatternDashDotDot __attribute__((availability(ios,introduced=7_0))) = 0x0400,

    NSUnderlineByWord __attribute__((availability(ios,introduced=7_0))) = 0x8000
} __attribute__((availability(ios,introduced=6_0)));


typedef enum NSWritingDirectionFormatType : NSInteger NSWritingDirectionFormatType; enum NSWritingDirectionFormatType : NSInteger {
    NSWritingDirectionEmbedding = (0 << 1),
    NSWritingDirectionOverride = (1 << 1)
} __attribute__((availability(ios,introduced=9_0)));


extern __attribute__((visibility ("default"))) NSString *const NSTextEffectLetterpressStyle __attribute__((availability(ios,introduced=7_0)));




@interface NSMutableAttributedString (NSAttributedStringAttributeFixing)

- (void)fixAttributesInRange:(NSRange)range __attribute__((availability(ios,introduced=7_0)));

@end





extern __attribute__((visibility ("default"))) NSString * const NSPlainTextDocumentType __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSRTFTextDocumentType __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSRTFDTextDocumentType __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSHTMLTextDocumentType __attribute__((availability(ios,introduced=7_0)));


extern __attribute__((visibility ("default"))) NSString * const NSTextLayoutSectionOrientation __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSTextLayoutSectionRange __attribute__((availability(ios,introduced=7_0)));




extern __attribute__((visibility ("default"))) NSString * const NSDocumentTypeDocumentAttribute __attribute__((availability(ios,introduced=7_0)));



extern __attribute__((visibility ("default"))) NSString * const NSCharacterEncodingDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSDefaultAttributesDocumentAttribute __attribute__((availability(ios,introduced=7_0)));





extern __attribute__((visibility ("default"))) NSString * const NSPaperSizeDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSPaperMarginDocumentAttribute __attribute__((availability(ios,introduced=7_0)));

extern __attribute__((visibility ("default"))) NSString * const NSViewSizeDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSViewZoomDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSViewModeDocumentAttribute __attribute__((availability(ios,introduced=7_0)));



extern __attribute__((visibility ("default"))) NSString * const NSReadOnlyDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSBackgroundColorDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSHyphenationFactorDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSDefaultTabIntervalDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSString * const NSTextLayoutSectionsAttribute __attribute__((availability(ios,introduced=7_0)));



@interface NSAttributedString (NSAttributedStringDocumentFormats)

- (nullable instancetype)initWithURL:(NSURL *)url options:(NSDictionary<NSString *, id> *)options documentAttributes:(NSDictionary<NSString *, id> * _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=9_0)));
- (nullable instancetype)initWithData:(NSData *)data options:(NSDictionary<NSString *, id> *)options documentAttributes:(NSDictionary<NSString *, id> * _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=7_0)));


- (nullable NSData *)dataFromRange:(NSRange)range documentAttributes:(NSDictionary<NSString *, id> *)dict error:(NSError **)error __attribute__((availability(ios,introduced=7_0)));


- (nullable NSFileWrapper *)fileWrapperFromRange:(NSRange)range documentAttributes:(NSDictionary<NSString *, id> *)dict error:(NSError **)error __attribute__((availability(ios,introduced=7_0)));

@end

@interface NSMutableAttributedString (NSMutableAttributedStringDocumentFormats)

- (BOOL)readFromURL:(NSURL *)url options:(NSDictionary<NSString *, id> *)opts documentAttributes:(NSDictionary<NSString *, id> * _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=9_0)));
- (BOOL)readFromData:(NSData *)data options:(NSDictionary<NSString *, id> *)opts documentAttributes:(NSDictionary<NSString *, id> * _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=7_0)));
@end



@interface NSAttributedString (NSAttributedStringKitAdditions)

- (BOOL)containsAttachmentsInRange:(NSRange)range __attribute__((availability(ios,introduced=9_0)));
@end



typedef enum NSTextWritingDirection : NSInteger NSTextWritingDirection; enum NSTextWritingDirection : NSInteger {
    NSTextWritingDirectionEmbedding = (0 << 1),
    NSTextWritingDirectionOverride = (1 << 1)
} __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSWritingDirectionFormatType instead"))) __attribute__((availability(tvos,unavailable)));

@interface NSAttributedString(NSDeprecatedKitAdditions)
- (nullable instancetype)initWithFileURL:(NSURL *)url options:(NSDictionary *)options documentAttributes:(NSDictionary* _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use -initWithURL:options:documentAttributes:error: instead"))) __attribute__((availability(tvos,unavailable)));
@end

@interface NSMutableAttributedString (NSDeprecatedKitAdditions)
- (BOOL)readFromFileURL:(NSURL *)url options:(NSDictionary *)opts documentAttributes:(NSDictionary* _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use -readFromURL:options:documentAttributes:error: instead"))) __attribute__((availability(tvos,unavailable)));
@end
# 178 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSLayoutAnchor.h" 1 3
# 23 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSLayoutAnchor.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface NSLayoutAnchor<AnchorType> : NSObject



- (NSLayoutConstraint *)constraintEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor;
- (NSLayoutConstraint *)constraintGreaterThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor;
- (NSLayoutConstraint *)constraintLessThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor;



- (NSLayoutConstraint *)constraintEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor constant:(CGFloat)c;
- (NSLayoutConstraint *)constraintGreaterThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor constant:(CGFloat)c;
- (NSLayoutConstraint *)constraintLessThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor constant:(CGFloat)c;
@end




@class NSLayoutXAxisAnchor, NSLayoutYAxisAnchor;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface NSLayoutXAxisAnchor : NSLayoutAnchor<NSLayoutXAxisAnchor *>
@end
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface NSLayoutYAxisAnchor : NSLayoutAnchor<NSLayoutYAxisAnchor *>
@end




@class NSLayoutDimension;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface NSLayoutDimension : NSLayoutAnchor<NSLayoutDimension *>




- (NSLayoutConstraint *)constraintEqualToConstant:(CGFloat)c;
- (NSLayoutConstraint *)constraintGreaterThanOrEqualToConstant:(CGFloat)c;
- (NSLayoutConstraint *)constraintLessThanOrEqualToConstant:(CGFloat)c;




- (NSLayoutConstraint *)constraintEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m;
- (NSLayoutConstraint *)constraintGreaterThanOrEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m;
- (NSLayoutConstraint *)constraintLessThanOrEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m;




- (NSLayoutConstraint *)constraintEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m constant:(CGFloat)c;
- (NSLayoutConstraint *)constraintGreaterThanOrEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m constant:(CGFloat)c;
- (NSLayoutConstraint *)constraintLessThanOrEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m constant:(CGFloat)c;
@end
# 182 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStackView.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStackView.h" 3
typedef enum UIStackViewDistribution : NSInteger UIStackViewDistribution; enum UIStackViewDistribution : NSInteger {






    UIStackViewDistributionFill = 0,






    UIStackViewDistributionFillEqually,




    UIStackViewDistributionFillProportionally,





    UIStackViewDistributionEqualSpacing,
# 50 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStackView.h" 3
    UIStackViewDistributionEqualCentering,
} __attribute__((availability(ios,introduced=9_0)));



typedef enum UIStackViewAlignment : NSInteger UIStackViewAlignment; enum UIStackViewAlignment : NSInteger {



    UIStackViewAlignmentFill,





    UIStackViewAlignmentLeading,
    UIStackViewAlignmentTop = UIStackViewAlignmentLeading,
    UIStackViewAlignmentFirstBaseline,




    UIStackViewAlignmentCenter,





    UIStackViewAlignmentTrailing,
    UIStackViewAlignmentBottom = UIStackViewAlignmentTrailing,
    UIStackViewAlignmentLastBaseline,
} __attribute__((availability(ios,introduced=9_0)));
# 104 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStackView.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))
@interface UIStackView : UIView

- (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
- (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
# 119 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStackView.h" 3
- (instancetype)initWithArrangedSubviews:(NSArray<__kindof UIView *> *)views;
@property(nonatomic,readonly,copy) NSArray<__kindof UIView *> *arrangedSubviews;
# 129 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStackView.h" 3
- (void)addArrangedSubview:(UIView *)view;







- (void)removeArrangedSubview:(UIView *)view;





- (void)insertArrangedSubview:(UIView *)view atIndex:(NSUInteger)stackIndex;




@property(nonatomic) UILayoutConstraintAxis axis;



@property(nonatomic) UIStackViewDistribution distribution;




@property(nonatomic) UIStackViewAlignment alignment;






@property(nonatomic) CGFloat spacing;
# 175 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIStackView.h" 3
@property(nonatomic,getter=isBaselineRelativeArrangement) BOOL baselineRelativeArrangement;




@property(nonatomic,getter=isLayoutMarginsRelativeArrangement) BOOL layoutMarginsRelativeArrangement;
@end
# 184 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSLayoutManager.h" 1 3








# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSTextStorage.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSTextStorage.h" 3
@class NSArray, NSLayoutManager, NSNotification;

@protocol NSTextStorageDelegate;



typedef enum NSTextStorageEditActions : NSUInteger NSTextStorageEditActions; enum NSTextStorageEditActions : NSUInteger {
    NSTextStorageEditedAttributes = (1 << 0),
    NSTextStorageEditedCharacters = (1 << 1)
} __attribute__((availability(ios,introduced=7_0)));
# 35 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSTextStorage.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface NSTextStorage : NSMutableAttributedString




@property(readonly, copy, nonatomic) NSArray<NSLayoutManager *> *layoutManagers;


- (void)addLayoutManager:(NSLayoutManager *)aLayoutManager;


- (void)removeLayoutManager:(NSLayoutManager *)aLayoutManager;






@property(readonly, nonatomic) NSTextStorageEditActions editedMask;


@property(readonly, nonatomic) NSRange editedRange;


@property(readonly, nonatomic) NSInteger changeInLength;




@property(nullable, assign, nonatomic) id <NSTextStorageDelegate> delegate;





- (void)edited:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta;


- (void)processEditing;





@property(readonly, nonatomic) BOOL fixesAttributesLazily;


- (void)invalidateAttributesInRange:(NSRange)range;


- (void)ensureAttributesAreFixedInRange:(NSRange)range;

@end




@protocol NSTextStorageDelegate <NSObject>
@optional


- (void)textStorage:(NSTextStorage *)textStorage willProcessEditing:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta __attribute__((availability(ios,introduced=7_0)));


- (void)textStorage:(NSTextStorage *)textStorage didProcessEditing:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta __attribute__((availability(ios,introduced=7_0)));

@end



extern __attribute__((visibility ("default"))) NSNotificationName const NSTextStorageWillProcessEditingNotification __attribute__((availability(ios,introduced=7_0)));
extern __attribute__((visibility ("default"))) NSNotificationName const NSTextStorageDidProcessEditingNotification __attribute__((availability(ios,introduced=7_0)));
# 10 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSLayoutManager.h" 2 3



@class NSTextContainer;
@class UIColor;



@protocol NSLayoutManagerDelegate;

typedef enum NSTextLayoutOrientation : NSInteger NSTextLayoutOrientation; enum NSTextLayoutOrientation : NSInteger {
    NSTextLayoutOrientationHorizontal = 0,
    NSTextLayoutOrientationVertical = 1,
} __attribute__((availability(ios,introduced=7_0)));

typedef enum NSGlyphProperty : NSInteger NSGlyphProperty; enum NSGlyphProperty : NSInteger {
    NSGlyphPropertyNull = (1 << 0),
    NSGlyphPropertyControlCharacter = (1 << 1),
    NSGlyphPropertyElastic = (1 << 2),
    NSGlyphPropertyNonBaseCharacter = (1 << 3)
} __attribute__((availability(ios,introduced=7_0)));

typedef enum NSControlCharacterAction : NSInteger NSControlCharacterAction; enum NSControlCharacterAction : NSInteger {
    NSControlCharacterActionZeroAdvancement = (1 << 0),
    NSControlCharacterActionWhitespace = (1 << 1),
    NSControlCharacterActionHorizontalTab = (1 << 2),
    NSControlCharacterActionLineBreak = (1 << 3),
    NSControlCharacterActionParagraphBreak = (1 << 4),
    NSControlCharacterActionContainerBreak = (1 << 5)
} __attribute__((availability(ios,introduced=7_0)));

@protocol NSTextLayoutOrientationProvider

@property(readonly, nonatomic) NSTextLayoutOrientation layoutOrientation __attribute__((availability(ios,introduced=7_0)));
@end


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface NSLayoutManager : NSObject <NSCoding>




- (instancetype)init __attribute__((objc_designated_initializer));

- (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));






@property(nullable, assign, nonatomic) NSTextStorage *textStorage;






@property(readonly, nonatomic) NSArray<NSTextContainer *> *textContainers;


- (void)addTextContainer:(NSTextContainer *)container;


- (void)insertTextContainer:(NSTextContainer *)container atIndex:(NSUInteger)index;


- (void)removeTextContainerAtIndex:(NSUInteger)index;


- (void)textContainerChangedGeometry:(NSTextContainer *)container;





@property(nullable, assign, nonatomic) id <NSLayoutManagerDelegate> delegate;





@property(nonatomic) BOOL showsInvisibleCharacters;


@property(nonatomic) BOOL showsControlCharacters;


@property(nonatomic) CGFloat hyphenationFactor;


@property(nonatomic) BOOL usesFontLeading;


@property(nonatomic) BOOL allowsNonContiguousLayout __attribute__((availability(ios,introduced=7_0)));


@property(readonly, nonatomic) BOOL hasNonContiguousLayout __attribute__((availability(ios,introduced=7_0)));






- (void)invalidateGlyphsForCharacterRange:(NSRange)charRange changeInLength:(NSInteger)delta actualCharacterRange:(nullable NSRangePointer)actualCharRange;


- (void)invalidateLayoutForCharacterRange:(NSRange)charRange actualCharacterRange:(nullable NSRangePointer)actualCharRange __attribute__((availability(ios,introduced=7_0)));


- (void)invalidateDisplayForCharacterRange:(NSRange)charRange;
- (void)invalidateDisplayForGlyphRange:(NSRange)glyphRange;


- (void)processEditingForTextStorage:(NSTextStorage *)textStorage edited:(NSTextStorageEditActions)editMask range:(NSRange)newCharRange changeInLength:(NSInteger)delta invalidatedRange:(NSRange)invalidatedCharRange __attribute__((availability(ios,introduced=7_0)));





- (void)ensureGlyphsForCharacterRange:(NSRange)charRange;
- (void)ensureGlyphsForGlyphRange:(NSRange)glyphRange;
- (void)ensureLayoutForCharacterRange:(NSRange)charRange;
- (void)ensureLayoutForGlyphRange:(NSRange)glyphRange;
- (void)ensureLayoutForTextContainer:(NSTextContainer *)container;
- (void)ensureLayoutForBoundingRect:(CGRect)bounds inTextContainer:(NSTextContainer *)container;





- (void)setGlyphs:(const CGGlyph *)glyphs properties:(const NSGlyphProperty *)props characterIndexes:(const NSUInteger *)charIndexes font:(UIFont *)aFont forGlyphRange:(NSRange)glyphRange __attribute__((availability(ios,introduced=7_0)));





@property(readonly, nonatomic) NSUInteger numberOfGlyphs;


- (CGGlyph)CGGlyphAtIndex:(NSUInteger)glyphIndex isValidIndex:(nullable BOOL *)isValidIndex __attribute__((availability(ios,introduced=7_0)));
- (CGGlyph)CGGlyphAtIndex:(NSUInteger)glyphIndex __attribute__((availability(ios,introduced=7_0)));
- (BOOL)isValidGlyphIndex:(NSUInteger)glyphIndex __attribute__((availability(ios,introduced=7_0)));


- (NSGlyphProperty)propertyForGlyphAtIndex:(NSUInteger)glyphIndex __attribute__((availability(ios,introduced=7_0)));


- (NSUInteger)characterIndexForGlyphAtIndex:(NSUInteger)glyphIndex;


- (NSUInteger)glyphIndexForCharacterAtIndex:(NSUInteger)charIndex;


- (NSUInteger)getGlyphsInRange:(NSRange)glyphRange glyphs:(nullable CGGlyph *)glyphBuffer properties:(nullable NSGlyphProperty *)props characterIndexes:(nullable NSUInteger *)charIndexBuffer bidiLevels:(nullable unsigned char *)bidiLevelBuffer __attribute__((availability(ios,introduced=7_0)));





- (void)setTextContainer:(NSTextContainer *)container forGlyphRange:(NSRange)glyphRange;


- (void)setLineFragmentRect:(CGRect)fragmentRect forGlyphRange:(NSRange)glyphRange usedRect:(CGRect)usedRect;


- (void)setExtraLineFragmentRect:(CGRect)fragmentRect usedRect:(CGRect)usedRect textContainer:(NSTextContainer *)container;


- (void)setLocation:(CGPoint)location forStartOfGlyphRange:(NSRange)glyphRange;


- (void)setNotShownAttribute:(BOOL)flag forGlyphAtIndex:(NSUInteger)glyphIndex;


- (void)setDrawsOutsideLineFragment:(BOOL)flag forGlyphAtIndex:(NSUInteger)glyphIndex;


- (void)setAttachmentSize:(CGSize)attachmentSize forGlyphRange:(NSRange)glyphRange;





- (void)getFirstUnlaidCharacterIndex:(nullable NSUInteger *)charIndex glyphIndex:(nullable NSUInteger *)glyphIndex;


@property(nonatomic, readonly) NSUInteger firstUnlaidCharacterIndex;
@property(nonatomic, readonly) NSUInteger firstUnlaidGlyphIndex;






- (nullable NSTextContainer *)textContainerForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange;
- (nullable NSTextContainer *)textContainerForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange withoutAdditionalLayout:(BOOL)flag __attribute__((availability(ios,introduced=9_0)));



- (CGRect)usedRectForTextContainer:(NSTextContainer *)container;


- (CGRect)lineFragmentRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange;
- (CGRect)lineFragmentRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange withoutAdditionalLayout:(BOOL)flag __attribute__((availability(ios,introduced=9_0)));


- (CGRect)lineFragmentUsedRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange;
- (CGRect)lineFragmentUsedRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange withoutAdditionalLayout:(BOOL)flag __attribute__((availability(ios,introduced=9_0)));


@property(readonly, nonatomic) CGRect extraLineFragmentRect;
@property(readonly, nonatomic) CGRect extraLineFragmentUsedRect;
@property(nullable, readonly, nonatomic) NSTextContainer *extraLineFragmentTextContainer;



- (CGPoint)locationForGlyphAtIndex:(NSUInteger)glyphIndex;


- (BOOL)notShownAttributeForGlyphAtIndex:(NSUInteger)glyphIndex;


- (BOOL)drawsOutsideLineFragmentForGlyphAtIndex:(NSUInteger)glyphIndex;


- (CGSize)attachmentSizeForGlyphAtIndex:(NSUInteger)glyphIndex;



- (NSRange)truncatedGlyphRangeInLineFragmentForGlyphAtIndex:(NSUInteger)glyphIndex __attribute__((availability(ios,introduced=7_0)));





- (NSRange)glyphRangeForCharacterRange:(NSRange)charRange actualCharacterRange:(nullable NSRangePointer)actualCharRange;


- (NSRange)characterRangeForGlyphRange:(NSRange)glyphRange actualGlyphRange:(nullable NSRangePointer)actualGlyphRange;


- (NSRange)glyphRangeForTextContainer:(NSTextContainer *)container;


- (NSRange)rangeOfNominallySpacedGlyphsContainingIndex:(NSUInteger)glyphIndex;


- (CGRect)boundingRectForGlyphRange:(NSRange)glyphRange inTextContainer:(NSTextContainer *)container;


- (NSRange)glyphRangeForBoundingRect:(CGRect)bounds inTextContainer:(NSTextContainer *)container;
- (NSRange)glyphRangeForBoundingRectWithoutAdditionalLayout:(CGRect)bounds inTextContainer:(NSTextContainer *)container;


- (NSUInteger)glyphIndexForPoint:(CGPoint)point inTextContainer:(NSTextContainer *)container fractionOfDistanceThroughGlyph:(nullable CGFloat *)partialFraction;
- (NSUInteger)glyphIndexForPoint:(CGPoint)point inTextContainer:(NSTextContainer *)container;
- (CGFloat)fractionOfDistanceThroughGlyphForPoint:(CGPoint)point inTextContainer:(NSTextContainer *)container;


- (NSUInteger)characterIndexForPoint:(CGPoint)point inTextContainer:(NSTextContainer *)container fractionOfDistanceBetweenInsertionPoints:(nullable CGFloat *)partialFraction;


- (NSUInteger)getLineFragmentInsertionPointsForCharacterAtIndex:(NSUInteger)charIndex alternatePositions:(BOOL)aFlag inDisplayOrder:(BOOL)dFlag positions:(nullable CGFloat *)positions characterIndexes:(nullable NSUInteger *)charIndexes;


- (void)enumerateLineFragmentsForGlyphRange:(NSRange)glyphRange usingBlock:(void (^)(CGRect rect, CGRect usedRect, NSTextContainer *textContainer, NSRange glyphRange, BOOL *stop))block __attribute__((availability(ios,introduced=7_0)));


- (void)enumerateEnclosingRectsForGlyphRange:(NSRange)glyphRange withinSelectedGlyphRange:(NSRange)selectedRange inTextContainer:(NSTextContainer *)textContainer usingBlock:(void (^)(CGRect rect, BOOL *stop))block __attribute__((availability(ios,introduced=7_0)));




- (void)drawBackgroundForGlyphRange:(NSRange)glyphsToShow atPoint:(CGPoint)origin;
- (void)drawGlyphsForGlyphRange:(NSRange)glyphsToShow atPoint:(CGPoint)origin;


- (void)showCGGlyphs:(const CGGlyph *)glyphs positions:(const CGPoint *)positions count:(NSUInteger)glyphCount font:(UIFont *)font matrix:(CGAffineTransform)textMatrix attributes:(NSDictionary<NSString *, id> *)attributes inContext:(CGContextRef)graphicsContext __attribute__((availability(ios,introduced=7_0)));


- (void)fillBackgroundRectArray:(const CGRect *)rectArray count:(NSUInteger)rectCount forCharacterRange:(NSRange)charRange color:(UIColor *)color __attribute__((availability(ios,introduced=7_0)));


- (void)drawUnderlineForGlyphRange:(NSRange)glyphRange underlineType:(NSUnderlineStyle)underlineVal baselineOffset:(CGFloat)baselineOffset lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;
- (void)underlineGlyphRange:(NSRange)glyphRange underlineType:(NSUnderlineStyle)underlineVal lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;


- (void)drawStrikethroughForGlyphRange:(NSRange)glyphRange strikethroughType:(NSUnderlineStyle)strikethroughVal baselineOffset:(CGFloat)baselineOffset lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;
- (void)strikethroughGlyphRange:(NSRange)glyphRange strikethroughType:(NSUnderlineStyle)strikethroughVal lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;

@end


@protocol NSLayoutManagerDelegate <NSObject>
@optional



- (NSUInteger)layoutManager:(NSLayoutManager *)layoutManager shouldGenerateGlyphs:(const CGGlyph *)glyphs properties:(const NSGlyphProperty *)props characterIndexes:(const NSUInteger *)charIndexes font:(UIFont *)aFont forGlyphRange:(NSRange)glyphRange __attribute__((availability(ios,introduced=7_0)));






- (CGFloat)layoutManager:(NSLayoutManager *)layoutManager lineSpacingAfterGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(CGRect)rect __attribute__((availability(ios,introduced=7_0)));


- (CGFloat)layoutManager:(NSLayoutManager *)layoutManager paragraphSpacingBeforeGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(CGRect)rect __attribute__((availability(ios,introduced=7_0)));


- (CGFloat)layoutManager:(NSLayoutManager *)layoutManager paragraphSpacingAfterGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(CGRect)rect __attribute__((availability(ios,introduced=7_0)));


- (NSControlCharacterAction)layoutManager:(NSLayoutManager *)layoutManager shouldUseAction:(NSControlCharacterAction)action forControlCharacterAtIndex:(NSUInteger)charIndex __attribute__((availability(ios,introduced=7_0)));


- (BOOL)layoutManager:(NSLayoutManager *)layoutManager shouldBreakLineByWordBeforeCharacterAtIndex:(NSUInteger)charIndex __attribute__((availability(ios,introduced=7_0)));


- (BOOL)layoutManager:(NSLayoutManager *)layoutManager shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(NSUInteger)charIndex __attribute__((availability(ios,introduced=7_0)));


- (CGRect)layoutManager:(NSLayoutManager *)layoutManager boundingBoxForControlGlyphAtIndex:(NSUInteger)glyphIndex forTextContainer:(NSTextContainer *)textContainer proposedLineFragment:(CGRect)proposedRect glyphPosition:(CGPoint)glyphPosition characterIndex:(NSUInteger)charIndex __attribute__((availability(ios,introduced=7_0)));


- (BOOL)layoutManager:(NSLayoutManager *)layoutManager shouldSetLineFragmentRect:(inout CGRect *)lineFragmentRect lineFragmentUsedRect:(inout CGRect *)lineFragmentUsedRect baselineOffset:(inout CGFloat *)baselineOffset inTextContainer:(NSTextContainer *)textContainer forGlyphRange:(NSRange)glyphRange __attribute__((availability(ios,introduced=9_0)));




- (void)layoutManagerDidInvalidateLayout:(NSLayoutManager *)sender __attribute__((availability(ios,introduced=7_0)));


- (void)layoutManager:(NSLayoutManager *)layoutManager didCompleteLayoutForTextContainer:(nullable NSTextContainer *)textContainer atEnd:(BOOL)layoutFinishedFlag __attribute__((availability(ios,introduced=7_0)));


- (void)layoutManager:(NSLayoutManager *)layoutManager textContainer:(NSTextContainer *)textContainer didChangeGeometryFromSize:(CGSize)oldSize __attribute__((availability(ios,introduced=7_0)));

@end



enum {
    NSControlCharacterZeroAdvancementAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionZeroAdvancement instead"))) = NSControlCharacterActionZeroAdvancement,
    NSControlCharacterWhitespaceAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionWhitespace instead"))) = NSControlCharacterActionWhitespace,
    NSControlCharacterHorizontalTabAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionHorizontalTab instead"))) = NSControlCharacterActionHorizontalTab,
    NSControlCharacterLineBreakAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionLineBreak instead"))) = NSControlCharacterActionLineBreak,
    NSControlCharacterParagraphBreakAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionParagraphBreak instead"))) = NSControlCharacterActionParagraphBreak,
    NSControlCharacterContainerBreakAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionContainerBreak instead"))) = NSControlCharacterActionContainerBreak
};

@interface NSLayoutManager (NSLayoutManagerDeprecated)

- (CGGlyph)glyphAtIndex:(NSUInteger)glyphIndex isValidIndex:(nullable BOOL *)isValidIndex;
- (CGGlyph)glyphAtIndex:(NSUInteger)glyphIndex;
@end
# 185 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3





# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSShadow.h" 1 3
# 18 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSShadow.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface NSShadow : NSObject <NSCopying, NSCoding>

- (instancetype)init __attribute__((objc_designated_initializer));
- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

@property (nonatomic, assign) CGSize shadowOffset;
@property (nonatomic, assign) CGFloat shadowBlurRadius;
@property (nullable, nonatomic, strong) id shadowColor;

@end
# 191 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3


# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSStringDrawing.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSStringDrawing.h" 3
@class NSStringDrawingContext;





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) @interface NSStringDrawingContext : NSObject


@property(nonatomic) CGFloat minimumScaleFactor;


@property(readonly, nonatomic) CGFloat actualScaleFactor;


@property(readonly, nonatomic) CGRect totalBounds;

@end

@interface NSString(NSStringDrawing)
- (CGSize)sizeWithAttributes:(nullable NSDictionary<NSString *, id> *)attrs __attribute__((availability(ios,introduced=7_0)));
- (void)drawAtPoint:(CGPoint)point withAttributes:(nullable NSDictionary<NSString *, id> *)attrs __attribute__((availability(ios,introduced=7_0)));
- (void)drawInRect:(CGRect)rect withAttributes:(nullable NSDictionary<NSString *, id> *)attrs __attribute__((availability(ios,introduced=7_0)));
@end

@interface NSAttributedString(NSStringDrawing)
- (CGSize)size __attribute__((availability(ios,introduced=6_0)));
- (void)drawAtPoint:(CGPoint)point __attribute__((availability(ios,introduced=6_0)));
- (void)drawInRect:(CGRect)rect __attribute__((availability(ios,introduced=6_0)));
@end

typedef enum NSStringDrawingOptions : NSInteger NSStringDrawingOptions; enum NSStringDrawingOptions : NSInteger {
    NSStringDrawingUsesLineFragmentOrigin = 1 << 0,
    NSStringDrawingUsesFontLeading = 1 << 1,
    NSStringDrawingUsesDeviceMetrics = 1 << 3,
    NSStringDrawingTruncatesLastVisibleLine __attribute__((availability(ios,introduced=6_0))) = 1 << 5,

} __attribute__((availability(ios,introduced=6_0)));




@interface NSString (NSExtendedStringDrawing)
- (void)drawWithRect:(CGRect)rect options:(NSStringDrawingOptions)options attributes:(nullable NSDictionary<NSString *, id> *)attributes context:(nullable NSStringDrawingContext *)context __attribute__((availability(ios,introduced=7_0)));
- (CGRect)boundingRectWithSize:(CGSize)size options:(NSStringDrawingOptions)options attributes:(nullable NSDictionary<NSString *, id> *)attributes context:(nullable NSStringDrawingContext *)context __attribute__((availability(ios,introduced=7_0)));
@end

@interface NSAttributedString (NSExtendedStringDrawing)
- (void)drawWithRect:(CGRect)rect options:(NSStringDrawingOptions)options context:(nullable NSStringDrawingContext *)context __attribute__((availability(ios,introduced=6_0)));
- (CGRect)boundingRectWithSize:(CGSize)size options:(NSStringDrawingOptions)options context:(nullable NSStringDrawingContext *)context __attribute__((availability(ios,introduced=6_0)));
@end


@interface NSStringDrawingContext (NSStringDrawingContextDeprecated)
@property(nonatomic) CGFloat minimumTrackingAdjustment __attribute__((availability(ios,introduced=6_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property(nonatomic, readonly) CGFloat actualTrackingAdjustment __attribute__((availability(ios,introduced=6_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@end
# 194 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSTextAttachment.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSTextAttachment.h" 3
enum {
    NSAttachmentCharacter __attribute__((availability(ios,introduced=7_0))) = 0xFFFC
};

@class NSTextContainer;
@class NSLayoutManager;
@class UIImage;



@protocol NSTextAttachmentContainer <NSObject>




- (nullable UIImage *)imageForBounds:(CGRect)imageBounds textContainer:(nullable NSTextContainer *)textContainer characterIndex:(NSUInteger)charIndex __attribute__((availability(ios,introduced=7_0)));



- (CGRect)attachmentBoundsForTextContainer:(nullable NSTextContainer *)textContainer proposedLineFragment:(CGRect)lineFrag glyphPosition:(CGPoint)position characterIndex:(NSUInteger)charIndex __attribute__((availability(ios,introduced=7_0)));


@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface NSTextAttachment : NSObject <NSTextAttachmentContainer, NSCoding>




- (instancetype)initWithData:(nullable NSData *)contentData ofType:(nullable NSString *)uti __attribute__((objc_designated_initializer)) __attribute__((availability(ios,introduced=7_0)));







@property(nullable, copy, nonatomic) NSData *contents __attribute__((availability(ios,introduced=7_0)));
@property(nullable, copy, nonatomic) NSString *fileType __attribute__((availability(ios,introduced=7_0)));




@property(nullable, strong, nonatomic) UIImage *image __attribute__((availability(ios,introduced=7_0)));


@property(nonatomic) CGRect bounds __attribute__((availability(ios,introduced=7_0)));





@property(nullable, strong, nonatomic) NSFileWrapper *fileWrapper;


@end

@interface NSAttributedString (NSAttributedStringAttachmentConveniences)

+ (NSAttributedString *)attributedStringWithAttachment:(NSTextAttachment *)attachment __attribute__((availability(ios,introduced=7_0)));
@end
# 198 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSTextContainer.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/NSTextContainer.h" 3
@class UIBezierPath;



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface NSTextContainer : NSObject <NSCoding, NSTextLayoutOrientationProvider>



- (instancetype)initWithSize:(CGSize)size __attribute__((objc_designated_initializer)) __attribute__((availability(ios,introduced=7_0)));
- (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));






@property(nullable, assign, nonatomic) NSLayoutManager *layoutManager;


- (void)replaceLayoutManager:(NSLayoutManager *)newLayoutManager __attribute__((availability(ios,introduced=9_0)));





@property(nonatomic) CGSize size __attribute__((availability(ios,introduced=7_0)));


@property(copy, nonatomic) NSArray<UIBezierPath *> *exclusionPaths __attribute__((availability(ios,introduced=7_0)));


@property(nonatomic) NSLineBreakMode lineBreakMode __attribute__((availability(ios,introduced=7_0)));




@property(nonatomic) CGFloat lineFragmentPadding;


@property(nonatomic) NSUInteger maximumNumberOfLines __attribute__((availability(ios,introduced=7_0)));




- (CGRect)lineFragmentRectForProposedRect:(CGRect)proposedRect atIndex:(NSUInteger)characterIndex writingDirection:(NSWritingDirection)baseWritingDirection remainingRect:(nullable CGRect *)remainingRect __attribute__((availability(ios,introduced=7_0)));


@property (getter=isSimpleRectangularTextContainer, readonly, nonatomic) BOOL simpleRectangularTextContainer __attribute__((availability(ios,introduced=9_0)));





@property(nonatomic) BOOL widthTracksTextView;
@property(nonatomic) BOOL heightTracksTextView;

@end
# 199 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3





# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPreviewInteraction.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPreviewInteraction.h" 3
@protocol UIPreviewInteractionDelegate;

extern __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) @interface UIPreviewInteraction : NSObject

- (instancetype)initWithView:(UIView *)view __attribute__((objc_designated_initializer));
@property (nonatomic, readonly, weak) UIView *view;

- (instancetype)init __attribute__((unavailable));

@property (nonatomic, nullable, weak) id <UIPreviewInteractionDelegate> delegate;

- (CGPoint)locationInCoordinateSpace:(nullable id <UICoordinateSpace>)coordinateSpace;
- (void)cancelInteraction;

@end

@protocol UIPreviewInteractionDelegate <NSObject>

- (void)previewInteraction:(UIPreviewInteraction *)previewInteraction didUpdatePreviewTransition:(CGFloat)transitionProgress ended:(BOOL)ended __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
- (void)previewInteractionDidCancel:(UIPreviewInteraction *)previewInteraction __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

@optional

- (BOOL)previewInteractionShouldBegin:(UIPreviewInteraction *)previewInteraction __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


- (void)previewInteraction:(UIPreviewInteraction *)previewInteraction didUpdateCommitTransition:(CGFloat)transitionProgress ended:(BOOL)ended __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

@end
# 205 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPopoverPresentationController.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPopoverPresentationController.h" 3
@class UIPopoverPresentationController;

__attribute__((availability(tvos,unavailable)))
@protocol UIPopoverPresentationControllerDelegate <UIAdaptivePresentationControllerDelegate>
@optional

- (void)prepareForPopoverPresentation:(UIPopoverPresentationController *)popoverPresentationController;



- (BOOL)popoverPresentationControllerShouldDismissPopover:(UIPopoverPresentationController *)popoverPresentationController;


- (void)popoverPresentationControllerDidDismissPopover:(UIPopoverPresentationController *)popoverPresentationController;



- (void)popoverPresentationController:(UIPopoverPresentationController *)popoverPresentationController willRepositionPopoverToRect:(inout CGRect *)rect inView:(inout UIView * _Nonnull * _Nonnull)view;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) @interface UIPopoverPresentationController : UIPresentationController

@property (nullable, nonatomic, weak) id <UIPopoverPresentationControllerDelegate> delegate;

@property (nonatomic, assign) UIPopoverArrowDirection permittedArrowDirections;

@property (nullable, nonatomic, strong) UIView *sourceView;
@property (nonatomic, assign) CGRect sourceRect;



@property (nonatomic, assign) BOOL canOverlapSourceViewRect __attribute__((availability(ios,introduced=9_0)));

@property (nullable, nonatomic, strong) UIBarButtonItem *barButtonItem;


@property (nonatomic, readonly) UIPopoverArrowDirection arrowDirection;




@property (nullable, nonatomic, copy) NSArray<UIView *> *passthroughViews;


@property (nullable, nonatomic, copy) UIColor *backgroundColor;





@property (nonatomic, readwrite) UIEdgeInsets popoverLayoutMargins;



@property (nullable, nonatomic, readwrite, strong) Class <UIPopoverBackgroundViewMethods> popoverBackgroundViewClass;

@end
# 206 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDynamicAnimator.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDynamicAnimator.h" 3
@class UIDynamicBehavior;
@class UIDynamicAnimator;

@protocol UIDynamicAnimatorDelegate <NSObject>

@optional
- (void)dynamicAnimatorWillResume:(UIDynamicAnimator *)animator;
- (void)dynamicAnimatorDidPause:(UIDynamicAnimator *)animator;

@end

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIDynamicAnimator: NSObject



- (instancetype)initWithReferenceView:(UIView *)view __attribute__((objc_designated_initializer));

- (void)addBehavior:(UIDynamicBehavior *)behavior;
- (void)removeBehavior:(UIDynamicBehavior *)behavior;
- (void)removeAllBehaviors;

@property (nullable, nonatomic, readonly) UIView *referenceView;
@property (nonatomic, readonly, copy) NSArray<__kindof UIDynamicBehavior*> *behaviors;


- (NSArray<id<UIDynamicItem>> *)itemsInRect:(CGRect)rect;

- (void)updateItemUsingCurrentState:(id <UIDynamicItem>)item;

@property (nonatomic, readonly, getter = isRunning) BOOL running;

@property (nonatomic, readonly) NSTimeInterval elapsedTime;




@property (nullable, nonatomic, weak) id <UIDynamicAnimatorDelegate> delegate;

@end

@interface UIDynamicAnimator (UICollectionViewAdditions)



- (instancetype)initWithCollectionViewLayout:(UICollectionViewLayout *)layout;


- (nullable UICollectionViewLayoutAttributes *)layoutAttributesForCellAtIndexPath:(NSIndexPath *)indexPath;
- (nullable UICollectionViewLayoutAttributes *)layoutAttributesForSupplementaryViewOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath;
- (nullable UICollectionViewLayoutAttributes *)layoutAttributesForDecorationViewOfKind:(NSString *)decorationViewKind atIndexPath:(NSIndexPath *)indexPath;

@end
# 207 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3

# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPushBehavior.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIPushBehavior.h" 3
typedef enum UIPushBehaviorMode : NSInteger UIPushBehaviorMode; enum UIPushBehaviorMode : NSInteger {
    UIPushBehaviorModeContinuous,
    UIPushBehaviorModeInstantaneous
} __attribute__((availability(ios,introduced=7_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIPushBehavior : UIDynamicBehavior

- (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items mode:(UIPushBehaviorMode)mode __attribute__((objc_designated_initializer));

- (void)addItem:(id <UIDynamicItem>)item;
- (void)removeItem:(id <UIDynamicItem>)item;
@property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

- (UIOffset)targetOffsetFromCenterForItem:(id <UIDynamicItem>)item;
- (void)setTargetOffsetFromCenter:(UIOffset)o forItem:(id <UIDynamicItem>)item;

@property (nonatomic, readonly) UIPushBehaviorMode mode;
@property (nonatomic, readwrite) BOOL active;

@property (readwrite, nonatomic) CGFloat angle;

@property (readwrite, nonatomic) CGFloat magnitude;
@property (readwrite, nonatomic) CGVector pushDirection;

- (void)setAngle:(CGFloat)angle magnitude:(CGFloat)magnitude;

@end
# 209 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISnapBehavior.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISnapBehavior.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UISnapBehavior : UIDynamicBehavior


- (instancetype)initWithItem:(id <UIDynamicItem>)item snapToPoint:(CGPoint)point __attribute__((objc_designated_initializer));

@property (nonatomic, assign) CGPoint snapPoint __attribute__((availability(ios,introduced=9_0)));
@property (nonatomic, assign) CGFloat damping;

@end
# 210 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDynamicItemBehavior.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIDynamicItemBehavior.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIDynamicItemBehavior : UIDynamicBehavior

- (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items __attribute__((objc_designated_initializer));

- (void)addItem:(id <UIDynamicItem>)item;
- (void)removeItem:(id <UIDynamicItem>)item;
@property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

@property (readwrite, nonatomic) CGFloat elasticity;
@property (readwrite, nonatomic) CGFloat friction;
@property (readwrite, nonatomic) CGFloat density;
@property (readwrite, nonatomic) CGFloat resistance;
@property (readwrite, nonatomic) CGFloat angularResistance;






@property (readwrite, nonatomic) CGFloat charge __attribute__((availability(ios,introduced=9_0)));






@property (nonatomic, getter = isAnchored) BOOL anchored __attribute__((availability(ios,introduced=9_0)));

@property (readwrite, nonatomic) BOOL allowsRotation;



- (void)addLinearVelocity:(CGPoint)velocity forItem:(id <UIDynamicItem>)item;
- (CGPoint)linearVelocityForItem:(id <UIDynamicItem>)item;



- (void)addAngularVelocity:(CGFloat)velocity forItem:(id <UIDynamicItem>)item;
- (CGFloat)angularVelocityForItem:(id <UIDynamicItem>)item;

@end
# 211 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFieldBehavior.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFieldBehavior.h" 3
@class UIRegion;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UIFieldBehavior : UIDynamicBehavior

- (instancetype)init __attribute__((unavailable));

- (void)addItem:(id <UIDynamicItem>)item;
- (void)removeItem:(id <UIDynamicItem>)item;

@property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;




@property (nonatomic, assign) CGPoint position;





@property (nonatomic, strong) UIRegion *region;


@property (nonatomic, assign) CGFloat strength;






@property (nonatomic, assign) CGFloat falloff;


@property (nonatomic, assign) CGFloat minimumRadius;






@property (nonatomic, assign) CGVector direction;





@property (nonatomic, assign) CGFloat smoothness;





@property (nonatomic, assign) CGFloat animationSpeed;





+ (instancetype)dragField;






+ (instancetype)vortexField;







+ (instancetype)radialGravityFieldWithPosition:(CGPoint)position;
# 95 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFieldBehavior.h" 3
+ (instancetype)linearGravityFieldWithVector:(CGVector)direction;







+ (instancetype)velocityFieldWithVector:(CGVector)direction;
# 113 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFieldBehavior.h" 3
+ (instancetype)noiseFieldWithSmoothness:(CGFloat)smoothness animationSpeed:(CGFloat)speed;
# 122 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFieldBehavior.h" 3
+ (instancetype)turbulenceFieldWithSmoothness:(CGFloat)smoothness animationSpeed:(CGFloat)speed;






+ (instancetype)springField;







+ (instancetype)electricField;
# 147 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFieldBehavior.h" 3
+ (instancetype)magneticField;
# 158 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFieldBehavior.h" 3
+ (instancetype)fieldWithEvaluationBlock:(CGVector(^)(UIFieldBehavior *field, CGPoint position, CGVector velocity, CGFloat mass, CGFloat charge, NSTimeInterval deltaTime))block;

@end
# 212 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGravityBehavior.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIGravityBehavior.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIGravityBehavior : UIDynamicBehavior

- (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items __attribute__((objc_designated_initializer));

- (void)addItem:(id <UIDynamicItem>)item;
- (void)removeItem:(id <UIDynamicItem>)item;
@property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;



@property (readwrite, nonatomic) CGVector gravityDirection;

@property (readwrite, nonatomic) CGFloat angle;
@property (readwrite, nonatomic) CGFloat magnitude;
- (void)setAngle:(CGFloat)angle magnitude:(CGFloat)magnitude;

@end
# 213 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAttachmentBehavior.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAttachmentBehavior.h" 3
typedef enum UIAttachmentBehaviorType : NSInteger UIAttachmentBehaviorType; enum UIAttachmentBehaviorType : NSInteger {
    UIAttachmentBehaviorTypeItems,
    UIAttachmentBehaviorTypeAnchor
} __attribute__((availability(ios,introduced=7_0)));

typedef struct {
    CGFloat minimum;
    CGFloat maximum;
} UIFloatRange;

extern __attribute__((visibility ("default"))) const UIFloatRange UIFloatRangeZero __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility ("default"))) const UIFloatRange UIFloatRangeInfinite __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility ("default"))) BOOL UIFloatRangeIsInfinite(UIFloatRange range) __attribute__((availability(ios,introduced=9_0)));
extern __attribute__((visibility ("default"))) BOOL UIFloatRangeIsEqualToRange(UIFloatRange range, UIFloatRange otherRange) __attribute__((availability(ios,introduced=9_0)));

static inline UIFloatRange UIFloatRangeMake(CGFloat minimum, CGFloat maximum) {
    return (UIFloatRange){minimum, maximum};
}

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UIAttachmentBehavior : UIDynamicBehavior

- (instancetype)initWithItem:(id <UIDynamicItem>)item attachedToAnchor:(CGPoint)point;
- (instancetype)initWithItem:(id <UIDynamicItem>)item offsetFromCenter:(UIOffset)offset attachedToAnchor:(CGPoint)point __attribute__((objc_designated_initializer));

- (instancetype)initWithItem:(id <UIDynamicItem>)item1 attachedToItem:(id <UIDynamicItem>)item2;
- (instancetype)initWithItem:(id <UIDynamicItem>)item1 offsetFromCenter:(UIOffset)offset1 attachedToItem:(id <UIDynamicItem>)item2 offsetFromCenter:(UIOffset)offset2 __attribute__((objc_designated_initializer));
# 49 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAttachmentBehavior.h" 3
+ (instancetype)slidingAttachmentWithItem:(id <UIDynamicItem>)item1 attachedToItem:(id <UIDynamicItem>)item2 attachmentAnchor:(CGPoint)point axisOfTranslation:(CGVector)axis __attribute__((availability(ios,introduced=9_0)));
# 59 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAttachmentBehavior.h" 3
+ (instancetype)slidingAttachmentWithItem:(id <UIDynamicItem>)item attachmentAnchor:(CGPoint)point axisOfTranslation:(CGVector)axis __attribute__((availability(ios,introduced=9_0)));
# 69 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAttachmentBehavior.h" 3
+ (instancetype)limitAttachmentWithItem:(id <UIDynamicItem>)item1 offsetFromCenter:(UIOffset)offset1 attachedToItem:(id <UIDynamicItem>)item2 offsetFromCenter:(UIOffset)offset2 __attribute__((availability(ios,introduced=9_0)));
# 78 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAttachmentBehavior.h" 3
+ (instancetype)fixedAttachmentWithItem:(id <UIDynamicItem>)item1 attachedToItem:(id <UIDynamicItem>)item2 attachmentAnchor:(CGPoint)point __attribute__((availability(ios,introduced=9_0)));
# 88 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIAttachmentBehavior.h" 3
+ (instancetype)pinAttachmentWithItem:(id <UIDynamicItem>)item1 attachedToItem:(id <UIDynamicItem>)item2 attachmentAnchor:(CGPoint)point __attribute__((availability(ios,introduced=9_0)));

@property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

@property (readonly, nonatomic) UIAttachmentBehaviorType attachedBehaviorType;

@property (readwrite, nonatomic) CGPoint anchorPoint;

@property (readwrite, nonatomic) CGFloat length;
@property (readwrite, nonatomic) CGFloat damping;
@property (readwrite, nonatomic) CGFloat frequency;
@property (readwrite, nonatomic) CGFloat frictionTorque __attribute__((availability(ios,introduced=9_0)));
@property (readwrite, nonatomic) UIFloatRange attachmentRange __attribute__((availability(ios,introduced=9_0)));

@end
# 214 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollisionBehavior.h" 1 3
# 15 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UICollisionBehavior.h" 3
@class UICollisionBehavior;

typedef enum UICollisionBehaviorMode : NSUInteger UICollisionBehaviorMode; enum UICollisionBehaviorMode : NSUInteger {
    UICollisionBehaviorModeItems = 1 << 0,
    UICollisionBehaviorModeBoundaries = 1 << 1,
    UICollisionBehaviorModeEverything = (9223372036854775807L *2UL+1UL)
} __attribute__((availability(ios,introduced=7_0)));

@protocol UICollisionBehaviorDelegate <NSObject>
@optional

- (void)collisionBehavior:(UICollisionBehavior *)behavior beganContactForItem:(id <UIDynamicItem>)item1 withItem:(id <UIDynamicItem>)item2 atPoint:(CGPoint)p;
- (void)collisionBehavior:(UICollisionBehavior *)behavior endedContactForItem:(id <UIDynamicItem>)item1 withItem:(id <UIDynamicItem>)item2;


- (void)collisionBehavior:(UICollisionBehavior*)behavior beganContactForItem:(id <UIDynamicItem>)item withBoundaryIdentifier:(nullable id <NSCopying>)identifier atPoint:(CGPoint)p;
- (void)collisionBehavior:(UICollisionBehavior*)behavior endedContactForItem:(id <UIDynamicItem>)item withBoundaryIdentifier:(nullable id <NSCopying>)identifier;

@end


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) @interface UICollisionBehavior : UIDynamicBehavior

- (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items __attribute__((objc_designated_initializer));

- (void)addItem:(id <UIDynamicItem>)item;
- (void)removeItem:(id <UIDynamicItem>)item;

@property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

@property (nonatomic, readwrite) UICollisionBehaviorMode collisionMode;

@property (nonatomic, readwrite) BOOL translatesReferenceBoundsIntoBoundary;
- (void)setTranslatesReferenceBoundsIntoBoundaryWithInsets:(UIEdgeInsets)insets;

- (void)addBoundaryWithIdentifier:(id <NSCopying>)identifier forPath:(UIBezierPath *)bezierPath;
- (void)addBoundaryWithIdentifier:(id <NSCopying>)identifier fromPoint:(CGPoint)p1 toPoint:(CGPoint)p2;
- (nullable UIBezierPath *)boundaryWithIdentifier:(id <NSCopying>)identifier;
- (void)removeBoundaryWithIdentifier:(id <NSCopying>)identifier;
@property (nullable, nonatomic, readonly, copy) NSArray<id <NSCopying>> *boundaryIdentifiers;
- (void)removeAllBoundaries;

@property (nullable, nonatomic, weak, readwrite) id <UICollisionBehaviorDelegate> collisionDelegate;

@end
# 215 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIRegion.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIRegion.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) @interface UIRegion : NSObject <NSCopying, NSCoding>




@property(class, nonatomic, readonly) UIRegion *infiniteRegion;






- (instancetype)initWithRadius:(CGFloat)radius;



- (instancetype)initWithSize:(CGSize)size;





- (instancetype)inverseRegion;



- (instancetype)regionByUnionWithRegion:(UIRegion *)region;



- (instancetype)regionByDifferenceFromRegion:(UIRegion *)region;



- (instancetype)regionByIntersectionWithRegion:(UIRegion *)region;



- (BOOL)containsPoint:(CGPoint)point;

@end
# 216 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewPropertyAnimator.h" 1 3
# 14 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewPropertyAnimator.h" 3
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) @interface UIViewPropertyAnimator : NSObject <UIViewImplicitlyAnimating, NSCopying>

@property(nullable, nonatomic, copy, readonly) id <UITimingCurveProvider> timingParameters;

@property(nonatomic, readonly) NSTimeInterval duration;


@property(nonatomic, readonly) NSTimeInterval delay;


@property(nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;


@property(nonatomic, getter=isManualHitTestingEnabled) BOOL manualHitTestingEnabled;


@property(nonatomic, getter=isInterruptible) BOOL interruptible;

- (instancetype)initWithDuration:(NSTimeInterval)duration timingParameters:(id <UITimingCurveProvider>)parameters __attribute__((objc_designated_initializer));


- (instancetype)initWithDuration:(NSTimeInterval)duration curve:(UIViewAnimationCurve)curve animations:(void (^ _Nullable)(void))animations;
- (instancetype)initWithDuration:(NSTimeInterval)duration controlPoint1:(CGPoint)point1 controlPoint2:(CGPoint)point2 animations:(void (^ _Nullable)(void))animations;
- (instancetype)initWithDuration:(NSTimeInterval)duration dampingRatio:(CGFloat)ratio animations:(void (^ _Nullable)(void))animations;
# 52 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIViewPropertyAnimator.h" 3
+ (instancetype)runningPropertyAnimatorWithDuration:(NSTimeInterval)duration
                                              delay:(NSTimeInterval)delay
                                            options:(UIViewAnimationOptions)options
                                         animations:(void (^)(void))animations
                                         completion:(void (^ _Nullable)(UIViewAnimatingPosition finalPosition))completion;





- (void)addAnimations:(void (^)(void))animation delayFactor:(CGFloat)delayFactor;



- (void)addAnimations:(void (^)(void))animation;

- (void)addCompletion:(void (^)(UIViewAnimatingPosition finalPosition))completion;







- (void)continueAnimationWithTimingParameters:(nullable id <UITimingCurveProvider>)parameters durationFactor:(CGFloat)durationFactor;


@end
# 220 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3



# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFeedbackGenerator.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIFeedbackGenerator.h" 3
extern __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) @interface UIFeedbackGenerator : NSObject



- (void)prepare;

@end
# 224 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISelectionFeedbackGenerator.h" 1 3
# 13 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UISelectionFeedbackGenerator.h" 3
extern __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) @interface UISelectionFeedbackGenerator : UIFeedbackGenerator


- (void)selectionChanged;

@end
# 225 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIImpactFeedbackGenerator.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIImpactFeedbackGenerator.h" 3
typedef enum UIImpactFeedbackStyle : NSInteger UIImpactFeedbackStyle; enum UIImpactFeedbackStyle : NSInteger {
    UIImpactFeedbackStyleLight,
    UIImpactFeedbackStyleMedium,
    UIImpactFeedbackStyleHeavy
};


extern __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) @interface UIImpactFeedbackGenerator : UIFeedbackGenerator

- (instancetype)initWithStyle:(UIImpactFeedbackStyle)style;


- (void)impactOccurred;

@end
# 226 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 1 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINotificationFeedbackGenerator.h" 1 3
# 12 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UINotificationFeedbackGenerator.h" 3
typedef enum UINotificationFeedbackType : NSInteger UINotificationFeedbackType; enum UINotificationFeedbackType : NSInteger {
    UINotificationFeedbackTypeSuccess,
    UINotificationFeedbackTypeWarning,
    UINotificationFeedbackTypeError
};


extern __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) @interface UINotificationFeedbackGenerator : UIFeedbackGenerator


- (void)notificationOccurred:(UINotificationFeedbackType)notificationType;

@end
# 227 "APPLE_SDKROOT/System/Library/Frameworks/UIKit.framework/Headers/UIKit.h" 2 3
# 10 "buck4/ViewController.h" 2

@interface ViewController : UIViewController


@end
# 10 "buck4/ViewController.m" 2

@interface ViewController ()
@property (nonatomic) __attribute__((iboutlet)) UILabel *timerLabel;
@property (nonatomic) __attribute__((iboutlet)) UILabel *scoreLabel;
@property NSInteger count;
@property NSInteger seconds;
@property NSTimer *timer;

- (void)__attribute__((ibaction))buttonPressed:(id)sender;

@end

@implementation ViewController

- (void)viewDidLoad {
    [super viewDidLoad];

    [self setupGame];
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];

}

- (void)setupGame {
  self.seconds = 30;
  self.count = 0;

  self.timerLabel.text = [NSString stringWithFormat:@"Time: %li", self.seconds];
  self.scoreLabel.text = [NSString stringWithFormat:@"%li", self.count];

  self.timer = [NSTimer scheduledTimerWithTimeInterval:1.0f
                                           target:self
                                         selector:@selector(subtractTime)
                                         userInfo:((void *)0)
                                          repeats:__objc_yes];
}

- (void)subtractTime {
  self.seconds--;
  self.timerLabel.text = [NSString stringWithFormat:@"Time: %li", self.seconds];

  if (self.seconds == 0) {
      [self.timer invalidate];

      UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"Time is up!"
                                                                     message:[NSString stringWithFormat:@"You scored %li points", self.count]
                                                              preferredStyle:UIAlertControllerStyleAlert];

      UIAlertAction *defaultAction = [UIAlertAction actionWithTitle:@"Play Again!"
                                                              style:UIAlertActionStyleDefault
                                                            handler:^(UIAlertAction *action) {}];

      [alert addAction:defaultAction];

      [self presentViewController:alert animated:__objc_yes completion:^(void){[self setupGame];}];
  }
}

- (void)__attribute__((ibaction))buttonPressed:(id)sender {
  self.count ++;

  self.scoreLabel.text = [NSString stringWithFormat:@"%li", self.count];
}
@end
